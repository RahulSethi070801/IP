,func_oldfunccode,func_newfunccode,func_newdoc,func_newJdoc,func_olddoc,func_oldJdoc,func_addlines,func_addcode,func_dellines,func_delcode,func_path,func_pathinproj,func_methodsig,doc_oldfunccode,doc_newfunccode,doc_newdoc,doc_newJdoc,doc_olddoc,doc_oldJdoc,doc_addlines,doc_addcode,doc_dellines,doc_delcode,doc_path,doc_pathinproj,doc_methodsig,id,flag,commit
1,d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_oldfunccode_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_1.txt,d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_newfunccode_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_1.txt," fully variant implementation (never actually produces any Es)
",d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_newfuncnewJdoc_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_1.txt,,d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_oldfuncoldJdoc_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_1.txt,[],[],[82],"['  @SuppressWarnings({""unchecked""})\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/d42e32781bc40bcc6df53d5d5d2120b91d8782a2/ImmutableSet,guava/src/com/google/common/collect/ImmutableSet.java,public static ImmutableSet<E> of(),d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_olddocfunccode_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_1.txt,d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_newdocfunccode_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_1.txt,,d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_newdocnewJdoc_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_1.txt,,d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_olddocJdoc_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_1.txt,"[256, 258, 259, 260, 261, 254, 255]","['   * Returns an immutable set containing each of {@code elements}, minus duplicates, in the order\n', '   * each appears first in the source iterable. This method iterates over {@code elements} only\n', '   * once.\n', '   * <p><b>Performance note:</b> In certain cases when {@code elements} is an {@link\n', '   * ImmutableCollection}, its data will be reused directly without copying; the {@code elements}\n', '   * instance itself might even be returned. The specific circumstances in which these optimizations\n', '   * happen are undefined and subject to change.\n']","[288, 289, 290, 291, 293, 294, 295, 283, 284, 285, 286, 287]","['  @SuppressWarnings({""unchecked""})\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/d42e32781bc40bcc6df53d5d5d2120b91d8782a2/ImmutableSet,guava/src/com/google/common/collect/ImmutableSet.java,public static ImmutableSet<E> copyOf(Iterable<? extends E> elements),1,1,d42e32781bc40bcc6df53d5d5d2120b91d8782a2
2,d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_oldfunccode_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_2.txt,d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_newfunccode_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_2.txt,"
     * TODO(user): consider checking for ImmutableAsList here
     * TODO(user): consider checking for Multiset here
     
 all supported methods are covariant
",d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_newfuncnewJdoc_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_2.txt,"
     * TODO(user): consider checking for ImmutableAsList here
     * TODO(user): consider checking for Multiset here
     
 all supported methods are covariant
",d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_oldfuncoldJdoc_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_2.txt,"[240, 242, 243, 244, 245, 246, 247, 249, 234, 250, 239]","['  public static <E> ImmutableSet<E> copyOf(Collection<? extends E> elements) {\n', '    if (elements instanceof ImmutableSet\n', '        && !(elements instanceof ImmutableSortedSet)) {\n', '          ImmutableSet<E> set = (ImmutableSet<E>) elements;\n', '      if (!set.isPartialView()) {\n', '        return set;\n', '      }\n', '    } else if (elements instanceof EnumSet) {\n', '      return copyOfEnumSet((EnumSet) elements);\n', '    Object[] array = elements.toArray();\n', '    return construct(array.length, array);\n']","[368, 369, 370, 371, 372, 374, 359, 375, 364, 365, 367]","['  public static <E> ImmutableSet<E> copyOf(Collection<? extends E> elements) {\n', '    if (elements instanceof ImmutableSet\n', '        && !(elements instanceof ImmutableSortedSet)) {\n', '      ImmutableSet<E> set = (ImmutableSet<E>) elements;\n', '      if (!set.isPartialView()) {\n', '        return set;\n', '      }\n', '    } else if (elements instanceof EnumSet) {\n', '      return copyOfEnumSet((EnumSet) elements);\n', '    Object[] array = elements.toArray();\n', '    return construct(array.length, array);\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/d42e32781bc40bcc6df53d5d5d2120b91d8782a2/ImmutableSet,guava/src/com/google/common/collect/ImmutableSet.java,public static ImmutableSet<E> copyOf(Collection<? extends E> elements),d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_olddocfunccode_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_2.txt,d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_newdocfunccode_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_2.txt,,d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_newdocnewJdoc_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_2.txt,,d42e32781bc40bcc6df53d5d5d2120b91d8782a2/Codes_neg/Match_olddocJdoc_d42e32781bc40bcc6df53d5d5d2120b91d8782a2_2.txt,"[57, 58, 59]","['   * Returns an immutable set containing {@code element}. Preferred over {@link\n', '   * Collections#singleton} for code consistency, {@code null} rejection, and because the return\n', '   * type conveys the immutability guarantee.\n']","[88, 89, 90, 91]","['  public static <E> ImmutableSet<E> copyOf(Collection<? extends E> elements) {\n', '    if (elements instanceof ImmutableSet\n', '        && !(elements instanceof ImmutableSortedSet)) {\n', '      ImmutableSet<E> set = (ImmutableSet<E>) elements;\n', '      if (!set.isPartialView()) {\n', '        return set;\n', '      }\n', '    } else if (elements instanceof EnumSet) {\n', '      return copyOfEnumSet((EnumSet) elements);\n', '    Object[] array = elements.toArray();\n', '    return construct(array.length, array);\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/d42e32781bc40bcc6df53d5d5d2120b91d8782a2/ImmutableSet,guava/src/com/google/common/collect/ImmutableSet.java,public static ImmutableSet<E> of(E element),1,1,d42e32781bc40bcc6df53d5d5d2120b91d8782a2
3,,966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_newfunccode_966f3b23cbf9c8e568f681f62436836530f1453f_1.txt,,966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_newfuncnewJdoc_966f3b23cbf9c8e568f681f62436836530f1453f_1.txt,,,"[357, 358, 359, 360]","['  @Nullable\n', '  private static Method getSizeMethod() {\n', '    return getJlaMethod(""getStackTraceDepth"", Throwable.class);\n', '  }\n']",[],[],/home/pritish/Documents/IP work/guv_ver/v19.0/966f3b23cbf9c8e568f681f62436836530f1453f/Throwables,guava/src/com/google/common/base/Throwables.java,private static Method getSizeMethod(),966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_olddocfunccode_966f3b23cbf9c8e568f681f62436836530f1453f_1.txt,966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_newdocfunccode_966f3b23cbf9c8e568f681f62436836530f1453f_1.txt,,966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_newdocnewJdoc_966f3b23cbf9c8e568f681f62436836530f1453f_1.txt,,966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_olddocJdoc_966f3b23cbf9c8e568f681f62436836530f1453f_1.txt,"[135, 136, 138, 154, 139, 155, 140]","['   * Propagates {@code throwable} as-is if it is an instance of {@link RuntimeException} or {@link\n', '   * Error}, or else as a last resort, wraps it in a {@code RuntimeException} and then propagates.\n', '   * This method always throws an exception. The {@code RuntimeException} return type is only for\n', '   * client code to make Java type system happy in case a return value is required by the enclosing\n', '   * method. Example usage:\n', '   * @return nothing will ever be returned; this return type is only for your convenience, as\n', '   *     illustrated in the example above\n']","[135, 136, 137, 139, 155, 140, 156, 141]",[],/home/pritish/Documents/IP work/guv_ver/v19.0/966f3b23cbf9c8e568f681f62436836530f1453f/Throwables,guava/src/com/google/common/base/Throwables.java,public static RuntimeException propagate(Throwable throwable),1,1,966f3b23cbf9c8e568f681f62436836530f1453f
4,,966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_newfunccode_966f3b23cbf9c8e568f681f62436836530f1453f_2.txt,"
       * Either the JavaLangAccess class itself is not found, or the method is not supported on the
       * JVM.
       
",,,,"[368, 373, 374, 375, 362, 363, 364, 365, 366, 367]","['  @Nullable\n', '  private static Method getJlaMethod(String name, Class<?>... parameterTypes) throws ThreadDeath {\n', '    try {\n', '      return Class.forName(JAVA_LANG_ACCESS_CLASSNAME, false, null).getMethod(name, parameterTypes);\n', '    } catch (ThreadDeath death) {\n', '      throw death;\n', '    } catch (Throwable t) {\n', '      return null;\n', '    }\n', '  }\n']",[],[],/home/pritish/Documents/IP work/guv_ver/v19.0/966f3b23cbf9c8e568f681f62436836530f1453f/Throwables,guava/src/com/google/common/base/Throwables.java,"private static Method getJlaMethod(String name, Class<?>... parameterTypes) throws ThreadDeath",966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_olddocfunccode_966f3b23cbf9c8e568f681f62436836530f1453f_2.txt,966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_newdocfunccode_966f3b23cbf9c8e568f681f62436836530f1453f_2.txt,,966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_newdocnewJdoc_966f3b23cbf9c8e568f681f62436836530f1453f_2.txt,,966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_olddocJdoc_966f3b23cbf9c8e568f681f62436836530f1453f_2.txt,"[135, 136, 138, 154, 139, 155, 140]","['   * Propagates {@code throwable} as-is if it is an instance of {@link RuntimeException} or {@link\n', '   * Error}, or else as a last resort, wraps it in a {@code RuntimeException} and then propagates.\n', '   * This method always throws an exception. The {@code RuntimeException} return type is only for\n', '   * client code to make Java type system happy in case a return value is required by the enclosing\n', '   * method. Example usage:\n', '   * @return nothing will ever be returned; this return type is only for your convenience, as\n', '   *     illustrated in the example above\n']","[135, 136, 137, 139, 155, 140, 156, 141]",[],/home/pritish/Documents/IP work/guv_ver/v19.0/966f3b23cbf9c8e568f681f62436836530f1453f/Throwables,guava/src/com/google/common/base/Throwables.java,public static RuntimeException propagate(Throwable throwable),1,1,966f3b23cbf9c8e568f681f62436836530f1453f
5,,ba240ccb80fe88e1ee6793800622ec3dca53a575/Codes_neg/Match_newfunccode_ba240ccb80fe88e1ee6793800622ec3dca53a575_1.txt,,ba240ccb80fe88e1ee6793800622ec3dca53a575/Codes_neg/Match_newfuncnewJdoc_ba240ccb80fe88e1ee6793800622ec3dca53a575_1.txt,,,"[244, 245, 246, 247, 249, 250, 251, 252]","['  public static <K, V> LinkedHashMap<K, V> newLinkedHashMapWithExpectedSize(\n', '      int expectedSize) {\n', '    return new LinkedHashMap<K, V>(capacity(expectedSize));\n', '  }\n', '  public static <K, V> LinkedHashMap<K, V> newLinkedHashMapWithExpectedSize(\n', '      int expectedSize) {\n', '    return new LinkedHashMap<K, V>(capacity(expectedSize));\n', '  }\n']",[],[],/home/pritish/Documents/IP work/guv_ver/v19.0/ba240ccb80fe88e1ee6793800622ec3dca53a575/Maps_2,guava/src/com/google/common/collect/Maps.java,"public static LinkedHashMap<K, V> newLinkedHashMapWithExpectedSize(int expectedSize)",ba240ccb80fe88e1ee6793800622ec3dca53a575/Codes_neg/Match_olddocfunccode_ba240ccb80fe88e1ee6793800622ec3dca53a575_1.txt,ba240ccb80fe88e1ee6793800622ec3dca53a575/Codes_neg/Match_newdocfunccode_ba240ccb80fe88e1ee6793800622ec3dca53a575_1.txt,,ba240ccb80fe88e1ee6793800622ec3dca53a575/Codes_neg/Match_newdocnewJdoc_ba240ccb80fe88e1ee6793800622ec3dca53a575_1.txt,,ba240ccb80fe88e1ee6793800622ec3dca53a575/Codes_neg/Match_olddocJdoc_ba240ccb80fe88e1ee6793800622ec3dca53a575_1.txt,"[176, 165, 168, 170, 171, 173]","[""   * for OpenJDK 1.7. It also can't be guaranteed that the method isn't\n"", '   * @param expectedSize the number of entries you expect to add to the\n', '   *         expectedSize} entries without resizing\n', ""   * for OpenJDK 1.7. It also can't be guaranteed that the method isn't\n"", '   * @param expectedSize the number of entries you expect to add to the\n', '   *         expectedSize} entries without resizing\n']","[176, 165, 168, 170, 171, 173]",[],/home/pritish/Documents/IP work/guv_ver/v19.0/ba240ccb80fe88e1ee6793800622ec3dca53a575/Maps_2,guava/src/com/google/common/collect/Maps.java,"public static HashMap<K, V> newHashMapWithExpectedSize(int expectedSize)",1,1,ba240ccb80fe88e1ee6793800622ec3dca53a575
6,3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_oldfunccode_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_1.txt,3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_newfunccode_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_1.txt,,3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_newfuncnewJdoc_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_1.txt," Force a blocking read to avoid infinite loop
",3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_oldfuncoldJdoc_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_1.txt,"[707, 708, 709, 710, 711, 712]","['    long skipped = skipUpTo(in, n);\n', '    if (skipped < n) {\n', '      throw new EOFException(""reached end of stream after skipping ""\n', '          + skipped + "" bytes; "" + n + "" bytes expected"");\n', '    }\n', '  }\n']","[707, 708, 709, 710, 713, 714, 715, 717, 718, 719]","['    long toSkip = n;\n', '    while (n > 0) {\n', '      long amt = in.skip(n);\n', '      if (amt == 0) {\n', '          long skipped = toSkip - n;\n', '          throw new EOFException(""reached end of stream after skipping ""\n', '              + skipped + "" bytes; "" + toSkip + "" bytes expected"");\n', '        n--;\n', '      } else {\n', '        n -= amt;\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/ByteStreams,guava/src/com/google/common/io/ByteStreams.java,"public static void skipFully(InputStream in, long n) throws IOException",3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_olddocfunccode_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_1.txt,3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_newdocfunccode_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_1.txt,,,,3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_olddocJdoc_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_1.txt,"[108, 109, 110, 111]","['   * starting at the given {@code offset}. If {@code offset} is greater than the size of this\n', '   * source, the returned source will be empty. If {@code offset + length} is greater than the size\n', '   * of this source, the returned source will contain the slice starting at {@code offset} and\n', '   * ending at the end of this source.\n']",[108],"['    long toSkip = n;\n', '    while (n > 0) {\n', '      long amt = in.skip(n);\n', '      if (amt == 0) {\n', '          long skipped = toSkip - n;\n', '          throw new EOFException(""reached end of stream after skipping ""\n', '              + skipped + "" bytes; "" + toSkip + "" bytes expected"");\n', '        n--;\n', '      } else {\n', '        n -= amt;\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/ByteSource,guava/src/com/google/common/io/ByteSource.java,"public ByteSource slice(long offset, long length)",1,1,3f1d2e422a12a29e5ac7425dc323c4b99470f0d2
7,,3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_newfunccode_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_2.txt," Force a blocking read to avoid infinite loop
 Reached EOF
",3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_newfuncnewJdoc_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_2.txt,,,"[736, 738, 739, 720, 721, 722, 723, 724, 725, 726, 730, 731, 732, 735]","['  static long skipUpTo(InputStream in, final long n) throws IOException {\n', '    long totalSkipped = 0;\n', '\n', '    while (totalSkipped < n) {\n', '      long skipped = in.skip(n - totalSkipped);\n', '\n', '      if (skipped == 0) {\n', '          break;\n', '        } else {\n', '          skipped = 1;\n', '\n', '      totalSkipped += skipped;\n', '\n', '    return totalSkipped;\n']",[],[],/home/pritish/Documents/IP work/guv_ver/v19.0/3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/ByteStreams,guava/src/com/google/common/io/ByteStreams.java," static long skipUpTo(InputStream in, final long n) throws IOException",3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_olddocfunccode_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_2.txt,3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_newdocfunccode_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_2.txt,,,,3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_olddocJdoc_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_2.txt,"[108, 109, 110, 111]","['   * starting at the given {@code offset}. If {@code offset} is greater than the size of this\n', '   * source, the returned source will be empty. If {@code offset + length} is greater than the size\n', '   * of this source, the returned source will contain the slice starting at {@code offset} and\n', '   * ending at the end of this source.\n']",[108],[],/home/pritish/Documents/IP work/guv_ver/v19.0/3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/ByteSource,guava/src/com/google/common/io/ByteSource.java,"public ByteSource slice(long offset, long length)",1,1,3f1d2e422a12a29e5ac7425dc323c4b99470f0d2
8,2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_oldfunccode_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_1.txt,2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_newfunccode_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_1.txt,,2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_newfuncnewJdoc_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_1.txt,,2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_oldfuncoldJdoc_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_1.txt,[118],['  @ForOverride\n'],[],[],/home/pritish/Documents/IP work/guv_ver/v19.0/2be61aa4ac0427a36c70ee75728b91d4bc7e246f/AbstractTransformFuture,guava/src/com/google/common/util/concurrent/AbstractTransformFuture.java," abstract void doTransform(F function, I result) throws Exception",2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_olddocfunccode_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_1.txt,2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_newdocfunccode_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_1.txt,,2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_newdocnewJdoc_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_1.txt,,2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_olddocJdoc_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_1.txt,[773],['  // TODO(cpovirk): @ForOverride https://github.com/google/error-prone/issues/342\n'],[],[],/home/pritish/Documents/IP work/guv_ver/v19.0/2be61aa4ac0427a36c70ee75728b91d4bc7e246f/AbstractFuture,guava/src/com/google/common/util/concurrent/AbstractFuture.java, void done(),1,1,2be61aa4ac0427a36c70ee75728b91d4bc7e246f
9,2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_oldfunccode_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_2.txt,2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_newfunccode_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_2.txt,,2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_newfuncnewJdoc_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_2.txt,,2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_oldfuncoldJdoc_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_2.txt,[127],['  @ForOverride\n'],[],[],/home/pritish/Documents/IP work/guv_ver/v19.0/2be61aa4ac0427a36c70ee75728b91d4bc7e246f/AbstractCatchingFuture,guava/src/com/google/common/util/concurrent/AbstractCatchingFuture.java," abstract void doFallback(F fallback, X throwable) throws Exception",2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_olddocfunccode_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_2.txt,2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_newdocfunccode_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_2.txt,,2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_newdocnewJdoc_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_2.txt,,2be61aa4ac0427a36c70ee75728b91d4bc7e246f/Codes_neg/Match_olddocJdoc_2be61aa4ac0427a36c70ee75728b91d4bc7e246f_2.txt,[773],['  // TODO(cpovirk): @ForOverride https://github.com/google/error-prone/issues/342\n'],[],[],/home/pritish/Documents/IP work/guv_ver/v19.0/2be61aa4ac0427a36c70ee75728b91d4bc7e246f/AbstractFuture,guava/src/com/google/common/util/concurrent/AbstractFuture.java, void done(),1,1,2be61aa4ac0427a36c70ee75728b91d4bc7e246f
10,,4f7f6b4634387234578fe0a0a454b6d975783eec/Codes_neg/Match_newfunccode_4f7f6b4634387234578fe0a0a454b6d975783eec_1.txt,,4f7f6b4634387234578fe0a0a454b6d975783eec/Codes_neg/Match_newfuncnewJdoc_4f7f6b4634387234578fe0a0a454b6d975783eec_1.txt,,,"[412, 446]","['  public static <B> List<List<B>>\n', '  public static <B> List<List<B>>\n']",[],[],/home/pritish/Documents/IP work/guv_ver/v19.0/4f7f6b4634387234578fe0a0a454b6d975783eec/Lists,guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java,public static List<List<B>> cartesianProduct(List<? extends List<? extends B>> lists),4f7f6b4634387234578fe0a0a454b6d975783eec/Codes_neg/Match_olddocfunccode_4f7f6b4634387234578fe0a0a454b6d975783eec_1.txt,,,,,4f7f6b4634387234578fe0a0a454b6d975783eec/Codes_neg/Match_olddocJdoc_4f7f6b4634387234578fe0a0a454b6d975783eec_1.txt,[],[],"[410, 444]",[],/home/pritish/Documents/IP work/guv_ver/v19.0/4f7f6b4634387234578fe0a0a454b6d975783eec/Lists,guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, static List<List<B>> cartesianProduct(List<? extends List<? extends B>> lists),1,1,4f7f6b4634387234578fe0a0a454b6d975783eec
11,,4f7f6b4634387234578fe0a0a454b6d975783eec/Codes_neg/Match_newfunccode_4f7f6b4634387234578fe0a0a454b6d975783eec_2.txt,,4f7f6b4634387234578fe0a0a454b6d975783eec/Codes_neg/Match_newfuncnewJdoc_4f7f6b4634387234578fe0a0a454b6d975783eec_2.txt,,,"[474, 508]","['  public static <B> List<List<B>>\n', '  public static <B> List<List<B>>\n']",[],[],/home/pritish/Documents/IP work/guv_ver/v19.0/4f7f6b4634387234578fe0a0a454b6d975783eec/Lists,guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java,public static List<List<B>> cartesianProduct(List<? extends B>... lists),4f7f6b4634387234578fe0a0a454b6d975783eec/Codes_neg/Match_olddocfunccode_4f7f6b4634387234578fe0a0a454b6d975783eec_2.txt,,,,,4f7f6b4634387234578fe0a0a454b6d975783eec/Codes_neg/Match_olddocJdoc_4f7f6b4634387234578fe0a0a454b6d975783eec_2.txt,[],[],"[410, 444]",[],/home/pritish/Documents/IP work/guv_ver/v19.0/4f7f6b4634387234578fe0a0a454b6d975783eec/Lists,guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, static List<List<B>> cartesianProduct(List<? extends List<? extends B>> lists),1,1,4f7f6b4634387234578fe0a0a454b6d975783eec
12,05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_oldfunccode_05e283065ac6a51f16a432d87be869c5d21db8cc_1.txt,05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_newfunccode_05e283065ac6a51f16a432d87be869c5d21db8cc_1.txt," Fail fast on a null.  We throw NPE here because the contract of Executor states that it
 Lock while we check state.  We must maintain the lock while adding the new pair so that
 another thread can't run the list out from under us. We only add to the list if we have not
 Execute the runnable immediately. Because of scheduling this may end up getting called before
 some of the previously added runnables, but we're OK with that.  If we want to change the
 contract to guarantee ordering among runnables we'd have to modify the logic here to allow
 throws NPE on null listener, so we propagate that contract up into the add method as well.
 yet started execution.
 it.
",05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_newfuncnewJdoc_05e283065ac6a51f16a432d87be869c5d21db8cc_1.txt," Fail fast on a null.  We throw NPE here because the contract of
 Executor states that it throws NPE on null listener, so we propagate
 Lock while we check state.  We must maintain the lock while adding the
 new pair so that another thread can't run the list out from under us.
 Execute the runnable immediately. Because of scheduling this may end up
 getting called before some of the previously added runnables, but we're
 OK with that.  If we want to change the contract to guarantee ordering
 that contract up into the add method as well.
 We only add to the list if we have not yet started execution.
 among runnables we'd have to modify the logic here to allow it.
",05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_oldfuncoldJdoc_05e283065ac6a51f16a432d87be869c5d21db8cc_1.txt,"[73, 74]","['    checkNotNull(runnable, ""Runnable was null."");\n', '    checkNotNull(executor, ""Executor was null."");\n']","[85, 86]","['    Preconditions.checkNotNull(runnable, ""Runnable was null."");\n', '    Preconditions.checkNotNull(executor, ""Executor was null."");\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/05e283065ac6a51f16a432d87be869c5d21db8cc/ExecutionList,guava/src/com/google/common/util/concurrent/ExecutionList.java,"public void add(Runnable runnable, Executor executor)",05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_olddocfunccode_05e283065ac6a51f16a432d87be869c5d21db8cc_1.txt,05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_newdocfunccode_05e283065ac6a51f16a432d87be869c5d21db8cc_1.txt,,05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_newdocnewJdoc_05e283065ac6a51f16a432d87be869c5d21db8cc_1.txt,,05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_olddocJdoc_05e283065ac6a51f16a432d87be869c5d21db8cc_1.txt,"[992, 993, 585, 586, 587, 588, 988, 589, 989, 590, 990, 991]","['   * <p>This overload, which does not accept an executor, uses {@code\n', '   * directExecutor}, a dangerous choice in some cases. See the discussion in\n', '   * the {@link ListenableFuture#addListener ListenableFuture.addListener}\n', '   * documentation. The documentation\'s warnings about ""lightweight listeners""\n', '   * refer here to the work done during {@code AsyncFunction.apply}, not to any\n', '   * work done to complete the returned {@code Future}.\n', '   * <p>This overload, which does not accept an executor, uses {@code\n', '   * directExecutor}, a dangerous choice in some cases. See the discussion in\n', '   * the {@link ListenableFuture#addListener ListenableFuture.addListener}\n', '   * documentation. The documentation\'s warnings about ""lightweight listeners""\n', '   * refer here to the work done during {@code AsyncFunction.apply}, not to any\n', '   * work done to complete the returned {@code Future}.\n']","[1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 601, 1049, 602, 1050, 603, 1051, 604, 1052, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622]","['    Preconditions.checkNotNull(runnable, ""Runnable was null."");\n', '    Preconditions.checkNotNull(executor, ""Executor was null."");\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/05e283065ac6a51f16a432d87be869c5d21db8cc/Futures,guava-gwt/src-super/com/google/common/util/concurrent/super/com/google/common/util/concurrent/Futures.java,"public static ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)",1,1,05e283065ac6a51f16a432d87be869c5d21db8cc
13,05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_oldfunccode_05e283065ac6a51f16a432d87be869c5d21db8cc_2.txt,05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_newfunccode_05e283065ac6a51f16a432d87be869c5d21db8cc_2.txt," Fail fast on a null.  We throw NPE here because the contract of Executor states that it
 Lock while we check state.  We must maintain the lock while adding the new pair so that
 another thread can't run the list out from under us. We only add to the list if we have not
 Execute the runnable immediately. Because of scheduling this may end up getting called before
 some of the previously added runnables, but we're OK with that.  If we want to change the
 contract to guarantee ordering among runnables we'd have to modify the logic here to allow
 throws NPE on null listener, so we propagate that contract up into the add method as well.
 yet started execution.
 it.
 Fail fast on a null.  We throw NPE here because the contract of Executor states that it
 Lock while we check state.  We must maintain the lock while adding the new pair so that
 another thread can't run the list out from under us. We only add to the list if we have not
 Execute the runnable immediately. Because of scheduling this may end up getting called before
 some of the previously added runnables, but we're OK with that.  If we want to change the
 contract to guarantee ordering among runnables we'd have to modify the logic here to allow
 throws NPE on null listener, so we propagate that contract up into the add method as well.
 yet started execution.
 it.
",05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_newfuncnewJdoc_05e283065ac6a51f16a432d87be869c5d21db8cc_2.txt," Fail fast on a null.  We throw NPE here because the contract of
 Executor states that it throws NPE on null listener, so we propagate
 Lock while we check state.  We must maintain the lock while adding the
 new pair so that another thread can't run the list out from under us.
 Execute the runnable immediately. Because of scheduling this may end up
 getting called before some of the previously added runnables, but we're
 OK with that.  If we want to change the contract to guarantee ordering
 that contract up into the add method as well.
 We only add to the list if we have not yet started execution.
 among runnables we'd have to modify the logic here to allow it.
 Fail fast on a null.  We throw NPE here because the contract of
 Executor states that it throws NPE on null listener, so we propagate
 Lock while we check state.  We must maintain the lock while adding the
 new pair so that another thread can't run the list out from under us.
 Execute the runnable immediately. Because of scheduling this may end up
 getting called before some of the previously added runnables, but we're
 OK with that.  If we want to change the contract to guarantee ordering
 that contract up into the add method as well.
 We only add to the list if we have not yet started execution.
 among runnables we'd have to modify the logic here to allow it.
",05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_oldfuncoldJdoc_05e283065ac6a51f16a432d87be869c5d21db8cc_2.txt,"[73, 74]","['    checkNotNull(runnable, ""Runnable was null."");\n', '    checkNotNull(executor, ""Executor was null."");\n']","[85, 86]","['    Preconditions.checkNotNull(runnable, ""Runnable was null."");\n', '    Preconditions.checkNotNull(executor, ""Executor was null."");\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/05e283065ac6a51f16a432d87be869c5d21db8cc/ExecutionList,guava/src/com/google/common/util/concurrent/ExecutionList.java,"public void add(Runnable runnable, Executor executor)",05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_olddocfunccode_05e283065ac6a51f16a432d87be869c5d21db8cc_2.txt,05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_newdocfunccode_05e283065ac6a51f16a432d87be869c5d21db8cc_2.txt,,05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_newdocnewJdoc_05e283065ac6a51f16a432d87be869c5d21db8cc_2.txt,,05e283065ac6a51f16a432d87be869c5d21db8cc/Codes_neg/Match_olddocJdoc_05e283065ac6a51f16a432d87be869c5d21db8cc_2.txt,"[336, 337, 338, 339, 484, 485, 486, 487, 488, 489, 334, 335]","['   * <p>When selecting an executor, note that {@code directExecutor} is\n', '   * dangerous in some cases. See the discussion in the {@link\n', '   * ListenableFuture#addListener ListenableFuture.addListener} documentation.\n', '   * The documentation\'s warnings about ""lightweight listeners"" refer here to\n', '   * the work done during {@code FutureFallback.create}, not to any work done to\n', '   * complete the returned {@code Future}.\n', '   * <p>When selecting an executor, note that {@code directExecutor} is\n', '   * dangerous in some cases. See the discussion in the {@link\n', '   * ListenableFuture#addListener ListenableFuture.addListener} documentation.\n', '   * The documentation\'s warnings about ""lightweight listeners"" refer here to\n', '   * the work done during {@code FutureFallback.create}, not to any work done to\n', '   * complete the returned {@code Future}.\n']","[352, 353, 354, 355, 500, 501, 502, 503, 504, 505, 350, 351]","['    Preconditions.checkNotNull(runnable, ""Runnable was null."");\n', '    Preconditions.checkNotNull(executor, ""Executor was null."");\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/05e283065ac6a51f16a432d87be869c5d21db8cc/Futures,guava-gwt/src-super/com/google/common/util/concurrent/super/com/google/common/util/concurrent/Futures.java,"public static ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback, Executor executor)",1,1,05e283065ac6a51f16a432d87be869c5d21db8cc
14,269d98573f4e6eed051a8ae2cdb392a7b606e939/Codes_neg/Match_oldfunccode_269d98573f4e6eed051a8ae2cdb392a7b606e939_1.txt,269d98573f4e6eed051a8ae2cdb392a7b606e939/Codes_neg/Match_newfunccode_269d98573f4e6eed051a8ae2cdb392a7b606e939_1.txt,,,,,"[820, 821]","['  private static boolean isAssignableToClass(Type from, Class<?> to) {\n', '    return to.isAssignableFrom(getRawType(from));\n']","[787, 788]","['  private static boolean isAssignableToClass(Type from, Class<?> to) {\n', '    return to.isAssignableFrom(getRawType(from));\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/269d98573f4e6eed051a8ae2cdb392a7b606e939/TypeToken,guava/src/com/google/common/reflect/TypeToken.java,"private static boolean isAssignableToClass(Type from, Class<?> to)",269d98573f4e6eed051a8ae2cdb392a7b606e939/Codes_neg/Match_olddocfunccode_269d98573f4e6eed051a8ae2cdb392a7b606e939_1.txt,269d98573f4e6eed051a8ae2cdb392a7b606e939/Codes_neg/Match_newdocfunccode_269d98573f4e6eed051a8ae2cdb392a7b606e939_1.txt,,269d98573f4e6eed051a8ae2cdb392a7b606e939/Codes_neg/Match_newdocnewJdoc_269d98573f4e6eed051a8ae2cdb392a7b606e939_1.txt,,,[780],['  /** Returns true if at least one of {@code fromTypes} is subtype of {@code to}. */\n'],[],"['  private static boolean isAssignableToClass(Type from, Class<?> to) {\n', '    return to.isAssignableFrom(getRawType(from));\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/269d98573f4e6eed051a8ae2cdb392a7b606e939/TypeToken,guava/src/com/google/common/reflect/TypeToken.java,"private static boolean isAssignableFromAny(Type[] fromTypes, Type to)",1,1,269d98573f4e6eed051a8ae2cdb392a7b606e939
15,269d98573f4e6eed051a8ae2cdb392a7b606e939/Codes_neg/Match_oldfunccode_269d98573f4e6eed051a8ae2cdb392a7b606e939_2.txt,,,,,,[],[],"[912, 913, 914, 904, 905, 906, 907, 908, 909, 910, 911]","['  @Nullable private static Type subtypeBound(WildcardType type) {\n', '    Type[] lowerBounds = type.getLowerBounds();\n', '    if (lowerBounds.length == 1) {\n', '      return subtypeBound(lowerBounds[0]);\n', '    } else if (lowerBounds.length == 0) {\n', '      return null;\n', '    } else {\n', '      throw new AssertionError(\n', '          ""Wildcard should have at most one lower bound: "" + type);\n', '    }\n', '  }\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/269d98573f4e6eed051a8ae2cdb392a7b606e939/TypeToken,guava/src/com/google/common/reflect/TypeToken.java,private static Type subtypeBound(WildcardType type),269d98573f4e6eed051a8ae2cdb392a7b606e939/Codes_neg/Match_olddocfunccode_269d98573f4e6eed051a8ae2cdb392a7b606e939_2.txt,269d98573f4e6eed051a8ae2cdb392a7b606e939/Codes_neg/Match_newdocfunccode_269d98573f4e6eed051a8ae2cdb392a7b606e939_2.txt,,269d98573f4e6eed051a8ae2cdb392a7b606e939/Codes_neg/Match_newdocnewJdoc_269d98573f4e6eed051a8ae2cdb392a7b606e939_2.txt,,,[780],['  /** Returns true if at least one of {@code fromTypes} is subtype of {@code to}. */\n'],[],"['  @Nullable private static Type subtypeBound(WildcardType type) {\n', '    Type[] lowerBounds = type.getLowerBounds();\n', '    if (lowerBounds.length == 1) {\n', '      return subtypeBound(lowerBounds[0]);\n', '    } else if (lowerBounds.length == 0) {\n', '      return null;\n', '    } else {\n', '      throw new AssertionError(\n', '          ""Wildcard should have at most one lower bound: "" + type);\n', '    }\n', '  }\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/269d98573f4e6eed051a8ae2cdb392a7b606e939/TypeToken,guava/src/com/google/common/reflect/TypeToken.java,"private static boolean isAssignableFromAny(Type[] fromTypes, Type to)",1,1,269d98573f4e6eed051a8ae2cdb392a7b606e939
16,107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_oldfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt,107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt,,107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newfuncnewJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt,,107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_oldfuncoldJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt,[1970],"['        ""Futures.getChecked exception type (%s) must not be a RuntimeException"",\n']",[1970],"['        ""Futures.get exception type (%s) must not be a RuntimeException"",\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Futures_2,guava/src/com/google/common/util/concurrent/Futures.java,"public static V getChecked(Future<V> future, Class<X> exceptionClass) throws X",107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_olddocfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt,107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newdocfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt,,107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newdocnewJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt,,107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_olddocJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt,"[131, 132]","['   * with other exceptions, see {@link Futures#getChecked(Future, Class)\n', '   * Futures.getChecked}.\n']","[131, 132]","['        ""Futures.get exception type (%s) must not be a RuntimeException"",\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Uninterruptibles,guava/src/com/google/common/util/concurrent/Uninterruptibles.java,public static V getUninterruptibly(Future<V> future) throws ExecutionException,1,1,107a3c5ac2459a484fd25dfef26dacc5e1a6359e
17,107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_oldfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt,107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt,,107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newfuncnewJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt,,107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_oldfuncoldJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt,[1970],"['        ""Futures.getChecked exception type (%s) must not be a RuntimeException"",\n']",[1970],"['        ""Futures.get exception type (%s) must not be a RuntimeException"",\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Futures_2,guava/src/com/google/common/util/concurrent/Futures.java,"public static V getChecked(Future<V> future, Class<X> exceptionClass) throws X",107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_olddocfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt,107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newdocfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt," Future treats negative timeouts just like zero.
",107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newdocnewJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt," Future treats negative timeouts just like zero.
",107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_olddocJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt,"[161, 162]","['   * with other exceptions, see {@link Futures#getChecked(Future, Class)\n', '   * Futures.getChecked}.\n']","[161, 162]","['        ""Futures.get exception type (%s) must not be a RuntimeException"",\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Uninterruptibles,guava/src/com/google/common/util/concurrent/Uninterruptibles.java,"public static V getUninterruptibly(Future<V> future, long timeout, TimeUnit unit) throws ExecutionException, TimeoutException",1,1,107a3c5ac2459a484fd25dfef26dacc5e1a6359e
18,,a34e7053d0b1db281893e0ec430f0d27ffa8e85e/Codes_neg/Match_newfunccode_a34e7053d0b1db281893e0ec430f0d27ffa8e85e_1.txt,,,,,[873],['    abstract AtomicHelper tryCreateUnsafeAtomicHelper();\n'],[],[],/home/pritish/Documents/IP work/guv_ver/v19.0/a34e7053d0b1db281893e0ec430f0d27ffa8e85e/AbstractFuture,guava/src/com/google/common/util/concurrent/AbstractFuture.java, abstract AtomicHelper tryCreateUnsafeAtomicHelper(),a34e7053d0b1db281893e0ec430f0d27ffa8e85e/Codes_neg/Match_olddocfunccode_a34e7053d0b1db281893e0ec430f0d27ffa8e85e_1.txt,a34e7053d0b1db281893e0ec430f0d27ffa8e85e/Codes_neg/Match_newdocfunccode_a34e7053d0b1db281893e0ec430f0d27ffa8e85e_1.txt,,a34e7053d0b1db281893e0ec430f0d27ffa8e85e/Codes_neg/Match_newdocnewJdoc_a34e7053d0b1db281893e0ec430f0d27ffa8e85e_1.txt,,a34e7053d0b1db281893e0ec430f0d27ffa8e85e/Codes_neg/Match_olddocJdoc_a34e7053d0b1db281893e0ec430f0d27ffa8e85e_1.txt,[],[],[767],[],/home/pritish/Documents/IP work/guv_ver/v19.0/a34e7053d0b1db281893e0ec430f0d27ffa8e85e/AbstractFuture,guava/src/com/google/common/util/concurrent/AbstractFuture.java, void done(),1,1,a34e7053d0b1db281893e0ec430f0d27ffa8e85e
19,,a34e7053d0b1db281893e0ec430f0d27ffa8e85e/Codes_neg/Match_newfunccode_a34e7053d0b1db281893e0ec430f0d27ffa8e85e_2.txt,,,,,"[865, 866, 867, 868, 858, 859, 860, 861]","['      @Override\n', '      AtomicHelper tryCreateUnsafeAtomicHelper() {\n', '        return new UnsafeAtomicHelper();\n', '      }\n', '      @Override\n', '      AtomicHelper tryCreateUnsafeAtomicHelper() {\n', '        return null;\n', '      }\n']",[],[],/home/pritish/Documents/IP work/guv_ver/v19.0/a34e7053d0b1db281893e0ec430f0d27ffa8e85e/AbstractFuture,guava/src/com/google/common/util/concurrent/AbstractFuture.java, AtomicHelper tryCreateUnsafeAtomicHelper(),a34e7053d0b1db281893e0ec430f0d27ffa8e85e/Codes_neg/Match_olddocfunccode_a34e7053d0b1db281893e0ec430f0d27ffa8e85e_2.txt,a34e7053d0b1db281893e0ec430f0d27ffa8e85e/Codes_neg/Match_newdocfunccode_a34e7053d0b1db281893e0ec430f0d27ffa8e85e_2.txt,,a34e7053d0b1db281893e0ec430f0d27ffa8e85e/Codes_neg/Match_newdocnewJdoc_a34e7053d0b1db281893e0ec430f0d27ffa8e85e_2.txt,,a34e7053d0b1db281893e0ec430f0d27ffa8e85e/Codes_neg/Match_olddocJdoc_a34e7053d0b1db281893e0ec430f0d27ffa8e85e_2.txt,[],[],[767],[],/home/pritish/Documents/IP work/guv_ver/v19.0/a34e7053d0b1db281893e0ec430f0d27ffa8e85e/AbstractFuture,guava/src/com/google/common/util/concurrent/AbstractFuture.java, void done(),1,1,a34e7053d0b1db281893e0ec430f0d27ffa8e85e
20,0fa6eac941722326e776f000089d4065b66354ae/Codes_neg/Match_oldfunccode_0fa6eac941722326e776f000089d4065b66354ae_1.txt,,,,,0fa6eac941722326e776f000089d4065b66354ae/Codes_neg/Match_oldfuncoldJdoc_0fa6eac941722326e776f000089d4065b66354ae_1.txt,[],[],"[369, 370, 357, 358]","['  public final FluentIterable<E> limit(int size) {\n', '    return from(Iterables.limit(iterable, size));\n', '  public final FluentIterable<E> limit(int size) {\n', '    return from(Iterables.limit(iterable, size));\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/0fa6eac941722326e776f000089d4065b66354ae/FluentIterable_2,guava/src/com/google/common/collect/FluentIterable.java,public final FluentIterable<E> limit(int size),0fa6eac941722326e776f000089d4065b66354ae/Codes_neg/Match_olddocfunccode_0fa6eac941722326e776f000089d4065b66354ae_1.txt,0fa6eac941722326e776f000089d4065b66354ae/Codes_neg/Match_newdocfunccode_0fa6eac941722326e776f000089d4065b66354ae_1.txt,,0fa6eac941722326e776f000089d4065b66354ae/Codes_neg/Match_newdocnewJdoc_0fa6eac941722326e776f000089d4065b66354ae_1.txt,,0fa6eac941722326e776f000089d4065b66354ae/Codes_neg/Match_olddocJdoc_0fa6eac941722326e776f000089d4065b66354ae_1.txt,"[534, 535, 556, 557]","['   * <p><b>{@code Stream} equivalent:</b> TODO (note that Collectors.toMap would trash the order...)\n', '   *\n', '   * <p><b>{@code Stream} equivalent:</b> TODO (note that Collectors.toMap would trash the order...)\n', '   *\n']",[],"['  public final FluentIterable<E> limit(int size) {\n', '    return from(Iterables.limit(iterable, size));\n', '  public final FluentIterable<E> limit(int size) {\n', '    return from(Iterables.limit(iterable, size));\n']",/home/pritish/Documents/IP work/guv_ver/v19.0/0fa6eac941722326e776f000089d4065b66354ae/FluentIterable_2,guava/src/com/google/common/collect/FluentIterable.java,"public final ImmutableMap<E, V> toMap(Function<? super E, V> valueFunction)",1,1,0fa6eac941722326e776f000089d4065b66354ae
21,,0fa6eac941722326e776f000089d4065b66354ae/Codes_neg/Match_newfunccode_0fa6eac941722326e776f000089d4065b66354ae_2.txt,,0fa6eac941722326e776f000089d4065b66354ae/Codes_neg/Match_newfuncnewJdoc_0fa6eac941722326e776f000089d4065b66354ae_2.txt,,,"[438, 439, 460, 461]","['  public final FluentIterable<E> limit(int maxSize) {\n', '    return from(Iterables.limit(iterable, maxSize));\n', '  public final FluentIterable<E> limit(int maxSize) {\n', '    return from(Iterables.limit(iterable, maxSize));\n']",[],[],/home/pritish/Documents/IP work/guv_ver/v19.0/0fa6eac941722326e776f000089d4065b66354ae/FluentIterable_2,guava/src/com/google/common/collect/FluentIterable.java,public final FluentIterable<E> limit(int maxSize),0fa6eac941722326e776f000089d4065b66354ae/Codes_neg/Match_olddocfunccode_0fa6eac941722326e776f000089d4065b66354ae_2.txt,0fa6eac941722326e776f000089d4065b66354ae/Codes_neg/Match_newdocfunccode_0fa6eac941722326e776f000089d4065b66354ae_2.txt,,0fa6eac941722326e776f000089d4065b66354ae/Codes_neg/Match_newdocnewJdoc_0fa6eac941722326e776f000089d4065b66354ae_2.txt,,0fa6eac941722326e776f000089d4065b66354ae/Codes_neg/Match_olddocJdoc_0fa6eac941722326e776f000089d4065b66354ae_2.txt,"[176, 177, 174, 175]","['   *\n', '   * <p><b>{@code Stream} equivalent:</b> {@code stream.collect(Collectors.joining("", "", ""["", ""]""))}\n', '   * or (less efficiently) {@code collect(Collectors.toList()).toString()}.\n', '   *\n', '   * <p><b>{@code Stream} equivalent:</b> {@code stream.collect(Collectors.joining("", "", ""["", ""]""))}\n', '   * or (less efficiently) {@code collect(Collectors.toList()).toString()}.\n']",[],[],/home/pritish/Documents/IP work/guv_ver/v19.0/0fa6eac941722326e776f000089d4065b66354ae/FluentIterable_2,guava/src/com/google/common/collect/FluentIterable.java,public String toString(),1,1,0fa6eac941722326e776f000089d4065b66354ae
22,,3e47a32fe38b0e36f6c3a614a146916914c922e9/Codes_neg/Match_newfunccode_3e47a32fe38b0e36f6c3a614a146916914c922e9_1.txt,,,,,"[48, 49, 50, 51, 52, 46, 47]","['  public static <V> ListenableFuture<V> catching(\n', '      ListenableFuture<? extends V> input,\n', '      Class<Throwable> exceptionType,\n', '      Function<? super Throwable, ? extends V> fallback,\n', '      Executor executor) {\n', '    return catchingAsync(input, exceptionType, asAsyncFunction(fallback), executor);\n', '  }\n']",[],[],/home/pritish/Documents/IP work/guv_ver/v19.0/3e47a32fe38b0e36f6c3a614a146916914c922e9/GwtFuturesCatchingSpecialization,guava-gwt/src-super/com/google/common/util/concurrent/super/com/google/common/util/concurrent/GwtFuturesCatchingSpecialization.java,"public static ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<Throwable> exceptionType, Function<? super Throwable, ? extends V> fallback, Executor executor)",3e47a32fe38b0e36f6c3a614a146916914c922e9/Codes_neg/Match_olddocfunccode_3e47a32fe38b0e36f6c3a614a146916914c922e9_1.txt,3e47a32fe38b0e36f6c3a614a146916914c922e9/Codes_neg/Match_newdocfunccode_3e47a32fe38b0e36f6c3a614a146916914c922e9_1.txt,,3e47a32fe38b0e36f6c3a614a146916914c922e9/Codes_neg/Match_newdocnewJdoc_3e47a32fe38b0e36f6c3a614a146916914c922e9_1.txt,,3e47a32fe38b0e36f6c3a614a146916914c922e9/Codes_neg/Match_olddocJdoc_3e47a32fe38b0e36f6c3a614a146916914c922e9_1.txt,"[996, 590]","['   * <p>Also note that, regardless of which thread executes {@code\n', '   * <p>Also note that, regardless of which thread executes {@code\n']","[562, 735]",[],/home/pritish/Documents/IP work/guv_ver/v19.0/3e47a32fe38b0e36f6c3a614a146916914c922e9/Futures,guava-gwt/src-super/com/google/common/util/concurrent/super/com/google/common/util/concurrent/Futures.java,"public static ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)",1,1,3e47a32fe38b0e36f6c3a614a146916914c922e9
