{
    "addition": {
        "21": "import static com.google.common.base.Preconditions.checkState;\n",
        "44": "import javax.annotation.CheckForNull;\n",
        "45": "import org.checkerframework.checker.nullness.qual.Nullable;\n",
        "60": "@ElementTypesAreNonnullByDefault\n",
        "142": "  public int count(@CheckForNull Object element) {\n",
        "173": "  /*\n",
        "174": "   * Our checker says \"found: T[]; required: T[].\" That sounds bogus. I discuss a possible reason\n",
        "175": "   * for this error in https://github.com/jspecify/checker-framework/issues/10.\n",
        "176": "   */\n",
        "177": "  @SuppressWarnings(\"nullness\")\n",
        "178": "  public <T extends @Nullable Object> T[] toArray(T[] array) {\n",
        "271": "   * parameter must be misleadingly annotated as @Nullable. I suspect that\n",
        "272": "   * we'll want to remove @Nullable, add an eager checkNotNull, and loosen up\n",
        "277": "  public int remove(@CheckForNull Object element, int occurrences) {\n",
        "318": "  public boolean removeExactly(@CheckForNull Object element, int occurrences) {\n",
        "464": "      public boolean contains(@CheckForNull Object object) {\n",
        "474": "      public boolean remove(@CheckForNull Object object) {\n",
        "532": "      @CheckForNull private Entry<E> last;\n",
        "547": "        checkState(last != null, \"no calls to next() since the last call to remove()\");\n",
        "582": "    /*\n",
        "583": "     * Our checker says \"found: T[]; required: T[].\" That sounds bogus. I discuss a possible reason\n",
        "584": "     * for this error in https://github.com/jspecify/checker-framework/issues/10.\n",
        "585": "     */\n",
        "586": "    @SuppressWarnings(\"nullness\")\n",
        "587": "    public <T extends @Nullable Object> T[] toArray(T[] array) {\n"
    },
    "removed": {
        "22": "import static com.google.common.collect.CollectPreconditions.checkRemove;\n",
        "44": "import org.checkerframework.checker.nullness.compatqual.NullableDecl;\n",
        "140": "  public int count(@NullableDecl Object element) {\n",
        "171": "  public <T> T[] toArray(T[] array) {\n",
        "264": "   * parameter must be misleadingly annotated as @NullableDecl. I suspect that\n",
        "265": "   * we'll want to remove @NullableDecl, add an eager checkNotNull, and loosen up\n",
        "270": "  public int remove(@NullableDecl Object element, int occurrences) {\n",
        "311": "  public boolean removeExactly(@NullableDecl Object element, int occurrences) {\n",
        "457": "      public boolean contains(@NullableDecl Object object) {\n",
        "467": "      public boolean remove(Object object) {\n",
        "525": "      @NullableDecl private Entry<E> last;\n",
        "540": "        checkRemove(last != null);\n",
        "575": "    public <T> T[] toArray(T[] array) {\n"
    }
}