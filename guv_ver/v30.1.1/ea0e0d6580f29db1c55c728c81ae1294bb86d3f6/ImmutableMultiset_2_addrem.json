{
    "addition": {
        "20": "import static java.util.Objects.requireNonNull;\n",
        "38": "import javax.annotation.CheckForNull;\n",
        "58": "@ElementTypesAreNonnullByDefault\n",
        "84": "  public static <T extends @Nullable Object, E>\n",
        "85": "      Collector<T, ?, ImmutableMultiset<E>> toImmutableMultiset(\n",
        "86": "          Function<? super T, ? extends E> elementFunction,\n",
        "87": "          ToIntFunction<? super T> countFunction) {\n",
        "233": "      @CheckForNull E element;\n",
        "248": "        /*\n",
        "249": "         * requireNonNull is safe because `remaining` starts at 0, forcing us to initialize\n",
        "250": "         * `element` above. After that, we never clear it.\n",
        "251": "         */\n",
        "252": "        return requireNonNull(element);\n",
        "257": "  @LazyInit @CheckForNull private transient ImmutableList<E> asList;\n",
        "266": "  public boolean contains(@CheckForNull Object object) {\n",
        "294": "  public final int remove(@CheckForNull Object element, int occurrences) {\n",
        "337": "  public boolean equals(@CheckForNull Object object) {\n",
        "355": "  @LazyInit @CheckForNull private transient ImmutableSet<Entry<E>> entrySet;\n",
        "387": "    public boolean contains(@CheckForNull Object o) {\n",
        "602": "    public boolean contains(@CheckForNull Object object) {\n",
        "621": "    // \"extends Object\" works around https://github.com/typetools/checker-framework/issues/3013\n",
        "622": "    SerializedForm(Multiset<? extends Object> multiset) {\n",
        "627": "      for (Entry<? extends Object> entry : multiset.entrySet()) {\n"
    },
    "removed": {
        "81": "  public static <T, E> Collector<T, ?, ImmutableMultiset<E>> toImmutableMultiset(\n",
        "82": "      Function<? super T, ? extends E> elementFunction, ToIntFunction<? super T> countFunction) {\n",
        "102": "  @SuppressWarnings(\"unchecked\") // generic array created but never written\n",
        "113": "  @SuppressWarnings(\"unchecked\") //\n",
        "125": "  @SuppressWarnings(\"unchecked\") //\n",
        "137": "  @SuppressWarnings(\"unchecked\") //\n",
        "149": "  @SuppressWarnings(\"unchecked\") //\n",
        "161": "  @SuppressWarnings(\"unchecked\") //\n",
        "234": "      @Nullable E element;\n",
        "249": "        return element;\n",
        "254": "  @LazyInit private transient ImmutableList<E> asList;\n",
        "263": "  public boolean contains(@Nullable Object object) {\n",
        "291": "  public final int remove(Object element, int occurrences) {\n",
        "334": "  public boolean equals(@Nullable Object object) {\n",
        "352": "  @LazyInit private transient ImmutableSet<Entry<E>> entrySet;\n",
        "384": "    public boolean contains(Object o) {\n",
        "599": "    public boolean contains(@Nullable Object object) {\n",
        "618": "    SerializedForm(Multiset<?> multiset) {\n",
        "623": "      for (Entry<?> entry : multiset.entrySet()) {\n"
    }
}