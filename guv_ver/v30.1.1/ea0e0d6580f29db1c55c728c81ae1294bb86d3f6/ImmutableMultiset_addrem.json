{
    "addition": {
        "20": "import static java.util.Objects.requireNonNull;\n",
        "33": "import javax.annotation.CheckForNull;\n",
        "52": "@ElementTypesAreNonnullByDefault\n",
        "190": "      @CheckForNull E element;\n",
        "205": "        /*\n",
        "206": "         * requireNonNull is safe because `remaining` starts at 0, forcing us to initialize\n",
        "207": "         * `element` above. After that, we never clear it.\n",
        "208": "         */\n",
        "209": "        return requireNonNull(element);\n",
        "214": "  @LazyInit @CheckForNull private transient ImmutableList<E> asList;\n",
        "223": "  public boolean contains(@CheckForNull Object object) {\n",
        "251": "  public final int remove(@CheckForNull Object element, int occurrences) {\n",
        "294": "  public boolean equals(@CheckForNull Object object) {\n",
        "312": "  @LazyInit @CheckForNull private transient ImmutableSet<Entry<E>> entrySet;\n",
        "344": "    public boolean contains(@CheckForNull Object o) {\n",
        "415": "    /*\n",
        "416": "     * `contents` is null only for instances of the subclass, ImmutableSortedMultiset.Builder. That\n",
        "417": "     * subclass overrides all the methods that access it here. Thus, all the methods here can safely\n",
        "418": "     * assume that this field is non-null.\n",
        "419": "     */\n",
        "420": "    @CheckForNull ObjectCountHashMap<E> contents;\n",
        "491": "      requireNonNull(contents); // see the comment on the field\n",
        "517": "      requireNonNull(contents); // see the comment on the field\n",
        "547": "      requireNonNull(contents); // see the comment on the field\n",
        "588": "    @CheckForNull\n",
        "605": "      requireNonNull(contents); // see the comment on the field\n"
    },
    "removed": {
        "32": "import org.checkerframework.checker.nullness.compatqual.NullableDecl;\n",
        "69": "  @SuppressWarnings(\"unchecked\") // generic array created but never written\n",
        "80": "  @SuppressWarnings(\"unchecked\") //\n",
        "92": "  @SuppressWarnings(\"unchecked\") //\n",
        "104": "  @SuppressWarnings(\"unchecked\") //\n",
        "116": "  @SuppressWarnings(\"unchecked\") //\n",
        "128": "  @SuppressWarnings(\"unchecked\") //\n",
        "194": "      @NullableDecl E element;\n",
        "209": "        return element;\n",
        "214": "  @LazyInit private transient ImmutableList<E> asList;\n",
        "223": "  public boolean contains(@NullableDecl Object object) {\n",
        "251": "  public final int remove(Object element, int occurrences) {\n",
        "294": "  public boolean equals(@NullableDecl Object object) {\n",
        "312": "  @LazyInit private transient ImmutableSet<Entry<E>> entrySet;\n",
        "344": "    public boolean contains(Object o) {\n",
        "415": "    ObjectCountHashMap<E> contents;\n",
        "580": "    @NullableDecl\n"
    }
}