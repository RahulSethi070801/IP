{
    "addition": {
        "21": "import static com.google.common.collect.NullnessCasts.uncheckedCastNullableTToT;\n",
        "27": "import javax.annotation.CheckForNull;\n",
        "28": "import org.checkerframework.checker.nullness.qual.Nullable;\n",
        "40": "@ElementTypesAreNonnullByDefault\n",
        "41": "final class GeneralRange<T extends @Nullable Object> implements Serializable {\n",
        "44": "    T lowerEndpoint = range.hasLowerBound() ? range.lowerEndpoint() : null;\n",
        "47": "    T upperEndpoint = range.hasUpperBound() ? range.upperEndpoint() : null;\n",
        "60": "  static <T extends @Nullable Object> GeneralRange<T> all(Comparator<? super T> comparator) {\n",
        "68": "  static <T extends @Nullable Object> GeneralRange<T> downTo(\n",
        "69": "      Comparator<? super T> comparator, @ParametricNullness T endpoint, BoundType boundType) {\n",
        "77": "  static <T extends @Nullable Object> GeneralRange<T> upTo(\n",
        "78": "      Comparator<? super T> comparator, @ParametricNullness T endpoint, BoundType boundType) {\n",
        "86": "  static <T extends @Nullable Object> GeneralRange<T> range(\n",
        "88": "      @ParametricNullness T lower,\n",
        "90": "      @ParametricNullness T upper,\n",
        "97": "  @CheckForNull private final T lowerEndpoint;\n",
        "100": "  @CheckForNull private final T upperEndpoint;\n",
        "106": "      @CheckForNull T lowerEndpoint,\n",
        "109": "      @CheckForNull T upperEndpoint,\n",
        "119": "    // Trigger any exception that the comparator would throw for the endpoints.\n",
        "120": "    /*\n",
        "121": "     * uncheckedCastNullableTToT is safe as long as the callers are careful to pass a \"real\" T\n",
        "122": "     * whenever they pass `true` for the matching `has*Bound` parameter.\n",
        "123": "     */\n",
        "125": "      comparator.compare(\n",
        "126": "          uncheckedCastNullableTToT(lowerEndpoint), uncheckedCastNullableTToT(lowerEndpoint));\n",
        "129": "      comparator.compare(\n",
        "130": "          uncheckedCastNullableTToT(upperEndpoint), uncheckedCastNullableTToT(upperEndpoint));\n",
        "132": "\n",
        "134": "      int cmp =\n",
        "135": "          comparator.compare(\n",
        "136": "              uncheckedCastNullableTToT(lowerEndpoint), uncheckedCastNullableTToT(upperEndpoint));\n",
        "159": "    // The casts are safe because of the has*Bound() checks.\n",
        "160": "    return (hasUpperBound() && tooLow(uncheckedCastNullableTToT(getUpperEndpoint())))\n",
        "161": "        || (hasLowerBound() && tooHigh(uncheckedCastNullableTToT(getLowerEndpoint())));\n",
        "164": "  boolean tooLow(@ParametricNullness T t) {\n",
        "168": "    // The cast is safe because of the hasLowerBound() check.\n",
        "169": "    T lbound = uncheckedCastNullableTToT(getLowerEndpoint());\n",
        "174": "  boolean tooHigh(@ParametricNullness T t) {\n",
        "178": "    // The cast is safe because of the hasUpperBound() check.\n",
        "179": "    T ubound = uncheckedCastNullableTToT(getUpperEndpoint());\n",
        "184": "  boolean contains(@ParametricNullness T t) {\n",
        "191": "  @SuppressWarnings(\"nullness\") // TODO(cpovirk): Add casts as needed. Will be noisy and annoying...\n",
        "197": "    T lowEnd = getLowerEndpoint();\n",
        "212": "    T upEnd = getUpperEndpoint();\n",
        "240": "  public boolean equals(@CheckForNull Object obj) {\n",
        "264": "  @CheckForNull private transient GeneralRange<T> reverse;\n",
        "296": "  @CheckForNull\n",
        "305": "  @CheckForNull\n"
    },
    "removed": {
        "26": "import org.checkerframework.checker.nullness.compatqual.NullableDecl;\n",
        "38": "final class GeneralRange<T> implements Serializable {\n",
        "41": "    @NullableDecl T lowerEndpoint = range.hasLowerBound() ? range.lowerEndpoint() : null;\n",
        "44": "    @NullableDecl T upperEndpoint = range.hasUpperBound() ? range.upperEndpoint() : null;\n",
        "57": "  static <T> GeneralRange<T> all(Comparator<? super T> comparator) {\n",
        "65": "  static <T> GeneralRange<T> downTo(\n",
        "66": "      Comparator<? super T> comparator, @NullableDecl T endpoint, BoundType boundType) {\n",
        "74": "  static <T> GeneralRange<T> upTo(\n",
        "75": "      Comparator<? super T> comparator, @NullableDecl T endpoint, BoundType boundType) {\n",
        "83": "  static <T> GeneralRange<T> range(\n",
        "85": "      @NullableDecl T lower,\n",
        "87": "      @NullableDecl T upper,\n",
        "94": "  @NullableDecl private final T lowerEndpoint;\n",
        "97": "  @NullableDecl private final T upperEndpoint;\n",
        "103": "      @NullableDecl T lowerEndpoint,\n",
        "106": "      @NullableDecl T upperEndpoint,\n",
        "117": "      comparator.compare(lowerEndpoint, lowerEndpoint);\n",
        "120": "      comparator.compare(upperEndpoint, upperEndpoint);\n",
        "123": "      int cmp = comparator.compare(lowerEndpoint, upperEndpoint);\n",
        "146": "    return (hasUpperBound() && tooLow(getUpperEndpoint()))\n",
        "147": "        || (hasLowerBound() && tooHigh(getLowerEndpoint()));\n",
        "150": "  boolean tooLow(@NullableDecl T t) {\n",
        "154": "    T lbound = getLowerEndpoint();\n",
        "159": "  boolean tooHigh(@NullableDecl T t) {\n",
        "163": "    T ubound = getUpperEndpoint();\n",
        "168": "  boolean contains(@NullableDecl T t) {\n",
        "180": "    @NullableDecl T lowEnd = getLowerEndpoint();\n",
        "195": "    @NullableDecl T upEnd = getUpperEndpoint();\n",
        "223": "  public boolean equals(@NullableDecl Object obj) {\n",
        "247": "  @NullableDecl private transient GeneralRange<T> reverse;\n"
    }
}