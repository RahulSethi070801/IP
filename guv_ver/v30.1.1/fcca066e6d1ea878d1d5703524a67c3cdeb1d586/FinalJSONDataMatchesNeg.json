[{"func":{"oldfunccode":"fcca066e6d1ea878d1d5703524a67c3cdeb1d586/Codes_neg/Match_oldfunccode_fcca066e6d1ea878d1d5703524a67c3cdeb1d586_1.txt","newfunccode":"fcca066e6d1ea878d1d5703524a67c3cdeb1d586/Codes_neg/Match_newfunccode_fcca066e6d1ea878d1d5703524a67c3cdeb1d586_1.txt","newdoc":" To avoid a race, make sure the refreshed value is set into loadingValueReference\n *before* returning newValue from the cache query.\n","newJdoc":"","olddoc":" To avoid a race, make sure the refreshed value is set into loadingValueReference\n *before* returning newValue from the cache query.\n","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v30.1.1/fcca066e6d1ea878d1d5703524a67c3cdeb1d586/LocalCache_2","pathinproj":"guava/src/com/google/common/cache/LocalCache.java","addlines":[3450,3451,3532,3452,3533,3534],"dellines":[3462,3463,3544,3464,3545,3465,3546,3466,3547,3467,3548,3549],"addcode":["            newResult -> {\n","              LoadingValueReference.this.set(newResult);\n","              return newResult;\n","            newResult -> {\n","              LoadingValueReference.this.set(newResult);\n","              return newResult;\n"],"delcode":["            new com.google.common.base.Function<V, V>() {\n","              @Override\n","              public V apply(V newValue) {\n","                LoadingValueReference.this.set(newValue);\n","                return newValue;\n","              }\n","            new Function<V, V>() {\n","              @Override\n","              public V apply(V newValue) {\n","                LoadingValueReference.this.set(newValue);\n","                return newValue;\n","              }\n"],"methodSig":"public ListenableFuture<V> loadFuture(K key, CacheLoader<? super K, V> loader)"},"doc":{"oldfunccode":"fcca066e6d1ea878d1d5703524a67c3cdeb1d586/Codes_neg/Match_olddocfunccode_fcca066e6d1ea878d1d5703524a67c3cdeb1d586_1.txt","newfunccode":"fcca066e6d1ea878d1d5703524a67c3cdeb1d586/Codes_neg/Match_newdocfunccode_fcca066e6d1ea878d1d5703524a67c3cdeb1d586_1.txt","newdoc":"","newJdoc":"fcca066e6d1ea878d1d5703524a67c3cdeb1d586/Codes_neg/Match_newdocnewJdoc_fcca066e6d1ea878d1d5703524a67c3cdeb1d586_1.txt","olddoc":"","oldJdoc":"fcca066e6d1ea878d1d5703524a67c3cdeb1d586/Codes_neg/Match_olddocJdoc_fcca066e6d1ea878d1d5703524a67c3cdeb1d586_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v30.1.1/fcca066e6d1ea878d1d5703524a67c3cdeb1d586/LocalCache_2","pathinproj":"guava/src/com/google/common/cache/LocalCache.java","addlines":[663,664,666,667],"dellines":[664,665,666,667],"addcode":["     * Returns true if a new value is currently loading, regardless of whether there is an existing\n","     * value. It is assumed that the return value of this method is constant for any given\n","     * Returns true if a new value is currently loading, regardless of whether there is an existing\n","     * value. It is assumed that the return value of this method is constant for any given\n"],"delcode":["     * Returns true if a new value is currently loading, regardless of whether or not there is an\n","     * existing value. It is assumed that the return value of this method is constant for any given\n","     * Returns true if a new value is currently loading, regardless of whether or not there is an\n","     * existing value. It is assumed that the return value of this method is constant for any given\n"],"methodSig":" boolean isLoading()"},"id":1,"flag":1,"commit":"fcca066e6d1ea878d1d5703524a67c3cdeb1d586"},{"func":{"oldfunccode":"fcca066e6d1ea878d1d5703524a67c3cdeb1d586/Codes_neg/Match_oldfunccode_fcca066e6d1ea878d1d5703524a67c3cdeb1d586_2.txt","newfunccode":"fcca066e6d1ea878d1d5703524a67c3cdeb1d586/Codes_neg/Match_newfunccode_fcca066e6d1ea878d1d5703524a67c3cdeb1d586_2.txt","newdoc":" To avoid a race, make sure the refreshed value is set into loadingValueReference\n *before* returning newValue from the cache query.\n To avoid a race, make sure the refreshed value is set into loadingValueReference\n *before* returning newValue from the cache query.\n","newJdoc":"","olddoc":" To avoid a race, make sure the refreshed value is set into loadingValueReference\n *before* returning newValue from the cache query.\n To avoid a race, make sure the refreshed value is set into loadingValueReference\n *before* returning newValue from the cache query.\n","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v30.1.1/fcca066e6d1ea878d1d5703524a67c3cdeb1d586/LocalCache_2","pathinproj":"guava/src/com/google/common/cache/LocalCache.java","addlines":[3450,3451,3532,3452,3533,3534],"dellines":[3462,3463,3544,3464,3545,3465,3546,3466,3547,3467,3548,3549],"addcode":["            newResult -> {\n","              LoadingValueReference.this.set(newResult);\n","              return newResult;\n","            newResult -> {\n","              LoadingValueReference.this.set(newResult);\n","              return newResult;\n"],"delcode":["            new com.google.common.base.Function<V, V>() {\n","              @Override\n","              public V apply(V newValue) {\n","                LoadingValueReference.this.set(newValue);\n","                return newValue;\n","              }\n","            new Function<V, V>() {\n","              @Override\n","              public V apply(V newValue) {\n","                LoadingValueReference.this.set(newValue);\n","                return newValue;\n","              }\n"],"methodSig":"public ListenableFuture<V> loadFuture(K key, CacheLoader<? super K, V> loader)"},"doc":{"oldfunccode":"fcca066e6d1ea878d1d5703524a67c3cdeb1d586/Codes_neg/Match_olddocfunccode_fcca066e6d1ea878d1d5703524a67c3cdeb1d586_2.txt","newfunccode":"fcca066e6d1ea878d1d5703524a67c3cdeb1d586/Codes_neg/Match_newdocfunccode_fcca066e6d1ea878d1d5703524a67c3cdeb1d586_2.txt","newdoc":" safely limiting the kinds of caches this can produce\n","newJdoc":"fcca066e6d1ea878d1d5703524a67c3cdeb1d586/Codes_neg/Match_newdocnewJdoc_fcca066e6d1ea878d1d5703524a67c3cdeb1d586_2.txt","olddoc":" safely limiting the kinds of caches this can produce\n","oldJdoc":"fcca066e6d1ea878d1d5703524a67c3cdeb1d586/Codes_neg/Match_olddocJdoc_fcca066e6d1ea878d1d5703524a67c3cdeb1d586_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v30.1.1/fcca066e6d1ea878d1d5703524a67c3cdeb1d586/CacheBuilder","pathinproj":"android/guava/src/com/google/common/cache/CacheBuilder.java","addlines":[832,833,834,835,932,933,934,935,936,831],"dellines":[832,929,930,931,932,933,828,829,830,831],"addcode":["   * same instance, but only the returned reference has the correct generic type information to\n","   * ensure type safety. For best results, use the standard method-chaining idiom illustrated in the\n","   * class documentation above, configuring a builder and building your cache in a single statement.\n","   * Failure to heed this advice can result in a {@link ClassCastException} being thrown by a cache\n","   * operation at some <i>undefined</i> point in the future.\n","   * same instance, but only the returned reference has the correct generic type information to\n","   * ensure type safety. For best results, use the standard method-chaining idiom illustrated in the\n","   * class documentation above, configuring a builder and building your cache in a single statement.\n","   * Failure to heed this advice can result in a {@link ClassCastException} being thrown by a cache\n","   * operation at some <i>undefined</i> point in the future.\n"],"delcode":["   * same instance, but only the returned reference has the correct generic type information so as\n","   * to ensure type safety. For best results, use the standard method-chaining idiom illustrated in\n","   * the class documentation above, configuring a builder and building your cache in a single\n","   * statement. Failure to heed this advice can result in a {@link ClassCastException} being thrown\n","   * by a cache operation at some <i>undefined</i> point in the future.\n","   * same instance, but only the returned reference has the correct generic type information so as\n","   * to ensure type safety. For best results, use the standard method-chaining idiom illustrated in\n","   * the class documentation above, configuring a builder and building your cache in a single\n","   * statement. Failure to heed this advice can result in a {@link ClassCastException} being thrown\n","   * by a cache operation at some <i>undefined</i> point in the future.\n"],"methodSig":"public CacheBuilder<K1, V1> removalListener(RemovalListener<? super K1, ? super V1> listener)"},"id":1,"flag":1,"commit":"fcca066e6d1ea878d1d5703524a67c3cdeb1d586"}]