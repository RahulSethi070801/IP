{"id": "86e36201255c2c123076e2163bdcd654f848989f", "code": [{"0": "android/guava/src/com/google/common/util/concurrent/ServiceManager.java", "added": {"1": ["   * <p>When selecting an executor, note that {@code directExecutor} is dangerous in some cases. See\n", "   * the discussion in the {@link ListenableFuture#addListener ListenableFuture.addListener}\n", "   * documentation.\n"], "2": ["   * @deprecated Use {@linkplain #addListener(Listener, Executor) the overload that accepts an\n", "   *     executor}. For equivalent behavior, pass {@link MoreExecutors#directExecutor}. However,\n", "   *     consider whether another executor would be more appropriate, as discussed in the docs for\n", "   *     {@link ListenableFuture#addListener ListenableFuture.addListener}. This method is scheduled\n", "   *     for deletion in October 2020.\n", "  @Beta // currently redundant, but ensures we keep this @Beta when we gradate the class!\n", "  @Deprecated\n"]}, "removed": {"1": ["   * <p>For fast, lightweight listeners that would be safe to execute in any thread, consider\n", "   * calling {@link #addListener(Listener)}.\n"]}, "added_lines": {"1": [246, 247, 248], "2": [273, 274, 275, 276, 277, 279, 280]}, "removed_lines": {"1": [246, 247]}}, {"1": "guava/src/com/google/common/util/concurrent/ServiceManager.java", "added": {"1": ["   * <p>When selecting an executor, note that {@code directExecutor} is dangerous in some cases. See\n", "   * the discussion in the {@link ListenableFuture#addListener ListenableFuture.addListener}\n", "   * documentation.\n"], "2": ["   * @deprecated Use {@linkplain #addListener(Listener, Executor) the overload that accepts an\n", "   *     executor}. For equivalent behavior, pass {@link MoreExecutors#directExecutor}. However,\n", "   *     consider whether another executor would be more appropriate, as discussed in the docs for\n", "   *     {@link ListenableFuture#addListener ListenableFuture.addListener}. This method is scheduled\n", "   *     for deletion in October 2020.\n", "  @Beta // currently redundant, but ensures we keep this @Beta when we gradate the class!\n", "  @Deprecated\n"]}, "removed": {"1": ["   * <p>For fast, lightweight listeners that would be safe to execute in any thread, consider\n", "   * calling {@link #addListener(Listener)}.\n"]}, "added_lines": {"1": [248, 249, 250], "2": [275, 276, 277, 278, 279, 281, 282]}, "removed_lines": {"1": [248, 249]}}]}
