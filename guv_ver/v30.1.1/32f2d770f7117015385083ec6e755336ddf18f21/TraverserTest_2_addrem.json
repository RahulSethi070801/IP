{
    "addition": {
        "187": "  @Test\n",
        "188": "  public void forGraph_breadthFirst_infinite() {\n",
        "189": "    Iterable<Integer> result =\n",
        "190": "        Traverser.forGraph(fixedSuccessors(Iterables.cycle(1, 2, 3))).breadthFirst(0);\n",
        "191": "    assertThat(Iterables.limit(result, 4)).containsExactly(0, 1, 2, 3).inOrder();\n",
        "192": "  }\n",
        "193": "\n",
        "383": "  @Test\n",
        "384": "  public void forGraph_depthFirstPreOrder_infinite() {\n",
        "385": "    Iterable<Integer> result =\n",
        "386": "        Traverser.forGraph(fixedSuccessors(Iterables.cycle(1, 2, 3))).breadthFirst(0);\n",
        "387": "    assertThat(Iterables.limit(result, 2)).containsExactly(0, 1).inOrder();\n",
        "388": "  }\n",
        "389": "\n",
        "801": "  @Test\n",
        "802": "  public void forTree_breadthFirst_infinite() {\n",
        "803": "    Iterable<Integer> result =\n",
        "804": "        Traverser.forTree(fixedSuccessors(Iterables.cycle(1, 2, 3))).breadthFirst(0);\n",
        "805": "    assertThat(Iterables.limit(result, 8)).containsExactly(0, 1, 2, 3, 1, 2, 3, 1).inOrder();\n",
        "806": "  }\n",
        "807": "\n",
        "936": "  @Test\n",
        "937": "  public void forTree_depthFirstPreOrder_infinite() {\n",
        "938": "    Iterable<Integer> result =\n",
        "939": "        Traverser.forTree(fixedSuccessors(Iterables.cycle(1, 2, 3))).depthFirstPreOrder(0);\n",
        "940": "    assertThat(Iterables.limit(result, 3)).containsExactly(0, 1, 1).inOrder();\n",
        "941": "  }\n",
        "942": "\n",
        "1269": "\n",
        "1270": "  private static <N> SuccessorsFunction<N> fixedSuccessors(final Iterable<N> successors) {\n",
        "1271": "    return new SuccessorsFunction<N>() {\n",
        "1272": "      @Override\n",
        "1273": "      public Iterable<N> successors(N n) {\n",
        "1274": "        return successors;\n",
        "1275": "      }\n",
        "1276": "    };\n",
        "1277": "  }\n"
    },
    "removed": {}
}