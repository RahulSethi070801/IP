[{"func":{"oldfunccode":"36d53edd09f561ec14464a897a03f2b4f26fc0b3/Codes_neg/Match_oldfunccode_36d53edd09f561ec14464a897a03f2b4f26fc0b3_1.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":" Can't use Streams.stream() from base\n","oldJdoc":"36d53edd09f561ec14464a897a03f2b4f26fc0b3/Codes_neg/Match_oldfuncoldJdoc_36d53edd09f561ec14464a897a03f2b4f26fc0b3_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v30.1.1/36d53edd09f561ec14464a897a03f2b4f26fc0b3/Splitter","pathinproj":"guava/src/com/google/common/base/Splitter.java","addlines":[],"dellines":[435,436,438,439],"addcode":[],"delcode":["  @Beta\n","  public Stream<String> splitToStream(CharSequence sequence) {\n","    return StreamSupport.stream(split(sequence).spliterator(), false);\n","  }\n"],"methodSig":"public Stream<String> splitToStream(CharSequence sequence)"},"doc":{"oldfunccode":"36d53edd09f561ec14464a897a03f2b4f26fc0b3/Codes_neg/Match_olddocfunccode_36d53edd09f561ec14464a897a03f2b4f26fc0b3_1.txt","newfunccode":"36d53edd09f561ec14464a897a03f2b4f26fc0b3/Codes_neg/Match_newdocfunccode_36d53edd09f561ec14464a897a03f2b4f26fc0b3_1.txt","newdoc":"","newJdoc":"36d53edd09f561ec14464a897a03f2b4f26fc0b3/Codes_neg/Match_newdocnewJdoc_36d53edd09f561ec14464a897a03f2b4f26fc0b3_1.txt","olddoc":"","oldJdoc":"36d53edd09f561ec14464a897a03f2b4f26fc0b3/Codes_neg/Match_olddocJdoc_36d53edd09f561ec14464a897a03f2b4f26fc0b3_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v30.1.1/36d53edd09f561ec14464a897a03f2b4f26fc0b3/Splitter","pathinproj":"guava/src/com/google/common/base/Splitter.java","addlines":[375],"dellines":[377],"addcode":["   * {@link #splitToList(CharSequence)}.\n"],"delcode":["   * {@link #splitToList(CharSequence)}. Java 8 users may prefer {@link #splitToStream} instead.\n"],"methodSig":"public Iterable<String> split(final CharSequence sequence)"},"id":1,"flag":1,"commit":"36d53edd09f561ec14464a897a03f2b4f26fc0b3"}]