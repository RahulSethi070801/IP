[{"func":{"oldfunccode":"","newfunccode":"5a8f19bd3556012ed9e65cd4268a85ddde95733f/Codes_neg/Match_newfunccode_5a8f19bd3556012ed9e65cd4268a85ddde95733f_1.txt","newdoc":" Can't use Streams.stream() from base\n","newJdoc":"5a8f19bd3556012ed9e65cd4268a85ddde95733f/Codes_neg/Match_newfuncnewJdoc_5a8f19bd3556012ed9e65cd4268a85ddde95733f_1.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v30.1.1/5a8f19bd3556012ed9e65cd4268a85ddde95733f/Splitter","pathinproj":"guava/src/com/google/common/base/Splitter.java","addlines":[435,436,438,439],"dellines":[],"addcode":["  @Beta\n","  public Stream<String> splitToStream(CharSequence sequence) {\n","    return StreamSupport.stream(split(sequence).spliterator(), false);\n","  }\n"],"delcode":[],"methodSig":"public Stream<String> splitToStream(CharSequence sequence)"},"doc":{"oldfunccode":"5a8f19bd3556012ed9e65cd4268a85ddde95733f/Codes_neg/Match_olddocfunccode_5a8f19bd3556012ed9e65cd4268a85ddde95733f_1.txt","newfunccode":"5a8f19bd3556012ed9e65cd4268a85ddde95733f/Codes_neg/Match_newdocfunccode_5a8f19bd3556012ed9e65cd4268a85ddde95733f_1.txt","newdoc":"","newJdoc":"5a8f19bd3556012ed9e65cd4268a85ddde95733f/Codes_neg/Match_newdocnewJdoc_5a8f19bd3556012ed9e65cd4268a85ddde95733f_1.txt","olddoc":"","oldJdoc":"5a8f19bd3556012ed9e65cd4268a85ddde95733f/Codes_neg/Match_olddocJdoc_5a8f19bd3556012ed9e65cd4268a85ddde95733f_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v30.1.1/5a8f19bd3556012ed9e65cd4268a85ddde95733f/Splitter","pathinproj":"guava/src/com/google/common/base/Splitter.java","addlines":[377],"dellines":[375],"addcode":["   * {@link #splitToList(CharSequence)}. Java 8 users may prefer {@link #splitToStream} instead.\n"],"delcode":["   * {@link #splitToList(CharSequence)}.\n"],"methodSig":"public Iterable<String> split(final CharSequence sequence)"},"id":1,"flag":1,"commit":"5a8f19bd3556012ed9e65cd4268a85ddde95733f"}]