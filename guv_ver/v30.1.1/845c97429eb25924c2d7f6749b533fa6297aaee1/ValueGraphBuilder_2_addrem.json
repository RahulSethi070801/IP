{
    "addition": {
        "19": "import static com.google.common.base.Preconditions.checkArgument;\n",
        "98": "    // TODO(b/142723300): Add incidentEdgeOrder\n",
        "107": "   * <p>Note that the returned builder will always have {@link #incidentEdgeOrder} set to {@link\n",
        "108": "   * ElementOrder#stable()}, regardless of the value that was set in this builder.\n",
        "109": "   *\n",
        "150": "  /**\n",
        "151": "   * Specifies the order of iteration for the elements of {@link ValueGraph#edges()}, {@link\n",
        "152": "   * ValueGraph#adjacentNodes(Object)}, {@link ValueGraph#predecessors(Object)}, {@link\n",
        "153": "   * ValueGraph#successors(Object)} and {@link ValueGraph#incidentEdges(Object)}.\n",
        "154": "   *\n",
        "155": "   * <p>The default value is {@link ElementOrder#unordered() unordered} for mutable graphs. For\n",
        "156": "   * immutable graphs, this value is ignored; they always have a {@link ElementOrder#stable()\n",
        "157": "   * stable} order.\n",
        "158": "   *\n",
        "159": "   * @throws IllegalArgumentException if {@code incidentEdgeOrder} is not either {@code\n",
        "160": "   *     ElementOrder.unordered()} or {@code ElementOrder.stable()}.\n",
        "161": "   */\n",
        "162": "  // TODO(b/142723300): Make this method public\n",
        "163": "  <N1 extends N> ValueGraphBuilder<N1, V> incidentEdgeOrder(ElementOrder<N1> incidentEdgeOrder) {\n",
        "164": "    checkArgument(\n",
        "165": "        incidentEdgeOrder.type() == ElementOrder.Type.UNORDERED\n",
        "166": "            || incidentEdgeOrder.type() == ElementOrder.Type.STABLE,\n",
        "167": "        \"The given elementOrder (%s) is unsupported. incidentEdgeOrder() only supports\"\n",
        "168": "            + \" ElementOrder.unordered() and ElementOrder.stable().\",\n",
        "169": "        incidentEdgeOrder);\n",
        "170": "    ValueGraphBuilder<N1, V> newBuilder = cast();\n",
        "171": "    newBuilder.incidentEdgeOrder = checkNotNull(incidentEdgeOrder);\n",
        "172": "    return newBuilder;\n",
        "173": "  }\n"
    },
    "removed": {}
}