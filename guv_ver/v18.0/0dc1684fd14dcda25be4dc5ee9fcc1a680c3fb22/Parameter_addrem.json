{
    "addition": {},
    "removed": {
        "22": "import com.google.common.collect.FluentIterable;\n",
        "85": "  /**\n",
        "86": "   * @since 17.0\n",
        "87": "   */\n",
        "88": "  // @Override on JDK8\n",
        "89": "  public <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationType) {\n",
        "90": "    return getDeclaredAnnotationsByType(annotationType);\n",
        "91": "  }\n",
        "92": "\n",
        "93": "  /**\n",
        "94": "   * @since 17.0\n",
        "95": "   */\n",
        "96": "  // @Override on JDK8\n",
        "101": "  /**\n",
        "102": "   * @since 17.0\n",
        "103": "   */\n",
        "104": "  // @Override on JDK8\n",
        "105": "  @Nullable\n",
        "106": "  public <A extends Annotation> A getDeclaredAnnotation(Class<A> annotationType) {\n",
        "107": "    checkNotNull(annotationType);\n",
        "108": "    return FluentIterable.from(annotations)\n",
        "109": "        .filter(annotationType)\n",
        "110": "        .first()\n",
        "111": "        .orNull();\n",
        "112": "  }\n",
        "113": "\n",
        "114": "  /**\n",
        "115": "   * @since 17.0\n",
        "116": "   */\n",
        "117": "  // @Override on JDK8\n",
        "118": "  public <A extends Annotation> A[]\n",
        "119": "      getDeclaredAnnotationsByType(Class<A> annotationType) {\n",
        "120": "    return FluentIterable.from(annotations)\n",
        "121": "        .filter(annotationType)\n",
        "122": "        .toArray(annotationType);\n",
        "123": "  }\n",
        "124": "\n"
    }
}