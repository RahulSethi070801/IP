{
    "addition": {
        "146": "              case TERMINATED:  // fall-through\n",
        "147": "              case FAILED:  // fall-through\n",
        "148": "              case NEW:  // fall-through\n",
        "159": "   * This method is called by {@link #startAsync} to initiate service startup. The invocation of\n",
        "160": "   * this method should cause a call to {@link #notifyStarted()}, either during this method's run,\n",
        "161": "   * or after it has returned. If startup fails, the invocation should cause a call to\n",
        "165": "   * convenient. It is invoked exactly once on service startup, even when {@link #startAsync} is\n",
        "166": "   * called multiple times.\n",
        "177": "   * convenient. It is invoked exactly once on service shutdown, even when {@link #stopAsync} is\n",
        "178": "   * called multiple times.\n",
        "254": "    return this;\n",
        "255": "  }\n",
        "256": "\n",
        "257": "  @Deprecated\n",
        "258": "  @Override\n",
        "259": "  public final ListenableFuture<State> stop() {\n",
        "475": "  // A change from one service state to another, plus the result of the change.\n"
    },
    "removed": {
        "145": "              case TERMINATED:  /* fall-through */\n",
        "146": "              case FAILED:  /* fall-through */\n",
        "147": "              case NEW:  /* fall-through */\n",
        "157": "   * This method is called by {@link #start} to initiate service startup. The invocation of this\n",
        "158": "   * method should cause a call to {@link #notifyStarted()}, either during this method's run, or\n",
        "159": "   * after it has returned. If startup fails, the invocation should cause a call to\n",
        "163": "   * convenient. It is invoked exactly once on service startup, even when {@link #start} is called\n",
        "164": "   * multiple times.\n",
        "175": "   * convenient. It is invoked exactly once on service shutdown, even when {@link #stop} is called\n",
        "176": "   * multiple times.\n",
        "218": "    stop();\n",
        "219": "    return this;\n",
        "220": "  }\n",
        "221": "\n",
        "222": "  @Deprecated\n",
        "223": "  @Override\n",
        "224": "  public final ListenableFuture<State> stop() {\n",
        "312": "        State state = state();\n",
        "475": "  /**\n",
        "476": "   * A change from one service state to another, plus the result of the change.\n",
        "477": "   */\n"
    }
}