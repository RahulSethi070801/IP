{"id": "4f37c83bb0dc8abc03144b9a03e0e2613666eb01", "code": [{"0": "guava/src/com/google/common/io/ByteSink.java", "added": {"1": ["   *     {@link #openStream} instead. This method is scheduled for removal in Guava 18.0.\n"]}, "removed": {"1": ["   *     {@link #openStream} instead.\n"]}, "added_lines": {"1": [79]}, "removed_lines": {"1": [79]}}, {"1": "guava/src/com/google/common/io/ByteSource.java", "added": {"1": ["import com.google.common.annotations.Beta;\n"], "2": ["   *     instead. This method is scheduled for removal in Guava 18.0.\n"], "3": ["  /**\n", "   * Reads the contents of this byte source using the given {@code processor} to process bytes as\n", "   * they are read. Stops when all bytes have been read or the consumer returns {@code false}.\n", "   * Returns the result produced by the processor.\n", "   *\n", "   * @throws IOException if an I/O error occurs in the process of reading from this source or if\n", "   *     {@code processor} throws an {@code IOException}\n", "   * @since 16.0\n", "   */\n", "  @Beta\n", "  public <T> T read(ByteProcessor<T> processor) throws IOException {\n", "    checkNotNull(processor);\n", "\n", "    Closer closer = Closer.create();\n", "    try {\n", "      InputStream in = closer.register(openStream());\n", "      return ByteStreams.readBytes(in, processor);\n", "    } catch (Throwable e) {\n", "      throw closer.rethrow(e);\n", "    } finally {\n", "      closer.close();\n", "    }\n", "  }\n", "\n"], "4": ["    @Override\n", "    public <T> T read(ByteProcessor<T> processor) throws IOException {\n", "      processor.processBytes(bytes, 0, bytes.length);\n", "      return processor.getResult();\n", "    }\n", "\n"]}, "removed": {"2": ["   *     instead.\n"]}, "added_lines": {"1": [22], "2": [92], "3": [280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "4": [543, 544, 545, 546, 547, 548]}, "removed_lines": {"2": [91]}}, {"2": "guava/src/com/google/common/io/ByteStreams.java", "added": {"1": ["   * @deprecated Use {@link ByteSource#wrap(byte[])} instead. This method is\n", "   *     scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "2": ["   * @deprecated Use {@code ByteSource.wrap(b).slice(off, len)} instead. This\n", "   *     method is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "3": ["   * @deprecated Use {@link ByteSink#write(byte[])} instead. This method is\n", "   *     scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "4": ["   * @deprecated Use {@link ByteSource#copyTo(ByteSink)} instead. This method\n", "   *     is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "5": ["   * @deprecated Use {@link ByteSource#copyTo(OutputStream)} instead. This\n", "   *      method is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "6": ["   * @deprecated Use {@link ByteSink#writeFrom(InputStream)} instead. This\n", "   *     method is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "7": ["   * @deprecated Use {@link ByteSource#read()} instead. This method is\n", "   *     scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "8": ["  /**\n", "   * Returns the length of a supplied input stream, in bytes.\n", "   *\n", "   * @deprecated Use {@link ByteSource#size()} instead. This method is\n", "   *     scheduled for removal in Guava 18.0.\n", "   */\n", "  @Deprecated\n"], "9": ["   * @deprecated Use {@link ByteSource#contentEquals(ByteSource)} instead. This\n", "   *     method is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "10": ["   * @deprecated Use {@link ByteSource#read(ByteProcessor)} instead. This\n", "   *     method is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "11": ["   * @deprecated Use {@link ByteSource#hash(HashFunction)} instead. This method\n", "   *     is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "12": ["   * @deprecated Use {@link ByteSource#slice(int, int)} instead. This method is\n", "   *     scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "13": ["   * @deprecated Use {@link ByteSource#concat(Iterable)} instead. This method\n", "   *     is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "14": ["  /**\n", "   * Varargs form of {@link #join(Iterable)}.\n", "   *\n", "   * @deprecated Use {@link ByteSource#concat(ByteSource[])} instead. This\n", "   *     method is scheduled for removal in Guava 18.0.\n", "   */\n", "  @Deprecated\n"], "15": ["   * @deprecated Convert all {@code InputSupplier<? extends InputStream>}\n", "   *     implementations to extend {@link ByteSource} or provide a method for\n", "   *     viewing the object as a {@code ByteSource}. This method is scheduled\n", "   *     for removal in Guava 18.0.\n", "  @Deprecated\n"], "16": ["   * @deprecated Convert all {@code OutputSupplier<? extends OutputStream>}\n", "   *     implementations to extend {@link ByteSink} or provide a method for\n", "   *     viewing the object as a {@code ByteSink}. This method is scheduled\n", "   *     for removal in Guava 18.0.\n", "  @Deprecated\n"]}, "removed": {"8": ["  /** Returns the length of a supplied input stream, in bytes. */\n"], "14": ["  /** Varargs form of {@link #join(Iterable)}. */\n"]}, "added_lines": {"1": [64, 65, 67], "2": [81, 82, 84], "3": [96, 97, 99], "4": [113, 114, 116], "5": [131, 132, 134], "6": [150, 151, 153], "7": [282, 283, 285], "8": [710, 711, 712, 713, 714, 715, 716], "9": [726, 727, 729], "10": [810, 811, 813], "11": [862, 863, 865], "12": [924, 925, 927], "13": [949, 950, 952], "14": [966, 967, 968, 969, 970, 971, 972], "15": [989, 990, 991, 992, 994], "16": [1019, 1020, 1021, 1022, 1024]}, "removed_lines": {"8": [689], "14": [924]}}, {"3": "guava/src/com/google/common/io/CharSink.java", "added": {"1": ["   *     {@link #openStream} instead. This method is scheduled for removal in Guava 18.0.\n"]}, "removed": {"1": ["   *     {@link #openStream} instead.\n"]}, "added_lines": {"1": [73]}, "removed_lines": {"1": [73]}}, {"4": "guava/src/com/google/common/io/CharSource.java", "added": {"1": ["import com.google.common.annotations.Beta;\n"], "2": ["   *     instead. This method is scheduled for removal in Guava 18.0.\n"], "3": ["  /**\n", "   * Reads lines of text from this source, processing each line as it is read using the given\n", "   * {@link LineProcessor processor}. Stops when all lines have been processed or the processor\n", "   * returns {@code false} and returns the result produced by the processor.\n", "   *\n", "   * <p>Like {@link BufferedReader}, this method breaks lines on any of {@code \\n}, {@code \\r} or\n", "   * {@code \\r\\n}, does not include the line separator in the lines passed to the {@code processor}\n", "   * and does not consider there to be an extra empty line at the end if the content is terminated\n", "   * with a line separator.\n", "   *\n", "   * @throws IOException if an I/O error occurs in the process of reading from this source or if\n", "   *     {@code processor} throws an {@code IOException}\n", "   * @since 16.0\n", "   */\n", "  @Beta\n", "  public <T> T readLines(LineProcessor<T> processor) throws IOException {\n", "    checkNotNull(processor);\n", "\n", "    Closer closer = Closer.create();\n", "    try {\n", "      Reader reader = closer.register(openStream());\n", "      return CharStreams.readLines(reader, processor);\n", "    } catch (Throwable e) {\n", "      throw closer.rethrow(e);\n", "    } finally {\n", "      closer.close();\n", "    }\n", "  }\n", "\n"], "4": ["    @Override\n", "    public <T> T readLines(LineProcessor<T> processor) throws IOException {\n", "      for (String line : lines()) {\n", "        if (!processor.processLine(line)) {\n", "          break;\n", "        }\n", "      }\n", "      return processor.getResult();\n", "    }\n", "\n"]}, "removed": {"2": ["   *     instead.\n"]}, "added_lines": {"1": [21], "2": [88], "3": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246], "4": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413]}, "removed_lines": {"2": [87]}}, {"5": "guava/src/com/google/common/io/CharStreams.java", "added": {"1": ["   * @deprecated Use {@link CharSource#wrap(CharSequence}} instead. This method\n", "   *     is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "2": ["   * @deprecated Use {@link ByteSource#asCharSource(Charset)} instead. This\n", "   *     method is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "3": ["   * @deprecated Use {@link ByteSink#asCharSink(Charset)} instead. This method\n", "   *     is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "4": ["   * @deprecated Use {@link CharSink#write(CharSequence)} instead. This method\n", "   *     is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "5": ["   * @deprecated Use {@link CharSource#copyTo(CharSink) instead. This method is\n", "   *     scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "6": ["   * @deprecated Use {@link CharSource#copyTo(Appendable)} instead. This method\n", "   *     is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "7": ["   * @deprecated Use {@link CharSource#read()} instead. This method is\n", "   *     scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "8": ["   * @deprecated Use {@link CharSource#readFirstLine()} instead. This method is\n", "   *     scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "9": ["   * @deprecated Use {@link CharSource#readLines()} instead, but note that it\n", "   *     returns an {@code ImmutableList}. This method is scheduled for removal\n", "   *     in Guava 18.0.\n", "  @Deprecated\n"], "10": ["   * @deprecated Use {@link CharSource#readLines(LineProcessor)} instead. This\n", "   *     method is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "11": ["   * @deprecated Use {@link CharSource#concat(Iterable)} instead. This method\n", "   *     is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "12": ["  /**\n", "   * Varargs form of {@link #join(Iterable)}.\n", "   *\n", "   * @deprecated Use {@link CharSource#concat(CharSource[])} instead. This\n", "   *     method is scheduled for removal in Guava 18.0.\n", "   */\n", "  @Deprecated\n"], "13": ["   * @deprecated Convert all {@code InputSupplier<? extends Readable>}\n", "   *     implementations to extend {@link CharSource} or provide a method for\n", "   *     viewing the object as a {@code CharSource}. This method is scheduled\n", "   *     for removal in Guava 18.0.\n", "  @Deprecated\n"], "14": ["   * @deprecated Convert all {@code OutputSupplier<? extends Appendable>}\n", "   *     implementations to extend {@link CharSink} or provide a method for\n", "   *     viewing the object as a {@code CharSink}. This method is scheduled\n", "   *     for removal in Guava 18.0.\n", "  @Deprecated\n"]}, "removed": {"12": ["  /** Varargs form of {@link #join(Iterable)}. */\n"]}, "added_lines": {"1": [70, 71, 73], "2": [87, 88, 90], "3": [105, 106, 108], "4": [122, 123, 125], "5": [140, 141, 143], "6": [159, 160, 162], "7": [210, 211, 213], "8": [241, 242, 244], "9": [258, 259, 260, 262], "10": [333, 334, 336], "11": [367, 368, 370], "12": [384, 385, 386, 387, 388, 389, 390], "13": [544, 545, 546, 547, 549], "14": [574, 575, 576, 577, 579]}, "removed_lines": {"12": [350]}}, {"6": "guava/src/com/google/common/io/Files.java", "added": {"1": ["   * @deprecated Use {@link #asByteSource(File)}. This method is scheduled for\n", "   *     removal in Guava 18.0.\n", "  @Deprecated\n"], "2": ["   * @deprecated Use {@link #asByteSink(File)}. This method is scheduled for\n", "   *     removal in Guava 18.0.\n", "  @Deprecated\n"], "3": ["   * @deprecated Use {@link #asByteSink(File, FileWriteMode...)}, passing\n", "   *     {@link FileWriteMode#APPEND} for append. This method is scheduled for\n", "   *     removal in Guava 18.0.\n", "  @Deprecated\n"], "4": ["   * @deprecated Use {@link #asCharSource(File, Charset)}. This method is\n", "   *     scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "5": ["   * @deprecated Use {@link #asCharSink(File, Charset)}. This method is\n", "   *     scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "6": ["   * @deprecated Use {@link #asCharSink(File, Charset, FileWriteMode...)},\n", "   *     passing {@link FileWriteMode#APPEND} for append. This method is\n", "   *     scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "7": ["   * @deprecated Use {@code from.copyTo(Files.asByteSink(to))} after changing\n", "   *     {@code from} to a {@code ByteSource} if necessary. This method is\n", "   *     scheduled to be removed in Guava 18.0.\n", "  @Deprecated\n"], "8": ["   * @deprecated Use {@code Files.asByteSource(from).copyTo(to)} after changing\n", "   *     {@code to} to a {@code ByteSink} if necessary. This method is\n", "   *     scheduled to be removed in Guava 18.0.\n", "  @Deprecated\n"], "9": ["   * @deprecated Use {@code from.copyTo(Files.asCharSink(to, charset))} after\n", "   *     changing {@code from} to a {@code CharSource} if necessary. This\n", "   *     method is scheduled to be removed in Guava 18.0.\n", "  @Deprecated\n"], "10": ["   * @deprecated Use {@code Files.asCharSource(from, charset).copyTo(to)} after\n", "   *     changing {@code to} to a {@code CharSink} if necessary. This method is\n", "   *     scheduled to be removed in Guava 18.0.\n", "  @Deprecated\n"]}, "removed": {}, "added_lines": {"1": [241, 242, 244], "2": [256, 257, 259], "3": [273, 274, 275, 277], "4": [297, 298, 300], "5": [314, 315, 317], "6": [333, 334, 335, 337], "7": [377, 378, 379, 381], "8": [405, 406, 407, 409], "9": [455, 456, 457, 459], "10": [521, 522, 523, 525]}, "removed_lines": {}}, {"7": "guava/src/com/google/common/io/InputSupplier.java", "added": {"1": [" * @deprecated For {@code InputSupplier<? extends InputStream>}, use\n", " *     {@link ByteSource} instead. For {@code InputSupplier<? extends Reader>},\n", " *     use {@link CharSource}. Implementations of {@code InputSupplier} that\n", " *     don't fall into one of those categories do not benefit from any of the\n", " *     methods in {@code common.io} and should use a different interface. This\n", " *     interface is scheduled for removal in June 2015.\n", "@Deprecated\n"]}, "removed": {}, "added_lines": {"1": [26, 27, 28, 29, 30, 31, 33]}, "removed_lines": {}}, {"8": "guava/src/com/google/common/io/OutputSupplier.java", "added": {"1": [" * @deprecated For {@code OutputSupplier<? extends OutputStream>}, use\n", " *     {@link ByteSink} instead. For {@code OutputSupplier<? extends Writer>},\n", " *     use {@link CharSink}. Implementations of {@code OutputSupplier} that\n", " *     don't fall into one of those categories do not benefit from any of the\n", " *     methods in {@code common.io} and should use a different interface. This\n", " *     interface is scheduled for removal in June 2015.\n", "@Deprecated\n"]}, "removed": {}, "added_lines": {"1": [26, 27, 28, 29, 30, 31, 33]}, "removed_lines": {}}, {"9": "guava/src/com/google/common/io/Resources.java", "added": {"1": ["   * @deprecated Use {@link #asByteSource(URL)} instead. This method is\n", "   *     scheduled for removal in Guava 18.0.\n", "  @Deprecated\n"], "2": ["   * @deprecated Use {@link #asCharSource(URL, Charset)} instead. This method\n", "   *     is scheduled for removal in Guava 18.0.\n", "  @Deprecated\n", "   * Returns a {@link CharSource} that reads from the given URL using the given\n", "   * character set.\n"]}, "removed": {"2": ["   * Returns a {@link CharSource} that reads from the given URL using the given character set.\n"]}, "added_lines": {"1": [57, 58, 60], "2": [104, 105, 107, 114, 115]}, "removed_lines": {"2": [108]}}]}
