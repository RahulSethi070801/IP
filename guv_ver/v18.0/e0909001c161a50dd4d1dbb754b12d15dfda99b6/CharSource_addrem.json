{
    "addition": {
        "232": "   * Concatenates multiple {@link CharSource} instances into a single source. Streams returned from\n",
        "233": "   * the source will contain the concatenated data from the streams of the underlying sources.\n",
        "235": "   * <p>Only one underlying stream will be open at a time. Closing the  concatenated stream will\n",
        "236": "   * close the open underlying stream.\n",
        "247": "   * Concatenates multiple {@link CharSource} instances into a single source. Streams returned from\n",
        "248": "   * the source will contain the concatenated data from the streams of the underlying sources.\n",
        "249": "   *\n",
        "250": "   * <p>Only one underlying stream will be open at a time. Closing the concatenated stream will\n",
        "251": "   * close the open underlying stream.\n",
        "253": "   * <p>Note: The input {@code Iterator} will be copied to an {@code ImmutableList} when this\n",
        "254": "   * method is called. This will fail if the iterator is infinite and may cause problems if the\n",
        "255": "   * iterator eagerly fetches data for each source when iterated (rather than producing sources\n",
        "256": "   * that only load data through their streams). Prefer using the {@link #concat(Iterable)}\n",
        "257": "   * overload if possible.\n",
        "269": "   * Concatenates multiple {@link CharSource} instances into a single source. Streams returned from\n",
        "270": "   * the source will contain the concatenated data from the streams of the underlying sources.\n",
        "272": "   * <p>Only one underlying stream will be open at a time. Closing the concatenated stream will\n",
        "273": "   * close the open underlying stream.\n",
        "392": "    private final Iterable<? extends CharSource> sources;\n",
        "395": "      this.sources = checkNotNull(sources);\n"
    },
    "removed": {
        "232": "   * Concatenates multiple {@link CharSource} instances into a single source.\n",
        "233": "   * Streams returned from the source will contain the concatenated data from\n",
        "234": "   * the streams of the underlying sources.\n",
        "236": "   * <p>Only one underlying stream will be open at a time. Closing the\n",
        "237": "   * concatenated stream will close the open underlying stream.\n",
        "241": "   * @throws NullPointerException if any of {@code sources} is {@code null}\n",
        "249": "   * Concatenates multiple {@link CharSource} instances into a single source.\n",
        "250": "   * Streams returned from the source will contain the concatenated data from\n",
        "251": "   * the streams of the underlying sources.\n",
        "253": "   * <p>Only one underlying stream will be open at a time. Closing the\n",
        "254": "   * concatenated stream will close the open underlying stream.\n",
        "266": "   * Concatenates multiple {@link CharSource} instances into a single source.\n",
        "267": "   * Streams returned from the source will contain the concatenated data from\n",
        "268": "   * the streams of the underlying sources.\n",
        "270": "   * <p>Only one underlying stream will be open at a time. Closing the\n",
        "271": "   * concatenated stream will close the open underlying stream.\n",
        "390": "    private final ImmutableList<CharSource> sources;\n",
        "393": "      this.sources = ImmutableList.copyOf(sources);\n"
    }
}