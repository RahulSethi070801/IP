{
    "addition": {
        "319": "   * Concatenates multiple {@link ByteSource} instances into a single source. Streams returned from\n",
        "320": "   * the source will contain the concatenated data from the streams of the underlying sources.\n",
        "322": "   * <p>Only one underlying stream will be open at a time. Closing the concatenated stream will\n",
        "323": "   * close the open underlying stream.\n",
        "334": "   * Concatenates multiple {@link ByteSource} instances into a single source. Streams returned from\n",
        "335": "   * the source will contain the concatenated data from the streams of the underlying sources.\n",
        "336": "   *\n",
        "337": "   * <p>Only one underlying stream will be open at a time. Closing the concatenated stream will\n",
        "338": "   * close the open underlying stream.\n",
        "340": "   * <p>Note: The input {@code Iterator} will be copied to an {@code ImmutableList} when this\n",
        "341": "   * method is called. This will fail if the iterator is infinite and may cause problems if the\n",
        "342": "   * iterator eagerly fetches data for each source when iterated (rather than producing sources\n",
        "343": "   * that only load data through their streams). Prefer using the {@link #concat(Iterable)}\n",
        "344": "   * overload if possible.\n",
        "356": "   * Concatenates multiple {@link ByteSource} instances into a single source. Streams returned from\n",
        "357": "   * the source will contain the concatenated data from the streams of the underlying sources.\n",
        "359": "   * <p>Only one underlying stream will be open at a time. Closing the concatenated stream will\n",
        "360": "   * close the open underlying stream.\n",
        "553": "    private final Iterable<? extends ByteSource> sources;\n",
        "556": "      this.sources = checkNotNull(sources);\n"
    },
    "removed": {
        "319": "   * Concatenates multiple {@link ByteSource} instances into a single source.\n",
        "320": "   * Streams returned from the source will contain the concatenated data from\n",
        "321": "   * the streams of the underlying sources.\n",
        "323": "   * <p>Only one underlying stream will be open at a time. Closing the\n",
        "324": "   * concatenated stream will close the open underlying stream.\n",
        "328": "   * @throws NullPointerException if any of {@code sources} is {@code null}\n",
        "336": "   * Concatenates multiple {@link ByteSource} instances into a single source.\n",
        "337": "   * Streams returned from the source will contain the concatenated data from\n",
        "338": "   * the streams of the underlying sources.\n",
        "340": "   * <p>Only one underlying stream will be open at a time. Closing the\n",
        "341": "   * concatenated stream will close the open underlying stream.\n",
        "353": "   * Concatenates multiple {@link ByteSource} instances into a single source.\n",
        "354": "   * Streams returned from the source will contain the concatenated data from\n",
        "355": "   * the streams of the underlying sources.\n",
        "357": "   * <p>Only one underlying stream will be open at a time. Closing the\n",
        "358": "   * concatenated stream will close the open underlying stream.\n",
        "551": "    private final ImmutableList<ByteSource> sources;\n",
        "554": "      this.sources = ImmutableList.copyOf(sources);\n"
    }
}