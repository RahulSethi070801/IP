{
    "addition": {
        "21": "import com.google.common.base.Converter;\n",
        "326": "  @GwtIncompatible(\"SerializableTester\")\n",
        "327": "  public void testStringConverterSerialization() {\n",
        "328": "    SerializableTester.reserializeAndAssert(Shorts.stringConverter());\n",
        "329": "  }\n",
        "330": "\n",
        "430": "\n",
        "431": "  public void testStringConverter_convert() {\n",
        "432": "    Converter<String, Short> converter = Shorts.stringConverter();\n",
        "433": "    assertEquals((Short) (short) 1, converter.convert(\"1\"));\n",
        "434": "    assertEquals((Short) (short) 0, converter.convert(\"0\"));\n",
        "435": "    assertEquals((Short) (short) (-1), converter.convert(\"-1\"));\n",
        "436": "    assertEquals((Short) (short) 255, converter.convert(\"0xff\"));\n",
        "437": "    assertEquals((Short) (short) 255, converter.convert(\"0xFF\"));\n",
        "438": "    assertEquals((Short) (short) (-255), converter.convert(\"-0xFF\"));\n",
        "439": "    assertEquals((Short) (short) 255, converter.convert(\"#0000FF\"));\n",
        "440": "    assertEquals((Short) (short) 438, converter.convert(\"0666\"));\n",
        "441": "  }\n",
        "442": "\n",
        "443": "  public void testStringConverter_convertError() {\n",
        "444": "    try {\n",
        "445": "      Shorts.stringConverter().convert(\"notanumber\");\n",
        "446": "      fail();\n",
        "447": "    } catch (NumberFormatException expected) {\n",
        "448": "    }\n",
        "449": "  }\n",
        "450": "\n",
        "451": "  public void testStringConverter_nullConversions() {\n",
        "452": "    assertNull(Shorts.stringConverter().convert(null));\n",
        "453": "    assertNull(Shorts.stringConverter().reverse().convert(null));\n",
        "454": "  }\n",
        "455": "\n",
        "456": "  public void testStringConverter_reverse() {\n",
        "457": "    Converter<String, Short> converter = Shorts.stringConverter();\n",
        "458": "    assertEquals(\"1\", converter.reverse().convert((short) 1));\n",
        "459": "    assertEquals(\"0\", converter.reverse().convert((short) 0));\n",
        "460": "    assertEquals(\"-1\", converter.reverse().convert((short) -1));\n",
        "461": "    assertEquals(\"255\", converter.reverse().convert((short) 0xff));\n",
        "462": "    assertEquals(\"255\", converter.reverse().convert((short) 0xFF));\n",
        "463": "    assertEquals(\"-255\", converter.reverse().convert((short) -0xFF));\n",
        "464": "    assertEquals(\"438\", converter.reverse().convert((short) 0666));\n",
        "465": "  }\n",
        "466": "\n",
        "467": "  @GwtIncompatible(\"NullPointerTester\")\n",
        "468": "  public void testStringConverter_nullPointerTester() throws Exception {\n",
        "469": "    NullPointerTester tester = new NullPointerTester();\n",
        "470": "    tester.testAllPublicInstanceMethods(Shorts.stringConverter());\n",
        "471": "  }\n"
    },
    "removed": {}
}