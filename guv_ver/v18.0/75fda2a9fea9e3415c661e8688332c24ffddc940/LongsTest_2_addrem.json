{
    "addition": {
        "24": "import com.google.common.base.Converter;\n",
        "302": "  @GwtIncompatible(\"SerializableTester\")\n",
        "303": "  public void testStringConverterSerialization() {\n",
        "304": "    SerializableTester.reserializeAndAssert(Longs.stringConverter());\n",
        "305": "  }\n",
        "306": "\n",
        "407": "  public void testStringConverter_convert() {\n",
        "408": "    Converter<String, Long> converter = Longs.stringConverter();\n",
        "409": "    assertEquals((Long) 1L, converter.convert(\"1\"));\n",
        "410": "    assertEquals((Long) 0L, converter.convert(\"0\"));\n",
        "411": "    assertEquals((Long) (-1L), converter.convert(\"-1\"));\n",
        "412": "    assertEquals((Long) 255L, converter.convert(\"0xff\"));\n",
        "413": "    assertEquals((Long) 255L, converter.convert(\"0xFF\"));\n",
        "414": "    assertEquals((Long) (-255L), converter.convert(\"-0xFF\"));\n",
        "415": "    assertEquals((Long) 255L, converter.convert(\"#0000FF\"));\n",
        "416": "    assertEquals((Long) 438L, converter.convert(\"0666\"));\n",
        "417": "  }\n",
        "418": "\n",
        "419": "  public void testStringConverter_convertError() {\n",
        "420": "    try {\n",
        "421": "      Longs.stringConverter().convert(\"notanumber\");\n",
        "422": "      fail();\n",
        "423": "    } catch (NumberFormatException expected) {\n",
        "424": "    }\n",
        "425": "  }\n",
        "426": "\n",
        "427": "  public void testStringConverter_nullConversions() {\n",
        "428": "    assertNull(Longs.stringConverter().convert(null));\n",
        "429": "    assertNull(Longs.stringConverter().reverse().convert(null));\n",
        "430": "  }\n",
        "431": "\n",
        "432": "  public void testStringConverter_reverse() {\n",
        "433": "    Converter<String, Long> converter = Longs.stringConverter();\n",
        "434": "    assertEquals(\"1\", converter.reverse().convert(1L));\n",
        "435": "    assertEquals(\"0\", converter.reverse().convert(0L));\n",
        "436": "    assertEquals(\"-1\", converter.reverse().convert(-1L));\n",
        "437": "    assertEquals(\"255\", converter.reverse().convert(0xffL));\n",
        "438": "    assertEquals(\"255\", converter.reverse().convert(0xFFL));\n",
        "439": "    assertEquals(\"-255\", converter.reverse().convert(-0xFFL));\n",
        "440": "    assertEquals(\"438\", converter.reverse().convert(0666L));\n",
        "441": "  }\n",
        "442": "\n",
        "443": "  @GwtIncompatible(\"NullPointerTester\")\n",
        "444": "  public void testStringConverter_nullPointerTester() throws Exception {\n",
        "445": "    NullPointerTester tester = new NullPointerTester();\n",
        "446": "    tester.testAllPublicInstanceMethods(Longs.stringConverter());\n",
        "447": "  }\n",
        "448": "\n"
    },
    "removed": {}
}