{
    "addition": {
        "25": "import com.google.common.base.Converter;\n",
        "843": "  public void testAsConverter_nominal() throws Exception {\n",
        "844": "    ImmutableBiMap<String, Integer> biMap = ImmutableBiMap.of(\n",
        "845": "        \"one\", 1,\n",
        "846": "        \"two\", 2);\n",
        "847": "    Converter<String, Integer> converter = Maps.asConverter(biMap);\n",
        "848": "    for (Entry<String, Integer> entry : biMap.entrySet()) {\n",
        "849": "      assertSame(entry.getValue(), converter.convert(entry.getKey()));\n",
        "850": "    }\n",
        "851": "  }\n",
        "852": "\n",
        "853": "  public void testAsConverter_inverse() throws Exception {\n",
        "854": "    ImmutableBiMap<String, Integer> biMap = ImmutableBiMap.of(\n",
        "855": "        \"one\", 1,\n",
        "856": "        \"two\", 2);\n",
        "857": "    Converter<String, Integer> converter = Maps.asConverter(biMap);\n",
        "858": "    for (Entry<String, Integer> entry : biMap.entrySet()) {\n",
        "859": "      assertSame(entry.getKey(), converter.reverse().convert(entry.getValue()));\n",
        "860": "    }\n",
        "861": "  }\n",
        "862": "\n",
        "863": "  public void testAsConverter_noMapping() throws Exception {\n",
        "864": "    ImmutableBiMap<String, Integer> biMap = ImmutableBiMap.of(\n",
        "865": "        \"one\", 1,\n",
        "866": "        \"two\", 2);\n",
        "867": "    Converter<String, Integer> converter = Maps.asConverter(biMap);\n",
        "868": "    try {\n",
        "869": "      converter.convert(\"three\");\n",
        "870": "      fail();\n",
        "871": "    } catch (IllegalArgumentException expected) {\n",
        "872": "    }\n",
        "873": "  }\n",
        "874": "\n",
        "875": "  public void testAsConverter_nullConversions() throws Exception {\n",
        "876": "    ImmutableBiMap<String, Integer> biMap = ImmutableBiMap.of(\n",
        "877": "        \"one\", 1,\n",
        "878": "        \"two\", 2);\n",
        "879": "    Converter<String, Integer> converter = Maps.asConverter(biMap);\n",
        "880": "    assertNull(converter.convert(null));\n",
        "881": "    assertNull(converter.reverse().convert(null));\n",
        "882": "  }\n",
        "883": "\n",
        "884": "  public void testAsConverter_isAView() throws Exception {\n",
        "885": "    BiMap<String, Integer> biMap = HashBiMap.create();\n",
        "886": "    biMap.put(\"one\", 1);\n",
        "887": "    biMap.put(\"two\", 2);\n",
        "888": "    Converter<String, Integer> converter = Maps.asConverter(biMap);\n",
        "889": "\n",
        "890": "    assertSame(1, converter.convert(\"one\"));\n",
        "891": "    assertSame(2, converter.convert(\"two\"));\n",
        "892": "    try {\n",
        "893": "      converter.convert(\"three\");\n",
        "894": "      fail();\n",
        "895": "    } catch (IllegalArgumentException expected) {\n",
        "896": "    }\n",
        "897": "\n",
        "898": "    biMap.put(\"three\", 3);\n",
        "899": "\n",
        "900": "    assertSame(1, converter.convert(\"one\"));\n",
        "901": "    assertSame(2, converter.convert(\"two\"));\n",
        "902": "    assertSame(3, converter.convert(\"three\"));\n",
        "903": "  }\n",
        "904": "\n",
        "905": "  public void testAsConverter_withNullMapping() throws Exception {\n",
        "906": "    BiMap<String, Integer> biMap = HashBiMap.create();\n",
        "907": "    biMap.put(\"one\", 1);\n",
        "908": "    biMap.put(\"two\", 2);\n",
        "909": "    biMap.put(\"three\", null);\n",
        "910": "    try {\n",
        "911": "      Maps.asConverter(biMap).convert(\"three\");\n",
        "912": "      fail();\n",
        "913": "    } catch (IllegalArgumentException expected) {\n",
        "914": "    }\n",
        "915": "  }\n",
        "916": "\n"
    },
    "removed": {}
}