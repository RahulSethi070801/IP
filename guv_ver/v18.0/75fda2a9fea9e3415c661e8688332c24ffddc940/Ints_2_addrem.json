{
    "addition": {
        "27": "import com.google.common.base.Converter;\n",
        "339": "  private static final class IntConverter\n",
        "340": "      extends Converter<String, Integer> implements Serializable {\n",
        "341": "    static final IntConverter INSTANCE = new IntConverter();\n",
        "342": "\n",
        "343": "    @Override\n",
        "344": "    // TODO(kevinb): remove null boilerplate (convert() will do it\n",
        "345": "    // automatically)\n",
        "346": "    protected Integer doForward(String value) {\n",
        "347": "      return value == null ? null : Integer.decode(value);\n",
        "348": "    }\n",
        "349": "\n",
        "350": "    @Override\n",
        "351": "    protected String doBackward(Integer value) {\n",
        "352": "      // TODO(kevinb): remove null boilerplate (convert() will do it\n",
        "353": "      // automatically)\n",
        "354": "      return value == null ? null : value.toString();\n",
        "355": "    }\n",
        "356": "\n",
        "357": "    @Override\n",
        "358": "    public String toString() {\n",
        "359": "      return \"Ints.stringConverter()\";\n",
        "360": "    }\n",
        "361": "\n",
        "362": "    private Object readResolve() {\n",
        "363": "      return INSTANCE;\n",
        "364": "    }\n",
        "365": "    private static final long serialVersionUID = 1;\n",
        "366": "  }\n",
        "367": "\n",
        "368": "  /**\n",
        "369": "   * Returns a serializable converter object that converts between strings and\n",
        "370": "   * integers using {@link Integer#decode} and {@link Integer#toString()}.\n",
        "371": "   *\n",
        "372": "   * @since 16.0\n",
        "373": "   */\n",
        "374": "  @Beta\n",
        "375": "  public static Converter<String, Integer> stringConverter() {\n",
        "376": "    return IntConverter.INSTANCE;\n",
        "377": "  }\n",
        "378": "\n"
    },
    "removed": {}
}