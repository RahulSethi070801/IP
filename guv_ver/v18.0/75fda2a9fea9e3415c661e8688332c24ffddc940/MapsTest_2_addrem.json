{
    "addition": {
        "28": "import com.google.common.base.Converter;\n",
        "1151": "  public void testAsConverter_nominal() throws Exception {\n",
        "1152": "    ImmutableBiMap<String, Integer> biMap = ImmutableBiMap.of(\n",
        "1153": "        \"one\", 1,\n",
        "1154": "        \"two\", 2);\n",
        "1155": "    Converter<String, Integer> converter = Maps.asConverter(biMap);\n",
        "1156": "    for (Entry<String, Integer> entry : biMap.entrySet()) {\n",
        "1157": "      assertSame(entry.getValue(), converter.convert(entry.getKey()));\n",
        "1158": "    }\n",
        "1159": "  }\n",
        "1160": "\n",
        "1161": "  public void testAsConverter_inverse() throws Exception {\n",
        "1162": "    ImmutableBiMap<String, Integer> biMap = ImmutableBiMap.of(\n",
        "1163": "        \"one\", 1,\n",
        "1164": "        \"two\", 2);\n",
        "1165": "    Converter<String, Integer> converter = Maps.asConverter(biMap);\n",
        "1166": "    for (Entry<String, Integer> entry : biMap.entrySet()) {\n",
        "1167": "      assertSame(entry.getKey(), converter.reverse().convert(entry.getValue()));\n",
        "1168": "    }\n",
        "1169": "  }\n",
        "1170": "\n",
        "1171": "  public void testAsConverter_noMapping() throws Exception {\n",
        "1172": "    ImmutableBiMap<String, Integer> biMap = ImmutableBiMap.of(\n",
        "1173": "        \"one\", 1,\n",
        "1174": "        \"two\", 2);\n",
        "1175": "    Converter<String, Integer> converter = Maps.asConverter(biMap);\n",
        "1176": "    try {\n",
        "1177": "      converter.convert(\"three\");\n",
        "1178": "      fail();\n",
        "1179": "    } catch (IllegalArgumentException expected) {\n",
        "1180": "    }\n",
        "1181": "  }\n",
        "1182": "\n",
        "1183": "  public void testAsConverter_nullConversions() throws Exception {\n",
        "1184": "    ImmutableBiMap<String, Integer> biMap = ImmutableBiMap.of(\n",
        "1185": "        \"one\", 1,\n",
        "1186": "        \"two\", 2);\n",
        "1187": "    Converter<String, Integer> converter = Maps.asConverter(biMap);\n",
        "1188": "    assertNull(converter.convert(null));\n",
        "1189": "    assertNull(converter.reverse().convert(null));\n",
        "1190": "  }\n",
        "1191": "\n",
        "1192": "  public void testAsConverter_isAView() throws Exception {\n",
        "1193": "    BiMap<String, Integer> biMap = HashBiMap.create();\n",
        "1194": "    biMap.put(\"one\", 1);\n",
        "1195": "    biMap.put(\"two\", 2);\n",
        "1196": "    Converter<String, Integer> converter = Maps.asConverter(biMap);\n",
        "1197": "\n",
        "1198": "    assertSame(1, converter.convert(\"one\"));\n",
        "1199": "    assertSame(2, converter.convert(\"two\"));\n",
        "1200": "    try {\n",
        "1201": "      converter.convert(\"three\");\n",
        "1202": "      fail();\n",
        "1203": "    } catch (IllegalArgumentException expected) {\n",
        "1204": "    }\n",
        "1205": "\n",
        "1206": "    biMap.put(\"three\", 3);\n",
        "1207": "\n",
        "1208": "    assertSame(1, converter.convert(\"one\"));\n",
        "1209": "    assertSame(2, converter.convert(\"two\"));\n",
        "1210": "    assertSame(3, converter.convert(\"three\"));\n",
        "1211": "  }\n",
        "1212": "\n",
        "1213": "  public void testAsConverter_withNullMapping() throws Exception {\n",
        "1214": "    BiMap<String, Integer> biMap = HashBiMap.create();\n",
        "1215": "    biMap.put(\"one\", 1);\n",
        "1216": "    biMap.put(\"two\", 2);\n",
        "1217": "    biMap.put(\"three\", null);\n",
        "1218": "    try {\n",
        "1219": "      Maps.asConverter(biMap).convert(\"three\");\n",
        "1220": "      fail();\n",
        "1221": "    } catch (IllegalArgumentException expected) {\n",
        "1222": "    }\n",
        "1223": "  }\n",
        "1224": "\n"
    },
    "removed": {}
}