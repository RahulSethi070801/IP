{
    "addition": {
        "29": "import com.google.common.base.Converter;\n",
        "272": "  private static final class DoubleConverter\n",
        "273": "      extends Converter<String, Double> implements Serializable {\n",
        "274": "    static final DoubleConverter INSTANCE = new DoubleConverter();\n",
        "275": "\n",
        "276": "    @Override\n",
        "277": "    protected Double doForward(String value) {\n",
        "278": "      // TODO(kevinb): remove null boilerplate (convert() will do it\n",
        "279": "      // automatically)\n",
        "280": "      return value == null ? null : Double.valueOf(value);\n",
        "281": "    }\n",
        "282": "\n",
        "283": "    @Override\n",
        "284": "    protected String doBackward(Double value) {\n",
        "285": "      // TODO(kevinb): remove null boilerplate (convert() will do it\n",
        "286": "      // automatically)\n",
        "287": "      return value == null ? null : value.toString();\n",
        "288": "    }\n",
        "289": "\n",
        "290": "    @Override\n",
        "291": "    public String toString() {\n",
        "292": "      return \"Doubles.stringConverter()\";\n",
        "293": "    }\n",
        "294": "\n",
        "295": "    private Object readResolve() {\n",
        "296": "      return INSTANCE;\n",
        "297": "    }\n",
        "298": "    private static final long serialVersionUID = 1;\n",
        "299": "  }\n",
        "300": "\n",
        "301": "  /**\n",
        "302": "   * Returns a serializable converter object that converts between strings and\n",
        "303": "   * doubles using {@link Double#valueOf} and {@link Double#toString()}.\n",
        "304": "   *\n",
        "305": "   * @since 16.0\n",
        "306": "   */\n",
        "307": "  @Beta\n",
        "308": "  public static Converter<String, Double> stringConverter() {\n",
        "309": "    return DoubleConverter.INSTANCE;\n",
        "310": "  }\n",
        "311": "\n"
    },
    "removed": {}
}