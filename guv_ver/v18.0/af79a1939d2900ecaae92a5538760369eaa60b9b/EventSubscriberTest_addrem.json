{
    "addition": {
        "27": " * Test case for {@link EventSubscriber}.\n",
        "31": "public class EventSubscriberTest extends TestCase {\n",
        "53": "    EventSubscriber subscriber = new EventSubscriber(this, method);\n",
        "55": "    subscriber.handleEvent(FIXTURE_ARGUMENT);\n",
        "57": "    assertTrue(\"Subscriber must call provided method.\", methodCalled);\n",
        "58": "    assertTrue(\"Subscriber argument must be *exactly* the provided object.\",\n",
        "64": "    EventSubscriber subscriber = new EventSubscriber(this, method);\n",
        "67": "      subscriber.handleEvent(new Object());\n",
        "68": "      fail(\"Subscribers whose methods throw must throw InvocationTargetException\");\n",
        "77": "    EventSubscriber subscriber = new EventSubscriber(this, method);\n",
        "80": "      subscriber.handleEvent(new Object());\n",
        "81": "      fail(\"Subscribers whose methods throw Errors must rethrow them\");\n",
        "92": "            new EventSubscriber(\"foo\", charAt), new EventSubscriber(\"foo\", charAt))\n",
        "93": "        .addEqualityGroup(new EventSubscriber(\"bar\", charAt))\n",
        "94": "        .addEqualityGroup(new EventSubscriber(\"foo\", concat))\n",
        "115": "          \"Someone changed EventSubscriberTest#recordingMethod's visibility, \" +\n",
        "138": "          \"Someone changed EventSubscriberTest#exceptionThrowingMethod's \" +\n",
        "161": "          \"Someone changed EventSubscriberTest#errorThrowingMethod's \" +\n",
        "169": "   * {@link #methodCalled}.  This method is called reflectively by EventSubscriber\n"
    },
    "removed": {
        "27": " * Test case for {@link EventHandler}.\n",
        "31": "public class EventHandlerTest extends TestCase {\n",
        "53": "    EventHandler handler = new EventHandler(this, method);\n",
        "55": "    handler.handleEvent(FIXTURE_ARGUMENT);\n",
        "57": "    assertTrue(\"Handler must call provided method.\", methodCalled);\n",
        "58": "    assertTrue(\"Handler argument must be *exactly* the provided object.\",\n",
        "64": "    EventHandler handler = new EventHandler(this, method);\n",
        "67": "      handler.handleEvent(new Object());\n",
        "68": "      fail(\"Handlers whose methods throw must throw InvocationTargetException\");\n",
        "77": "    EventHandler handler = new EventHandler(this, method);\n",
        "80": "      handler.handleEvent(new Object());\n",
        "81": "      fail(\"Handlers whose methods throw Errors must rethrow them\");\n",
        "92": "            new EventHandler(\"foo\", charAt), new EventHandler(\"foo\", charAt))\n",
        "93": "        .addEqualityGroup(new EventHandler(\"bar\", charAt))\n",
        "94": "        .addEqualityGroup(new EventHandler(\"foo\", concat))\n",
        "115": "          \"Someone changed EventHandlerTest#recordingMethod's visibility, \" +\n",
        "138": "          \"Someone changed EventHandlerTest#exceptionThrowingMethod's \" +\n",
        "161": "          \"Someone changed EventHandlerTest#errorThrowingMethod's \" +\n",
        "169": "   * {@link #methodCalled}.  This method is called reflectively by EventHandler\n"
    }
}