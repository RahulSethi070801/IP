{"id": "f2204c8fe19b973fc26d7e4ed2a147c08a538410", "code": [{"0": "guava-tests/test/com/google/common/util/concurrent/StripedTest.java", "added": {"1": ["\n", "  public void testMaxSize() {\n", "    for (Striped<?> striped : ImmutableList.of(\n", "        Striped.lazyWeakLock(Integer.MAX_VALUE),\n", "        Striped.lazyWeakSemaphore(Integer.MAX_VALUE, Integer.MAX_VALUE),\n", "        Striped.lazyWeakReadWriteLock(Integer.MAX_VALUE))) {\n", "      for (int i = 0; i < 3; i++) {\n", "        // doesn't throw exception\n", "        striped.get(new Integer(Integer.MAX_VALUE - i));\n", "      }\n", "    }\n", "  }\n"]}, "removed": {}, "added_lines": {"1": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176]}, "removed_lines": {}}, {"1": "guava/src/com/google/common/util/concurrent/Striped.java", "added": {"1": ["   * Creates a {@code Striped<Lock>} with eagerly initialized, strongly referenced locks.\n", "   * Every lock is reentrant.\n"], "2": ["   * Creates a {@code Striped<Lock>} with lazily initialized, weakly referenced locks.\n", "   * Every lock is reentrant.\n"], "3": ["   * with the specified number of permits.\n"], "4": ["   * with the specified number of permits.\n"], "5": ["   * read-write locks. Every lock is reentrant.\n"], "6": ["   * read-write locks. Every lock is reentrant.\n"], "7": ["      if (size != Integer.MAX_VALUE) {\n", "        Preconditions.checkElementIndex(index, size());\n", "      } // else no check necessary, all index values are valid\n"]}, "removed": {"1": ["   * Creates a {@code Striped<Lock>} with eagerly initialized, strongly referenced locks, with the\n", "   * specified fairness. Every lock is reentrant.\n"], "2": ["   * Creates a {@code Striped<Lock>} with lazily initialized, weakly referenced locks, with the\n", "   * specified fairness. Every lock is reentrant.\n"], "3": ["   * with the specified number of permits and fairness.\n"], "4": ["   * with the specified number of permits and fairness.\n"], "5": ["   * read-write locks, with the specified fairness. Every lock is reentrant.\n"], "6": ["   * read-write locks, with the specified fairness. Every lock is reentrant.\n"], "7": ["      Preconditions.checkElementIndex(index, size());\n"]}, "added_lines": {"1": [168, 169], "2": [183, 184], "3": [199], "4": [215], "5": [231], "6": [242], "7": [324, 325, 326]}, "removed_lines": {"1": [168, 169], "2": [183, 184], "3": [199], "4": [215], "5": [231], "6": [242], "7": [324]}}]}
