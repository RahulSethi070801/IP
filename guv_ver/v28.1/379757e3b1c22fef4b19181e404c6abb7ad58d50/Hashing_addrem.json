{
    "addition": {
        "53": "   * process in any way, for example being sent over RPC, or saved to disk. For a general-purpose,\n",
        "54": "   * non-cryptographic hash function that will never change behavior, we suggest {@link\n",
        "55": "   * #murmur3_128}.\n",
        "176": "   * Returns a hash function implementing the MD5 hash algorithm (128 hash bits).\n",
        "178": "   * @deprecated If you must interoperate with a system that requires MD5, then use this method,\n",
        "179": "   *     despite its deprecation. But if you can choose your hash function, avoid MD5, which is\n",
        "180": "   *     neither fast nor secure. As of January 2017, we suggest:\n",
        "181": "   *     <ul>\n",
        "182": "   *       <li>For security:\n",
        "183": "   *           {@link Hashing#sha256} or a higher-level API.\n",
        "184": "   *       <li>For speed: {@link Hashing#goodFastHash}, though see its docs for caveats.\n",
        "185": "   *     </ul>\n",
        "187": "  @Deprecated\n",
        "197": "   * Returns a hash function implementing the SHA-1 algorithm (160 hash bits).\n",
        "199": "   * @deprecated If you must interoperate with a system that requires SHA-1, then use this method,\n",
        "200": "   *     despite its deprecation. But if you can choose your hash function, avoid SHA-1, which is\n",
        "201": "   *     neither fast nor secure. As of January 2017, we suggest:\n",
        "202": "   *     <ul>\n",
        "203": "   *       <li>For security:\n",
        "204": "   *           {@link Hashing#sha256} or a higher-level API.\n",
        "205": "   *       <li>For speed: {@link Hashing#goodFastHash}, though see its docs for caveats.\n",
        "206": "   *     </ul>\n",
        "208": "  @Deprecated\n",
        "217": "  /** Returns a hash function implementing the SHA-256 algorithm (256 hash bits). */\n",
        "228": "   * Returns a hash function implementing the SHA-384 algorithm (384 hash bits).\n",
        "241": "  /** Returns a hash function implementing the SHA-512 algorithm (512 hash bits). */\n",
        "367": "   * <p>This function is best understood as a <a\n",
        "368": "   * href=\"https://en.wikipedia.org/wiki/Checksum\">checksum</a> rather than a true <a\n",
        "369": "   * href=\"https://en.wikipedia.org/wiki/Hash_function\">hash function</a>.\n",
        "370": "   *\n",
        "382": "   * Returns a hash function implementing the CRC-32 checksum algorithm (32 hash bits).\n",
        "383": "   *\n",
        "384": "   * <p>To get the {@code long} value equivalent to {@link Checksum#getValue()} for a {@code\n",
        "385": "   * HashCode} produced by this function, use {@link HashCode#padToLong()}.\n",
        "387": "   * <p>This function is best understood as a <a\n",
        "388": "   * href=\"https://en.wikipedia.org/wiki/Checksum\">checksum</a> rather than a true <a\n",
        "389": "   * href=\"https://en.wikipedia.org/wiki/Hash_function\">hash function</a>.\n",
        "402": "   * Returns a hash function implementing the Adler-32 checksum algorithm (32 hash bits).\n",
        "404": "   * <p>To get the {@code long} value equivalent to {@link Checksum#getValue()} for a {@code\n",
        "405": "   * HashCode} produced by this function, use {@link HashCode#padToLong()}.\n",
        "406": "   *\n",
        "407": "   * <p>This function is best understood as a <a\n",
        "408": "   * href=\"https://en.wikipedia.org/wiki/Checksum\">checksum</a> rather than a true <a\n",
        "409": "   * href=\"https://en.wikipedia.org/wiki/Hash_function\">hash function</a>.\n",
        "460": "   * <p>This function is best understood as a <a\n",
        "461": "   * href=\"https://en.wikipedia.org/wiki/Fingerprint_(computing)\">fingerprint</a> rather than a true\n",
        "462": "   * <a href=\"https://en.wikipedia.org/wiki/Hash_function\">hash function</a>.\n",
        "463": "   *\n"
    },
    "removed": {
        "23": "import java.security.MessageDigest;\n",
        "54": "   * process in any way, for example being sent over RPC, or saved to disk.\n",
        "175": "   * Returns a hash function implementing the MD5 hash algorithm (128 hash bits) by delegating to\n",
        "176": "   * the MD5 {@link MessageDigest}.\n",
        "178": "   * <p><b>Warning:</b> MD5 is not cryptographically secure or collision-resistant and is not\n",
        "179": "   * recommended for use in new code. It should be used for legacy compatibility reasons only.\n",
        "180": "   * Please consider using a hash function in the SHA-2 family of functions (e.g., SHA-256).\n",
        "191": "   * Returns a hash function implementing the SHA-1 algorithm (160 hash bits) by delegating to the\n",
        "192": "   * SHA-1 {@link MessageDigest}.\n",
        "194": "   * <p><b>Warning:</b> SHA1 is not cryptographically secure and is not recommended for use in new\n",
        "195": "   * code. It should be used for legacy compatibility reasons only. Please consider using a hash\n",
        "196": "   * function in the SHA-2 family of functions (e.g., SHA-256).\n",
        "206": "  /**\n",
        "207": "   * Returns a hash function implementing the SHA-256 algorithm (256 hash bits) by delegating to the\n",
        "208": "   * SHA-256 {@link MessageDigest}.\n",
        "209": "   */\n",
        "220": "   * Returns a hash function implementing the SHA-384 algorithm (384 hash bits) by delegating to the\n",
        "221": "   * SHA-384 {@link MessageDigest}.\n",
        "234": "  /**\n",
        "235": "   * Returns a hash function implementing the SHA-512 algorithm (512 hash bits) by delegating to the\n",
        "236": "   * SHA-512 {@link MessageDigest}.\n",
        "237": "   */\n",
        "374": "   * Returns a hash function implementing the CRC-32 checksum algorithm (32 hash bits) by delegating\n",
        "375": "   * to the {@link CRC32} {@link Checksum}.\n",
        "377": "   * <p>To get the {@code long} value equivalent to {@link Checksum#getValue()} for a\n",
        "378": "   * {@code HashCode} produced by this function, use {@link HashCode#padToLong()}.\n",
        "391": "   * Returns a hash function implementing the Adler-32 checksum algorithm (32 hash bits) by\n",
        "392": "   * delegating to the {@link Adler32} {@link Checksum}.\n",
        "394": "   * <p>To get the {@code long} value equivalent to {@link Checksum#getValue()} for a\n",
        "395": "   * {@code HashCode} produced by this function, use {@link HashCode#padToLong()}.\n"
    }
}