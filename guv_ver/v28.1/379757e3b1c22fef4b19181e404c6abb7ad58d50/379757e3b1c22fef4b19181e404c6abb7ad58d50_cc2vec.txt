{"id": "379757e3b1c22fef4b19181e404c6abb7ad58d50", "code": [{"0": "guava/src/com/google/common/hash/Hashing.java", "added": {"2": ["   * process in any way, for example being sent over RPC, or saved to disk. For a general-purpose,\n", "   * non-cryptographic hash function that will never change behavior, we suggest {@link\n", "   * #murmur3_128}.\n"], "3": ["   * Returns a hash function implementing the MD5 hash algorithm (128 hash bits).\n", "   * @deprecated If you must interoperate with a system that requires MD5, then use this method,\n", "   *     despite its deprecation. But if you can choose your hash function, avoid MD5, which is\n", "   *     neither fast nor secure. As of January 2017, we suggest:\n", "   *     <ul>\n", "   *       <li>For security:\n", "   *           {@link Hashing#sha256} or a higher-level API.\n", "   *       <li>For speed: {@link Hashing#goodFastHash}, though see its docs for caveats.\n", "   *     </ul>\n", "  @Deprecated\n"], "4": ["   * Returns a hash function implementing the SHA-1 algorithm (160 hash bits).\n", "   * @deprecated If you must interoperate with a system that requires SHA-1, then use this method,\n", "   *     despite its deprecation. But if you can choose your hash function, avoid SHA-1, which is\n", "   *     neither fast nor secure. As of January 2017, we suggest:\n", "   *     <ul>\n", "   *       <li>For security:\n", "   *           {@link Hashing#sha256} or a higher-level API.\n", "   *       <li>For speed: {@link Hashing#goodFastHash}, though see its docs for caveats.\n", "   *     </ul>\n", "  @Deprecated\n"], "5": ["  /** Returns a hash function implementing the SHA-256 algorithm (256 hash bits). */\n"], "6": ["   * Returns a hash function implementing the SHA-384 algorithm (384 hash bits).\n"], "7": ["  /** Returns a hash function implementing the SHA-512 algorithm (512 hash bits). */\n"], "8": ["   * <p>This function is best understood as a <a\n", "   * href=\"https://en.wikipedia.org/wiki/Checksum\">checksum</a> rather than a true <a\n", "   * href=\"https://en.wikipedia.org/wiki/Hash_function\">hash function</a>.\n", "   *\n"], "9": ["   * Returns a hash function implementing the CRC-32 checksum algorithm (32 hash bits).\n", "   *\n", "   * <p>To get the {@code long} value equivalent to {@link Checksum#getValue()} for a {@code\n", "   * HashCode} produced by this function, use {@link HashCode#padToLong()}.\n", "   * <p>This function is best understood as a <a\n", "   * href=\"https://en.wikipedia.org/wiki/Checksum\">checksum</a> rather than a true <a\n", "   * href=\"https://en.wikipedia.org/wiki/Hash_function\">hash function</a>.\n"], "10": ["   * Returns a hash function implementing the Adler-32 checksum algorithm (32 hash bits).\n", "   * <p>To get the {@code long} value equivalent to {@link Checksum#getValue()} for a {@code\n", "   * HashCode} produced by this function, use {@link HashCode#padToLong()}.\n", "   *\n", "   * <p>This function is best understood as a <a\n", "   * href=\"https://en.wikipedia.org/wiki/Checksum\">checksum</a> rather than a true <a\n", "   * href=\"https://en.wikipedia.org/wiki/Hash_function\">hash function</a>.\n"], "11": ["   * <p>This function is best understood as a <a\n", "   * href=\"https://en.wikipedia.org/wiki/Fingerprint_(computing)\">fingerprint</a> rather than a true\n", "   * <a href=\"https://en.wikipedia.org/wiki/Hash_function\">hash function</a>.\n", "   *\n"]}, "removed": {"1": ["import java.security.MessageDigest;\n"], "2": ["   * process in any way, for example being sent over RPC, or saved to disk.\n"], "3": ["   * Returns a hash function implementing the MD5 hash algorithm (128 hash bits) by delegating to\n", "   * the MD5 {@link MessageDigest}.\n", "   * <p><b>Warning:</b> MD5 is not cryptographically secure or collision-resistant and is not\n", "   * recommended for use in new code. It should be used for legacy compatibility reasons only.\n", "   * Please consider using a hash function in the SHA-2 family of functions (e.g., SHA-256).\n"], "4": ["   * Returns a hash function implementing the SHA-1 algorithm (160 hash bits) by delegating to the\n", "   * SHA-1 {@link MessageDigest}.\n", "   * <p><b>Warning:</b> SHA1 is not cryptographically secure and is not recommended for use in new\n", "   * code. It should be used for legacy compatibility reasons only. Please consider using a hash\n", "   * function in the SHA-2 family of functions (e.g., SHA-256).\n"], "5": ["  /**\n", "   * Returns a hash function implementing the SHA-256 algorithm (256 hash bits) by delegating to the\n", "   * SHA-256 {@link MessageDigest}.\n", "   */\n"], "6": ["   * Returns a hash function implementing the SHA-384 algorithm (384 hash bits) by delegating to the\n", "   * SHA-384 {@link MessageDigest}.\n"], "7": ["  /**\n", "   * Returns a hash function implementing the SHA-512 algorithm (512 hash bits) by delegating to the\n", "   * SHA-512 {@link MessageDigest}.\n", "   */\n"], "9": ["   * Returns a hash function implementing the CRC-32 checksum algorithm (32 hash bits) by delegating\n", "   * to the {@link CRC32} {@link Checksum}.\n", "   * <p>To get the {@code long} value equivalent to {@link Checksum#getValue()} for a\n", "   * {@code HashCode} produced by this function, use {@link HashCode#padToLong()}.\n"], "10": ["   * Returns a hash function implementing the Adler-32 checksum algorithm (32 hash bits) by\n", "   * delegating to the {@link Adler32} {@link Checksum}.\n", "   * <p>To get the {@code long} value equivalent to {@link Checksum#getValue()} for a\n", "   * {@code HashCode} produced by this function, use {@link HashCode#padToLong()}.\n"]}, "added_lines": {"2": [53, 54, 55], "3": [176, 178, 179, 180, 181, 182, 183, 184, 185, 187], "4": [197, 199, 200, 201, 202, 203, 204, 205, 206, 208], "5": [217], "6": [228], "7": [241], "8": [367, 368, 369, 370], "9": [382, 383, 384, 385, 387, 388, 389], "10": [402, 404, 405, 406, 407, 408, 409], "11": [460, 461, 462, 463]}, "removed_lines": {"1": [23], "2": [54], "3": [175, 176, 178, 179, 180], "4": [191, 192, 194, 195, 196], "5": [206, 207, 208, 209], "6": [220, 221], "7": [234, 235, 236, 237], "9": [374, 375, 377, 378], "10": [391, 392, 394, 395]}}]}
