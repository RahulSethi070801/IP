[{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_1.txt","newdoc":" skip last line if it's empty\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfuncnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_1.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[544,531,532,533,534,536,537,538,540,541,543],"dellines":[],"addcode":["    private Iterator<String> linesIterator() {\n","      return new AbstractIterator<String>() {\n","        Iterator<String> lines = LINE_SPLITTER.split(seq).iterator();\n","\n","        protected String computeNext() {\n","          if (lines.hasNext()) {\n","            String next = lines.next();\n","            if (lines.hasNext() || !next.isEmpty()) {\n","              return next;\n","          }\n","          return endOfData();\n"],"delcode":[],"methodSig":"private Iterator<String> linesIterator()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_1.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_1.txt","newdoc":" it doesn't matter what processBytes returns here\n","newJdoc":"","olddoc":" some processors won't return a useful result\n","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[299],"dellines":[299],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source or if\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source or if\n"],"methodSig":"public T read(ByteProcessor<T> processor) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_2.txt","newdoc":" skip last line if it's empty\n skip last line if it's empty\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfuncnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_2.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[544,531,532,533,534,536,537,538,540,541,543],"dellines":[],"addcode":["    private Iterator<String> linesIterator() {\n","      return new AbstractIterator<String>() {\n","        Iterator<String> lines = LINE_SPLITTER.split(seq).iterator();\n","\n","        protected String computeNext() {\n","          if (lines.hasNext()) {\n","            String next = lines.next();\n","            if (lines.hasNext() || !next.isEmpty()) {\n","              return next;\n","          }\n","          return endOfData();\n"],"delcode":[],"methodSig":"private Iterator<String> linesIterator()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_2.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_2.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_2.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[269],"dellines":[227],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source\n"],"methodSig":"public String read() throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_3.txt","newdoc":" skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfuncnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_3.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[544,531,532,533,534,536,537,538,540,541,543],"dellines":[],"addcode":["    private Iterator<String> linesIterator() {\n","      return new AbstractIterator<String>() {\n","        Iterator<String> lines = LINE_SPLITTER.split(seq).iterator();\n","\n","        protected String computeNext() {\n","          if (lines.hasNext()) {\n","            String next = lines.next();\n","            if (lines.hasNext() || !next.isEmpty()) {\n","              return next;\n","          }\n","          return endOfData();\n"],"delcode":[],"methodSig":"private Iterator<String> linesIterator()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_3.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_3.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_3.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_3.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[280],"dellines":[280],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source\n"],"methodSig":"public byte[] read() throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_4.txt","newdoc":" skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfuncnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_4.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[544,531,532,533,534,536,537,538,540,541,543],"dellines":[],"addcode":["    private Iterator<String> linesIterator() {\n","      return new AbstractIterator<String>() {\n","        Iterator<String> lines = LINE_SPLITTER.split(seq).iterator();\n","\n","        protected String computeNext() {\n","          if (lines.hasNext()) {\n","            String next = lines.next();\n","            if (lines.hasNext() || !next.isEmpty()) {\n","              return next;\n","          }\n","          return endOfData();\n"],"delcode":[],"methodSig":"private Iterator<String> linesIterator()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_4.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_4.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_4.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_4.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[309,310,311,313],"dellines":[267,268,269,271],"addcode":["   * <p>Like {@link BufferedReader#readLine}, this method considers a line to be a sequence of text\n","   * that is terminated by (but does not include) one of {@code \\r\\n}, {@code \\r} or {@code \\n}. If\n","   * the source's content does not end in a line termination sequence, it is treated as if it does.\n","   * @throws IOException if an I/O error occurs while reading from this source\n"],"delcode":["   * <p>Like {@link BufferedReader}, this method breaks lines on any of {@code \\n}, {@code \\r} or\n","   * {@code \\r\\n}, does not include the line separator in the returned lines and does not consider\n","   * there to be an extra empty line at the end if the content is terminated with a line separator.\n","   * @throws IOException if an I/O error occurs in the process of reading from this source\n"],"methodSig":"public ImmutableList<String> readLines() throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_5.txt","newdoc":" skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfuncnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_5.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[544,531,532,533,534,536,537,538,540,541,543],"dellines":[],"addcode":["    private Iterator<String> linesIterator() {\n","      return new AbstractIterator<String>() {\n","        Iterator<String> lines = LINE_SPLITTER.split(seq).iterator();\n","\n","        protected String computeNext() {\n","          if (lines.hasNext()) {\n","            String next = lines.next();\n","            if (lines.hasNext() || !next.isEmpty()) {\n","              return next;\n","          }\n","          return endOfData();\n"],"delcode":[],"methodSig":"private Iterator<String> linesIterator()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_5.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_5.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_5.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_5.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[322],"dellines":[322],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source\n"],"methodSig":"public HashCode hash(HashFunction hashFunction) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_6.txt","newdoc":" skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfuncnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_6.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[544,531,532,533,534,536,537,538,540,541,543],"dellines":[],"addcode":["    private Iterator<String> linesIterator() {\n","      return new AbstractIterator<String>() {\n","        Iterator<String> lines = LINE_SPLITTER.split(seq).iterator();\n","\n","        protected String computeNext() {\n","          if (lines.hasNext()) {\n","            String next = lines.next();\n","            if (lines.hasNext() || !next.isEmpty()) {\n","              return next;\n","          }\n","          return endOfData();\n"],"delcode":[],"methodSig":"private Iterator<String> linesIterator()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_6.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_6.txt","newdoc":"","newJdoc":"","olddoc":" skip may not be supported... at any rate, try reading\n","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_6.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[189],"dellines":[189],"addcode":["   * @throws IOException if an I/O error occurs while reading the size of this source\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading the size of this source\n"],"methodSig":"public long size() throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_7.txt","newdoc":" skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfuncnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_7.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[544,531,532,533,534,536,537,538,540,541,543],"dellines":[],"addcode":["    private Iterator<String> linesIterator() {\n","      return new AbstractIterator<String>() {\n","        Iterator<String> lines = LINE_SPLITTER.split(seq).iterator();\n","\n","        protected String computeNext() {\n","          if (lines.hasNext()) {\n","            String next = lines.next();\n","            if (lines.hasNext() || !next.isEmpty()) {\n","              return next;\n","          }\n","          return endOfData();\n"],"delcode":[],"methodSig":"private Iterator<String> linesIterator()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_7.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_7.txt","newdoc":" https://code.google.com/p/guava-libraries/issues/detail?id=1330\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_7.txt","olddoc":" https://code.google.com/p/guava-libraries/issues/detail?id=1330\n","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_7.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSink","pathinproj":"guava/src/com/google/common/io/CharSink.java","addlines":[88],"dellines":[88],"addcode":["   * @throws IOException if an I/O error while writing to this sink\n"],"delcode":["   * @throws IOException if an I/O error in the process of writing to this sink\n"],"methodSig":"public void write(CharSequence charSequence) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_8.txt","newdoc":" skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfuncnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_8.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[544,531,532,533,534,536,537,538,540,541,543],"dellines":[],"addcode":["    private Iterator<String> linesIterator() {\n","      return new AbstractIterator<String>() {\n","        Iterator<String> lines = LINE_SPLITTER.split(seq).iterator();\n","\n","        protected String computeNext() {\n","          if (lines.hasNext()) {\n","            String next = lines.next();\n","            if (lines.hasNext() || !next.isEmpty()) {\n","              return next;\n","          }\n","          return endOfData();\n"],"delcode":[],"methodSig":"private Iterator<String> linesIterator()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_8.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_8.txt","newdoc":" https://code.google.com/p/guava-libraries/issues/detail?id=1330\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_8.txt","olddoc":" https://code.google.com/p/guava-libraries/issues/detail?id=1330\n","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_8.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSink","pathinproj":"guava/src/com/google/common/io/ByteSink.java","addlines":[95],"dellines":[95],"addcode":["   * @throws IOException if an I/O occurs while writing to this sink\n"],"delcode":["   * @throws IOException if an I/O occurs in the process of writing to this sink\n"],"methodSig":"public void write(byte[] bytes) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_9.txt","newdoc":" skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfuncnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_9.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[544,531,532,533,534,536,537,538,540,541,543],"dellines":[],"addcode":["    private Iterator<String> linesIterator() {\n","      return new AbstractIterator<String>() {\n","        Iterator<String> lines = LINE_SPLITTER.split(seq).iterator();\n","\n","        protected String computeNext() {\n","          if (lines.hasNext()) {\n","            String next = lines.next();\n","            if (lines.hasNext() || !next.isEmpty()) {\n","              return next;\n","          }\n","          return endOfData();\n"],"delcode":[],"methodSig":"private Iterator<String> linesIterator()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_9.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_9.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_9.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[236,237],"dellines":[236,237],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source or writing to\n","   *     {@code output}\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source or\n","   *     writing to {@code output}\n"],"methodSig":"public long copyTo(OutputStream output) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_10.txt","newdoc":" skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfuncnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_10.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[544,531,532,533,534,536,537,538,540,541,543],"dellines":[],"addcode":["    private Iterator<String> linesIterator() {\n","      return new AbstractIterator<String>() {\n","        Iterator<String> lines = LINE_SPLITTER.split(seq).iterator();\n","\n","        protected String computeNext() {\n","          if (lines.hasNext()) {\n","            String next = lines.next();\n","            if (lines.hasNext() || !next.isEmpty()) {\n","              return next;\n","          }\n","          return endOfData();\n"],"delcode":[],"methodSig":"private Iterator<String> linesIterator()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_10.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_10.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_10.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_10.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[247,248],"dellines":[205,206],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source or writing to\n","   *     {@code sink}\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source or\n","   *     writing to {@code sink}\n"],"methodSig":"public long copyTo(CharSink sink) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_11.txt","newdoc":" skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfuncnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_11.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[544,531,532,533,534,536,537,538,540,541,543],"dellines":[],"addcode":["    private Iterator<String> linesIterator() {\n","      return new AbstractIterator<String>() {\n","        Iterator<String> lines = LINE_SPLITTER.split(seq).iterator();\n","\n","        protected String computeNext() {\n","          if (lines.hasNext()) {\n","            String next = lines.next();\n","            if (lines.hasNext() || !next.isEmpty()) {\n","              return next;\n","          }\n","          return endOfData();\n"],"delcode":[],"methodSig":"private Iterator<String> linesIterator()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_11.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_11.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_11.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_11.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[225,226],"dellines":[183,184],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source or writing to\n","   *     {@code appendable}\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source or\n","   *     writing to {@code appendable}\n"],"methodSig":"public long copyTo(Appendable appendable) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_12.txt","newdoc":" skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfuncnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_12.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[544,531,532,533,534,536,537,538,540,541,543],"dellines":[],"addcode":["    private Iterator<String> linesIterator() {\n","      return new AbstractIterator<String>() {\n","        Iterator<String> lines = LINE_SPLITTER.split(seq).iterator();\n","\n","        protected String computeNext() {\n","          if (lines.hasNext()) {\n","            String next = lines.next();\n","            if (lines.hasNext() || !next.isEmpty()) {\n","              return next;\n","          }\n","          return endOfData();\n"],"delcode":[],"methodSig":"private Iterator<String> linesIterator()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_12.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_12.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_12.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_12.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[258,259],"dellines":[258,259],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source or writing to\n","   *     {@code sink}\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source or\n","   *     writing to {@code sink}\n"],"methodSig":"public long copyTo(ByteSink sink) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_13.txt","newdoc":" skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n skip last line if it's empty\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfuncnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_13.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[544,531,532,533,534,536,537,538,540,541,543],"dellines":[],"addcode":["    private Iterator<String> linesIterator() {\n","      return new AbstractIterator<String>() {\n","        Iterator<String> lines = LINE_SPLITTER.split(seq).iterator();\n","\n","        protected String computeNext() {\n","          if (lines.hasNext()) {\n","            String next = lines.next();\n","            if (lines.hasNext() || !next.isEmpty()) {\n","              return next;\n","          }\n","          return endOfData();\n"],"delcode":[],"methodSig":"private Iterator<String> linesIterator()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_13.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_13.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_13.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_13.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[288,290,286,287],"dellines":[244,245,246,248],"addcode":["   * <p>Like {@link BufferedReader#readLine}, this method considers a line to be a sequence of text\n","   * that is terminated by (but does not include) one of {@code \\r\\n}, {@code \\r} or {@code \\n}. If\n","   * the source's content does not end in a line termination sequence, it is treated as if it does.\n","   * @throws IOException if an I/O error occurs while reading from this source\n"],"delcode":["   * <p>Like {@link BufferedReader}, this method breaks lines on any of {@code \\n}, {@code \\r} or\n","   * {@code \\r\\n}, does not include the line separator in the returned line and does not consider\n","   * there to be an extra empty line at the end if the content is terminated with a line separator.\n","   * @throws IOException if an I/O error occurs in the process of reading from this source\n"],"methodSig":"public String readFirstLine() throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_14.txt","newdoc":" If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/MoreFiles","pathinproj":"guava/src/com/google/common/io/MoreFiles.java","addlines":[165,166,167,172,174,175,176,177,178,179,180,181,182],"dellines":[],"addcode":["    @Override\n","    public CharSource asCharSource(Charset charset) {\n","      if (options.length == 0) {\n","        return new AsCharSource(charset) {\n","          @Override\n","          public Stream<String> lines() throws IOException {\n","            return Files.lines(path, charset);\n","          }\n","        };\n","      }\n","\n","      return super.asCharSource(charset);\n","    }\n"],"delcode":[],"methodSig":"public CharSource asCharSource(Charset charset)"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_14.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_14.txt","newdoc":" it doesn't matter what processBytes returns here\n it doesn't matter what processBytes returns here\n","newJdoc":"","olddoc":" some processors won't return a useful result\n some processors won't return a useful result\n","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_14.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[299],"dellines":[299],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source or if\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source or if\n"],"methodSig":"public T read(ByteProcessor<T> processor) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_15.txt","newdoc":" If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/MoreFiles","pathinproj":"guava/src/com/google/common/io/MoreFiles.java","addlines":[165,166,167,172,174,175,176,177,178,179,180,181,182],"dellines":[],"addcode":["    @Override\n","    public CharSource asCharSource(Charset charset) {\n","      if (options.length == 0) {\n","        return new AsCharSource(charset) {\n","          @Override\n","          public Stream<String> lines() throws IOException {\n","            return Files.lines(path, charset);\n","          }\n","        };\n","      }\n","\n","      return super.asCharSource(charset);\n","    }\n"],"delcode":[],"methodSig":"public CharSource asCharSource(Charset charset)"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_15.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_15.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_15.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_15.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[269],"dellines":[227],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source\n"],"methodSig":"public String read() throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_16.txt","newdoc":" If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/MoreFiles","pathinproj":"guava/src/com/google/common/io/MoreFiles.java","addlines":[165,166,167,172,174,175,176,177,178,179,180,181,182],"dellines":[],"addcode":["    @Override\n","    public CharSource asCharSource(Charset charset) {\n","      if (options.length == 0) {\n","        return new AsCharSource(charset) {\n","          @Override\n","          public Stream<String> lines() throws IOException {\n","            return Files.lines(path, charset);\n","          }\n","        };\n","      }\n","\n","      return super.asCharSource(charset);\n","    }\n"],"delcode":[],"methodSig":"public CharSource asCharSource(Charset charset)"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_16.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_16.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_16.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_16.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[280],"dellines":[280],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source\n"],"methodSig":"public byte[] read() throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_17.txt","newdoc":" If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/MoreFiles","pathinproj":"guava/src/com/google/common/io/MoreFiles.java","addlines":[165,166,167,172,174,175,176,177,178,179,180,181,182],"dellines":[],"addcode":["    @Override\n","    public CharSource asCharSource(Charset charset) {\n","      if (options.length == 0) {\n","        return new AsCharSource(charset) {\n","          @Override\n","          public Stream<String> lines() throws IOException {\n","            return Files.lines(path, charset);\n","          }\n","        };\n","      }\n","\n","      return super.asCharSource(charset);\n","    }\n"],"delcode":[],"methodSig":"public CharSource asCharSource(Charset charset)"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_17.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_17.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_17.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_17.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[309,310,311,313],"dellines":[267,268,269,271],"addcode":["   * <p>Like {@link BufferedReader#readLine}, this method considers a line to be a sequence of text\n","   * that is terminated by (but does not include) one of {@code \\r\\n}, {@code \\r} or {@code \\n}. If\n","   * the source's content does not end in a line termination sequence, it is treated as if it does.\n","   * @throws IOException if an I/O error occurs while reading from this source\n"],"delcode":["   * <p>Like {@link BufferedReader}, this method breaks lines on any of {@code \\n}, {@code \\r} or\n","   * {@code \\r\\n}, does not include the line separator in the returned lines and does not consider\n","   * there to be an extra empty line at the end if the content is terminated with a line separator.\n","   * @throws IOException if an I/O error occurs in the process of reading from this source\n"],"methodSig":"public ImmutableList<String> readLines() throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_18.txt","newdoc":" If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/MoreFiles","pathinproj":"guava/src/com/google/common/io/MoreFiles.java","addlines":[165,166,167,172,174,175,176,177,178,179,180,181,182],"dellines":[],"addcode":["    @Override\n","    public CharSource asCharSource(Charset charset) {\n","      if (options.length == 0) {\n","        return new AsCharSource(charset) {\n","          @Override\n","          public Stream<String> lines() throws IOException {\n","            return Files.lines(path, charset);\n","          }\n","        };\n","      }\n","\n","      return super.asCharSource(charset);\n","    }\n"],"delcode":[],"methodSig":"public CharSource asCharSource(Charset charset)"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_18.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_18.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_18.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_18.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[322],"dellines":[322],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source\n"],"methodSig":"public HashCode hash(HashFunction hashFunction) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_19.txt","newdoc":" If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/MoreFiles","pathinproj":"guava/src/com/google/common/io/MoreFiles.java","addlines":[165,166,167,172,174,175,176,177,178,179,180,181,182],"dellines":[],"addcode":["    @Override\n","    public CharSource asCharSource(Charset charset) {\n","      if (options.length == 0) {\n","        return new AsCharSource(charset) {\n","          @Override\n","          public Stream<String> lines() throws IOException {\n","            return Files.lines(path, charset);\n","          }\n","        };\n","      }\n","\n","      return super.asCharSource(charset);\n","    }\n"],"delcode":[],"methodSig":"public CharSource asCharSource(Charset charset)"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_19.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_19.txt","newdoc":"","newJdoc":"","olddoc":" skip may not be supported... at any rate, try reading\n skip may not be supported... at any rate, try reading\n","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_19.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[189],"dellines":[189],"addcode":["   * @throws IOException if an I/O error occurs while reading the size of this source\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading the size of this source\n"],"methodSig":"public long size() throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_20.txt","newdoc":" If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/MoreFiles","pathinproj":"guava/src/com/google/common/io/MoreFiles.java","addlines":[165,166,167,172,174,175,176,177,178,179,180,181,182],"dellines":[],"addcode":["    @Override\n","    public CharSource asCharSource(Charset charset) {\n","      if (options.length == 0) {\n","        return new AsCharSource(charset) {\n","          @Override\n","          public Stream<String> lines() throws IOException {\n","            return Files.lines(path, charset);\n","          }\n","        };\n","      }\n","\n","      return super.asCharSource(charset);\n","    }\n"],"delcode":[],"methodSig":"public CharSource asCharSource(Charset charset)"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_20.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_20.txt","newdoc":" https://code.google.com/p/guava-libraries/issues/detail?id=1330\n https://code.google.com/p/guava-libraries/issues/detail?id=1330\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_20.txt","olddoc":" https://code.google.com/p/guava-libraries/issues/detail?id=1330\n https://code.google.com/p/guava-libraries/issues/detail?id=1330\n","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_20.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSink","pathinproj":"guava/src/com/google/common/io/CharSink.java","addlines":[88],"dellines":[88],"addcode":["   * @throws IOException if an I/O error while writing to this sink\n"],"delcode":["   * @throws IOException if an I/O error in the process of writing to this sink\n"],"methodSig":"public void write(CharSequence charSequence) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_21.txt","newdoc":" If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/MoreFiles","pathinproj":"guava/src/com/google/common/io/MoreFiles.java","addlines":[165,166,167,172,174,175,176,177,178,179,180,181,182],"dellines":[],"addcode":["    @Override\n","    public CharSource asCharSource(Charset charset) {\n","      if (options.length == 0) {\n","        return new AsCharSource(charset) {\n","          @Override\n","          public Stream<String> lines() throws IOException {\n","            return Files.lines(path, charset);\n","          }\n","        };\n","      }\n","\n","      return super.asCharSource(charset);\n","    }\n"],"delcode":[],"methodSig":"public CharSource asCharSource(Charset charset)"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_21.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_21.txt","newdoc":" https://code.google.com/p/guava-libraries/issues/detail?id=1330\n https://code.google.com/p/guava-libraries/issues/detail?id=1330\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_21.txt","olddoc":" https://code.google.com/p/guava-libraries/issues/detail?id=1330\n https://code.google.com/p/guava-libraries/issues/detail?id=1330\n","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_21.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSink","pathinproj":"guava/src/com/google/common/io/ByteSink.java","addlines":[95],"dellines":[95],"addcode":["   * @throws IOException if an I/O occurs while writing to this sink\n"],"delcode":["   * @throws IOException if an I/O occurs in the process of writing to this sink\n"],"methodSig":"public void write(byte[] bytes) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_22.txt","newdoc":" If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/MoreFiles","pathinproj":"guava/src/com/google/common/io/MoreFiles.java","addlines":[165,166,167,172,174,175,176,177,178,179,180,181,182],"dellines":[],"addcode":["    @Override\n","    public CharSource asCharSource(Charset charset) {\n","      if (options.length == 0) {\n","        return new AsCharSource(charset) {\n","          @Override\n","          public Stream<String> lines() throws IOException {\n","            return Files.lines(path, charset);\n","          }\n","        };\n","      }\n","\n","      return super.asCharSource(charset);\n","    }\n"],"delcode":[],"methodSig":"public CharSource asCharSource(Charset charset)"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_22.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_22.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_22.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[236,237],"dellines":[236,237],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source or writing to\n","   *     {@code output}\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source or\n","   *     writing to {@code output}\n"],"methodSig":"public long copyTo(OutputStream output) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_23.txt","newdoc":" If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/MoreFiles","pathinproj":"guava/src/com/google/common/io/MoreFiles.java","addlines":[165,166,167,172,174,175,176,177,178,179,180,181,182],"dellines":[],"addcode":["    @Override\n","    public CharSource asCharSource(Charset charset) {\n","      if (options.length == 0) {\n","        return new AsCharSource(charset) {\n","          @Override\n","          public Stream<String> lines() throws IOException {\n","            return Files.lines(path, charset);\n","          }\n","        };\n","      }\n","\n","      return super.asCharSource(charset);\n","    }\n"],"delcode":[],"methodSig":"public CharSource asCharSource(Charset charset)"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_23.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_23.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_23.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_23.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[247,248],"dellines":[205,206],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source or writing to\n","   *     {@code sink}\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source or\n","   *     writing to {@code sink}\n"],"methodSig":"public long copyTo(CharSink sink) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_24.txt","newdoc":" If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/MoreFiles","pathinproj":"guava/src/com/google/common/io/MoreFiles.java","addlines":[165,166,167,172,174,175,176,177,178,179,180,181,182],"dellines":[],"addcode":["    @Override\n","    public CharSource asCharSource(Charset charset) {\n","      if (options.length == 0) {\n","        return new AsCharSource(charset) {\n","          @Override\n","          public Stream<String> lines() throws IOException {\n","            return Files.lines(path, charset);\n","          }\n","        };\n","      }\n","\n","      return super.asCharSource(charset);\n","    }\n"],"delcode":[],"methodSig":"public CharSource asCharSource(Charset charset)"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_24.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_24.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_24.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_24.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[225,226],"dellines":[183,184],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source or writing to\n","   *     {@code appendable}\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source or\n","   *     writing to {@code appendable}\n"],"methodSig":"public long copyTo(Appendable appendable) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_25.txt","newdoc":" If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/MoreFiles","pathinproj":"guava/src/com/google/common/io/MoreFiles.java","addlines":[165,166,167,172,174,175,176,177,178,179,180,181,182],"dellines":[],"addcode":["    @Override\n","    public CharSource asCharSource(Charset charset) {\n","      if (options.length == 0) {\n","        return new AsCharSource(charset) {\n","          @Override\n","          public Stream<String> lines() throws IOException {\n","            return Files.lines(path, charset);\n","          }\n","        };\n","      }\n","\n","      return super.asCharSource(charset);\n","    }\n"],"delcode":[],"methodSig":"public CharSource asCharSource(Charset charset)"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_25.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_25.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_25.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_25.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[258,259],"dellines":[258,259],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source or writing to\n","   *     {@code sink}\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source or\n","   *     writing to {@code sink}\n"],"methodSig":"public long copyTo(ByteSink sink) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_26.txt","newdoc":" If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n If no OpenOptions were passed, delegate to Files.lines, which could have performance\n advantages. (If OpenOptions were passed we can't, because Files.lines doesn't have an\n overload taking OpenOptions, meaning we can't guarantee the same behavior w.r.t. things\n like following/not following symlinks.\n the user needs to close it in this case\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/MoreFiles","pathinproj":"guava/src/com/google/common/io/MoreFiles.java","addlines":[165,166,167,172,174,175,176,177,178,179,180,181,182],"dellines":[],"addcode":["    @Override\n","    public CharSource asCharSource(Charset charset) {\n","      if (options.length == 0) {\n","        return new AsCharSource(charset) {\n","          @Override\n","          public Stream<String> lines() throws IOException {\n","            return Files.lines(path, charset);\n","          }\n","        };\n","      }\n","\n","      return super.asCharSource(charset);\n","    }\n"],"delcode":[],"methodSig":"public CharSource asCharSource(Charset charset)"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_26.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_26.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_26.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_26.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[288,290,286,287],"dellines":[244,245,246,248],"addcode":["   * <p>Like {@link BufferedReader#readLine}, this method considers a line to be a sequence of text\n","   * that is terminated by (but does not include) one of {@code \\r\\n}, {@code \\r} or {@code \\n}. If\n","   * the source's content does not end in a line termination sequence, it is treated as if it does.\n","   * @throws IOException if an I/O error occurs while reading from this source\n"],"delcode":["   * <p>Like {@link BufferedReader}, this method breaks lines on any of {@code \\n}, {@code \\r} or\n","   * {@code \\r\\n}, does not include the line separator in the returned line and does not consider\n","   * there to be an extra empty line at the end if the content is terminated with a line separator.\n","   * @throws IOException if an I/O error occurs in the process of reading from this source\n"],"methodSig":"public String readFirstLine() throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_oldfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_27.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_27.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[556],"dellines":[515],"addcode":["      Iterator<String> lines = linesIterator();\n"],"delcode":["      Iterator<String> lines = lines().iterator();\n"],"methodSig":"public String readFirstLine()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_27.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_27.txt","newdoc":" it doesn't matter what processBytes returns here\n it doesn't matter what processBytes returns here\n it doesn't matter what processBytes returns here\n","newJdoc":"","olddoc":" some processors won't return a useful result\n some processors won't return a useful result\n some processors won't return a useful result\n","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_27.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[299],"dellines":[299],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source or if\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source or if\n"],"methodSig":"public T read(ByteProcessor<T> processor) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_oldfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_28.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_28.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[556],"dellines":[515],"addcode":["      Iterator<String> lines = linesIterator();\n"],"delcode":["      Iterator<String> lines = lines().iterator();\n"],"methodSig":"public String readFirstLine()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_28.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_28.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_28.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_28.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[269],"dellines":[227],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source\n"],"methodSig":"public String read() throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_oldfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_29.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_29.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[556],"dellines":[515],"addcode":["      Iterator<String> lines = linesIterator();\n"],"delcode":["      Iterator<String> lines = lines().iterator();\n"],"methodSig":"public String readFirstLine()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_29.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_29.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_29.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_29.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[280],"dellines":[280],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source\n"],"methodSig":"public byte[] read() throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_oldfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_30.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_30.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[556],"dellines":[515],"addcode":["      Iterator<String> lines = linesIterator();\n"],"delcode":["      Iterator<String> lines = lines().iterator();\n"],"methodSig":"public String readFirstLine()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_30.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_30.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_30.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_30.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[309,310,311,313],"dellines":[267,268,269,271],"addcode":["   * <p>Like {@link BufferedReader#readLine}, this method considers a line to be a sequence of text\n","   * that is terminated by (but does not include) one of {@code \\r\\n}, {@code \\r} or {@code \\n}. If\n","   * the source's content does not end in a line termination sequence, it is treated as if it does.\n","   * @throws IOException if an I/O error occurs while reading from this source\n"],"delcode":["   * <p>Like {@link BufferedReader}, this method breaks lines on any of {@code \\n}, {@code \\r} or\n","   * {@code \\r\\n}, does not include the line separator in the returned lines and does not consider\n","   * there to be an extra empty line at the end if the content is terminated with a line separator.\n","   * @throws IOException if an I/O error occurs in the process of reading from this source\n"],"methodSig":"public ImmutableList<String> readLines() throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_oldfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_31.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_31.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[556],"dellines":[515],"addcode":["      Iterator<String> lines = linesIterator();\n"],"delcode":["      Iterator<String> lines = lines().iterator();\n"],"methodSig":"public String readFirstLine()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_31.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_31.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_31.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_31.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[322],"dellines":[322],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source\n"],"methodSig":"public HashCode hash(HashFunction hashFunction) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_oldfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_32.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_32.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[556],"dellines":[515],"addcode":["      Iterator<String> lines = linesIterator();\n"],"delcode":["      Iterator<String> lines = lines().iterator();\n"],"methodSig":"public String readFirstLine()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_32.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_32.txt","newdoc":"","newJdoc":"","olddoc":" skip may not be supported... at any rate, try reading\n skip may not be supported... at any rate, try reading\n skip may not be supported... at any rate, try reading\n","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_32.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[189],"dellines":[189],"addcode":["   * @throws IOException if an I/O error occurs while reading the size of this source\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading the size of this source\n"],"methodSig":"public long size() throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_oldfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_33.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_33.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[556],"dellines":[515],"addcode":["      Iterator<String> lines = linesIterator();\n"],"delcode":["      Iterator<String> lines = lines().iterator();\n"],"methodSig":"public String readFirstLine()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_33.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_33.txt","newdoc":" https://code.google.com/p/guava-libraries/issues/detail?id=1330\n https://code.google.com/p/guava-libraries/issues/detail?id=1330\n https://code.google.com/p/guava-libraries/issues/detail?id=1330\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_33.txt","olddoc":" https://code.google.com/p/guava-libraries/issues/detail?id=1330\n https://code.google.com/p/guava-libraries/issues/detail?id=1330\n https://code.google.com/p/guava-libraries/issues/detail?id=1330\n","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_33.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSink","pathinproj":"guava/src/com/google/common/io/CharSink.java","addlines":[88],"dellines":[88],"addcode":["   * @throws IOException if an I/O error while writing to this sink\n"],"delcode":["   * @throws IOException if an I/O error in the process of writing to this sink\n"],"methodSig":"public void write(CharSequence charSequence) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_oldfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_34.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_34.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[556],"dellines":[515],"addcode":["      Iterator<String> lines = linesIterator();\n"],"delcode":["      Iterator<String> lines = lines().iterator();\n"],"methodSig":"public String readFirstLine()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_34.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_34.txt","newdoc":" https://code.google.com/p/guava-libraries/issues/detail?id=1330\n https://code.google.com/p/guava-libraries/issues/detail?id=1330\n https://code.google.com/p/guava-libraries/issues/detail?id=1330\n","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_34.txt","olddoc":" https://code.google.com/p/guava-libraries/issues/detail?id=1330\n https://code.google.com/p/guava-libraries/issues/detail?id=1330\n https://code.google.com/p/guava-libraries/issues/detail?id=1330\n","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_34.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSink","pathinproj":"guava/src/com/google/common/io/ByteSink.java","addlines":[95],"dellines":[95],"addcode":["   * @throws IOException if an I/O occurs while writing to this sink\n"],"delcode":["   * @throws IOException if an I/O occurs in the process of writing to this sink\n"],"methodSig":"public void write(byte[] bytes) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_oldfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_35.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_35.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[556],"dellines":[515],"addcode":["      Iterator<String> lines = linesIterator();\n"],"delcode":["      Iterator<String> lines = lines().iterator();\n"],"methodSig":"public String readFirstLine()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_35.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_35.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_35.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[236,237],"dellines":[236,237],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source or writing to\n","   *     {@code output}\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source or\n","   *     writing to {@code output}\n"],"methodSig":"public long copyTo(OutputStream output) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_oldfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_36.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_36.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[556],"dellines":[515],"addcode":["      Iterator<String> lines = linesIterator();\n"],"delcode":["      Iterator<String> lines = lines().iterator();\n"],"methodSig":"public String readFirstLine()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_36.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_36.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_36.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_36.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[247,248],"dellines":[205,206],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source or writing to\n","   *     {@code sink}\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source or\n","   *     writing to {@code sink}\n"],"methodSig":"public long copyTo(CharSink sink) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_oldfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_37.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_37.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[556],"dellines":[515],"addcode":["      Iterator<String> lines = linesIterator();\n"],"delcode":["      Iterator<String> lines = lines().iterator();\n"],"methodSig":"public String readFirstLine()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_37.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_37.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_37.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_37.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[225,226],"dellines":[183,184],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source or writing to\n","   *     {@code appendable}\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source or\n","   *     writing to {@code appendable}\n"],"methodSig":"public long copyTo(Appendable appendable) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_oldfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_38.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_38.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[556],"dellines":[515],"addcode":["      Iterator<String> lines = linesIterator();\n"],"delcode":["      Iterator<String> lines = lines().iterator();\n"],"methodSig":"public String readFirstLine()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_38.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_38.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_38.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_38.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[258,259],"dellines":[258,259],"addcode":["   * @throws IOException if an I/O error occurs while reading from this source or writing to\n","   *     {@code sink}\n"],"delcode":["   * @throws IOException if an I/O error occurs in the process of reading from this source or\n","   *     writing to {@code sink}\n"],"methodSig":"public long copyTo(ByteSink sink) throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"},{"func":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_oldfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_39.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_39.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[556],"dellines":[515],"addcode":["      Iterator<String> lines = linesIterator();\n"],"delcode":["      Iterator<String> lines = lines().iterator();\n"],"methodSig":"public String readFirstLine()"},"doc":{"oldfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_39.txt","newfunccode":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocfunccode_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_39.txt","newdoc":"","newJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_newdocnewJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_39.txt","olddoc":"","oldJdoc":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae/Codes/Match_olddocJdoc_c7769b29de954b3469fb1d9a25a80cb333fdd0ae_39.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/c7769b29de954b3469fb1d9a25a80cb333fdd0ae/CharSource","pathinproj":"guava/src/com/google/common/io/CharSource.java","addlines":[288,290,286,287],"dellines":[244,245,246,248],"addcode":["   * <p>Like {@link BufferedReader#readLine}, this method considers a line to be a sequence of text\n","   * that is terminated by (but does not include) one of {@code \\r\\n}, {@code \\r} or {@code \\n}. If\n","   * the source's content does not end in a line termination sequence, it is treated as if it does.\n","   * @throws IOException if an I/O error occurs while reading from this source\n"],"delcode":["   * <p>Like {@link BufferedReader}, this method breaks lines on any of {@code \\n}, {@code \\r} or\n","   * {@code \\r\\n}, does not include the line separator in the returned line and does not consider\n","   * there to be an extra empty line at the end if the content is terminated with a line separator.\n","   * @throws IOException if an I/O error occurs in the process of reading from this source\n"],"methodSig":"public String readFirstLine() throws IOException"},"id":3,"flag":1,"commit":"c7769b29de954b3469fb1d9a25a80cb333fdd0ae"}]