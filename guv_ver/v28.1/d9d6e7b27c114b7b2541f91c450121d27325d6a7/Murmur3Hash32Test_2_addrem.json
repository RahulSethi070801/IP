{
    "addition": {
        "21": "import com.google.common.base.Charsets;\n",
        "23": "import java.util.Random;\n",
        "56": "  @SuppressWarnings(\"deprecation\")\n",
        "57": "  public void testSimpleStringUtf8() {\n",
        "58": "    assertEquals(\n",
        "59": "        murmur3_32().hashBytes(\"ABCDefGHI\\u0799\".getBytes(Charsets.UTF_8)),\n",
        "60": "        murmur3_32().hashString(\"ABCDefGHI\\u0799\", Charsets.UTF_8));\n",
        "61": "  }\n",
        "62": "\n",
        "63": "  @SuppressWarnings(\"deprecation\")\n",
        "64": "  public void testStringInputsUtf8() {\n",
        "65": "    Random rng = new Random(0);\n",
        "66": "    for (int z = 0; z < 100; z++) {\n",
        "67": "      String str;\n",
        "68": "      int[] codePoints = new int[rng.nextInt(8)];\n",
        "69": "      for (int i = 0; i < codePoints.length; i++) {\n",
        "70": "        do {\n",
        "71": "          codePoints[i] = rng.nextInt(0x800);\n",
        "72": "        } while (!Character.isValidCodePoint(codePoints[i])\n",
        "73": "            || (codePoints[i] >= Character.MIN_SURROGATE\n",
        "74": "                && codePoints[i] <= Character.MAX_SURROGATE));\n",
        "75": "      }\n",
        "76": "      StringBuilder builder = new StringBuilder();\n",
        "77": "      for (int i = 0; i < codePoints.length; i++) {\n",
        "78": "        builder.appendCodePoint(codePoints[i]);\n",
        "79": "      }\n",
        "80": "      str = builder.toString();\n",
        "81": "      assertEquals(\n",
        "82": "          murmur3_32().hashBytes(str.getBytes(Charsets.UTF_8)),\n",
        "83": "          murmur3_32().hashString(str, Charsets.UTF_8));\n",
        "84": "    }\n",
        "85": "  }\n",
        "86": "\n",
        "118": "\n",
        "119": "  @SuppressWarnings(\"deprecation\")\n",
        "120": "  public void testInvalidUnicodeHashString() {\n",
        "121": "    String str =\n",
        "122": "        new String(\n",
        "123": "            new char[] {'a', Character.MIN_HIGH_SURROGATE, Character.MIN_HIGH_SURROGATE, 'z'});\n",
        "124": "    assertEquals(\n",
        "125": "        murmur3_32().hashBytes(str.getBytes(Charsets.UTF_8)),\n",
        "126": "        murmur3_32().hashString(str, Charsets.UTF_8));\n",
        "127": "  }\n",
        "128": "\n",
        "129": "  public void testInvalidUnicodeHasherPutString() {\n",
        "130": "    String str =\n",
        "131": "        new String(\n",
        "132": "            new char[] {'a', Character.MIN_HIGH_SURROGATE, Character.MIN_HIGH_SURROGATE, 'z'});\n",
        "133": "    assertEquals(\n",
        "134": "        murmur3_32().hashBytes(str.getBytes(Charsets.UTF_8)),\n",
        "135": "        murmur3_32().newHasher().putString(str, Charsets.UTF_8).hash());\n",
        "136": "  }\n"
    },
    "removed": {}
}