{
    "addition": {
        "31": "  private static final String DEFAULT = \"default\";\n",
        "32": "\n",
        "59": "        assertThat(graph.edgeValueOrNull(node, otherNode) != null).isEqualTo(hasEdge);\n",
        "72": "    assertThat(graph.edgeValueOrNull(1, 2)).isEqualTo(\"valueA\");\n",
        "73": "    assertThat(graph.edgeValueOrNull(2, 1)).isEqualTo(\"valueB\");\n",
        "74": "    assertThat(graph.edgeValueOrNull(2, 3)).isEqualTo(\"valueC\");\n",
        "75": "    assertThat(graph.edgeValueOrNull(4, 4)).isEqualTo(\"valueD\");\n",
        "92": "    assertThat(graph.edgeValueOrNull(1, 2)).isEqualTo(\"valueB\");\n",
        "93": "    assertThat(graph.edgeValueOrNull(2, 1)).isEqualTo(\"valueB\");\n",
        "94": "    assertThat(graph.edgeValueOrNull(2, 3)).isEqualTo(\"valueC\");\n",
        "95": "    assertThat(graph.edgeValueOrNull(4, 4)).isEqualTo(\"valueD\");\n",
        "154": "  public void edgeValue_missing() {\n",
        "157": "    assertThat(graph.edgeValueOrNull(1, 2)).isNull();\n",
        "158": "    assertThat(graph.edgeValueOrNull(2, 1)).isNull();\n",
        "159": "    assertThat(graph.edgeValue(1, 2).orElse(DEFAULT)).isEqualTo(DEFAULT);\n",
        "160": "    assertThat(graph.edgeValue(2, 1).orElse(DEFAULT)).isEqualTo(DEFAULT);\n",
        "164": "    assertThat(graph.edgeValueOrNull(1, 2)).isEqualTo(\"valueA\");\n",
        "165": "    assertThat(graph.edgeValueOrNull(2, 1)).isEqualTo(\"valueB\");\n",
        "166": "    assertThat(graph.edgeValue(1, 2).get()).isEqualTo(\"valueA\");\n",
        "167": "    assertThat(graph.edgeValue(2, 1).get()).isEqualTo(\"valueB\");\n",
        "171": "    assertThat(graph.edgeValueOrNull(1, 2)).isNull();\n",
        "172": "    assertThat(graph.edgeValueOrNull(2, 1)).isEqualTo(\"valueC\");\n",
        "173": "    assertThat(graph.edgeValue(1, 2).orElse(DEFAULT)).isEqualTo(DEFAULT);\n",
        "174": "    assertThat(graph.edgeValue(2, 1).get()).isEqualTo(\"valueC\");\n"
    },
    "removed": {
        "21": "import static org.junit.Assert.fail;\n",
        "58": "        assertThat(graph.edgeValueOrDefault(node, otherNode, null) != null).isEqualTo(hasEdge);\n",
        "71": "    assertThat(graph.edgeValue(1, 2)).isEqualTo(\"valueA\");\n",
        "72": "    assertThat(graph.edgeValue(2, 1)).isEqualTo(\"valueB\");\n",
        "73": "    assertThat(graph.edgeValue(2, 3)).isEqualTo(\"valueC\");\n",
        "74": "    assertThat(graph.edgeValue(4, 4)).isEqualTo(\"valueD\");\n",
        "91": "    assertThat(graph.edgeValue(1, 2)).isEqualTo(\"valueB\");\n",
        "92": "    assertThat(graph.edgeValue(2, 1)).isEqualTo(\"valueB\");\n",
        "93": "    assertThat(graph.edgeValue(2, 3)).isEqualTo(\"valueC\");\n",
        "94": "    assertThat(graph.edgeValue(4, 4)).isEqualTo(\"valueD\");\n",
        "153": "  public void edgeValue_edgeNotPresent() {\n",
        "154": "    graph = ValueGraphBuilder.directed().build();\n",
        "155": "    graph.addNode(1);\n",
        "156": "    graph.addNode(2);\n",
        "157": "\n",
        "158": "    try {\n",
        "159": "      graph.edgeValue(2, 1);\n",
        "160": "      fail(\"Should have rejected edgeValue() if edge not present in graph.\");\n",
        "161": "    } catch (IllegalArgumentException e) {\n",
        "162": "      assertThat(e).hasMessage(\"Edge connecting 2 to 1 is not present in this graph.\");\n",
        "163": "    }\n",
        "164": "  }\n",
        "165": "\n",
        "166": "  @Test\n",
        "167": "  public void edgeValue_nodeNotPresent() {\n",
        "168": "    graph = ValueGraphBuilder.undirected().build();\n",
        "169": "    graph.putEdgeValue(1, 2, \"value\");\n",
        "170": "\n",
        "171": "    try {\n",
        "172": "      graph.edgeValue(2, 3);\n",
        "173": "      fail(\"Should have rejected edgeValue() if node not present in graph.\");\n",
        "174": "    } catch (IllegalArgumentException e) {\n",
        "175": "      assertThat(e).hasMessage(\"Node 3 is not an element of this graph.\");\n",
        "176": "    }\n",
        "177": "  }\n",
        "178": "\n",
        "179": "  @Test\n",
        "180": "  public void edgeValueOrDefault() {\n",
        "183": "    assertThat(graph.edgeValueOrDefault(1, 2, \"default\")).isEqualTo(\"default\");\n",
        "184": "    assertThat(graph.edgeValueOrDefault(2, 1, \"default\")).isEqualTo(\"default\");\n",
        "188": "    assertThat(graph.edgeValueOrDefault(1, 2, \"default\")).isEqualTo(\"valueA\");\n",
        "189": "    assertThat(graph.edgeValueOrDefault(2, 1, \"default\")).isEqualTo(\"valueB\");\n",
        "193": "    assertThat(graph.edgeValueOrDefault(1, 2, \"default\")).isEqualTo(\"default\");\n",
        "194": "    assertThat(graph.edgeValueOrDefault(2, 1, \"default\")).isEqualTo(\"valueC\");\n"
    }
}