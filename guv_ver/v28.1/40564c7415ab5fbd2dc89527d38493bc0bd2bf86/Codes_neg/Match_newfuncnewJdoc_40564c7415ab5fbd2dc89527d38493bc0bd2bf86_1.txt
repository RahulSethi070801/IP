
     * Continues executing tasks from {@link #queue} until it is empty.
     *
     * <p>The thread's interrupt bit is cleared before execution of each task.
     *
     * <p>If the Thread in use is interrupted before or during execution of the tasks in
     * {@link #queue}, the Executor will complete its tasks, and then restore the interruption.
     * This means that once the Thread returns to the Executor that this Executor composes, the
     * interruption will still be present. If the composed Executor is an ExecutorService, it can
     * respond to shutdown() by returning tasks queued on that Thread after {@link #worker} drains
     * the queue.
     