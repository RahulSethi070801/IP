[{"func":{"oldfunccode":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_oldfunccode_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_1.txt","newfunccode":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_newfunccode_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_1.txt","newdoc":"","newJdoc":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_newfuncnewJdoc_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_1.txt","olddoc":" We check the internal state of the snapshot instead of state() directly so we don't allow\n notifyStopped() to be called while STARTING, even if stop() has already been called.\n","oldJdoc":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_oldfuncoldJdoc_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/AbstractService","pathinproj":"android/guava/src/com/google/common/util/concurrent/AbstractService.java","addlines":[418,419,420,421,422,423,424,425,426,427,428,429],"dellines":[400,401,402,404,405,397,398,399],"addcode":["      State previous = state();\n","      switch (previous) {\n","        case NEW:\n","        case TERMINATED:\n","        case FAILED:\n","          throw new IllegalStateException(\"Cannot notifyStopped() when the service is \" + previous);\n","        case RUNNING:\n","        case STARTING:\n","        case STOPPING:\n","          snapshot = new StateSnapshot(TERMINATED);\n","          enqueueTerminatedEvent(previous);\n","          break;\n","      State previous = state();\n","      switch (previous) {\n","        case NEW:\n","        case TERMINATED:\n","        case FAILED:\n","          throw new IllegalStateException(\"Cannot notifyStopped() when the service is \" + previous);\n","        case RUNNING:\n","        case STARTING:\n","        case STOPPING:\n","          snapshot = new StateSnapshot(TERMINATED);\n","          enqueueTerminatedEvent(previous);\n","          break;\n"],"delcode":["      State previous = snapshot.state;\n","      if (previous != STOPPING && previous != RUNNING) {\n","        IllegalStateException failure =\n","            new IllegalStateException(\"Cannot notifyStopped() when the service is \" + previous);\n","        notifyFailed(failure);\n","        throw failure;\n","      snapshot = new StateSnapshot(TERMINATED);\n","      enqueueTerminatedEvent(previous);\n","      State previous = snapshot.state;\n","      if (previous != STOPPING && previous != RUNNING) {\n","        IllegalStateException failure =\n","            new IllegalStateException(\"Cannot notifyStopped() when the service is \" + previous);\n","        notifyFailed(failure);\n","        throw failure;\n","      snapshot = new StateSnapshot(TERMINATED);\n","      enqueueTerminatedEvent(previous);\n"],"methodSig":"protected final void notifyStopped()"},"doc":{"oldfunccode":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_olddocfunccode_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_1.txt","newfunccode":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_newdocfunccode_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_1.txt","newdoc":"","newJdoc":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_newdocnewJdoc_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_1.txt","olddoc":"","oldJdoc":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_olddocJdoc_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/AbstractService","pathinproj":"android/guava/src/com/google/common/util/concurrent/AbstractService.java","addlines":[216,217,218,219],"dellines":[],"addcode":["   *\n","   * <p>If {@link #stopAsync} is called on a {@link State#STARTING} service, this method is not\n","   * invoked immediately. Instead, it will be deferred until after the service is {@link\n","   * State#RUNNING}. Services that need to cancel startup work can override {#link #doCancelStart}.\n","   *\n","   * <p>If {@link #stopAsync} is called on a {@link State#STARTING} service, this method is not\n","   * invoked immediately. Instead, it will be deferred until after the service is {@link\n","   * State#RUNNING}. Services that need to cancel startup work can override {#link #doCancelStart}.\n"],"delcode":[],"methodSig":"protected abstract void doStop()"},"id":1,"flag":1,"commit":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad"},{"func":{"oldfunccode":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_oldfunccode_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_2.txt","newfunccode":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_newfunccode_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_2.txt","newdoc":" These cases are impossible due to the if statement above.\n","newJdoc":"","olddoc":" These cases are impossible due to the if statement above.\n","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/AbstractService","pathinproj":"android/guava/src/com/google/common/util/concurrent/AbstractService.java","addlines":[275],"dellines":[263,264],"addcode":["            doCancelStart();\n","            doCancelStart();\n"],"delcode":["          default:\n","            throw new AssertionError(\"Unexpected state: \" + previous);\n","          default:\n","            throw new AssertionError(\"Unexpected state: \" + previous);\n"],"methodSig":"public final Service stopAsync()"},"doc":{"oldfunccode":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_olddocfunccode_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_2.txt","newfunccode":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_newdocfunccode_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_2.txt","newdoc":"","newJdoc":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_newdocnewJdoc_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_2.txt","olddoc":"","oldJdoc":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_olddocJdoc_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/AbstractService","pathinproj":"android/guava/src/com/google/common/util/concurrent/AbstractService.java","addlines":[216,217,218,219],"dellines":[],"addcode":["   *\n","   * <p>If {@link #stopAsync} is called on a {@link State#STARTING} service, this method is not\n","   * invoked immediately. Instead, it will be deferred until after the service is {@link\n","   * State#RUNNING}. Services that need to cancel startup work can override {#link #doCancelStart}.\n","   *\n","   * <p>If {@link #stopAsync} is called on a {@link State#STARTING} service, this method is not\n","   * invoked immediately. Instead, it will be deferred until after the service is {@link\n","   * State#RUNNING}. Services that need to cancel startup work can override {#link #doCancelStart}.\n"],"delcode":[],"methodSig":"protected abstract void doStop()"},"id":1,"flag":1,"commit":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad"},{"func":{"oldfunccode":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_oldfunccode_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_3.txt","newfunccode":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_newfunccode_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_3.txt","newdoc":" Do nothing\n","newJdoc":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_newfuncnewJdoc_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_3.txt","olddoc":" Do nothing\n","oldJdoc":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_oldfuncoldJdoc_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_3.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/AbstractService","pathinproj":"android/guava/src/com/google/common/util/concurrent/AbstractService.java","addlines":[],"dellines":[436,437],"addcode":[],"delcode":["        default:\n","          throw new AssertionError(\"Unexpected state: \" + previous);\n","        default:\n","          throw new AssertionError(\"Unexpected state: \" + previous);\n"],"methodSig":"protected final void notifyFailed(Throwable cause)"},"doc":{"oldfunccode":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_olddocfunccode_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_3.txt","newfunccode":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_newdocfunccode_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_3.txt","newdoc":"","newJdoc":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_newdocnewJdoc_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_3.txt","olddoc":"","oldJdoc":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/Codes/Match_olddocJdoc_27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad_3.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad/AbstractService","pathinproj":"android/guava/src/com/google/common/util/concurrent/AbstractService.java","addlines":[216,217,218,219],"dellines":[],"addcode":["   *\n","   * <p>If {@link #stopAsync} is called on a {@link State#STARTING} service, this method is not\n","   * invoked immediately. Instead, it will be deferred until after the service is {@link\n","   * State#RUNNING}. Services that need to cancel startup work can override {#link #doCancelStart}.\n","   *\n","   * <p>If {@link #stopAsync} is called on a {@link State#STARTING} service, this method is not\n","   * invoked immediately. Instead, it will be deferred until after the service is {@link\n","   * State#RUNNING}. Services that need to cancel startup work can override {#link #doCancelStart}.\n"],"delcode":[],"methodSig":"protected abstract void doStop()"},"id":1,"flag":1,"commit":"27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad"}]