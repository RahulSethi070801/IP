{
    "addition": {
        "23": "import com.google.common.collect.MapMaker.Dummy;\n",
        "196": "  /** Returns a fresh {@link MapMakerInternalMap} as specified by the given {@code builder}. */\n",
        "225": "  /**\n",
        "226": "   * Returns a fresh {@link MapMakerInternalMap} with {@link MapMaker.Dummy} values but otherwise as\n",
        "227": "   * specified by the given {@code builder}. The returned {@link MapMakerInternalMap} will be\n",
        "228": "   * optimized to saved memory. Since {@link MapMaker.Dummy} is a singleton, we don't need to store\n",
        "229": "   * any values at all. Because of this optimization, {@code build.getValueStrength()} must\n",
        "230": "   * be {@link Strength#STRONG}.\n",
        "231": "   *\n",
        "232": "   * <p>This method is intended to only be used by the internal implementation of {@link Interners},\n",
        "233": "   * since a map of dummy values is the exact use case there.\n",
        "234": "   */\n",
        "235": "  static <K>\n",
        "236": "      MapMakerInternalMap<K, Dummy, ? extends InternalEntry<K, Dummy, ?>, ?> createWithDummyValues(\n",
        "237": "          MapMaker builder) {\n",
        "238": "    if (builder.getKeyStrength() == Strength.STRONG\n",
        "239": "        && builder.getValueStrength() == Strength.STRONG) {\n",
        "240": "      return new MapMakerInternalMap<\n",
        "241": "          K, Dummy, StrongKeyDummyValueEntry<K>, StrongKeyDummyValueSegment<K>>(\n",
        "242": "          builder, StrongKeyDummyValueEntry.Helper.<K>instance());\n",
        "243": "    }\n",
        "244": "    if (builder.getKeyStrength() == Strength.WEAK\n",
        "245": "        && builder.getValueStrength() == Strength.STRONG) {\n",
        "246": "      return new MapMakerInternalMap<\n",
        "247": "          K, Dummy, WeakKeyDummyValueEntry<K>, WeakKeyDummyValueSegment<K>>(\n",
        "248": "          builder, WeakKeyDummyValueEntry.Helper.<K>instance());\n",
        "249": "    }\n",
        "250": "    if (builder.getValueStrength() == Strength.WEAK) {\n",
        "251": "      throw new IllegalArgumentException(\"Map cannot have both weak and dummy values\");\n",
        "252": "    }\n",
        "253": "    throw new AssertionError();\n",
        "254": "  }\n",
        "255": "\n",
        "589": "  /** Concrete implementation of {@link InternalEntry} for strong keys and {@link Dummy} values. */\n",
        "590": "  static final class StrongKeyDummyValueEntry<K>\n",
        "591": "      extends AbstractStrongKeyEntry<K, Dummy, StrongKeyDummyValueEntry<K>>\n",
        "592": "      implements StrongValueEntry<K, Dummy, StrongKeyDummyValueEntry<K>> {\n",
        "593": "    StrongKeyDummyValueEntry(K key, int hash, @Nullable StrongKeyDummyValueEntry<K> next) {\n",
        "594": "      super(key, hash, next);\n",
        "595": "    }\n",
        "596": "\n",
        "597": "    @Override\n",
        "598": "    public Dummy getValue() {\n",
        "599": "      return Dummy.VALUE;\n",
        "600": "    }\n",
        "601": "\n",
        "602": "    void setValue(Dummy value) {}\n",
        "603": "\n",
        "604": "    StrongKeyDummyValueEntry<K> copy(StrongKeyDummyValueEntry<K> newNext) {\n",
        "605": "      return new StrongKeyDummyValueEntry<K>(this.key, this.hash, newNext);\n",
        "606": "    }\n",
        "607": "\n",
        "608": "    /**\n",
        "609": "     * Concrete implementation of {@link InternalEntryHelper} for strong keys and {@link Dummy}\n",
        "610": "     * values.\n",
        "611": "     */\n",
        "612": "    static final class Helper<K>\n",
        "613": "        implements InternalEntryHelper<\n",
        "614": "            K, Dummy, StrongKeyDummyValueEntry<K>, StrongKeyDummyValueSegment<K>> {\n",
        "615": "      private static final Helper<?> INSTANCE = new Helper<Object>();\n",
        "616": "\n",
        "617": "      @SuppressWarnings(\"unchecked\")\n",
        "618": "      static <K> Helper<K> instance() {\n",
        "619": "        return (Helper<K>) INSTANCE;\n",
        "620": "      }\n",
        "621": "\n",
        "622": "      @Override\n",
        "623": "      public Strength keyStrength() {\n",
        "624": "        return Strength.STRONG;\n",
        "625": "      }\n",
        "626": "\n",
        "627": "      @Override\n",
        "628": "      public Strength valueStrength() {\n",
        "629": "        return Strength.STRONG;\n",
        "630": "      }\n",
        "631": "\n",
        "632": "      @Override\n",
        "633": "      public StrongKeyDummyValueSegment<K> newSegment(\n",
        "634": "          MapMakerInternalMap<K, Dummy, StrongKeyDummyValueEntry<K>, StrongKeyDummyValueSegment<K>>\n",
        "635": "              map,\n",
        "636": "          int initialCapacity,\n",
        "637": "          int maxSegmentSize) {\n",
        "638": "        return new StrongKeyDummyValueSegment<K>(map, initialCapacity, maxSegmentSize);\n",
        "639": "      }\n",
        "640": "\n",
        "641": "      @Override\n",
        "642": "      public StrongKeyDummyValueEntry<K> copy(\n",
        "643": "          StrongKeyDummyValueSegment<K> segment,\n",
        "644": "          StrongKeyDummyValueEntry<K> entry,\n",
        "645": "          @Nullable StrongKeyDummyValueEntry<K> newNext) {\n",
        "646": "        return entry.copy(newNext);\n",
        "647": "      }\n",
        "648": "\n",
        "649": "      @Override\n",
        "650": "      public void setValue(\n",
        "651": "          StrongKeyDummyValueSegment<K> segment, StrongKeyDummyValueEntry<K> entry, Dummy value) {}\n",
        "652": "\n",
        "653": "      @Override\n",
        "654": "      public StrongKeyDummyValueEntry<K> newEntry(\n",
        "655": "          StrongKeyDummyValueSegment<K> segment,\n",
        "656": "          K key,\n",
        "657": "          int hash,\n",
        "658": "          @Nullable StrongKeyDummyValueEntry<K> next) {\n",
        "659": "        return new StrongKeyDummyValueEntry<K>(key, hash, next);\n",
        "660": "      }\n",
        "661": "    }\n",
        "662": "  }\n",
        "663": "\n",
        "692": "  /** Concrete implementation of {@link InternalEntry} for weak keys and {@link Dummy} values. */\n",
        "693": "  static final class WeakKeyDummyValueEntry<K>\n",
        "694": "      extends AbstractWeakKeyEntry<K, Dummy, WeakKeyDummyValueEntry<K>>\n",
        "695": "      implements StrongValueEntry<K, Dummy, WeakKeyDummyValueEntry<K>> {\n",
        "696": "    WeakKeyDummyValueEntry(\n",
        "697": "        ReferenceQueue<K> queue, K key, int hash, @Nullable WeakKeyDummyValueEntry<K> next) {\n",
        "698": "      super(queue, key, hash, next);\n",
        "699": "    }\n",
        "700": "\n",
        "701": "    @Override\n",
        "702": "    public Dummy getValue() {\n",
        "703": "      return Dummy.VALUE;\n",
        "704": "    }\n",
        "705": "\n",
        "706": "    void setValue(Dummy value) {}\n",
        "707": "\n",
        "708": "    WeakKeyDummyValueEntry<K> copy(\n",
        "709": "        ReferenceQueue<K> queueForKeys, WeakKeyDummyValueEntry<K> newNext) {\n",
        "710": "      return new WeakKeyDummyValueEntry<K>(queueForKeys, getKey(), this.hash, newNext);\n",
        "711": "    }\n",
        "712": "\n",
        "713": "    /**\n",
        "714": "     * Concrete implementation of {@link InternalEntryHelper} for weak keys and {@link Dummy}\n",
        "715": "     * values.\n",
        "716": "     */\n",
        "717": "    static final class Helper<K>\n",
        "718": "        implements InternalEntryHelper<\n",
        "719": "            K, Dummy, WeakKeyDummyValueEntry<K>, WeakKeyDummyValueSegment<K>> {\n",
        "720": "      private static final Helper<?> INSTANCE = new Helper<Object>();\n",
        "721": "\n",
        "722": "      @SuppressWarnings(\"unchecked\")\n",
        "723": "      static <K> Helper<K> instance() {\n",
        "724": "        return (Helper<K>) INSTANCE;\n",
        "725": "      }\n",
        "726": "\n",
        "727": "      @Override\n",
        "728": "      public Strength keyStrength() {\n",
        "729": "        return Strength.WEAK;\n",
        "730": "      }\n",
        "731": "\n",
        "732": "      @Override\n",
        "733": "      public Strength valueStrength() {\n",
        "734": "        return Strength.STRONG;\n",
        "735": "      }\n",
        "736": "\n",
        "737": "      @Override\n",
        "738": "      public WeakKeyDummyValueSegment<K> newSegment(\n",
        "739": "          MapMakerInternalMap<K, Dummy, WeakKeyDummyValueEntry<K>, WeakKeyDummyValueSegment<K>> map,\n",
        "740": "          int initialCapacity,\n",
        "741": "          int maxSegmentSize) {\n",
        "742": "        return new WeakKeyDummyValueSegment<K>(map, initialCapacity, maxSegmentSize);\n",
        "743": "      }\n",
        "744": "\n",
        "745": "      @Override\n",
        "746": "      public WeakKeyDummyValueEntry<K> copy(\n",
        "747": "          WeakKeyDummyValueSegment<K> segment,\n",
        "748": "          WeakKeyDummyValueEntry<K> entry,\n",
        "749": "          @Nullable WeakKeyDummyValueEntry<K> newNext) {\n",
        "750": "        if (entry.getKey() == null) {\n",
        "751": "          // key collected\n",
        "752": "          return null;\n",
        "753": "        }\n",
        "754": "        return entry.copy(segment.queueForKeys, newNext);\n",
        "755": "      }\n",
        "756": "\n",
        "757": "      @Override\n",
        "758": "      public void setValue(\n",
        "759": "          WeakKeyDummyValueSegment<K> segment, WeakKeyDummyValueEntry<K> entry, Dummy value) {}\n",
        "760": "\n",
        "761": "      @Override\n",
        "762": "      public WeakKeyDummyValueEntry<K> newEntry(\n",
        "763": "          WeakKeyDummyValueSegment<K> segment,\n",
        "764": "          K key,\n",
        "765": "          int hash,\n",
        "766": "          @Nullable WeakKeyDummyValueEntry<K> next) {\n",
        "767": "        return new WeakKeyDummyValueEntry<K>(segment.queueForKeys, key, hash, next);\n",
        "768": "      }\n",
        "769": "    }\n",
        "770": "  }\n",
        "771": "\n",
        "2116": "  /** Concrete implementation of {@link Segment} for strong keys and {@link Dummy} values. */\n",
        "2117": "  static final class StrongKeyDummyValueSegment<K>\n",
        "2118": "      extends Segment<K, Dummy, StrongKeyDummyValueEntry<K>, StrongKeyDummyValueSegment<K>> {\n",
        "2119": "    StrongKeyDummyValueSegment(\n",
        "2120": "        MapMakerInternalMap<K, Dummy, StrongKeyDummyValueEntry<K>, StrongKeyDummyValueSegment<K>>\n",
        "2121": "            map,\n",
        "2122": "        int initialCapacity,\n",
        "2123": "        int maxSegmentSize) {\n",
        "2124": "      super(map, initialCapacity, maxSegmentSize);\n",
        "2125": "    }\n",
        "2126": "\n",
        "2127": "    @Override\n",
        "2128": "    StrongKeyDummyValueSegment<K> self() {\n",
        "2129": "      return this;\n",
        "2130": "    }\n",
        "2131": "\n",
        "2132": "    @SuppressWarnings(\"unchecked\")\n",
        "2133": "    @Override\n",
        "2134": "    public StrongKeyDummyValueEntry<K> castForTesting(InternalEntry<K, Dummy, ?> entry) {\n",
        "2135": "      return (StrongKeyDummyValueEntry<K>) entry;\n",
        "2136": "    }\n",
        "2137": "  }\n",
        "2138": "\n",
        "2251": "  /** Concrete implementation of {@link Segment} for weak keys and {@link Dummy} values. */\n",
        "2252": "  static final class WeakKeyDummyValueSegment<K>\n",
        "2253": "      extends Segment<K, Dummy, WeakKeyDummyValueEntry<K>, WeakKeyDummyValueSegment<K>> {\n",
        "2254": "    private final ReferenceQueue<K> queueForKeys = new ReferenceQueue<K>();\n",
        "2255": "\n",
        "2256": "    WeakKeyDummyValueSegment(\n",
        "2257": "        MapMakerInternalMap<K, Dummy, WeakKeyDummyValueEntry<K>, WeakKeyDummyValueSegment<K>> map,\n",
        "2258": "        int initialCapacity,\n",
        "2259": "        int maxSegmentSize) {\n",
        "2260": "      super(map, initialCapacity, maxSegmentSize);\n",
        "2261": "    }\n",
        "2262": "\n",
        "2263": "    @Override\n",
        "2264": "    WeakKeyDummyValueSegment<K> self() {\n",
        "2265": "      return this;\n",
        "2266": "    }\n",
        "2267": "\n",
        "2268": "    @Override\n",
        "2269": "    ReferenceQueue<K> getKeyReferenceQueueForTesting() {\n",
        "2270": "      return queueForKeys;\n",
        "2271": "    }\n",
        "2272": "\n",
        "2273": "    @SuppressWarnings(\"unchecked\")\n",
        "2274": "    @Override\n",
        "2275": "    public WeakKeyDummyValueEntry<K> castForTesting(InternalEntry<K, Dummy, ?> entry) {\n",
        "2276": "      return (WeakKeyDummyValueEntry<K>) entry;\n",
        "2277": "    }\n",
        "2278": "\n",
        "2279": "    @Override\n",
        "2280": "    void maybeDrainReferenceQueues() {\n",
        "2281": "      drainKeyReferenceQueue(queueForKeys);\n",
        "2282": "    }\n",
        "2283": "\n",
        "2284": "    @Override\n",
        "2285": "    void maybeClearReferenceQueues() {\n",
        "2286": "      clearReferenceQueue(queueForKeys);\n",
        "2287": "    }\n",
        "2288": "  }\n",
        "2289": "\n"
    },
    "removed": {}
}