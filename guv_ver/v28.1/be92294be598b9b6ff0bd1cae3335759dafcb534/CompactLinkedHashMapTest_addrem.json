{
    "addition": {
        "144": "\n",
        "145": "  public void testAllocArraysDefault() {\n",
        "146": "    CompactLinkedHashMap<Integer, String> map = CompactLinkedHashMap.create();\n",
        "147": "    assertThat(map.needsAllocArrays()).isTrue();\n",
        "148": "    assertThat(map.entries).isNull();\n",
        "149": "    assertThat(map.keys).isNull();\n",
        "150": "    assertThat(map.values).isNull();\n",
        "151": "    assertThat(map.links).isNull();\n",
        "152": "\n",
        "153": "    map.put(1, Integer.toString(1));\n",
        "154": "    assertThat(map.needsAllocArrays()).isFalse();\n",
        "155": "    assertThat(map.entries).hasLength(CompactLinkedHashMap.DEFAULT_SIZE);\n",
        "156": "    assertThat(map.keys).hasLength(CompactLinkedHashMap.DEFAULT_SIZE);\n",
        "157": "    assertThat(map.values).hasLength(CompactLinkedHashMap.DEFAULT_SIZE);\n",
        "158": "    assertThat(map.links).hasLength(CompactLinkedHashMap.DEFAULT_SIZE);\n",
        "159": "  }\n",
        "160": "\n",
        "161": "  public void testAllocArraysExpectedSize() {\n",
        "162": "    for (int i = 0; i <= CompactLinkedHashMap.DEFAULT_SIZE; i++) {\n",
        "163": "      CompactLinkedHashMap<Integer, String> map = CompactLinkedHashMap.createWithExpectedSize(i);\n",
        "164": "      assertThat(map.needsAllocArrays()).isTrue();\n",
        "165": "      assertThat(map.entries).isNull();\n",
        "166": "      assertThat(map.keys).isNull();\n",
        "167": "      assertThat(map.values).isNull();\n",
        "168": "      assertThat(map.links).isNull();\n",
        "169": "\n",
        "170": "      map.put(1, Integer.toString(1));\n",
        "171": "      assertThat(map.needsAllocArrays()).isFalse();\n",
        "172": "      int expectedSize = Math.max(1, i);\n",
        "173": "      assertThat(map.entries).hasLength(expectedSize);\n",
        "174": "      assertThat(map.keys).hasLength(expectedSize);\n",
        "175": "      assertThat(map.values).hasLength(expectedSize);\n",
        "176": "      assertThat(map.links).hasLength(expectedSize);\n",
        "177": "    }\n",
        "178": "  }\n"
    },
    "removed": {}
}