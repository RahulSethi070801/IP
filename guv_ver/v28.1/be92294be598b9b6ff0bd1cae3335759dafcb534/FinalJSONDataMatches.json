[{"func":{"oldfunccode":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_oldfunccode_be92294be598b9b6ff0bd1cae3335759dafcb534_1.txt","newfunccode":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_newfunccode_be92294be598b9b6ff0bd1cae3335759dafcb534_1.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/be92294be598b9b6ff0bd1cae3335759dafcb534/CompactHashSet_2","pathinproj":"guava/src/com/google/common/collect/CompactHashSet.java","addlines":[349,350,351],"dellines":[],"addcode":["    if (needsAllocArrays()) {\n","      return false;\n","    }\n"],"delcode":[],"methodSig":"public boolean contains(@Nullable Object object)"},"doc":{"oldfunccode":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_olddocfunccode_be92294be598b9b6ff0bd1cae3335759dafcb534_1.txt","newfunccode":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_newdocfunccode_be92294be598b9b6ff0bd1cae3335759dafcb534_1.txt","newdoc":"","newJdoc":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_newdocnewJdoc_be92294be598b9b6ff0bd1cae3335759dafcb534_1.txt","olddoc":"","oldJdoc":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_olddocJdoc_be92294be598b9b6ff0bd1cae3335759dafcb534_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/be92294be598b9b6ff0bd1cae3335759dafcb534/CompactHashSet_2","pathinproj":"guava/src/com/google/common/collect/CompactHashSet.java","addlines":[289,293,312,316],"dellines":[288,273,292,269],"addcode":["  /** Resizes the entries storage if necessary. */\n","  /** Resizes the entries storage if necessary. */\n","  /** Resizes the entries storage if necessary. */\n","  /** Resizes the entries storage if necessary. */\n"],"delcode":["  /** Returns currentSize + 1, after resizing the entries storage if necessary. */\n","  /** Returns currentSize + 1, after resizing the entries storage if necessary. */\n","  /** Returns currentSize + 1, after resizing the entries storage if necessary. */\n","  /** Returns currentSize + 1, after resizing the entries storage if necessary. */\n"],"methodSig":"private void resizeMeMaybe(int newSize)"},"id":5,"flag":1,"commit":"be92294be598b9b6ff0bd1cae3335759dafcb534"},{"func":{"oldfunccode":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_oldfunccode_be92294be598b9b6ff0bd1cae3335759dafcb534_2.txt","newfunccode":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_newfunccode_be92294be598b9b6ff0bd1cae3335759dafcb534_2.txt","newdoc":" current size, and pointer to the entry to be appended\n known to be a V\n","newJdoc":"","olddoc":" current size, and pointer to the entry to be appended\n known to be a V\n","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/be92294be598b9b6ff0bd1cae3335759dafcb534/CompactHashMap_2","pathinproj":"guava/src/com/google/common/collect/CompactHashMap.java","addlines":[261,262,263],"dellines":[],"addcode":["    if (needsAllocArrays()) {\n","      allocArrays();\n","    }\n"],"delcode":[],"methodSig":"public V put(@Nullable K key, @Nullable V value)"},"doc":{"oldfunccode":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_olddocfunccode_be92294be598b9b6ff0bd1cae3335759dafcb534_2.txt","newfunccode":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_newdocfunccode_be92294be598b9b6ff0bd1cae3335759dafcb534_2.txt","newdoc":"","newJdoc":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_newdocnewJdoc_be92294be598b9b6ff0bd1cae3335759dafcb534_2.txt","olddoc":"","oldJdoc":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_olddocJdoc_be92294be598b9b6ff0bd1cae3335759dafcb534_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/be92294be598b9b6ff0bd1cae3335759dafcb534/CompactHashSet_2","pathinproj":"guava/src/com/google/common/collect/CompactHashSet.java","addlines":[289,293,312,316],"dellines":[288,273,292,269],"addcode":["  /** Resizes the entries storage if necessary. */\n","  /** Resizes the entries storage if necessary. */\n","  /** Resizes the entries storage if necessary. */\n","  /** Resizes the entries storage if necessary. */\n"],"delcode":["  /** Returns currentSize + 1, after resizing the entries storage if necessary. */\n","  /** Returns currentSize + 1, after resizing the entries storage if necessary. */\n","  /** Returns currentSize + 1, after resizing the entries storage if necessary. */\n","  /** Returns currentSize + 1, after resizing the entries storage if necessary. */\n"],"methodSig":"private void resizeMeMaybe(int newSize)"},"id":5,"flag":1,"commit":"be92294be598b9b6ff0bd1cae3335759dafcb534"},{"func":{"oldfunccode":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_oldfunccode_be92294be598b9b6ff0bd1cae3335759dafcb534_3.txt","newfunccode":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_newfunccode_be92294be598b9b6ff0bd1cae3335759dafcb534_3.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/be92294be598b9b6ff0bd1cae3335759dafcb534/CompactLinkedHashMap","pathinproj":"android/guava/src/com/google/common/collect/CompactLinkedHashMap.java","addlines":[192,193,180,182,183,184,189,191],"dellines":[],"addcode":["    int oldCapacity = links.length;\n","    if (oldCapacity < newCapacity) {\n","      Arrays.fill(links, oldCapacity, newCapacity, UNSET);\n","    }\n","    int oldCapacity = links.length;\n","    if (oldCapacity < newCapacity) {\n","      Arrays.fill(links, oldCapacity, newCapacity, UNSET);\n","    }\n"],"delcode":[],"methodSig":" void resizeEntries(int newCapacity)"},"doc":{"oldfunccode":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_olddocfunccode_be92294be598b9b6ff0bd1cae3335759dafcb534_3.txt","newfunccode":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_newdocfunccode_be92294be598b9b6ff0bd1cae3335759dafcb534_3.txt","newdoc":"","newJdoc":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_newdocnewJdoc_be92294be598b9b6ff0bd1cae3335759dafcb534_3.txt","olddoc":"","oldJdoc":"be92294be598b9b6ff0bd1cae3335759dafcb534/Codes/Match_olddocJdoc_be92294be598b9b6ff0bd1cae3335759dafcb534_3.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/be92294be598b9b6ff0bd1cae3335759dafcb534/CompactHashSet_2","pathinproj":"guava/src/com/google/common/collect/CompactHashSet.java","addlines":[289,293,312,316],"dellines":[288,273,292,269],"addcode":["  /** Resizes the entries storage if necessary. */\n","  /** Resizes the entries storage if necessary. */\n","  /** Resizes the entries storage if necessary. */\n","  /** Resizes the entries storage if necessary. */\n"],"delcode":["  /** Returns currentSize + 1, after resizing the entries storage if necessary. */\n","  /** Returns currentSize + 1, after resizing the entries storage if necessary. */\n","  /** Returns currentSize + 1, after resizing the entries storage if necessary. */\n","  /** Returns currentSize + 1, after resizing the entries storage if necessary. */\n"],"methodSig":"private void resizeMeMaybe(int newSize)"},"id":5,"flag":1,"commit":"be92294be598b9b6ff0bd1cae3335759dafcb534"}]