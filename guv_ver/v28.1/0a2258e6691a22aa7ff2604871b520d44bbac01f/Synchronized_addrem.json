{
    "addition": {
        "52": "import org.checkerframework.checker.nullness.qual.Nullable;\n",
        "74": "    SynchronizedObject(Object delegate, @Nullable Object mutex) {\n",
        "108": "  private static <E> Collection<E> collection(Collection<E> collection, @Nullable Object mutex) {\n",
        "114": "    private SynchronizedCollection(Collection<E> delegate, @Nullable Object mutex) {\n",
        "252": "  static <E> Set<E> set(Set<E> set, @Nullable Object mutex) {\n",
        "258": "    SynchronizedSet(Set<E> delegate, @Nullable Object mutex) {\n",
        "287": "  private static <E> SortedSet<E> sortedSet(SortedSet<E> set, @Nullable Object mutex) {\n",
        "292": "    SynchronizedSortedSet(SortedSet<E> delegate, @Nullable Object mutex) {\n",
        "346": "  private static <E> List<E> list(List<E> list, @Nullable Object mutex) {\n",
        "353": "    SynchronizedList(List<E> delegate, @Nullable Object mutex) {\n",
        "464": "    SynchronizedRandomAccessList(List<E> list, @Nullable Object mutex) {\n",
        "471": "  static <E> Multiset<E> multiset(Multiset<E> multiset, @Nullable Object mutex) {\n",
        "483": "    SynchronizedMultiset(Multiset<E> delegate, @Nullable Object mutex) {\n",
        "567": "  static <K, V> Multimap<K, V> multimap(Multimap<K, V> multimap, @Nullable Object mutex) {\n",
        "588": "    SynchronizedMultimap(Multimap<K, V> delegate, @Nullable Object mutex) {\n",
        "761": "      ListMultimap<K, V> multimap, @Nullable Object mutex) {\n",
        "770": "    SynchronizedListMultimap(ListMultimap<K, V> delegate, @Nullable Object mutex) {\n",
        "803": "  static <K, V> SetMultimap<K, V> setMultimap(SetMultimap<K, V> multimap, @Nullable Object mutex) {\n",
        "814": "    SynchronizedSetMultimap(SetMultimap<K, V> delegate, @Nullable Object mutex) {\n",
        "858": "      SortedSetMultimap<K, V> multimap, @Nullable Object mutex) {\n",
        "867": "    SynchronizedSortedSetMultimap(SortedSetMultimap<K, V> delegate, @Nullable Object mutex) {\n",
        "908": "      Collection<E> collection, @Nullable Object mutex) {\n",
        "921": "  private static <E> Set<E> typePreservingSet(Set<E> set, @Nullable Object mutex) {\n",
        "931": "    SynchronizedAsMapEntries(Set<Entry<K, Collection<V>>> delegate, @Nullable Object mutex) {\n",
        "1022": "  static <K, V> Map<K, V> map(Map<K, V> map, @Nullable Object mutex) {\n",
        "1031": "    SynchronizedMap(Map<K, V> delegate, @Nullable Object mutex) {\n",
        "1233": "  static <K, V> SortedMap<K, V> sortedMap(SortedMap<K, V> sortedMap, @Nullable Object mutex) {\n",
        "1240": "    SynchronizedSortedMap(SortedMap<K, V> delegate, @Nullable Object mutex) {\n",
        "1294": "  static <K, V> BiMap<K, V> biMap(BiMap<K, V> bimap, @Nullable Object mutex) {\n",
        "1308": "        BiMap<K, V> delegate, @Nullable Object mutex, @Nullable BiMap<V, K> inverse) {\n",
        "1352": "    SynchronizedAsMap(Map<K, Collection<V>> delegate, @Nullable Object mutex) {\n",
        "1394": "    SynchronizedAsMapValues(Collection<Collection<V>> delegate, @Nullable Object mutex) {\n",
        "1416": "    SynchronizedNavigableSet(NavigableSet<E> delegate, @Nullable Object mutex) {\n",
        "1528": "  static <E> NavigableSet<E> navigableSet(NavigableSet<E> navigableSet, @Nullable Object mutex) {\n",
        "1544": "      NavigableMap<K, V> navigableMap, @Nullable Object mutex) {\n",
        "1553": "    SynchronizedNavigableMap(NavigableMap<K, V> delegate, @Nullable Object mutex) {\n",
        "1729": "      @Nullable Entry<K, V> entry, @Nullable Object mutex) {\n",
        "1739": "    SynchronizedEntry(Entry<K, V> delegate, @Nullable Object mutex) {\n",
        "1787": "  static <E> Queue<E> queue(Queue<E> queue, @Nullable Object mutex) {\n",
        "1793": "    SynchronizedQueue(Queue<E> delegate, @Nullable Object mutex) {\n",
        "1840": "  static <E> Deque<E> deque(Deque<E> deque, @Nullable Object mutex) {\n",
        "1846": "    SynchronizedDeque(Deque<E> delegate, @Nullable Object mutex) {\n",
        "1995": "    public boolean contains(@Nullable Object rowKey, @Nullable Object columnKey) {\n",
        "2002": "    public boolean containsRow(@Nullable Object rowKey) {\n",
        "2009": "    public boolean containsColumn(@Nullable Object columnKey) {\n",
        "2016": "    public boolean containsValue(@Nullable Object value) {\n",
        "2023": "    public V get(@Nullable Object rowKey, @Nullable Object columnKey) {\n",
        "2051": "    public V put(@Nullable R rowKey, @Nullable C columnKey, @Nullable V value) {\n",
        "2065": "    public V remove(@Nullable Object rowKey, @Nullable Object columnKey) {\n",
        "2072": "    public Map<C, V> row(@Nullable R rowKey) {\n",
        "2079": "    public Map<R, V> column(@Nullable C columnKey) {\n",
        "2153": "    public boolean equals(@Nullable Object obj) {\n"
    },
    "removed": {
        "52": "import org.checkerframework.checker.nullness.compatqual.NullableDecl;\n",
        "74": "    SynchronizedObject(Object delegate, @NullableDecl Object mutex) {\n",
        "108": "  private static <E> Collection<E> collection(\n",
        "109": "      Collection<E> collection, @NullableDecl Object mutex) {\n",
        "115": "    private SynchronizedCollection(Collection<E> delegate, @NullableDecl Object mutex) {\n",
        "253": "  static <E> Set<E> set(Set<E> set, @NullableDecl Object mutex) {\n",
        "259": "    SynchronizedSet(Set<E> delegate, @NullableDecl Object mutex) {\n",
        "288": "  private static <E> SortedSet<E> sortedSet(SortedSet<E> set, @NullableDecl Object mutex) {\n",
        "293": "    SynchronizedSortedSet(SortedSet<E> delegate, @NullableDecl Object mutex) {\n",
        "347": "  private static <E> List<E> list(List<E> list, @NullableDecl Object mutex) {\n",
        "354": "    SynchronizedList(List<E> delegate, @NullableDecl Object mutex) {\n",
        "465": "    SynchronizedRandomAccessList(List<E> list, @NullableDecl Object mutex) {\n",
        "472": "  static <E> Multiset<E> multiset(Multiset<E> multiset, @NullableDecl Object mutex) {\n",
        "484": "    SynchronizedMultiset(Multiset<E> delegate, @NullableDecl Object mutex) {\n",
        "568": "  static <K, V> Multimap<K, V> multimap(Multimap<K, V> multimap, @NullableDecl Object mutex) {\n",
        "589": "    SynchronizedMultimap(Multimap<K, V> delegate, @NullableDecl Object mutex) {\n",
        "762": "      ListMultimap<K, V> multimap, @NullableDecl Object mutex) {\n",
        "771": "    SynchronizedListMultimap(ListMultimap<K, V> delegate, @NullableDecl Object mutex) {\n",
        "804": "  static <K, V> SetMultimap<K, V> setMultimap(\n",
        "805": "      SetMultimap<K, V> multimap, @NullableDecl Object mutex) {\n",
        "816": "    SynchronizedSetMultimap(SetMultimap<K, V> delegate, @NullableDecl Object mutex) {\n",
        "860": "      SortedSetMultimap<K, V> multimap, @NullableDecl Object mutex) {\n",
        "869": "    SynchronizedSortedSetMultimap(SortedSetMultimap<K, V> delegate, @NullableDecl Object mutex) {\n",
        "910": "      Collection<E> collection, @NullableDecl Object mutex) {\n",
        "923": "  private static <E> Set<E> typePreservingSet(Set<E> set, @NullableDecl Object mutex) {\n",
        "933": "    SynchronizedAsMapEntries(Set<Entry<K, Collection<V>>> delegate, @NullableDecl Object mutex) {\n",
        "1024": "  static <K, V> Map<K, V> map(Map<K, V> map, @NullableDecl Object mutex) {\n",
        "1033": "    SynchronizedMap(Map<K, V> delegate, @NullableDecl Object mutex) {\n",
        "1235": "  static <K, V> SortedMap<K, V> sortedMap(SortedMap<K, V> sortedMap, @NullableDecl Object mutex) {\n",
        "1242": "    SynchronizedSortedMap(SortedMap<K, V> delegate, @NullableDecl Object mutex) {\n",
        "1296": "  static <K, V> BiMap<K, V> biMap(BiMap<K, V> bimap, @NullableDecl Object mutex) {\n",
        "1310": "        BiMap<K, V> delegate, @NullableDecl Object mutex, @NullableDecl BiMap<V, K> inverse) {\n",
        "1354": "    SynchronizedAsMap(Map<K, Collection<V>> delegate, @NullableDecl Object mutex) {\n",
        "1396": "    SynchronizedAsMapValues(Collection<Collection<V>> delegate, @NullableDecl Object mutex) {\n",
        "1418": "    SynchronizedNavigableSet(NavigableSet<E> delegate, @NullableDecl Object mutex) {\n",
        "1530": "  static <E> NavigableSet<E> navigableSet(\n",
        "1531": "      NavigableSet<E> navigableSet, @NullableDecl Object mutex) {\n",
        "1547": "      NavigableMap<K, V> navigableMap, @NullableDecl Object mutex) {\n",
        "1556": "    SynchronizedNavigableMap(NavigableMap<K, V> delegate, @NullableDecl Object mutex) {\n",
        "1732": "      @NullableDecl Entry<K, V> entry, @NullableDecl Object mutex) {\n",
        "1742": "    SynchronizedEntry(Entry<K, V> delegate, @NullableDecl Object mutex) {\n",
        "1790": "  static <E> Queue<E> queue(Queue<E> queue, @NullableDecl Object mutex) {\n",
        "1796": "    SynchronizedQueue(Queue<E> delegate, @NullableDecl Object mutex) {\n",
        "1843": "  static <E> Deque<E> deque(Deque<E> deque, @NullableDecl Object mutex) {\n",
        "1849": "    SynchronizedDeque(Deque<E> delegate, @NullableDecl Object mutex) {\n",
        "1998": "    public boolean contains(@NullableDecl Object rowKey, @NullableDecl Object columnKey) {\n",
        "2005": "    public boolean containsRow(@NullableDecl Object rowKey) {\n",
        "2012": "    public boolean containsColumn(@NullableDecl Object columnKey) {\n",
        "2019": "    public boolean containsValue(@NullableDecl Object value) {\n",
        "2026": "    public V get(@NullableDecl Object rowKey, @NullableDecl Object columnKey) {\n",
        "2054": "    public V put(@NullableDecl R rowKey, @NullableDecl C columnKey, @NullableDecl V value) {\n",
        "2068": "    public V remove(@NullableDecl Object rowKey, @NullableDecl Object columnKey) {\n",
        "2075": "    public Map<C, V> row(@NullableDecl R rowKey) {\n",
        "2082": "    public Map<R, V> column(@NullableDecl C columnKey) {\n",
        "2156": "    public boolean equals(@NullableDecl Object obj) {\n"
    }
}