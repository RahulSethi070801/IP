{
    "addition": {
        "68": "        MultimapTestSuiteBuilder<K, V, M>, TestMultimapGenerator<K, V, M>, M, Entry<K, V>> {\n",
        "104": "              ?, ? extends OneSizeTestContainerGenerator<M, Entry<K, V>>>\n",
        "140": "              ?, ? extends OneSizeTestContainerGenerator<M, Entry<K, V>>>\n",
        "152": "              ?, ? extends OneSizeTestContainerGenerator<M, Entry<K, V>>>\n",
        "164": "              ?, ? extends OneSizeTestContainerGenerator<M, Entry<K, V>>>\n",
        "176": "              ?, ? extends OneSizeTestContainerGenerator<M, Entry<K, V>>>\n",
        "193": "              ?, ? extends OneSizeTestContainerGenerator<M, Entry<K, V>>>\n",
        "281": "    for (Entry<Feature<?>, Feature<?>> entry : GET_FEATURE_MAP.entries()) {\n",
        "308": "    private final OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator;\n",
        "341": "      List<Entry<K, V>> builder = new ArrayList<>();\n",
        "343": "        Entry<K, Collection<V>> entry = (Entry<K, Collection<V>>) o;\n",
        "362": "      List<Entry<K, V>> builder = new ArrayList<>();\n",
        "369": "      Iterable<Entry<K, V>> ordered = multimapGenerator.order(builder);\n",
        "371": "      for (Entry<K, V> entry : ordered) {\n",
        "392": "    private final OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator;\n",
        "427": "    private final OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator;\n",
        "480": "    private final OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator;\n",
        "502": "      Entry[] entries = new Entry[elements.length];\n",
        "548": "    final OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator;\n",
        "551": "        OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator) {\n",
        "603": "        OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator) {\n",
        "623": "    private final OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator;\n",
        "626": "        OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator) {\n",
        "631": "    public SampleElements<Entry<K, V>> samples() {\n",
        "636": "    public Entry<K, V>[] createArray(int length) {\n",
        "641": "    public Iterable<Entry<K, V>> order(List<Entry<K, V>> insertionOrder) {\n"
    },
    "removed": {
        "68": "        MultimapTestSuiteBuilder<K, V, M>, TestMultimapGenerator<K, V, M>, M, Map.Entry<K, V>> {\n",
        "104": "              ?, ? extends OneSizeTestContainerGenerator<M, Map.Entry<K, V>>>\n",
        "140": "              ?, ? extends OneSizeTestContainerGenerator<M, Map.Entry<K, V>>>\n",
        "152": "              ?, ? extends OneSizeTestContainerGenerator<M, Map.Entry<K, V>>>\n",
        "164": "              ?, ? extends OneSizeTestContainerGenerator<M, Map.Entry<K, V>>>\n",
        "176": "              ?, ? extends OneSizeTestContainerGenerator<M, Map.Entry<K, V>>>\n",
        "193": "              ?, ? extends OneSizeTestContainerGenerator<M, Map.Entry<K, V>>>\n",
        "281": "    for (Map.Entry<Feature<?>, Feature<?>> entry : GET_FEATURE_MAP.entries()) {\n",
        "308": "    private final OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator;\n",
        "341": "      List<Map.Entry<K, V>> builder = new ArrayList<>();\n",
        "343": "        Map.Entry<K, Collection<V>> entry = (Entry<K, Collection<V>>) o;\n",
        "362": "      List<Map.Entry<K, V>> builder = new ArrayList<>();\n",
        "369": "      Iterable<Map.Entry<K, V>> ordered = multimapGenerator.order(builder);\n",
        "371": "      for (Map.Entry<K, V> entry : ordered) {\n",
        "392": "    private final OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator;\n",
        "427": "    private final OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator;\n",
        "480": "    private final OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator;\n",
        "502": "      Map.Entry[] entries = new Map.Entry[elements.length];\n",
        "548": "    final OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator;\n",
        "551": "        OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator) {\n",
        "603": "        OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator) {\n",
        "623": "    private final OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator;\n",
        "626": "        OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator) {\n",
        "631": "    public SampleElements<Map.Entry<K, V>> samples() {\n",
        "636": "    public Map.Entry<K, V>[] createArray(int length) {\n",
        "641": "    public Iterable<Map.Entry<K, V>> order(List<Map.Entry<K, V>> insertionOrder) {\n"
    }
}