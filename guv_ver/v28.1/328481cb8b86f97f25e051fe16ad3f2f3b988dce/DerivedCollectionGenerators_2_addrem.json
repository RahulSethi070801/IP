{
    "addition": {
        "45": "      implements TestSetGenerator<Entry<K, V>>, DerivedGenerator {\n",
        "46": "    private final OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator;\n",
        "49": "        OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator) {\n",
        "54": "    public SampleElements<Entry<K, V>> samples() {\n",
        "59": "    public Set<Entry<K, V>> create(Object... elements) {\n",
        "64": "    public Entry<K, V>[] createArray(int length) {\n",
        "69": "    public Iterable<Entry<K, V>> order(List<Entry<K, V>> insertionOrder) {\n",
        "74": "    public OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> getInnerGenerator() {\n",
        "83": "      OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator) {\n",
        "94": "    private final OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator;\n",
        "98": "        OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator) {\n",
        "100": "      final SampleElements<Entry<K, V>> mapSamples = this.mapGenerator.samples();\n",
        "121": "      Collection<Entry<K, V>> originalEntries = mapGenerator.getSampleElements(elements.length);\n",
        "124": "      Collection<Entry<K, V>> entries = new ArrayList<>(elements.length);\n",
        "126": "      for (Entry<K, V> entry : originalEntries) {\n",
        "158": "    public OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> getInnerGenerator() {\n",
        "201": "    private final OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator;\n",
        "205": "        OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator) {\n",
        "207": "      final SampleElements<Entry<K, V>> mapSamples = this.mapGenerator.samples();\n",
        "228": "      Collection<Entry<K, V>> originalEntries = mapGenerator.getSampleElements(elements.length);\n",
        "231": "      Collection<Entry<K, V>> entries = new ArrayList<>(elements.length);\n",
        "233": "      for (Entry<K, V> entry : originalEntries) {\n",
        "275": "    public OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> getInnerGenerator() {\n"
    },
    "removed": {
        "45": "      implements TestSetGenerator<Map.Entry<K, V>>, DerivedGenerator {\n",
        "46": "    private final OneSizeTestContainerGenerator<Map<K, V>, Map.Entry<K, V>> mapGenerator;\n",
        "49": "        OneSizeTestContainerGenerator<Map<K, V>, Map.Entry<K, V>> mapGenerator) {\n",
        "54": "    public SampleElements<Map.Entry<K, V>> samples() {\n",
        "59": "    public Set<Map.Entry<K, V>> create(Object... elements) {\n",
        "64": "    public Map.Entry<K, V>[] createArray(int length) {\n",
        "69": "    public Iterable<Map.Entry<K, V>> order(List<Map.Entry<K, V>> insertionOrder) {\n",
        "74": "    public OneSizeTestContainerGenerator<Map<K, V>, Map.Entry<K, V>> getInnerGenerator() {\n",
        "83": "      OneSizeTestContainerGenerator<Map<K, V>, Map.Entry<K, V>> mapGenerator) {\n",
        "94": "    private final OneSizeTestContainerGenerator<Map<K, V>, Map.Entry<K, V>> mapGenerator;\n",
        "98": "        OneSizeTestContainerGenerator<Map<K, V>, Map.Entry<K, V>> mapGenerator) {\n",
        "100": "      final SampleElements<Map.Entry<K, V>> mapSamples = this.mapGenerator.samples();\n",
        "121": "      Collection<Map.Entry<K, V>> originalEntries = mapGenerator.getSampleElements(elements.length);\n",
        "124": "      Collection<Map.Entry<K, V>> entries = new ArrayList<>(elements.length);\n",
        "126": "      for (Map.Entry<K, V> entry : originalEntries) {\n",
        "158": "    public OneSizeTestContainerGenerator<Map<K, V>, Map.Entry<K, V>> getInnerGenerator() {\n",
        "201": "    private final OneSizeTestContainerGenerator<Map<K, V>, Map.Entry<K, V>> mapGenerator;\n",
        "205": "        OneSizeTestContainerGenerator<Map<K, V>, Map.Entry<K, V>> mapGenerator) {\n",
        "207": "      final SampleElements<Map.Entry<K, V>> mapSamples = this.mapGenerator.samples();\n",
        "228": "      Collection<Map.Entry<K, V>> originalEntries = mapGenerator.getSampleElements(elements.length);\n",
        "231": "      Collection<Map.Entry<K, V>> entries = new ArrayList<>(elements.length);\n",
        "233": "      for (Map.Entry<K, V> entry : originalEntries) {\n",
        "275": "    public OneSizeTestContainerGenerator<Map<K, V>, Map.Entry<K, V>> getInnerGenerator() {\n"
    }
}