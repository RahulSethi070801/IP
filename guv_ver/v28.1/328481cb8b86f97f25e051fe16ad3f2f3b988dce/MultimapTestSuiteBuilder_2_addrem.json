{
    "addition": {
        "68": "        MultimapTestSuiteBuilder<K, V, M>, TestMultimapGenerator<K, V, M>, M, Entry<K, V>> {\n",
        "105": "              ?, ? extends OneSizeTestContainerGenerator<M, Entry<K, V>>>\n",
        "141": "              ?, ? extends OneSizeTestContainerGenerator<M, Entry<K, V>>>\n",
        "153": "              ?, ? extends OneSizeTestContainerGenerator<M, Entry<K, V>>>\n",
        "165": "              ?, ? extends OneSizeTestContainerGenerator<M, Entry<K, V>>>\n",
        "177": "              ?, ? extends OneSizeTestContainerGenerator<M, Entry<K, V>>>\n",
        "194": "              ?, ? extends OneSizeTestContainerGenerator<M, Entry<K, V>>>\n",
        "282": "    for (Entry<Feature<?>, Feature<?>> entry : GET_FEATURE_MAP.entries()) {\n",
        "309": "    private final OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator;\n",
        "342": "      List<Entry<K, V>> builder = new ArrayList<>();\n",
        "344": "        Entry<K, Collection<V>> entry = (Entry<K, Collection<V>>) o;\n",
        "363": "      List<Entry<K, V>> builder = new ArrayList<>();\n",
        "370": "      Iterable<Entry<K, V>> ordered = multimapGenerator.order(builder);\n",
        "372": "      for (Entry<K, V> entry : ordered) {\n",
        "393": "    private final OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator;\n",
        "428": "    private final OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator;\n",
        "481": "    private final OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator;\n",
        "503": "      Entry[] entries = new Entry[elements.length];\n",
        "549": "    final OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator;\n",
        "552": "        OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator) {\n",
        "604": "        OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator) {\n",
        "624": "    private final OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator;\n",
        "627": "        OneSizeTestContainerGenerator<M, Entry<K, V>> multimapGenerator) {\n",
        "632": "    public SampleElements<Entry<K, V>> samples() {\n",
        "637": "    public Entry<K, V>[] createArray(int length) {\n",
        "642": "    public Iterable<Entry<K, V>> order(List<Entry<K, V>> insertionOrder) {\n"
    },
    "removed": {
        "68": "        MultimapTestSuiteBuilder<K, V, M>, TestMultimapGenerator<K, V, M>, M, Map.Entry<K, V>> {\n",
        "105": "              ?, ? extends OneSizeTestContainerGenerator<M, Map.Entry<K, V>>>\n",
        "141": "              ?, ? extends OneSizeTestContainerGenerator<M, Map.Entry<K, V>>>\n",
        "153": "              ?, ? extends OneSizeTestContainerGenerator<M, Map.Entry<K, V>>>\n",
        "165": "              ?, ? extends OneSizeTestContainerGenerator<M, Map.Entry<K, V>>>\n",
        "177": "              ?, ? extends OneSizeTestContainerGenerator<M, Map.Entry<K, V>>>\n",
        "194": "              ?, ? extends OneSizeTestContainerGenerator<M, Map.Entry<K, V>>>\n",
        "282": "    for (Map.Entry<Feature<?>, Feature<?>> entry : GET_FEATURE_MAP.entries()) {\n",
        "309": "    private final OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator;\n",
        "342": "      List<Map.Entry<K, V>> builder = new ArrayList<>();\n",
        "344": "        Map.Entry<K, Collection<V>> entry = (Entry<K, Collection<V>>) o;\n",
        "363": "      List<Map.Entry<K, V>> builder = new ArrayList<>();\n",
        "370": "      Iterable<Map.Entry<K, V>> ordered = multimapGenerator.order(builder);\n",
        "372": "      for (Map.Entry<K, V> entry : ordered) {\n",
        "393": "    private final OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator;\n",
        "428": "    private final OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator;\n",
        "481": "    private final OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator;\n",
        "503": "      Map.Entry[] entries = new Map.Entry[elements.length];\n",
        "549": "    final OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator;\n",
        "552": "        OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator) {\n",
        "604": "        OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator) {\n",
        "624": "    private final OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator;\n",
        "627": "        OneSizeTestContainerGenerator<M, Map.Entry<K, V>> multimapGenerator) {\n",
        "632": "    public SampleElements<Map.Entry<K, V>> samples() {\n",
        "637": "    public Map.Entry<K, V>[] createArray(int length) {\n",
        "642": "    public Iterable<Map.Entry<K, V>> order(List<Map.Entry<K, V>> insertionOrder) {\n"
    }
}