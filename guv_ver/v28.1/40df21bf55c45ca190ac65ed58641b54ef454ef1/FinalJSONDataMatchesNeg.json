[{"func":{"oldfunccode":"40df21bf55c45ca190ac65ed58641b54ef454ef1/Codes_neg/Match_oldfunccode_40df21bf55c45ca190ac65ed58641b54ef454ef1_1.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"40df21bf55c45ca190ac65ed58641b54ef454ef1/Codes_neg/Match_oldfuncoldJdoc_40df21bf55c45ca190ac65ed58641b54ef454ef1_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/40df21bf55c45ca190ac65ed58641b54ef454ef1/InternetDomainName_2","pathinproj":"guava/src/com/google/common/net/InternetDomainName.java","addlines":[],"dellines":[474,476],"addcode":[],"delcode":["  private static boolean matchesWildcardPublicSuffix(String domain) {\n","    return pieces.length == 2 && PublicSuffixPatterns.UNDER.containsKey(pieces[1]);\n","  private static boolean matchesWildcardPublicSuffix(String domain) {\n","    return pieces.length == 2 && PublicSuffixPatterns.UNDER.containsKey(pieces[1]);\n"],"methodSig":"private static boolean matchesWildcardPublicSuffix(String domain)"},"doc":{"oldfunccode":"40df21bf55c45ca190ac65ed58641b54ef454ef1/Codes_neg/Match_olddocfunccode_40df21bf55c45ca190ac65ed58641b54ef454ef1_1.txt","newfunccode":"40df21bf55c45ca190ac65ed58641b54ef454ef1/Codes_neg/Match_newdocfunccode_40df21bf55c45ca190ac65ed58641b54ef454ef1_1.txt","newdoc":"","newJdoc":"40df21bf55c45ca190ac65ed58641b54ef454ef1/Codes_neg/Match_newdocnewJdoc_40df21bf55c45ca190ac65ed58641b54ef454ef1_1.txt","olddoc":"","oldJdoc":"40df21bf55c45ca190ac65ed58641b54ef454ef1/Codes_neg/Match_olddocJdoc_40df21bf55c45ca190ac65ed58641b54ef454ef1_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/40df21bf55c45ca190ac65ed58641b54ef454ef1/InternetDomainName_2","pathinproj":"guava/src/com/google/common/net/InternetDomainName.java","addlines":[395,396,397,398,399],"dellines":[371,372,373,377,378,379,380,381],"addcode":["   * Returns the portion of this domain name that is one level beneath the {@linkplain\n","   * #isPublicSuffix() public suffix}. For example, for {@code x.adwords.google.co.uk} it returns\n","   * {@code google.co.uk}, since {@code co.uk} is a public suffix. Similarly, for {@code\n","   * myblog.blogspot.com} it returns the same domain, {@code myblog.blogspot.com}, since {@code\n","   * blogspot.com} is a public suffix.\n","   * Returns the portion of this domain name that is one level beneath the {@linkplain\n","   * #isPublicSuffix() public suffix}. For example, for {@code x.adwords.google.co.uk} it returns\n","   * {@code google.co.uk}, since {@code co.uk} is a public suffix. Similarly, for {@code\n","   * myblog.blogspot.com} it returns the same domain, {@code myblog.blogspot.com}, since {@code\n","   * blogspot.com} is a public suffix.\n"],"delcode":["   * Returns the portion of this domain name that is one level beneath the public suffix. For\n","   * example, for {@code x.adwords.google.co.uk} it returns {@code google.co.uk}, since\n","   * {@code co.uk} is a public suffix.\n","   * <p>This method should not be used to determine the topmost parent domain which is addressable\n","   * as a host, as many public suffixes are also addressable hosts. For example, the domain\n","   * {@code foo.bar.uk.com} has a public suffix of {@code uk.com}, so it would return\n","   * {@code bar.uk.com} from this method. But {@code uk.com} is itself an addressable host.\n","   *\n","   * Returns the portion of this domain name that is one level beneath the public suffix. For\n","   * example, for {@code x.adwords.google.co.uk} it returns {@code google.co.uk}, since\n","   * {@code co.uk} is a public suffix.\n","   * <p>This method should not be used to determine the topmost parent domain which is addressable\n","   * as a host, as many public suffixes are also addressable hosts. For example, the domain\n","   * {@code foo.bar.uk.com} has a public suffix of {@code uk.com}, so it would return\n","   * {@code bar.uk.com} from this method. But {@code uk.com} is itself an addressable host.\n","   *\n"],"methodSig":"public InternetDomainName topPrivateDomain()"},"id":1,"flag":1,"commit":"40df21bf55c45ca190ac65ed58641b54ef454ef1"},{"func":{"oldfunccode":"","newfunccode":"40df21bf55c45ca190ac65ed58641b54ef454ef1/Codes_neg/Match_newfunccode_40df21bf55c45ca190ac65ed58641b54ef454ef1_2.txt","newdoc":"","newJdoc":"40df21bf55c45ca190ac65ed58641b54ef454ef1/Codes_neg/Match_newfuncnewJdoc_40df21bf55c45ca190ac65ed58641b54ef454ef1_2.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/40df21bf55c45ca190ac65ed58641b54ef454ef1/InternetDomainName_2","pathinproj":"guava/src/com/google/common/net/InternetDomainName.java","addlines":[598,599,601,602,603,604],"dellines":[],"addcode":["  private static boolean matchesWildcardSuffixType(\n","      Optional<PublicSuffixType> desiredType, String domain) {\n","    return pieces.length == 2\n","        && matchesType(\n","            desiredType, Optional.fromNullable(PublicSuffixPatterns.UNDER.get(pieces[1])));\n","  }\n","  private static boolean matchesWildcardSuffixType(\n","      Optional<PublicSuffixType> desiredType, String domain) {\n","    return pieces.length == 2\n","        && matchesType(\n","            desiredType, Optional.fromNullable(PublicSuffixPatterns.UNDER.get(pieces[1])));\n","  }\n"],"delcode":[],"methodSig":"private static boolean matchesWildcardSuffixType(Optional<PublicSuffixType> desiredType, String domain)"},"doc":{"oldfunccode":"40df21bf55c45ca190ac65ed58641b54ef454ef1/Codes_neg/Match_olddocfunccode_40df21bf55c45ca190ac65ed58641b54ef454ef1_2.txt","newfunccode":"40df21bf55c45ca190ac65ed58641b54ef454ef1/Codes_neg/Match_newdocfunccode_40df21bf55c45ca190ac65ed58641b54ef454ef1_2.txt","newdoc":"","newJdoc":"40df21bf55c45ca190ac65ed58641b54ef454ef1/Codes_neg/Match_newdocnewJdoc_40df21bf55c45ca190ac65ed58641b54ef454ef1_2.txt","olddoc":"","oldJdoc":"40df21bf55c45ca190ac65ed58641b54ef454ef1/Codes_neg/Match_olddocJdoc_40df21bf55c45ca190ac65ed58641b54ef454ef1_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/40df21bf55c45ca190ac65ed58641b54ef454ef1/InternetDomainName_2","pathinproj":"guava/src/com/google/common/net/InternetDomainName.java","addlines":[364,365,366],"dellines":[336,337,338,331,332,333,334,335],"addcode":["   * while not being a public suffix itself. For example, returns {@code true} for {@code\n","   * www.google.com}, {@code foo.co.uk} and {@code myblog.blogspot.com}, but not for {@code com},\n","   * {@code co.uk}, {@code google.invalid}, or {@code blogspot.com}.\n","   * while not being a public suffix itself. For example, returns {@code true} for {@code\n","   * www.google.com}, {@code foo.co.uk} and {@code myblog.blogspot.com}, but not for {@code com},\n","   * {@code co.uk}, {@code google.invalid}, or {@code blogspot.com}.\n"],"delcode":["   * while not being a public suffix itself. For example, returns {@code true} for\n","   * {@code www.google.com}, {@code foo.co.uk} and {@code bar.ca.us}, but not for {@code google},\n","   * {@code com}, or {@code\n","   * google.foo}.\n","   *\n","   * <p><b>Warning:</b> a {@code false} result from this method does not imply that the domain does\n","   * not represent an addressable host, as many public suffixes are also addressable hosts. Use\n","   * {@link #hasPublicSuffix()} for that test.\n","   * while not being a public suffix itself. For example, returns {@code true} for\n","   * {@code www.google.com}, {@code foo.co.uk} and {@code bar.ca.us}, but not for {@code google},\n","   * {@code com}, or {@code\n","   * google.foo}.\n","   *\n","   * <p><b>Warning:</b> a {@code false} result from this method does not imply that the domain does\n","   * not represent an addressable host, as many public suffixes are also addressable hosts. Use\n","   * {@link #hasPublicSuffix()} for that test.\n"],"methodSig":"public boolean isUnderPublicSuffix()"},"id":1,"flag":1,"commit":"40df21bf55c45ca190ac65ed58641b54ef454ef1"}]