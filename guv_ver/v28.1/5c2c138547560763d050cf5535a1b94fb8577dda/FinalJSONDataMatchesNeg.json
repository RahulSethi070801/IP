[{"func":{"oldfunccode":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_oldfunccode_5c2c138547560763d050cf5535a1b94fb8577dda_1.txt","newfunccode":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_newfunccode_5c2c138547560763d050cf5535a1b94fb8577dda_1.txt","newdoc":"","newJdoc":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_newfuncnewJdoc_5c2c138547560763d050cf5535a1b94fb8577dda_1.txt","olddoc":"","oldJdoc":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_oldfuncoldJdoc_5c2c138547560763d050cf5535a1b94fb8577dda_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/5c2c138547560763d050cf5535a1b94fb8577dda/CharMatcher_2","pathinproj":"guava/src/com/google/common/base/CharMatcher.java","addlines":[192],"dellines":[],"addcode":["  @Deprecated\n","  @Deprecated\n"],"delcode":[],"methodSig":"public static CharMatcher javaDigit()"},"doc":{"oldfunccode":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_olddocfunccode_5c2c138547560763d050cf5535a1b94fb8577dda_1.txt","newfunccode":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_newdocfunccode_5c2c138547560763d050cf5535a1b94fb8577dda_1.txt","newdoc":"","newJdoc":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_newdocnewJdoc_5c2c138547560763d050cf5535a1b94fb8577dda_1.txt","olddoc":"","oldJdoc":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_olddocJdoc_5c2c138547560763d050cf5535a1b94fb8577dda_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/5c2c138547560763d050cf5535a1b94fb8577dda/CharMatcher_2","pathinproj":"guava/src/com/google/common/base/CharMatcher.java","addlines":[253,254],"dellines":[],"addcode":["   * <p>All ISO control codes are on the BMP and thus supported by this API.\n","   *\n","   * <p>All ISO control codes are on the BMP and thus supported by this API.\n","   *\n"],"delcode":[],"methodSig":"public static CharMatcher javaIsoControl()"},"id":1,"flag":1,"commit":"5c2c138547560763d050cf5535a1b94fb8577dda"},{"func":{"oldfunccode":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_oldfunccode_5c2c138547560763d050cf5535a1b94fb8577dda_2.txt","newfunccode":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_newfunccode_5c2c138547560763d050cf5535a1b94fb8577dda_2.txt","newdoc":"","newJdoc":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_newfuncnewJdoc_5c2c138547560763d050cf5535a1b94fb8577dda_2.txt","olddoc":"","oldJdoc":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_oldfuncoldJdoc_5c2c138547560763d050cf5535a1b94fb8577dda_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/5c2c138547560763d050cf5535a1b94fb8577dda/CharMatcher_2","pathinproj":"guava/src/com/google/common/base/CharMatcher.java","addlines":[192],"dellines":[],"addcode":["  @Deprecated\n","  @Deprecated\n"],"delcode":[],"methodSig":"public static CharMatcher javaDigit()"},"doc":{"oldfunccode":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_olddocfunccode_5c2c138547560763d050cf5535a1b94fb8577dda_2.txt","newfunccode":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_newdocfunccode_5c2c138547560763d050cf5535a1b94fb8577dda_2.txt","newdoc":" TODO(lowasser): is it potentially worth just going ahead and building a precomputed\n matcher?\n","newJdoc":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_newdocnewJdoc_5c2c138547560763d050cf5535a1b94fb8577dda_2.txt","olddoc":" TODO(lowasser): is it potentially worth just going ahead and building a precomputed\n matcher?\n","oldJdoc":"5c2c138547560763d050cf5535a1b94fb8577dda/Codes_neg/Match_olddocJdoc_5c2c138547560763d050cf5535a1b94fb8577dda_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/5c2c138547560763d050cf5535a1b94fb8577dda/CharMatcher_2","pathinproj":"guava/src/com/google/common/base/CharMatcher.java","addlines":[487,488],"dellines":[448,447],"addcode":["   * Returns a {@code char} matcher that matches any BMP character present in the given character\n","   * sequence. Returns a bogus matcher if the sequence contains supplementary characters.\n","   * Returns a {@code char} matcher that matches any BMP character present in the given character\n","   * sequence. Returns a bogus matcher if the sequence contains supplementary characters.\n"],"delcode":["   * Returns a {@code char} matcher that matches any character present in the given character\n","   * sequence.\n","   * Returns a {@code char} matcher that matches any character present in the given character\n","   * sequence.\n"],"methodSig":"public static CharMatcher anyOf(final CharSequence sequence)"},"id":1,"flag":1,"commit":"5c2c138547560763d050cf5535a1b94fb8577dda"}]