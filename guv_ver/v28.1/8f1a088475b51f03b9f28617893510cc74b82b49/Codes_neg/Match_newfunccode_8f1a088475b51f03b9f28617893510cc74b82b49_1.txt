public static <A, B> void forEachPair(Stream<A> streamA, Stream<B> streamB, BiConsumer<? super A, ? super B> consumer) {
    checkNotNull(consumer);
    if (streamA.isParallel() || streamB.isParallel()) {
        zip(streamA, streamB, TemporaryPair::new).forEach(pair -> consumer.accept(pair.a, pair.b));
    } else {
        Iterator<A> iterA = streamA.iterator();
        Iterator<B> iterB = streamB.iterator();
        while (iterA.hasNext() && iterB.hasNext()) {
            consumer.accept(iterA.next(), iterB.next());
        }
    }
}