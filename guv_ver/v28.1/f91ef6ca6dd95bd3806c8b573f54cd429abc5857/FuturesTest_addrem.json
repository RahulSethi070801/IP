{
    "addition": {},
    "removed": {
        "30": "import static com.google.common.util.concurrent.Futures.dereference;\n",
        "2085": "  public void testDereference_genericsWildcard() throws Exception {\n",
        "2086": "    ListenableFuture<?> inner = immediateFuture(null);\n",
        "2087": "    @SuppressWarnings(\"FutureReturnValueIgnored\")\n",
        "2088": "    ListenableFuture<ListenableFuture<?>> outer =\n",
        "2089": "        Futures.<ListenableFuture<?>>immediateFuture(inner);\n",
        "2090": "    ListenableFuture<?> dereferenced = dereference(outer);\n",
        "2091": "    assertNull(getDone(dereferenced));\n",
        "2092": "  }\n",
        "2093": "\n",
        "2094": "  public void testDereference_genericsHierarchy() throws Exception {\n",
        "2095": "    FooChild fooChild = new FooChild();\n",
        "2096": "    ListenableFuture<FooChild> inner = immediateFuture(fooChild);\n",
        "2097": "    @SuppressWarnings(\"FutureReturnValueIgnored\")\n",
        "2098": "    ListenableFuture<ListenableFuture<FooChild>> outer = immediateFuture(inner);\n",
        "2099": "    ListenableFuture<Foo> dereferenced = Futures.<Foo>dereference(outer);\n",
        "2100": "    assertSame(fooChild, getDone(dereferenced));\n",
        "2101": "  }\n",
        "2102": "\n",
        "2103": "  public void testDereference_resultCancelsOuter() throws Exception {\n",
        "2104": "    @SuppressWarnings(\"FutureReturnValueIgnored\")\n",
        "2105": "    ListenableFuture<ListenableFuture<Foo>> outer = SettableFuture.create();\n",
        "2106": "    ListenableFuture<Foo> dereferenced = dereference(outer);\n",
        "2107": "    dereferenced.cancel(true);\n",
        "2108": "    assertTrue(outer.isCancelled());\n",
        "2109": "  }\n",
        "2110": "\n",
        "2111": "  public void testDereference_resultCancelsInner() throws Exception {\n",
        "2112": "    ListenableFuture<Foo> inner = SettableFuture.create();\n",
        "2113": "    @SuppressWarnings(\"FutureReturnValueIgnored\")\n",
        "2114": "    ListenableFuture<ListenableFuture<Foo>> outer = immediateFuture(inner);\n",
        "2115": "    ListenableFuture<Foo> dereferenced = dereference(outer);\n",
        "2116": "    dereferenced.cancel(true);\n",
        "2117": "    assertTrue(inner.isCancelled());\n",
        "2118": "  }\n",
        "2119": "\n",
        "2120": "  public void testDereference_outerCancelsResult() throws Exception {\n",
        "2121": "    @SuppressWarnings(\"FutureReturnValueIgnored\")\n",
        "2122": "    ListenableFuture<ListenableFuture<Foo>> outer = SettableFuture.create();\n",
        "2123": "    ListenableFuture<Foo> dereferenced = dereference(outer);\n",
        "2124": "    outer.cancel(true);\n",
        "2125": "    assertTrue(dereferenced.isCancelled());\n",
        "2126": "  }\n",
        "2127": "\n",
        "2128": "  public void testDereference_innerCancelsResult() throws Exception {\n",
        "2129": "    ListenableFuture<Foo> inner = SettableFuture.create();\n",
        "2130": "    @SuppressWarnings(\"FutureReturnValueIgnored\")\n",
        "2131": "    ListenableFuture<ListenableFuture<Foo>> outer = immediateFuture(inner);\n",
        "2132": "    ListenableFuture<Foo> dereferenced = dereference(outer);\n",
        "2133": "    inner.cancel(true);\n",
        "2134": "    assertTrue(dereferenced.isCancelled());\n",
        "2135": "  }\n",
        "2136": "\n"
    }
}