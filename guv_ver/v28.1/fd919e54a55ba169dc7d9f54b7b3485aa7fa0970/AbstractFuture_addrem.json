{
    "addition": {
        "171": "  /** Waiter links form a Treiber stack, in the {@link #waiters} field. */\n",
        "211": "   *\n",
        "213": "   *   <li>This is only called when a waiting thread times out or is interrupted. Both of which\n",
        "214": "   *       should be rare.\n",
        "215": "   *   <li>The waiters list should be very short.\n",
        "335": "   *\n",
        "337": "   *   <li>{@code null} initial state, nothing has happened.\n",
        "338": "   *   <li>{@link Cancellation} terminal state, {@code cancel} was called.\n",
        "339": "   *   <li>{@link Failure} terminal state, {@code setException} was called.\n",
        "340": "   *   <li>{@link SetFuture} intermediate state, {@code setFuture} was called.\n",
        "341": "   *   <li>{@link #NULL} terminal state, {@code set(null)} was called.\n",
        "342": "   *   <li>Any other non-null value, terminal state, {@code set} was called with a non-null\n",
        "343": "   *       argument.\n",
        "354": "  /** Constructor for use by subclasses. */\n",
        "463": "          \"Waited \"\n",
        "464": "              + timeout\n",
        "465": "              + \" \"\n",
        "466": "              + Ascii.toLowerCase(unit.toString())\n",
        "521": "  /** Unboxes {@code obj}. Assumes that obj is not {@code null} or a {@link SetFuture}. */\n",
        "604": "                continue; // loop back up and try to complete the new future\n",
        "837": "    outer:\n",
        "838": "    while (true) {\n",
        "917": "    for (Waiter currentWaiter = head; currentWaiter != null; currentWaiter = currentWaiter.next) {\n",
        "1010": "   * Submits the given runnable to the given {@link Executor} catching and logging all {@linkplain\n",
        "1011": "   * RuntimeException runtime exceptions} thrown by the executor.\n"
    },
    "removed": {
        "171": "  /**\n",
        "172": "   * Waiter links form a Treiber stack, in the {@link #waiters} field.\n",
        "173": "   */\n",
        "214": "   * <li>This is only called when a waiting thread times out or is interrupted. Both of which should\n",
        "215": "   *     be rare.\n",
        "216": "   * <li>The waiters list should be very short.\n",
        "337": "   * <li>{@code null} initial state, nothing has happened.\n",
        "338": "   * <li>{@link Cancellation} terminal state, {@code cancel} was called.\n",
        "339": "   * <li>{@link Failure} terminal state, {@code setException} was called.\n",
        "340": "   * <li>{@link SetFuture} intermediate state, {@code setFuture} was called.\n",
        "341": "   * <li>{@link #NULL} terminal state, {@code set(null)} was called.\n",
        "342": "   * <li>Any other non-null value, terminal state, {@code set} was called with a non-null argument.\n",
        "353": "  /**\n",
        "354": "   * Constructor for use by subclasses.\n",
        "355": "   */\n",
        "464": "          \"Waited \" + timeout + \" \" + Ascii.toLowerCase(unit.toString())\n",
        "519": "  /**\n",
        "520": "   * Unboxes {@code obj}. Assumes that obj is not {@code null} or a {@link SetFuture}.\n",
        "521": "   */\n",
        "604": "                continue;  // loop back up and try to complete the new future\n",
        "837": "    outer: while (true) {\n",
        "916": "    for (Waiter currentWaiter = head;\n",
        "917": "        currentWaiter != null;\n",
        "918": "        currentWaiter = currentWaiter.next) {\n",
        "1011": "   * Submits the given runnable to the given {@link Executor} catching and logging all\n",
        "1012": "   * {@linkplain RuntimeException runtime exceptions} thrown by the executor.\n"
    }
}