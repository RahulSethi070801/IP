{
    "addition": {
        "30": " * <p>This class assists the implementation of collection classes. Do not use this class to\n",
        "31": " * serialize collections that are defined elsewhere.\n",
        "40": "   * Reads a count corresponding to a serialized map, multiset, or multimap. It returns the size of\n",
        "41": "   * a map serialized by {@link #writeMap(Map, ObjectOutputStream)}, the number of distinct elements\n",
        "42": "   * in a multiset serialized by {@link #writeMultiset(Multiset, ObjectOutputStream)}, or the number\n",
        "43": "   * of distinct keys in a multimap serialized by {@link #writeMultimap(Multimap,\n",
        "44": "   * ObjectOutputStream)}.\n",
        "51": "   * Stores the contents of a map in an output stream, as part of serialization. It does not support\n",
        "52": "   * concurrent maps whose content may change while the method is running.\n",
        "54": "   * <p>The serialized output consists of the number of entries, first key, first value, second key,\n",
        "55": "   * second value, and so on.\n",
        "66": "   * Populates a map by reading an input stream, as part of deserialization. See {@link #writeMap}\n",
        "67": "   * for the data format.\n",
        "76": "   * Populates a map by reading an input stream, as part of deserialization. See {@link #writeMap}\n",
        "77": "   * for the data format. The size is determined by a prior call to {@link #readCount}.\n",
        "91": "   * Stores the contents of a multiset in an output stream, as part of serialization. It does not\n",
        "92": "   * support concurrent multisets whose content may change while the method is running.\n",
        "94": "   * <p>The serialized output consists of the number of distinct elements, the first element, its\n",
        "95": "   * count, the second element, its count, and so on.\n",
        "108": "   * Populates a multiset by reading an input stream, as part of deserialization. See {@link\n",
        "109": "   * #writeMultiset} for the data format.\n",
        "118": "   * Populates a multiset by reading an input stream, as part of deserialization. See {@link\n",
        "119": "   * #writeMultiset} for the data format. The number of distinct elements is determined by a prior\n",
        "120": "   * call to {@link #readCount}.\n",
        "134": "   * Stores the contents of a multimap in an output stream, as part of serialization. It does not\n",
        "135": "   * support concurrent multimaps whose content may change while the method is running. The {@link\n",
        "136": "   * Multimap#asMap} view determines the ordering in which data is written to the stream.\n",
        "138": "   * <p>The serialized output consists of the number of distinct keys, and then for each distinct\n",
        "139": "   * key: the key, the number of values for that key, and the key's values.\n",
        "154": "   * Populates a multimap by reading an input stream, as part of deserialization. See {@link\n",
        "155": "   * #writeMultimap} for the data format.\n",
        "164": "   * Populates a multimap by reading an input stream, as part of deserialization. See {@link\n",
        "165": "   * #writeMultimap} for the data format. The number of distinct keys is determined by a prior call\n",
        "166": "   * to {@link #readCount}.\n"
    },
    "removed": {
        "30": " * <p>This class assists the implementation of collection classes. Do not use\n",
        "31": " * this class to serialize collections that are defined elsewhere.\n",
        "40": "   * Reads a count corresponding to a serialized map, multiset, or multimap. It\n",
        "41": "   * returns the size of a map serialized by {@link\n",
        "42": "   * #writeMap(Map, ObjectOutputStream)}, the number of distinct elements in a\n",
        "43": "   * multiset serialized by {@link\n",
        "44": "   * #writeMultiset(Multiset, ObjectOutputStream)}, or the number of distinct\n",
        "45": "   * keys in a multimap serialized by {@link\n",
        "46": "   * #writeMultimap(Multimap, ObjectOutputStream)}.\n",
        "53": "   * Stores the contents of a map in an output stream, as part of serialization.\n",
        "54": "   * It does not support concurrent maps whose content may change while the\n",
        "55": "   * method is running.\n",
        "57": "   * <p>The serialized output consists of the number of entries, first key,\n",
        "58": "   * first value, second key, second value, and so on.\n",
        "69": "   * Populates a map by reading an input stream, as part of deserialization.\n",
        "70": "   * See {@link #writeMap} for the data format.\n",
        "79": "   * Populates a map by reading an input stream, as part of deserialization.\n",
        "80": "   * See {@link #writeMap} for the data format. The size is determined by a\n",
        "81": "   * prior call to {@link #readCount}.\n",
        "95": "   * Stores the contents of a multiset in an output stream, as part of\n",
        "96": "   * serialization. It does not support concurrent multisets whose content may\n",
        "97": "   * change while the method is running.\n",
        "99": "   * <p>The serialized output consists of the number of distinct elements, the\n",
        "100": "   * first element, its count, the second element, its count, and so on.\n",
        "113": "   * Populates a multiset by reading an input stream, as part of\n",
        "114": "   * deserialization. See {@link #writeMultiset} for the data format.\n",
        "123": "   * Populates a multiset by reading an input stream, as part of\n",
        "124": "   * deserialization. See {@link #writeMultiset} for the data format. The number\n",
        "125": "   * of distinct elements is determined by a prior call to {@link #readCount}.\n",
        "139": "   * Stores the contents of a multimap in an output stream, as part of\n",
        "140": "   * serialization. It does not support concurrent multimaps whose content may\n",
        "141": "   * change while the method is running. The {@link Multimap#asMap} view\n",
        "142": "   * determines the ordering in which data is written to the stream.\n",
        "144": "   * <p>The serialized output consists of the number of distinct keys, and then\n",
        "145": "   * for each distinct key: the key, the number of values for that key, and the\n",
        "146": "   * key's values.\n",
        "161": "   * Populates a multimap by reading an input stream, as part of\n",
        "162": "   * deserialization. See {@link #writeMultimap} for the data format.\n",
        "171": "   * Populates a multimap by reading an input stream, as part of\n",
        "172": "   * deserialization. See {@link #writeMultimap} for the data format. The number\n",
        "173": "   * of distinct keys is determined by a prior call to {@link #readCount}.\n"
    }
}