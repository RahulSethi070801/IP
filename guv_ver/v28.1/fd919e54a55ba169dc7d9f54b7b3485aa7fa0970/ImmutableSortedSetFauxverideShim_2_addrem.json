{
    "addition": {
        "23": " * \"Overrides\" the {@link ImmutableSet} static methods that lack {@link ImmutableSortedSet}\n",
        "24": " * equivalents with deprecated, exception-throwing versions. This prevents accidents like the\n",
        "25": " * following:\n",
        "27": " * <pre>{@code\n",
        "28": " * List<Object> objects = ...;\n",
        "29": " * // Sort them:\n",
        "30": " * Set<Object> sorted = ImmutableSortedSet.copyOf(objects);\n",
        "31": " * // BAD CODE! The returned set is actually an unsorted ImmutableSet!\n",
        "32": " * }</pre>\n",
        "34": " * <p>While we could put the overrides in {@link ImmutableSortedSet} itself, it seems clearer to\n",
        "35": " * separate these \"do not call\" methods from those intended for normal use.\n",
        "42": "   * Not supported. Use {@link ImmutableSortedSet#toImmutableSortedSet} instead. This method exists\n",
        "43": "   * only to hide {@link ImmutableSet#toImmutableSet} from consumers of {@code ImmutableSortedSet}.\n",
        "55": "   * Not supported. Use {@link ImmutableSortedSet#naturalOrder}, which offers better type-safety,\n",
        "56": "   * instead. This method exists only to hide {@link ImmutableSet#builder} from consumers of {@code\n",
        "57": "   * ImmutableSortedSet}.\n",
        "60": "   * @deprecated Use {@link ImmutableSortedSet#naturalOrder}, which offers better type-safety.\n",
        "80": "   * Not supported. <b>You are attempting to create a set that may contain a non-{@code Comparable}\n",
        "81": "   * element.</b> Proper calls will resolve to the version in {@code ImmutableSortedSet}, not this\n",
        "82": "   * dummy version.\n",
        "94": "   * Not supported. <b>You are attempting to create a set that may contain a non-{@code Comparable}\n",
        "95": "   * element.</b> Proper calls will resolve to the version in {@code ImmutableSortedSet}, not this\n",
        "96": "   * dummy version.\n",
        "108": "   * Not supported. <b>You are attempting to create a set that may contain a non-{@code Comparable}\n",
        "109": "   * element.</b> Proper calls will resolve to the version in {@code ImmutableSortedSet}, not this\n",
        "110": "   * dummy version.\n",
        "122": "   * Not supported. <b>You are attempting to create a set that may contain a non-{@code Comparable}\n",
        "123": "   * element.</b> Proper calls will resolve to the version in {@code ImmutableSortedSet}, not this\n",
        "124": "   * dummy version.\n",
        "128": "   *     ImmutableSortedSet#of(Comparable, Comparable, Comparable, Comparable)}. </b>\n",
        "136": "   * Not supported. <b>You are attempting to create a set that may contain a non-{@code Comparable}\n",
        "137": "   * element.</b> Proper calls will resolve to the version in {@code ImmutableSortedSet}, not this\n",
        "138": "   * dummy version.\n",
        "142": "   *     ImmutableSortedSet#of( Comparable, Comparable, Comparable, Comparable, Comparable)}. </b>\n",
        "150": "   * Not supported. <b>You are attempting to create a set that may contain a non-{@code Comparable}\n",
        "151": "   * element.</b> Proper calls will resolve to the version in {@code ImmutableSortedSet}, not this\n",
        "152": "   * dummy version.\n",
        "156": "   *     ImmutableSortedSet#of(Comparable, Comparable, Comparable, Comparable, Comparable,\n",
        "157": "   *     Comparable, Comparable...)}. </b>\n",
        "165": "   * Not supported. <b>You are attempting to create a set that may contain non-{@code Comparable}\n",
        "166": "   * elements.</b> Proper calls will resolve to the version in {@code ImmutableSortedSet}, not this\n",
        "167": "   * dummy version.\n"
    },
    "removed": {
        "23": " * \"Overrides\" the {@link ImmutableSet} static methods that lack\n",
        "24": " * {@link ImmutableSortedSet} equivalents with deprecated, exception-throwing\n",
        "25": " * versions. This prevents accidents like the following: <pre>   {@code\n",
        "27": " *   List<Object> objects = ...;\n",
        "28": " *   // Sort them:\n",
        "29": " *   Set<Object> sorted = ImmutableSortedSet.copyOf(objects);\n",
        "30": " *   // BAD CODE! The returned set is actually an unsorted ImmutableSet!}</pre>\n",
        "32": " * <p>While we could put the overrides in {@link ImmutableSortedSet} itself, it\n",
        "33": " * seems clearer to separate these \"do not call\" methods from those intended for\n",
        "34": " * normal use.\n",
        "41": "   * Not supported. Use {@link ImmutableSortedSet#toImmutableSortedSet} instead.\n",
        "42": "   * This method exists only to hide {@link ImmutableSet#toImmutableSet} from\n",
        "43": "   * consumers of {@code ImmutableSortedSet}.\n",
        "55": "   * Not supported. Use {@link ImmutableSortedSet#naturalOrder}, which offers\n",
        "56": "   * better type-safety, instead. This method exists only to hide\n",
        "57": "   * {@link ImmutableSet#builder} from consumers of {@code ImmutableSortedSet}.\n",
        "60": "   * @deprecated Use {@link ImmutableSortedSet#naturalOrder}, which offers\n",
        "61": "   *     better type-safety.\n",
        "81": "   * Not supported. <b>You are attempting to create a set that may contain a\n",
        "82": "   * non-{@code Comparable} element.</b> Proper calls will resolve to the\n",
        "83": "   * version in {@code ImmutableSortedSet}, not this dummy version.\n",
        "95": "   * Not supported. <b>You are attempting to create a set that may contain a\n",
        "96": "   * non-{@code Comparable} element.</b> Proper calls will resolve to the\n",
        "97": "   * version in {@code ImmutableSortedSet}, not this dummy version.\n",
        "109": "   * Not supported. <b>You are attempting to create a set that may contain a\n",
        "110": "   * non-{@code Comparable} element.</b> Proper calls will resolve to the\n",
        "111": "   * version in {@code ImmutableSortedSet}, not this dummy version.\n",
        "123": "   * Not supported. <b>You are attempting to create a set that may contain a\n",
        "124": "   * non-{@code Comparable} element.</b> Proper calls will resolve to the\n",
        "125": "   * version in {@code ImmutableSortedSet}, not this dummy version.\n",
        "129": "   *     ImmutableSortedSet#of(Comparable, Comparable, Comparable, Comparable)}.\n",
        "130": "   * </b>\n",
        "138": "   * Not supported. <b>You are attempting to create a set that may contain a\n",
        "139": "   * non-{@code Comparable} element.</b> Proper calls will resolve to the\n",
        "140": "   * version in {@code ImmutableSortedSet}, not this dummy version.\n",
        "144": "   *     ImmutableSortedSet#of(\n",
        "145": "   *     Comparable, Comparable, Comparable, Comparable, Comparable)}. </b>\n",
        "153": "   * Not supported. <b>You are attempting to create a set that may contain a\n",
        "154": "   * non-{@code Comparable} element.</b> Proper calls will resolve to the\n",
        "155": "   * version in {@code ImmutableSortedSet}, not this dummy version.\n",
        "159": "   *     ImmutableSortedSet#of(Comparable, Comparable, Comparable, Comparable,\n",
        "160": "   *     Comparable, Comparable, Comparable...)}. </b>\n",
        "168": "   * Not supported. <b>You are attempting to create a set that may contain\n",
        "169": "   * non-{@code Comparable} elements.</b> Proper calls will resolve to the\n",
        "170": "   * version in {@code ImmutableSortedSet}, not this dummy version.\n"
    }
}