{
    "addition": {
        "45": "  private enum Currency {\n",
        "46": "    DOLLAR,\n",
        "47": "    FRANC,\n",
        "48": "    PESO,\n",
        "49": "    POUND,\n",
        "50": "    YEN\n",
        "51": "  }\n",
        "52": "\n",
        "53": "  private enum Country {\n",
        "54": "    CANADA,\n",
        "55": "    CHILE,\n",
        "56": "    JAPAN,\n",
        "57": "    SWITZERLAND,\n",
        "58": "    UK\n",
        "59": "  }\n",
        "108": "    suite.addTest(\n",
        "109": "        BiMapTestSuiteBuilder.using(new EnumHashBiMapGenerator())\n",
        "110": "            .named(\"EnumHashBiMap\")\n",
        "111": "            .withFeatures(\n",
        "112": "                CollectionSize.ANY,\n",
        "113": "                CollectionFeature.SERIALIZABLE,\n",
        "114": "                CollectionFeature.SUPPORTS_ITERATOR_REMOVE,\n",
        "115": "                MapFeature.ALLOWS_NULL_VALUES,\n",
        "116": "                MapFeature.GENERAL_PURPOSE,\n",
        "117": "                CollectionFeature.KNOWN_ORDER)\n",
        "118": "            .createTestSuite());\n",
        "124": "    EnumHashBiMap<Currency, String> bimap = EnumHashBiMap.create(Currency.class);\n",
        "135": "    Map<Currency, String> map =\n",
        "136": "        ImmutableMap.of(\n",
        "137": "            Currency.DOLLAR, \"dollar\",\n",
        "138": "            Currency.PESO, \"peso\",\n",
        "139": "            Currency.FRANC, \"franc\");\n",
        "140": "    EnumHashBiMap<Currency, String> bimap = EnumHashBiMap.create(map);\n",
        "146": "      EnumHashBiMap.create(Collections.<Currency, String>emptyMap());\n",
        "148": "    } catch (IllegalArgumentException expected) {\n",
        "149": "    }\n",
        "157": "    Map<Currency, Country> emptyBimap2 = EnumBiMap.create(Currency.class, Country.class);\n",
        "158": "    EnumHashBiMap<Currency, Country> bimap2 = EnumHashBiMap.create(emptyBimap2);\n",
        "164": "    EnumHashBiMap<Currency, String> bimap1 = EnumHashBiMap.create(Currency.class);\n",
        "166": "    EnumHashBiMap<Currency, String> bimap2 = EnumHashBiMap.create(bimap1);\n",
        "175": "    EnumHashBiMap<Currency, String> emptyBimap = EnumHashBiMap.create(Currency.class);\n",
        "176": "    EnumHashBiMap<Currency, String> bimap3 = EnumHashBiMap.create(emptyBimap);\n",
        "182": "    EnumBiMap<Currency, Country> bimap1 = EnumBiMap.create(Currency.class, Country.class);\n",
        "194": "    EnumBiMap<Currency, Country> emptyBimap = EnumBiMap.create(Currency.class, Country.class);\n",
        "201": "    EnumHashBiMap<Currency, String> bimap = EnumHashBiMap.create(Currency.class);\n",
        "207": "    Map<Currency, String> map =\n",
        "208": "        ImmutableMap.of(\n",
        "209": "            Currency.DOLLAR, \"dollar\",\n",
        "210": "            Currency.PESO, \"peso\",\n",
        "211": "            Currency.FRANC, \"franc\");\n",
        "212": "    EnumHashBiMap<Currency, String> bimap = EnumHashBiMap.create(map);\n"
    },
    "removed": {
        "45": "  private enum Currency { DOLLAR, FRANC, PESO, POUND, YEN }\n",
        "46": "  private enum Country { CANADA, CHILE, JAPAN, SWITZERLAND, UK }\n",
        "95": "    suite.addTest(BiMapTestSuiteBuilder.using(new EnumHashBiMapGenerator())\n",
        "96": "        .named(\"EnumHashBiMap\")\n",
        "97": "        .withFeatures(CollectionSize.ANY,\n",
        "98": "            CollectionFeature.SERIALIZABLE,\n",
        "99": "            CollectionFeature.SUPPORTS_ITERATOR_REMOVE,\n",
        "100": "            MapFeature.ALLOWS_NULL_VALUES,\n",
        "101": "            MapFeature.GENERAL_PURPOSE,\n",
        "102": "            CollectionFeature.KNOWN_ORDER)\n",
        "103": "        .createTestSuite());\n",
        "109": "    EnumHashBiMap<Currency, String> bimap =\n",
        "110": "        EnumHashBiMap.create(Currency.class);\n",
        "121": "    Map<Currency, String> map = ImmutableMap.of(\n",
        "122": "        Currency.DOLLAR, \"dollar\",\n",
        "123": "        Currency.PESO, \"peso\",\n",
        "124": "        Currency.FRANC, \"franc\");\n",
        "125": "    EnumHashBiMap<Currency, String> bimap\n",
        "126": "        = EnumHashBiMap.create(map);\n",
        "132": "      EnumHashBiMap.create(\n",
        "133": "          Collections.<Currency, String>emptyMap());\n",
        "135": "    } catch (IllegalArgumentException expected) {}\n",
        "143": "    Map<Currency, Country> emptyBimap2 =\n",
        "144": "        EnumBiMap.create(Currency.class, Country.class);\n",
        "145": "    EnumHashBiMap<Currency, Country> bimap2\n",
        "146": "        = EnumHashBiMap.create(emptyBimap2);\n",
        "152": "    EnumHashBiMap<Currency, String> bimap1 =\n",
        "153": "        EnumHashBiMap.create(Currency.class);\n",
        "155": "    EnumHashBiMap<Currency, String> bimap2 =\n",
        "156": "        EnumHashBiMap.create(bimap1);\n",
        "165": "    EnumHashBiMap<Currency, String> emptyBimap =\n",
        "166": "        EnumHashBiMap.create(Currency.class);\n",
        "167": "    EnumHashBiMap<Currency, String> bimap3 =\n",
        "168": "        EnumHashBiMap.create(emptyBimap);\n",
        "174": "    EnumBiMap<Currency, Country> bimap1 =\n",
        "175": "        EnumBiMap.create(Currency.class, Country.class);\n",
        "187": "    EnumBiMap<Currency, Country> emptyBimap =\n",
        "188": "        EnumBiMap.create(Currency.class, Country.class);\n",
        "195": "    EnumHashBiMap<Currency, String> bimap =\n",
        "196": "        EnumHashBiMap.create(Currency.class);\n",
        "202": "    Map<Currency, String> map = ImmutableMap.of(\n",
        "203": "        Currency.DOLLAR, \"dollar\",\n",
        "204": "        Currency.PESO, \"peso\",\n",
        "205": "        Currency.FRANC, \"franc\");\n",
        "206": "    EnumHashBiMap<Currency, String> bimap\n",
        "207": "        = EnumHashBiMap.create(map);\n"
    }
}