{
    "addition": {
        "49": "    @Override\n",
        "50": "    protected Set<T> delegate() {\n",
        "54": "    @Override\n",
        "55": "    public boolean equals(Object object) {\n",
        "59": "    @Override\n",
        "60": "    public int hashCode() {\n",
        "64": "    @Override\n",
        "65": "    public boolean addAll(Collection<? extends T> collection) {\n",
        "69": "    @Override\n",
        "70": "    public void clear() {\n",
        "74": "    @Override\n",
        "75": "    public boolean contains(Object object) {\n",
        "79": "    @Override\n",
        "80": "    public boolean containsAll(Collection<?> collection) {\n",
        "84": "    @Override\n",
        "85": "    public boolean remove(Object object) {\n",
        "89": "    @Override\n",
        "90": "    public boolean removeAll(Collection<?> collection) {\n",
        "94": "    @Override\n",
        "95": "    public boolean retainAll(Collection<?> collection) {\n",
        "99": "    @Override\n",
        "100": "    public Object[] toArray() {\n",
        "104": "    @Override\n",
        "105": "    public <T> T[] toArray(T[] array) {\n",
        "109": "    @Override\n",
        "110": "    public String toString() {\n",
        "151": "        .testForwarding(\n",
        "152": "            Set.class,\n",
        "153": "            new Function<Set, Set>() {\n",
        "154": "              @Override\n",
        "155": "              public Set apply(Set delegate) {\n",
        "156": "                return wrap(delegate);\n",
        "157": "              }\n",
        "158": "            });\n",
        "172": "      @Override\n",
        "173": "      protected Set<T> delegate() {\n"
    },
    "removed": {
        "49": "    @Override protected Set<T> delegate() {\n",
        "53": "    @Override public boolean equals(Object object) {\n",
        "57": "    @Override public int hashCode() {\n",
        "61": "    @Override public boolean addAll(Collection<? extends T> collection) {\n",
        "65": "    @Override public void clear() {\n",
        "69": "    @Override public boolean contains(Object object) {\n",
        "73": "    @Override public boolean containsAll(Collection<?> collection) {\n",
        "77": "    @Override public boolean remove(Object object) {\n",
        "81": "    @Override public boolean removeAll(Collection<?> collection) {\n",
        "85": "    @Override public boolean retainAll(Collection<?> collection) {\n",
        "89": "    @Override public Object[] toArray() {\n",
        "93": "    @Override public <T> T[] toArray(T[] array) {\n",
        "97": "    @Override public String toString() {\n",
        "138": "        .testForwarding(Set.class, new Function<Set, Set>() {\n",
        "139": "          @Override public Set apply(Set delegate) {\n",
        "140": "            return wrap(delegate);\n",
        "141": "          }\n",
        "142": "        });\n",
        "156": "      @Override protected Set<T> delegate() {\n"
    }
}