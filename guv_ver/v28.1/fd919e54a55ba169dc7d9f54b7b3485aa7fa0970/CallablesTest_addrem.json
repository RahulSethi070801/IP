{
    "addition": {
        "49": "    Callable<String> callable =\n",
        "50": "        new Callable<String>() {\n",
        "51": "          @Override\n",
        "52": "          public String call() throws Exception {\n",
        "53": "            return expected;\n",
        "54": "          }\n",
        "55": "        };\n",
        "67": "    Callable<String> callable =\n",
        "68": "        new Callable<String>() {\n",
        "69": "          @Override\n",
        "70": "          public String call() throws Exception {\n",
        "71": "            throw expected;\n",
        "72": "          }\n",
        "73": "        };\n",
        "91": "    Callable<Void> callable =\n",
        "92": "        new Callable<Void>() {\n",
        "93": "          @Override\n",
        "94": "          public Void call() throws Exception {\n",
        "95": "            assertEquals(Thread.currentThread().getName(), newName.get());\n",
        "96": "            return null;\n",
        "97": "          }\n",
        "98": "        };\n",
        "108": "    Callable<Void> callable =\n",
        "109": "        new Callable<Void>() {\n",
        "110": "          @Override\n",
        "111": "          public Void call() throws Exception {\n",
        "112": "            assertEquals(Thread.currentThread().getName(), newName.get());\n",
        "113": "            throw new MyException();\n",
        "114": "          }\n",
        "115": "        };\n",
        "119": "    } catch (MyException expected) {\n",
        "120": "    }\n",
        "127": "    System.setSecurityManager(\n",
        "128": "        new SecurityManager() {\n",
        "129": "          @Override\n",
        "130": "          public void checkAccess(Thread t) {\n",
        "131": "            throw new SecurityException();\n",
        "132": "          }\n",
        "133": "\n",
        "134": "          @Override\n",
        "135": "          public void checkPermission(Permission perm) {\n",
        "136": "            // Do nothing so we can clear the security manager at the end\n",
        "137": "          }\n",
        "138": "        });\n",
        "142": "      Callable<Void> callable =\n",
        "143": "          new Callable<Void>() {\n",
        "144": "            @Override\n",
        "145": "            public Void call() throws Exception {\n",
        "146": "              assertEquals(Thread.currentThread().getName(), oldName);\n",
        "147": "              return null;\n",
        "148": "            }\n",
        "149": "          };\n"
    },
    "removed": {
        "49": "    Callable<String> callable = new Callable<String>() {\n",
        "50": "      @Override\n",
        "51": "      public String call() throws Exception {\n",
        "52": "        return expected;\n",
        "53": "      }\n",
        "54": "    };\n",
        "66": "    Callable<String> callable = new Callable<String>() {\n",
        "67": "      @Override\n",
        "68": "      public String call() throws Exception {\n",
        "69": "        throw expected;\n",
        "70": "      }\n",
        "71": "    };\n",
        "89": "    Callable<Void> callable = new Callable<Void>() {\n",
        "90": "      @Override public Void call() throws Exception {\n",
        "91": "        assertEquals(Thread.currentThread().getName(), newName.get());\n",
        "92": "        return null;\n",
        "93": "      }\n",
        "94": "    };\n",
        "104": "    Callable<Void> callable = new Callable<Void>() {\n",
        "105": "      @Override public Void call() throws Exception {\n",
        "106": "        assertEquals(Thread.currentThread().getName(), newName.get());\n",
        "107": "        throw new MyException();\n",
        "108": "      }\n",
        "109": "    };\n",
        "113": "    } catch (MyException expected) {}\n",
        "120": "    System.setSecurityManager(new SecurityManager() {\n",
        "121": "      @Override public void checkAccess(Thread t) {\n",
        "122": "        throw new SecurityException();\n",
        "123": "      }\n",
        "124": "      @Override public void checkPermission(Permission perm) {\n",
        "125": "        // Do nothing so we can clear the security manager at the end\n",
        "126": "      }\n",
        "127": "    });\n",
        "131": "      Callable<Void> callable = new Callable<Void>() {\n",
        "132": "        @Override public Void call() throws Exception {\n",
        "133": "          assertEquals(Thread.currentThread().getName(), oldName);\n",
        "134": "          return null;\n",
        "135": "        }\n",
        "136": "      };\n"
    }
}