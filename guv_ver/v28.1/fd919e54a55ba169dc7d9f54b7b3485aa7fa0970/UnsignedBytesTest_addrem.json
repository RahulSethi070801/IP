{
    "addition": {
        "39": "  private static final byte[] VALUES = {LEAST, 127, (byte) 128, (byte) 129, GREATEST};\n",
        "52": "      assertEquals(value, UnsignedBytes.checkedCast(UnsignedBytes.toInt(value)));\n",
        "62": "      assertEquals(value, UnsignedBytes.saturatedCast(UnsignedBytes.toInt(value)));\n",
        "75": "      assertTrue(\n",
        "76": "          value + \" not found in exception text: \" + ex.getMessage(),\n",
        "89": "        assertEquals(\n",
        "90": "            x + \", \" + y,\n",
        "91": "            Math.signum(UnsignedBytes.compare(x, y)),\n",
        "92": "            Math.signum(Ints.compare(i, j)));\n",
        "108": "    assertEquals(\n",
        "109": "        (byte) 255, UnsignedBytes.max((byte) 0, (byte) -128, (byte) -1, (byte) 127, (byte) 1));\n",
        "123": "    assertEquals(\n",
        "124": "        (byte) 0, UnsignedBytes.min((byte) 0, (byte) -128, (byte) -1, (byte) 127, (byte) 1));\n",
        "125": "    assertEquals(\n",
        "126": "        (byte) 0, UnsignedBytes.min((byte) -1, (byte) 127, (byte) 1, (byte) -128, (byte) 0));\n",
        "149": "    assertTrue(\n",
        "150": "        UnsignedBytes.compare(UnsignedBytes.MAX_VALUE, (byte) (UnsignedBytes.MAX_VALUE + 1)) > 0);\n",
        "222": "    return UnsignedBytes.LexicographicalComparatorHolder.class.getName() + \"$UnsafeComparator\";\n",
        "253": "    Comparator<byte[]> defaultComparator = UnsignedBytes.lexicographicalComparator();\n",
        "255": "    assertSame(defaultComparator, UnsignedBytes.lexicographicalComparator());\n",
        "257": "      assertSame(defaultComparator.getClass(), Class.forName(unsafeComparatorClassName()));\n",
        "259": "      assertSame(defaultComparator, UnsignedBytes.lexicographicalComparatorJavaImpl());\n",
        "264": "    List<byte[]> ordered =\n",
        "265": "        Arrays.asList(\n",
        "266": "            new byte[] {},\n",
        "267": "            new byte[] {LEAST},\n",
        "268": "            new byte[] {LEAST, LEAST},\n",
        "269": "            new byte[] {LEAST, (byte) 1},\n",
        "270": "            new byte[] {(byte) 1},\n",
        "271": "            new byte[] {(byte) 1, LEAST},\n",
        "272": "            new byte[] {GREATEST, GREATEST - (byte) 1},\n",
        "273": "            new byte[] {GREATEST, GREATEST},\n",
        "274": "            new byte[] {GREATEST, GREATEST, GREATEST});\n",
        "290": "    for (Comparator<byte[]> comparator :\n",
        "291": "        Arrays.asList(\n",
        "292": "            UnsignedBytes.lexicographicalComparator(),\n",
        "293": "            UnsignedBytes.lexicographicalComparatorJavaImpl())) {\n",
        "303": "            comparator.compare(left, right) > 0, UnsignedBytes.compare(left[i], right[i]) > 0);\n"
    },
    "removed": {
        "39": "  private static final byte[] VALUES =\n",
        "40": "      {LEAST, 127, (byte) 128, (byte) 129, GREATEST};\n",
        "53": "      assertEquals(value,\n",
        "54": "          UnsignedBytes.checkedCast(UnsignedBytes.toInt(value)));\n",
        "64": "      assertEquals(value,\n",
        "65": "          UnsignedBytes.saturatedCast(UnsignedBytes.toInt(value)));\n",
        "78": "      assertTrue(value + \" not found in exception text: \" + ex.getMessage(),\n",
        "91": "        assertEquals(x + \", \" + y,\n",
        "92": "                     Math.signum(UnsignedBytes.compare(x, y)),\n",
        "93": "                     Math.signum(Ints.compare(i, j)));\n",
        "109": "    assertEquals((byte) 255, UnsignedBytes.max(\n",
        "110": "        (byte) 0, (byte) -128, (byte) -1, (byte) 127, (byte) 1));\n",
        "124": "    assertEquals((byte) 0, UnsignedBytes.min(\n",
        "125": "        (byte) 0, (byte) -128, (byte) -1, (byte) 127, (byte) 1));\n",
        "126": "    assertEquals((byte) 0, UnsignedBytes.min(\n",
        "127": "        (byte) -1, (byte) 127, (byte) 1, (byte) -128, (byte) 0));\n",
        "150": "    assertTrue(UnsignedBytes\n",
        "151": "        .compare(UnsignedBytes.MAX_VALUE, (byte) (UnsignedBytes.MAX_VALUE + 1)) > 0);\n",
        "223": "    return UnsignedBytes.LexicographicalComparatorHolder.class.getName()\n",
        "224": "        + \"$UnsafeComparator\";\n",
        "255": "    Comparator<byte[]> defaultComparator =\n",
        "256": "        UnsignedBytes.lexicographicalComparator();\n",
        "258": "    assertSame(defaultComparator,\n",
        "259": "        UnsignedBytes.lexicographicalComparator());\n",
        "261": "      assertSame(defaultComparator.getClass(),\n",
        "262": "          Class.forName(unsafeComparatorClassName()));\n",
        "264": "      assertSame(defaultComparator,\n",
        "265": "          UnsignedBytes.lexicographicalComparatorJavaImpl());\n",
        "270": "    List<byte[]> ordered = Arrays.asList(\n",
        "271": "        new byte[] {},\n",
        "272": "        new byte[] {LEAST},\n",
        "273": "        new byte[] {LEAST, LEAST},\n",
        "274": "        new byte[] {LEAST, (byte) 1},\n",
        "275": "        new byte[] {(byte) 1},\n",
        "276": "        new byte[] {(byte) 1, LEAST},\n",
        "277": "        new byte[] {GREATEST, GREATEST - (byte) 1},\n",
        "278": "        new byte[] {GREATEST, GREATEST},\n",
        "279": "        new byte[] {GREATEST, GREATEST, GREATEST});\n",
        "295": "    for (Comparator<byte[]> comparator : Arrays.asList(\n",
        "296": "        UnsignedBytes.lexicographicalComparator(),\n",
        "297": "        UnsignedBytes.lexicographicalComparatorJavaImpl())) {\n",
        "307": "            comparator.compare(left, right) > 0,\n",
        "308": "            UnsignedBytes.compare(left[i], right[i]) > 0);\n"
    }
}