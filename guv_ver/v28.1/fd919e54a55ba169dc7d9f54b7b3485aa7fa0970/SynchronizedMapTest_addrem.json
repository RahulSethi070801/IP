{
    "addition": {
        "46": "  static class TestMap<K, V> extends ForwardingMap<K, V> implements Serializable {\n",
        "49": "\n",
        "56": "    @Override\n",
        "57": "    protected Map<K, V> delegate() {\n",
        "61": "    @Override\n",
        "62": "    public int size() {\n",
        "67": "    @Override\n",
        "68": "    public boolean isEmpty() {\n",
        "73": "    @Override\n",
        "74": "    public V remove(Object object) {\n",
        "79": "    @Override\n",
        "80": "    public void clear() {\n",
        "85": "    @Override\n",
        "86": "    public boolean containsKey(Object key) {\n",
        "91": "    @Override\n",
        "92": "    public boolean containsValue(Object value) {\n",
        "97": "    @Override\n",
        "98": "    public V get(Object key) {\n",
        "103": "    @Override\n",
        "104": "    public V put(K key, V value) {\n",
        "109": "    @Override\n",
        "110": "    public void putAll(Map<? extends K, ? extends V> map) {\n",
        "115": "    @Override\n",
        "116": "    public Set<K> keySet() {\n",
        "121": "    @Override\n",
        "122": "    public Collection<V> values() {\n",
        "127": "    @Override\n",
        "128": "    public Set<Entry<K, V>> entrySet() {\n",
        "133": "    @Override\n",
        "134": "    public boolean equals(Object obj) {\n",
        "139": "    @Override\n",
        "140": "    public int hashCode() {\n",
        "145": "    @Override\n",
        "146": "    public String toString() {\n"
    },
    "removed": {
        "46": "  static class TestMap<K, V> extends ForwardingMap<K, V>\n",
        "47": "      implements Serializable {\n",
        "56": "    @Override protected Map<K, V> delegate() {\n",
        "60": "    @Override public int size() {\n",
        "65": "    @Override public boolean isEmpty() {\n",
        "70": "    @Override public V remove(Object object) {\n",
        "75": "    @Override public void clear() {\n",
        "80": "    @Override public boolean containsKey(Object key) {\n",
        "85": "    @Override public boolean containsValue(Object value) {\n",
        "90": "    @Override public V get(Object key) {\n",
        "95": "    @Override public V put(K key, V value) {\n",
        "100": "    @Override public void putAll(Map<? extends K, ? extends V> map) {\n",
        "105": "    @Override public Set<K> keySet() {\n",
        "110": "    @Override public Collection<V> values() {\n",
        "115": "    @Override public Set<Entry<K, V>> entrySet() {\n",
        "120": "    @Override public boolean equals(Object obj) {\n",
        "125": "    @Override public int hashCode() {\n",
        "130": "    @Override public String toString() {\n"
    }
}