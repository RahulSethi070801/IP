{
    "addition": {
        "50": "    suite.addTest(\n",
        "51": "        MultisetTestSuiteBuilder.using(enumMultisetGenerator())\n",
        "52": "            .withFeatures(\n",
        "53": "                CollectionSize.ANY,\n",
        "54": "                CollectionFeature.KNOWN_ORDER,\n",
        "55": "                CollectionFeature.GENERAL_PURPOSE,\n",
        "56": "                CollectionFeature.SUPPORTS_ITERATOR_REMOVE,\n",
        "57": "                CollectionFeature.ALLOWS_NULL_QUERIES,\n",
        "58": "                MultisetFeature.ENTRIES_ARE_VIEWS)\n",
        "59": "            .named(\"EnumMultiset\")\n",
        "60": "            .createTestSuite());\n",
        "67": "      @Override\n",
        "68": "      protected Multiset<AnEnum> create(AnEnum[] elements) {\n",
        "77": "    BLUE,\n",
        "78": "    RED,\n",
        "79": "    YELLOW,\n",
        "80": "    GREEN,\n",
        "81": "    WHITE\n",
        "85": "    MALE,\n",
        "86": "    FEMALE\n",
        "100": "    Multiset<Color> ms = EnumMultiset.create(asList(Color.RED, Color.YELLOW, Color.RED));\n",
        "111": "    } catch (IllegalArgumentException expected) {\n",
        "112": "    }\n",
        "122": "      EnumMultiset.create(ImmutableList.<Color>of());\n",
        "138": "    Multiset<Color> ms = EnumMultiset.create(asList(Color.RED, Color.YELLOW, Color.RED));\n"
    },
    "removed": {
        "50": "    suite.addTest(MultisetTestSuiteBuilder.using(enumMultisetGenerator())\n",
        "51": "        .withFeatures(CollectionSize.ANY,\n",
        "52": "            CollectionFeature.KNOWN_ORDER,\n",
        "53": "            CollectionFeature.GENERAL_PURPOSE,\n",
        "54": "            CollectionFeature.SUPPORTS_ITERATOR_REMOVE,\n",
        "55": "            CollectionFeature.ALLOWS_NULL_QUERIES,\n",
        "56": "            MultisetFeature.ENTRIES_ARE_VIEWS)\n",
        "57": "        .named(\"EnumMultiset\")\n",
        "58": "        .createTestSuite());\n",
        "65": "      @Override protected Multiset<AnEnum> create(AnEnum[] elements) {\n",
        "74": "    BLUE, RED, YELLOW, GREEN, WHITE\n",
        "78": "    MALE, FEMALE\n",
        "92": "    Multiset<Color> ms = EnumMultiset.create(\n",
        "93": "        asList(Color.RED, Color.YELLOW, Color.RED));\n",
        "104": "    } catch (IllegalArgumentException expected) {}\n",
        "114": "      EnumMultiset.create(ImmutableList.<Color> of());\n",
        "130": "    Multiset<Color> ms = EnumMultiset.create(\n",
        "131": "        asList(Color.RED, Color.YELLOW, Color.RED));\n"
    }
}