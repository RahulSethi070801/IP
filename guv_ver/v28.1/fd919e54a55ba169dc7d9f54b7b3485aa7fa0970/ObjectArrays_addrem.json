{
    "addition": {
        "53": "   * Returns a new array of the given length with the same type as a reference array.\n",
        "82": "   * @return an array whose size is one larger than {@code array}, with {@code element} occupying\n",
        "83": "   *     the first position, and the elements of {@code array} occupying the remaining elements.\n",
        "97": "   * @return an array whose size is one larger than {@code array}, with the same contents as {@code\n",
        "98": "   *     array}, plus {@code element} occupying the last position.\n",
        "107": "   * Returns an array containing all of the elements in the specified collection; the runtime type\n",
        "108": "   * of the returned array is that of the specified array. If the collection fits in the specified\n",
        "109": "   * array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the\n",
        "112": "   * <p>If the collection fits in the specified array with room to spare (i.e., the array has more\n",
        "113": "   * elements than the collection), the element in the array immediately following the end of the\n",
        "114": "   * collection is set to {@code null}. This is useful in determining the length of the collection\n",
        "115": "   * <i>only</i> if the caller knows that the collection does not contain any null elements.\n",
        "117": "   * <p>This method returns the elements in the order they are returned by the collection's\n",
        "118": "   * iterator.\n",
        "124": "   * @throws ArrayStoreException if the runtime type of the specified array is not a supertype of\n",
        "125": "   *     the runtime type of every element in the specified collection\n",
        "162": "   * Returns an array containing all of the elements in the specified collection. This method\n",
        "163": "   * returns the elements in the order they are returned by the collection's iterator. The returned\n",
        "164": "   * array is \"safe\" in that no references to it are maintained by the collection. The caller is\n",
        "165": "   * thus free to modify the returned array.\n",
        "167": "   * <p>This method assumes that the collection size doesn't change while the method is running.\n",
        "200": "  /** Swaps {@code array[i]} with {@code array[j]}. */\n"
    },
    "removed": {
        "53": "   * Returns a new array of the given length with the same type as a reference\n",
        "54": "   * array.\n",
        "83": "   * @return an array whose size is one larger than {@code array}, with\n",
        "84": "   *     {@code element} occupying the first position, and the\n",
        "85": "   *     elements of {@code array} occupying the remaining elements.\n",
        "99": "   * @return an array whose size is one larger than {@code array}, with\n",
        "100": "   *     the same contents as {@code array}, plus {@code element} occupying the\n",
        "101": "   *     last position.\n",
        "110": "   * Returns an array containing all of the elements in the specified\n",
        "111": "   * collection; the runtime type of the returned array is that of the specified\n",
        "112": "   * array. If the collection fits in the specified array, it is returned\n",
        "113": "   * therein. Otherwise, a new array is allocated with the runtime type of the\n",
        "116": "   * <p>If the collection fits in the specified array with room to spare (i.e.,\n",
        "117": "   * the array has more elements than the collection), the element in the array\n",
        "118": "   * immediately following the end of the collection is set to {@code null}.\n",
        "119": "   * This is useful in determining the length of the collection <i>only</i> if\n",
        "120": "   * the caller knows that the collection does not contain any null elements.\n",
        "122": "   * <p>This method returns the elements in the order they are returned by the\n",
        "123": "   * collection's iterator.\n",
        "129": "   * @throws ArrayStoreException if the runtime type of the specified array is\n",
        "130": "   *     not a supertype of the runtime type of every element in the specified\n",
        "131": "   *     collection\n",
        "168": "   * Returns an array containing all of the elements in the specified\n",
        "169": "   * collection. This method returns the elements in the order they are returned\n",
        "170": "   * by the collection's iterator. The returned array is \"safe\" in that no\n",
        "171": "   * references to it are maintained by the collection. The caller is thus free\n",
        "172": "   * to modify the returned array.\n",
        "174": "   * <p>This method assumes that the collection size doesn't change while the\n",
        "175": "   * method is running.\n",
        "208": "  /**\n",
        "209": "   * Swaps {@code array[i]} with {@code array[j]}.\n",
        "210": "   */\n"
    }
}