{
    "addition": {
        "43": "    suite.addTest(\n",
        "44": "        BiMapTestSuiteBuilder.using(new SynchTestingBiMapGenerator())\n",
        "45": "            .named(\"Synchronized.biMap[TestBiMap]\")\n",
        "46": "            .withFeatures(\n",
        "47": "                CollectionSize.ANY,\n",
        "48": "                CollectionFeature.SUPPORTS_ITERATOR_REMOVE,\n",
        "49": "                MapFeature.ALLOWS_NULL_KEYS,\n",
        "50": "                MapFeature.ALLOWS_NULL_VALUES,\n",
        "51": "                MapFeature.ALLOWS_ANY_NULL_QUERIES,\n",
        "52": "                MapFeature.GENERAL_PURPOSE,\n",
        "53": "                MapFeature.REJECTS_DUPLICATES_AT_CREATION)\n",
        "54": "            .createTestSuite());\n",
        "55": "    suite.addTest(\n",
        "56": "        BiMapTestSuiteBuilder.using(new SynchronizedHashBiMapGenerator())\n",
        "57": "            .named(\"synchronizedBiMap[HashBiMap]\")\n",
        "58": "            .withFeatures(\n",
        "59": "                CollectionSize.ANY,\n",
        "60": "                CollectionFeature.SUPPORTS_ITERATOR_REMOVE,\n",
        "61": "                MapFeature.ALLOWS_NULL_KEYS,\n",
        "62": "                MapFeature.ALLOWS_NULL_VALUES,\n",
        "63": "                MapFeature.ALLOWS_ANY_NULL_QUERIES,\n",
        "64": "                MapFeature.GENERAL_PURPOSE,\n",
        "65": "                MapFeature.REJECTS_DUPLICATES_AT_CREATION,\n",
        "66": "                CollectionFeature.SERIALIZABLE)\n",
        "67": "            .suppressing(BiMapInverseTester.getInverseSameAfterSerializingMethods())\n",
        "68": "            .createTestSuite());\n",
        "72": "  @Override\n",
        "73": "  protected <K, V> BiMap<K, V> create() {\n",
        "132": "    @Override\n",
        "133": "    public Set<V> values() {\n",
        "153": "  @Override\n",
        "154": "  public void testValues() {\n"
    },
    "removed": {
        "43": "    suite.addTest(BiMapTestSuiteBuilder.using(new SynchTestingBiMapGenerator())\n",
        "44": "        .named(\"Synchronized.biMap[TestBiMap]\")\n",
        "45": "        .withFeatures(CollectionSize.ANY,\n",
        "46": "            CollectionFeature.SUPPORTS_ITERATOR_REMOVE,\n",
        "47": "            MapFeature.ALLOWS_NULL_KEYS,\n",
        "48": "            MapFeature.ALLOWS_NULL_VALUES,\n",
        "49": "            MapFeature.ALLOWS_ANY_NULL_QUERIES,\n",
        "50": "            MapFeature.GENERAL_PURPOSE,\n",
        "51": "            MapFeature.REJECTS_DUPLICATES_AT_CREATION)\n",
        "52": "        .createTestSuite());\n",
        "53": "    suite.addTest(BiMapTestSuiteBuilder.using(new SynchronizedHashBiMapGenerator())\n",
        "54": "        .named(\"synchronizedBiMap[HashBiMap]\")\n",
        "55": "        .withFeatures(CollectionSize.ANY,\n",
        "56": "            CollectionFeature.SUPPORTS_ITERATOR_REMOVE,\n",
        "57": "            MapFeature.ALLOWS_NULL_KEYS,\n",
        "58": "            MapFeature.ALLOWS_NULL_VALUES,\n",
        "59": "            MapFeature.ALLOWS_ANY_NULL_QUERIES,\n",
        "60": "            MapFeature.GENERAL_PURPOSE,\n",
        "61": "            MapFeature.REJECTS_DUPLICATES_AT_CREATION,\n",
        "62": "            CollectionFeature.SERIALIZABLE)\n",
        "63": "        .suppressing(BiMapInverseTester.getInverseSameAfterSerializingMethods())\n",
        "64": "        .createTestSuite());\n",
        "68": "  @Override protected <K, V> BiMap<K, V> create() {\n",
        "127": "    @Override public Set<V> values() {\n",
        "147": "  @Override public void testValues() {\n"
    }
}