{
    "addition": {
        "29": " * A sorted map which forwards all its method calls to another sorted map. Subclasses should\n",
        "30": " * override one or more methods to modify the behavior of the backing sorted map as desired per the\n",
        "31": " * <a href=\"http://en.wikipedia.org/wiki/Decorator_pattern\">decorator pattern</a>.\n",
        "33": " * <p><b>Warning:</b> The methods of {@code ForwardingSortedMap} forward <i>indiscriminately</i> to\n",
        "34": " * the methods of the delegate. For example, overriding {@link #put} alone <i>will not</i> change\n",
        "35": " * the behavior of {@link #putAll}, which can lead to unexpected behavior. In this case, you should\n",
        "36": " * override {@code putAll} as well, either providing your own implementation, or delegating to the\n",
        "37": " * provided {@code standardPutAll} method.\n",
        "43": " * <p>Each of the {@code standard} methods, where appropriate, use the comparator of the map to test\n",
        "44": " * equality for both keys and values, unlike {@code ForwardingMap}.\n",
        "46": " * <p>The {@code standard} methods and the collection views they return are not guaranteed to be\n",
        "47": " * thread-safe, even when all of the methods that they depend on are thread-safe.\n",
        "95": "   * A sensible implementation of {@link SortedMap#keySet} in terms of the methods of {@code\n",
        "96": "   * ForwardingSortedMap}. In many cases, you may wish to override {@link\n",
        "97": "   * ForwardingSortedMap#keySet} to forward to this implementation or a subclass thereof.\n",
        "121": "   * A sensible definition of {@link #containsKey} in terms of the {@code firstKey()} method of\n",
        "122": "   * {@link #tailMap}. If you override {@link #tailMap}, you may wish to override {@link\n",
        "123": "   * #containsKey} to forward to this implementation.\n",
        "142": "   * A sensible default implementation of {@link #subMap(Object, Object)} in terms of {@link\n",
        "143": "   * #headMap(Object)} and {@link #tailMap(Object)}. In some situations, you may wish to override\n",
        "144": "   * {@link #subMap(Object, Object)} to forward to this implementation.\n"
    },
    "removed": {
        "29": " * A sorted map which forwards all its method calls to another sorted map.\n",
        "30": " * Subclasses should override one or more methods to modify the behavior of\n",
        "31": " * the backing sorted map as desired per the <a\n",
        "32": " * href=\"http://en.wikipedia.org/wiki/Decorator_pattern\">decorator pattern</a>.\n",
        "34": " * <p><b>Warning:</b> The methods of {@code ForwardingSortedMap} forward\n",
        "35": " * <i>indiscriminately</i> to the methods of the delegate. For example,\n",
        "36": " * overriding {@link #put} alone <i>will not</i> change the behavior of {@link\n",
        "37": " * #putAll}, which can lead to unexpected behavior. In this case, you should\n",
        "38": " * override {@code putAll} as well, either providing your own implementation, or\n",
        "39": " * delegating to the provided {@code standardPutAll} method.\n",
        "45": " * <p>Each of the {@code standard} methods, where appropriate, use the\n",
        "46": " * comparator of the map to test equality for both keys and values, unlike\n",
        "47": " * {@code ForwardingMap}.\n",
        "49": " * <p>The {@code standard} methods and the collection views they return are not\n",
        "50": " * guaranteed to be thread-safe, even when all of the methods that they depend\n",
        "51": " * on are thread-safe.\n",
        "99": "   * A sensible implementation of {@link SortedMap#keySet} in terms of the methods of\n",
        "100": "   * {@code ForwardingSortedMap}. In many cases, you may wish to override\n",
        "101": "   * {@link ForwardingSortedMap#keySet} to forward to this implementation or a subclass thereof.\n",
        "125": "   * A sensible definition of {@link #containsKey} in terms of the {@code\n",
        "126": "   * firstKey()} method of {@link #tailMap}. If you override {@link #tailMap},\n",
        "127": "   * you may wish to override {@link #containsKey} to forward to this\n",
        "128": "   * implementation.\n",
        "147": "   * A sensible default implementation of {@link #subMap(Object, Object)} in\n",
        "148": "   * terms of {@link #headMap(Object)} and {@link #tailMap(Object)}. In some\n",
        "149": "   * situations, you may wish to override {@link #subMap(Object, Object)} to\n",
        "150": "   * forward to this implementation.\n"
    }
}