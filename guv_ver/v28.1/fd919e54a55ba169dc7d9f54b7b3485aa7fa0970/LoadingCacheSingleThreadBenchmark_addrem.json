{
    "addition": {
        "33": "  @Param({\"1000\", \"2000\"})\n",
        "34": "  int maximumSize;\n",
        "35": "\n",
        "36": "  @Param(\"5000\")\n",
        "37": "  int distinctKeys;\n",
        "38": "\n",
        "39": "  @Param(\"4\")\n",
        "40": "  int segments;\n",
        "44": "  @Param(\"2.5\")\n",
        "45": "  double concentration;\n",
        "56": "  @BeforeExperiment\n",
        "57": "  void setUp() {\n",
        "62": "    cache =\n",
        "63": "        CacheBuilder.newBuilder()\n",
        "64": "            .concurrencyLevel(segments)\n",
        "65": "            .maximumSize(maximumSize)\n",
        "66": "            .build(\n",
        "67": "                new CacheLoader<Integer, Integer>() {\n",
        "68": "                  @Override\n",
        "69": "                  public Integer load(Integer from) {\n",
        "70": "                    return (int) misses.incrementAndGet();\n",
        "71": "                  }\n",
        "72": "                });\n",
        "84": "  @Benchmark\n",
        "85": "  int time(int reps) {\n",
        "106": "  @AfterExperiment\n",
        "107": "  void tearDown() {\n"
    },
    "removed": {
        "33": "  @Param({\"1000\", \"2000\"}) int maximumSize;\n",
        "34": "  @Param(\"5000\") int distinctKeys;\n",
        "35": "  @Param(\"4\") int segments;\n",
        "39": "  @Param(\"2.5\") double concentration;\n",
        "50": "  @BeforeExperiment void setUp() {\n",
        "55": "    cache = CacheBuilder.newBuilder()\n",
        "56": "        .concurrencyLevel(segments)\n",
        "57": "        .maximumSize(maximumSize)\n",
        "58": "        .build(\n",
        "59": "            new CacheLoader<Integer, Integer>() {\n",
        "60": "              @Override public Integer load(Integer from) {\n",
        "61": "                return (int) misses.incrementAndGet();\n",
        "62": "              }\n",
        "63": "            });\n",
        "75": "  @Benchmark int time(int reps) {\n",
        "96": "  @AfterExperiment void tearDown() {\n"
    }
}