{
    "addition": {
        "385": "   * Constructs a new instance of this class (only invokable by the subclass constructor, typically\n",
        "386": "   * implicit).\n",
        "652": "   * Returns the greatest of the specified values according to this ordering. If there are multiple\n",
        "653": "   * greatest values, the first of those is returned.\n",
        "663": "   * @throws ClassCastException if the parameters are not <i>mutually comparable</i> under this\n",
        "664": "   *     ordering.\n",
        "926": "   * {@link Collections#binarySearch(List, Object, Comparator) Searches} {@code sortedList} for\n",
        "927": "   * {@code key} using the binary search algorithm. The list must be sorted using this ordering.\n",
        "939": "   * Exception thrown by a {@link Ordering#explicit(List)} or {@link Ordering#explicit(Object,\n",
        "940": "   * Object[])} comparator when comparing a value outside the set of values it can compare.\n",
        "941": "   * Extending {@link ClassCastException} may seem odd, but it is required.\n"
    },
    "removed": {
        "385": "   * Constructs a new instance of this class (only invokable by the subclass\n",
        "386": "   * constructor, typically implicit).\n",
        "652": "   * Returns the greatest of the specified values according to this ordering. If\n",
        "653": "   * there are multiple greatest values, the first of those is returned.\n",
        "663": "   * @throws ClassCastException if the parameters are not <i>mutually\n",
        "664": "   *     comparable</i> under this ordering.\n",
        "926": "   * {@link Collections#binarySearch(List, Object, Comparator) Searches}\n",
        "927": "   * {@code sortedList} for {@code key} using the binary search algorithm. The\n",
        "928": "   * list must be sorted using this ordering.\n",
        "940": "   * Exception thrown by a {@link Ordering#explicit(List)} or {@link\n",
        "941": "   * Ordering#explicit(Object, Object[])} comparator when comparing a value\n",
        "942": "   * outside the set of values it can compare. Extending {@link\n",
        "943": "   * ClassCastException} may seem odd, but it is required.\n"
    }
}