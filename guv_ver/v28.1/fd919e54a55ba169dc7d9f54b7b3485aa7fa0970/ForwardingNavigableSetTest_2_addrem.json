{
    "addition": {
        "44": "  static class StandardImplForwardingNavigableSet<T> extends ForwardingNavigableSet<T> {\n",
        "51": "    @Override\n",
        "52": "    protected NavigableSet<T> delegate() {\n",
        "56": "    @Override\n",
        "57": "    public boolean equals(Object object) {\n",
        "61": "    @Override\n",
        "62": "    public int hashCode() {\n",
        "66": "    @Override\n",
        "67": "    public boolean addAll(Collection<? extends T> collection) {\n",
        "71": "    @Override\n",
        "72": "    public void clear() {\n",
        "76": "    @Override\n",
        "77": "    public boolean contains(Object object) {\n",
        "81": "    @Override\n",
        "82": "    public boolean containsAll(Collection<?> collection) {\n",
        "86": "    @Override\n",
        "87": "    public boolean remove(Object object) {\n",
        "91": "    @Override\n",
        "92": "    public boolean removeAll(Collection<?> collection) {\n",
        "96": "    @Override\n",
        "97": "    public boolean retainAll(Collection<?> collection) {\n",
        "101": "    @Override\n",
        "102": "    public Object[] toArray() {\n",
        "106": "    @Override\n",
        "107": "    public <T> T[] toArray(T[] array) {\n",
        "111": "    @Override\n",
        "112": "    public String toString() {\n",
        "116": "    @Override\n",
        "117": "    public SortedSet<T> subSet(T fromElement, T toElement) {\n",
        "217": "        .testForwarding(\n",
        "218": "            NavigableSet.class,\n",
        "219": "            new Function<NavigableSet, NavigableSet>() {\n",
        "220": "              @Override\n",
        "221": "              public NavigableSet apply(NavigableSet delegate) {\n",
        "222": "                return wrap(delegate);\n",
        "223": "              }\n",
        "224": "            });\n",
        "238": "      @Override\n",
        "239": "      protected NavigableSet<T> delegate() {\n"
    },
    "removed": {
        "44": "  static class StandardImplForwardingNavigableSet<T>\n",
        "45": "      extends ForwardingNavigableSet<T> {\n",
        "52": "    @Override protected NavigableSet<T> delegate() {\n",
        "56": "    @Override public boolean equals(Object object) {\n",
        "60": "    @Override public int hashCode() {\n",
        "64": "    @Override public boolean addAll(Collection<? extends T> collection) {\n",
        "68": "    @Override public void clear() {\n",
        "72": "    @Override public boolean contains(Object object) {\n",
        "76": "    @Override public boolean containsAll(Collection<?> collection) {\n",
        "80": "    @Override public boolean remove(Object object) {\n",
        "84": "    @Override public boolean removeAll(Collection<?> collection) {\n",
        "88": "    @Override public boolean retainAll(Collection<?> collection) {\n",
        "92": "    @Override public Object[] toArray() {\n",
        "96": "    @Override public <T> T[] toArray(T[] array) {\n",
        "100": "    @Override public String toString() {\n",
        "104": "    @Override public SortedSet<T> subSet(T fromElement, T toElement) {\n",
        "204": "        .testForwarding(NavigableSet.class, new Function<NavigableSet, NavigableSet>() {\n",
        "205": "          @Override public NavigableSet apply(NavigableSet delegate) {\n",
        "206": "            return wrap(delegate);\n",
        "207": "          }\n",
        "208": "        });\n",
        "222": "      @Override protected NavigableSet<T> delegate() {\n"
    }
}