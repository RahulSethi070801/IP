{
    "addition": {
        "24": "/** @author Luiz-Otavio \"Z\" Zorzella */\n",
        "49": "    final Callback callback =\n",
        "50": "        new Callback() {\n",
        "51": "          @Override\n",
        "52": "          public void run() {\n",
        "53": "            assertEquals(\n",
        "54": "                \"tearDownTwo should have been run before tearDownOne\", false, tearDownOne.ran);\n",
        "55": "          }\n",
        "56": "        };\n",
        "89": "          \"A ClusterException should have been thrown, rather than a \" + e.getClass().getName(), e);\n",
        "96": "  @Override\n",
        "97": "  public final void runBare() throws Throwable {\n",
        "106": "  @Override\n",
        "107": "  protected void tearDown() {\n",
        "111": "  /** Builds a {@link TearDownStack} that makes sure it's clear by the end of this test. */\n",
        "114": "    tearDownStack.addTearDown(\n",
        "115": "        new TearDown() {\n",
        "116": "\n",
        "117": "          @Override\n",
        "118": "          public void tearDown() throws Exception {\n",
        "119": "            synchronized (result.stack) {\n",
        "120": "              assertEquals(\n",
        "121": "                  \"The test should have cleared the stack (say, by virtue of running runTearDown)\",\n",
        "122": "                  0,\n",
        "123": "                  result.stack.size());\n",
        "124": "            }\n",
        "125": "          }\n",
        "126": "        });\n"
    },
    "removed": {
        "24": "/**\n",
        "25": " * @author Luiz-Otavio \"Z\" Zorzella\n",
        "26": " */\n",
        "51": "    final Callback callback = new Callback() {\n",
        "52": "      @Override\n",
        "53": "      public void run() {\n",
        "54": "        assertEquals(\"tearDownTwo should have been run before tearDownOne\",\n",
        "55": "          false, tearDownOne.ran);\n",
        "56": "      }\n",
        "57": "    };\n",
        "90": "        \"A ClusterException should have been thrown, rather than a \" + e.getClass().getName(), e);\n",
        "97": "  @Override public final void runBare() throws Throwable {\n",
        "106": "  @Override protected void tearDown() {\n",
        "110": "  /**\n",
        "111": "   * Builds a {@link TearDownStack} that makes sure it's clear by the end of\n",
        "112": "   * this test.\n",
        "113": "   */\n",
        "116": "    tearDownStack.addTearDown(new TearDown() {\n",
        "117": "\n",
        "118": "      @Override\n",
        "119": "      public void tearDown() throws Exception {\n",
        "120": "        synchronized (result.stack) {\n",
        "121": "          assertEquals(\n",
        "122": "            \"The test should have cleared the stack (say, by virtue of running runTearDown)\",\n",
        "123": "            0, result.stack.size());\n",
        "124": "        }\n",
        "125": "      }\n",
        "126": "    });\n"
    }
}