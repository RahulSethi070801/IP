{
    "addition": {
        "43": "  private static final short[] ARRAY234 = {(short) 2, (short) 3, (short) 4};\n",
        "48": "  private static final short[] VALUES = {LEAST, (short) -1, (short) 0, (short) 1, GREATEST};\n",
        "81": "      assertTrue(\n",
        "82": "          value + \" not found in exception text: \" + ex.getMessage(),\n",
        "96": "          assertTrue(\n",
        "97": "              x + \", \" + y + \" (expected: \" + expected + \", actual\" + actual + \")\", actual < 0);\n",
        "99": "          assertTrue(\n",
        "100": "              x + \", \" + y + \" (expected: \" + expected + \", actual\" + actual + \")\", actual > 0);\n",
        "120": "    assertEquals(0, Shorts.indexOf(new short[] {(short) -1}, (short) -1));\n",
        "124": "    assertEquals(\n",
        "125": "        1, Shorts.indexOf(new short[] {(short) 2, (short) 3, (short) 2, (short) 3}, (short) 3));\n",
        "136": "    assertEquals(0, Shorts.indexOf(ARRAY234, new short[] {(short) 2, (short) 3}));\n",
        "137": "    assertEquals(1, Shorts.indexOf(ARRAY234, new short[] {(short) 3, (short) 4}));\n",
        "138": "    assertEquals(1, Shorts.indexOf(ARRAY234, new short[] {(short) 3}));\n",
        "139": "    assertEquals(2, Shorts.indexOf(ARRAY234, new short[] {(short) 4}));\n",
        "140": "    assertEquals(\n",
        "141": "        1,\n",
        "142": "        Shorts.indexOf(\n",
        "143": "            new short[] {(short) 2, (short) 3, (short) 3, (short) 3, (short) 3},\n",
        "144": "            new short[] {(short) 3}));\n",
        "145": "    assertEquals(\n",
        "146": "        2,\n",
        "147": "        Shorts.indexOf(\n",
        "148": "            new short[] {\n",
        "149": "              (short) 2, (short) 3, (short) 2, (short) 3, (short) 4, (short) 2, (short) 3\n",
        "150": "            },\n",
        "151": "            new short[] {(short) 2, (short) 3, (short) 4}));\n",
        "152": "    assertEquals(\n",
        "153": "        1,\n",
        "154": "        Shorts.indexOf(\n",
        "155": "            new short[] {\n",
        "156": "              (short) 2, (short) 2, (short) 3, (short) 4, (short) 2, (short) 3, (short) 4\n",
        "157": "            },\n",
        "158": "            new short[] {(short) 2, (short) 3, (short) 4}));\n",
        "159": "    assertEquals(\n",
        "160": "        -1,\n",
        "161": "        Shorts.indexOf(\n",
        "162": "            new short[] {(short) 4, (short) 3, (short) 2},\n",
        "163": "            new short[] {(short) 2, (short) 3, (short) 4}));\n",
        "170": "    assertEquals(0, Shorts.lastIndexOf(new short[] {(short) -1}, (short) -1));\n",
        "174": "    assertEquals(\n",
        "175": "        3, Shorts.lastIndexOf(new short[] {(short) 2, (short) 3, (short) 2, (short) 3}, (short) 3));\n",
        "189": "    assertEquals(\n",
        "190": "        (short) 9,\n",
        "191": "        Shorts.max((short) 8, (short) 6, (short) 7, (short) 5, (short) 3, (short) 0, (short) 9));\n",
        "205": "    assertEquals(\n",
        "206": "        (short) 0,\n",
        "207": "        Shorts.min((short) 8, (short) 6, (short) 7, (short) 5, (short) 3, (short) 0, (short) 9));\n",
        "230": "    assertTrue(\n",
        "231": "        Arrays.equals(\n",
        "232": "            new short[] {(short) 1, (short) 1, (short) 1}, Shorts.concat(ARRAY1, ARRAY1, ARRAY1)));\n",
        "233": "    assertTrue(\n",
        "234": "        Arrays.equals(\n",
        "235": "            new short[] {(short) 1, (short) 2, (short) 3, (short) 4},\n",
        "236": "            Shorts.concat(ARRAY1, ARRAY234)));\n",
        "241": "    assertTrue(Arrays.equals(new byte[] {0x23, 0x45}, Shorts.toByteArray((short) 0x2345)));\n",
        "242": "    assertTrue(\n",
        "243": "        Arrays.equals(new byte[] {(byte) 0xFE, (byte) 0xDC}, Shorts.toByteArray((short) 0xFEDC)));\n",
        "248": "    assertEquals((short) 0x2345, Shorts.fromByteArray(new byte[] {0x23, 0x45}));\n",
        "249": "    assertEquals((short) 0xFEDC, Shorts.fromByteArray(new byte[] {(byte) 0xFE, (byte) 0xDC}));\n",
        "278": "      assertTrue(Arrays.equals(b, Shorts.toByteArray(Shorts.fromByteArray(b))));\n",
        "286": "    assertTrue(\n",
        "287": "        Arrays.equals(\n",
        "288": "            new short[] {(short) 1, (short) 0, (short) 0}, Shorts.ensureCapacity(ARRAY1, 2, 1)));\n",
        "309": "    assertEquals(\"123\", Shorts.join(\"\", (short) 1, (short) 2, (short) 3));\n",
        "313": "    List<short[]> ordered =\n",
        "314": "        Arrays.asList(\n",
        "315": "            new short[] {},\n",
        "316": "            new short[] {LEAST},\n",
        "317": "            new short[] {LEAST, LEAST},\n",
        "318": "            new short[] {LEAST, (short) 1},\n",
        "319": "            new short[] {(short) 1},\n",
        "320": "            new short[] {(short) 1, LEAST},\n",
        "321": "            new short[] {GREATEST, GREATEST - (short) 1},\n",
        "322": "            new short[] {GREATEST, GREATEST},\n",
        "323": "            new short[] {GREATEST, GREATEST, GREATEST});\n",
        "417": "    for (int delta : new int[] {+1, 0, -1}) {\n",
        "420": "        Collection<Short> misleadingSize = Helpers.misleadingSizeCollection(delta);\n",
        "468": "    short[] array = {(short) 0, (short) 1, (short) 2};\n",
        "474": "    assertTrue(Arrays.equals(new short[] {(short) 0, (short) 1, (short) 2}, newArray));\n",
        "481": "    short[] array = {(short) 0, (short) 1, (short) 2, (short) 3};\n",
        "483": "    assertTrue(\n",
        "484": "        Arrays.equals(new short[] {(short) 1, (short) 2}, Shorts.toArray(list.subList(1, 3))));\n",
        "485": "    assertTrue(Arrays.equals(new short[] {}, Shorts.toArray(list.subList(2, 2))));\n"
    },
    "removed": {
        "43": "  private static final short[] ARRAY234\n",
        "44": "      = {(short) 2, (short) 3, (short) 4};\n",
        "49": "  private static final short[] VALUES =\n",
        "50": "      { LEAST, (short) -1, (short) 0, (short) 1, GREATEST };\n",
        "83": "      assertTrue(value + \" not found in exception text: \" + ex.getMessage(),\n",
        "97": "          assertTrue(x + \", \" + y + \" (expected: \" + expected + \", actual\" + actual + \")\",\n",
        "98": "              actual < 0);\n",
        "100": "          assertTrue(x + \", \" + y + \" (expected: \" + expected + \", actual\" + actual + \")\",\n",
        "101": "              actual > 0);\n",
        "121": "    assertEquals(0, Shorts.indexOf(\n",
        "122": "        new short[] {(short) -1}, (short) -1));\n",
        "126": "    assertEquals(1, Shorts.indexOf(\n",
        "127": "        new short[] { (short) 2, (short) 3, (short) 2, (short) 3 },\n",
        "128": "        (short) 3));\n",
        "139": "    assertEquals(0, Shorts.indexOf(\n",
        "140": "        ARRAY234, new short[] { (short) 2, (short) 3 }));\n",
        "141": "    assertEquals(1, Shorts.indexOf(\n",
        "142": "        ARRAY234, new short[] { (short) 3, (short) 4 }));\n",
        "143": "    assertEquals(1, Shorts.indexOf(ARRAY234, new short[] { (short) 3 }));\n",
        "144": "    assertEquals(2, Shorts.indexOf(ARRAY234, new short[] { (short) 4 }));\n",
        "145": "    assertEquals(1, Shorts.indexOf(new short[] { (short) 2, (short) 3,\n",
        "146": "        (short) 3, (short) 3, (short) 3 },\n",
        "147": "        new short[] { (short) 3 }\n",
        "148": "    ));\n",
        "149": "    assertEquals(2, Shorts.indexOf(\n",
        "150": "        new short[] { (short) 2, (short) 3, (short) 2,\n",
        "151": "            (short) 3, (short) 4, (short) 2, (short) 3},\n",
        "152": "        new short[] { (short) 2, (short) 3, (short) 4}\n",
        "153": "    ));\n",
        "154": "    assertEquals(1, Shorts.indexOf(\n",
        "155": "        new short[] { (short) 2, (short) 2, (short) 3,\n",
        "156": "            (short) 4, (short) 2, (short) 3, (short) 4},\n",
        "157": "        new short[] { (short) 2, (short) 3, (short) 4}\n",
        "158": "    ));\n",
        "159": "    assertEquals(-1, Shorts.indexOf(\n",
        "160": "        new short[] { (short) 4, (short) 3, (short) 2},\n",
        "161": "        new short[] { (short) 2, (short) 3, (short) 4}\n",
        "162": "    ));\n",
        "169": "    assertEquals(0, Shorts.lastIndexOf(\n",
        "170": "        new short[] {(short) -1}, (short) -1));\n",
        "174": "    assertEquals(3, Shorts.lastIndexOf(\n",
        "175": "        new short[] { (short) 2, (short) 3, (short) 2, (short) 3 },\n",
        "176": "        (short) 3));\n",
        "190": "    assertEquals((short) 9, Shorts.max(\n",
        "191": "        (short) 8, (short) 6, (short) 7,\n",
        "192": "        (short) 5, (short) 3, (short) 0, (short) 9));\n",
        "206": "    assertEquals((short) 0, Shorts.min(\n",
        "207": "        (short) 8, (short) 6, (short) 7,\n",
        "208": "        (short) 5, (short) 3, (short) 0, (short) 9));\n",
        "231": "    assertTrue(Arrays.equals(\n",
        "232": "        new short[] {(short) 1, (short) 1, (short) 1},\n",
        "233": "        Shorts.concat(ARRAY1, ARRAY1, ARRAY1)));\n",
        "234": "    assertTrue(Arrays.equals(\n",
        "235": "        new short[] {(short) 1, (short) 2, (short) 3, (short) 4},\n",
        "236": "        Shorts.concat(ARRAY1, ARRAY234)));\n",
        "241": "    assertTrue(Arrays.equals(\n",
        "242": "        new byte[] {0x23, 0x45}, Shorts.toByteArray((short) 0x2345)));\n",
        "243": "    assertTrue(Arrays.equals(\n",
        "244": "        new byte[] {(byte) 0xFE, (byte) 0xDC},\n",
        "245": "        Shorts.toByteArray((short) 0xFEDC)));\n",
        "250": "    assertEquals((short) 0x2345,\n",
        "251": "        Shorts.fromByteArray(new byte[] {0x23, 0x45}));\n",
        "252": "    assertEquals((short) 0xFEDC, Shorts.fromByteArray(\n",
        "253": "        new byte[] {(byte) 0xFE, (byte) 0xDC}));\n",
        "282": "      assertTrue(Arrays.equals(b,\n",
        "283": "          Shorts.toByteArray(Shorts.fromByteArray(b))));\n",
        "291": "    assertTrue(Arrays.equals(\n",
        "292": "        new short[] {(short) 1, (short) 0, (short) 0},\n",
        "293": "        Shorts.ensureCapacity(ARRAY1, 2, 1)));\n",
        "314": "    assertEquals(\"123\",\n",
        "315": "        Shorts.join(\"\", (short) 1, (short) 2, (short) 3));\n",
        "319": "    List<short[]> ordered = Arrays.asList(\n",
        "320": "        new short[] {},\n",
        "321": "        new short[] {LEAST},\n",
        "322": "        new short[] {LEAST, LEAST},\n",
        "323": "        new short[] {LEAST, (short) 1},\n",
        "324": "        new short[] {(short) 1},\n",
        "325": "        new short[] {(short) 1, LEAST},\n",
        "326": "        new short[] {GREATEST, GREATEST - (short) 1},\n",
        "327": "        new short[] {GREATEST, GREATEST},\n",
        "328": "        new short[] {GREATEST, GREATEST, GREATEST});\n",
        "422": "    for (int delta : new int[] { +1, 0, -1 }) {\n",
        "425": "        Collection<Short> misleadingSize =\n",
        "426": "            Helpers.misleadingSizeCollection(delta);\n",
        "474": "    short[] array = { (short) 0, (short) 1, (short) 2 };\n",
        "480": "    assertTrue(Arrays.equals(\n",
        "481": "        new short[] { (short) 0, (short) 1, (short) 2 }, newArray));\n",
        "488": "    short[] array = { (short) 0, (short) 1, (short) 2, (short) 3 };\n",
        "490": "    assertTrue(Arrays.equals(new short[] { (short) 1, (short) 2 },\n",
        "491": "        Shorts.toArray(list.subList(1, 3))));\n",
        "492": "    assertTrue(Arrays.equals(new short[] {},\n",
        "493": "        Shorts.toArray(list.subList(2, 2))));\n"
    }
}