{
    "addition": {
        "31": "/** @author George van den Driessche */\n",
        "62": "  enum ExampleDerivedFeature implements Feature<ExampleDerivedInterface> {\n",
        "68": "        DERIVED_FEATURE_1, DERIVED_FEATURE_2, ExampleBaseFeature.BASE_FEATURE_2);\n",
        "72": "    ExampleDerivedFeature(Feature<? super ExampleDerivedInterface>... implied) {\n",
        "92": "  @interface NonTesterAnnotation {}\n",
        "95": "  private abstract static class ExampleBaseInterfaceTester extends TestCase {\n",
        "108": "      ExampleDerivedFeature.DERIVED_FEATURE_1,\n",
        "109": "      ExampleDerivedFeature.DERIVED_FEATURE_2\n",
        "110": "    })\n",
        "118": "      ExampleDerivedFeature.DERIVED_FEATURE_1,\n",
        "119": "      ExampleDerivedFeature.DERIVED_FEATURE_3\n",
        "120": "    })\n",
        "139": "    FeatureEnumTest.assertGoodFeatureEnum(FeatureUtilTest.ExampleBaseFeature.class);\n",
        "140": "    FeatureEnumTest.assertGoodFeatureEnum(FeatureUtilTest.ExampleDerivedFeature.class);\n",
        "144": "    Set<Feature<?>> features = Sets.<Feature<?>>newHashSet(ExampleBaseFeature.BASE_FEATURE_1);\n",
        "151": "    features = Sets.<Feature<?>>newHashSet(ExampleDerivedFeature.DERIVED_FEATURE_1);\n",
        "156": "    assertThat(FeatureUtil.addImpliedFeatures(features))\n",
        "157": "        .containsExactly(\n",
        "158": "            ExampleDerivedFeature.DERIVED_FEATURE_2, ExampleBaseFeature.BASE_FEATURE_1);\n",
        "159": "\n",
        "160": "    features = Sets.<Feature<?>>newHashSet(ExampleDerivedFeature.COMPOUND_DERIVED_FEATURE);\n",
        "161": "    assertThat(FeatureUtil.addImpliedFeatures(features))\n",
        "162": "        .containsExactly(\n",
        "163": "            ExampleDerivedFeature.COMPOUND_DERIVED_FEATURE,\n",
        "164": "            ExampleDerivedFeature.DERIVED_FEATURE_1,\n",
        "165": "            ExampleDerivedFeature.DERIVED_FEATURE_2,\n",
        "166": "            ExampleBaseFeature.BASE_FEATURE_1,\n",
        "167": "            ExampleBaseFeature.BASE_FEATURE_2);\n",
        "171": "    Set<Feature<?>> features = Sets.<Feature<?>>newHashSet(ExampleBaseFeature.BASE_FEATURE_1);\n",
        "178": "    features = Sets.<Feature<?>>newHashSet(ExampleDerivedFeature.DERIVED_FEATURE_1);\n",
        "181": "    features = Sets.<Feature<?>>newHashSet(ExampleDerivedFeature.DERIVED_FEATURE_2);\n",
        "185": "    assertThat(FeatureUtil.impliedFeatures(features))\n",
        "186": "        .containsExactly(\n",
        "187": "            ExampleDerivedFeature.DERIVED_FEATURE_1,\n",
        "188": "            ExampleDerivedFeature.DERIVED_FEATURE_2,\n",
        "189": "            ExampleBaseFeature.BASE_FEATURE_1,\n",
        "190": "            ExampleBaseFeature.BASE_FEATURE_2);\n",
        "195": "    assertEquals(\n",
        "196": "        FeatureUtil.buildTesterRequirements(ExampleBaseInterfaceTester.class),\n",
        "201": "    assertEquals(\n",
        "202": "        FeatureUtil.buildTesterRequirements(ExampleDerivedInterfaceTester.class),\n",
        "205": "                ExampleBaseFeature.BASE_FEATURE_1, ExampleDerivedFeature.DERIVED_FEATURE_2),\n",
        "211": "    assertEquals(\n",
        "212": "        FeatureUtil.buildTesterRequirements(\n",
        "213": "            ExampleDerivedInterfaceTester.class.getMethod(\n",
        "214": "                \"testRequiringTwoExplicitDerivedFeatures\")),\n",
        "221": "    assertEquals(\n",
        "222": "        FeatureUtil.buildTesterRequirements(\n",
        "223": "            ExampleDerivedInterfaceTester.class.getMethod(\"testRequiringAllThreeDerivedFeatures\")),\n",
        "247": "    final Method method =\n",
        "248": "        ExampleDerivedInterfaceTester.class.getMethod(\"testRequiringConflictingFeatures\");\n",
        "260": "    assertEquals(\n",
        "261": "        FeatureUtil.buildDeclaredTesterRequirements(\n",
        "262": "            ExampleDerivedInterfaceTester.class.getMethod(\n",
        "263": "                \"testRequiringTwoExplicitDerivedFeatures\")),\n",
        "264": "        new TesterRequirements(\n",
        "265": "            FeatureUtil.addImpliedFeatures(\n",
        "266": "                Sets.<Feature<?>>newHashSet(\n",
        "267": "                    ExampleDerivedFeature.DERIVED_FEATURE_1,\n",
        "268": "                    ExampleDerivedFeature.DERIVED_FEATURE_2)),\n"
    },
    "removed": {
        "31": "/**\n",
        "32": " * @author George van den Driessche\n",
        "33": " */\n",
        "63": "  enum ExampleDerivedFeature implements Feature<ExampleDerivedInterface>{\n",
        "69": "        DERIVED_FEATURE_1,\n",
        "70": "        DERIVED_FEATURE_2,\n",
        "71": "        ExampleBaseFeature.BASE_FEATURE_2);\n",
        "75": "    ExampleDerivedFeature(\n",
        "76": "        Feature<? super ExampleDerivedInterface> ... implied) {\n",
        "95": "  @interface NonTesterAnnotation {\n",
        "96": "  }\n",
        "99": "  private static abstract class ExampleBaseInterfaceTester extends TestCase {\n",
        "112": "        ExampleDerivedFeature.DERIVED_FEATURE_1,\n",
        "113": "        ExampleDerivedFeature.DERIVED_FEATURE_2})\n",
        "121": "        ExampleDerivedFeature.DERIVED_FEATURE_1,\n",
        "122": "        ExampleDerivedFeature.DERIVED_FEATURE_3})\n",
        "141": "    FeatureEnumTest.assertGoodFeatureEnum(\n",
        "142": "        FeatureUtilTest.ExampleBaseFeature.class);\n",
        "143": "    FeatureEnumTest.assertGoodFeatureEnum(\n",
        "144": "        FeatureUtilTest.ExampleDerivedFeature.class);\n",
        "148": "    Set<Feature<?>> features = Sets.<Feature<?>>newHashSet(\n",
        "149": "        ExampleBaseFeature.BASE_FEATURE_1);\n",
        "156": "    features = Sets.<Feature<?>>newHashSet(\n",
        "157": "        ExampleDerivedFeature.DERIVED_FEATURE_1);\n",
        "162": "    assertThat(FeatureUtil.addImpliedFeatures(features)).containsExactly(\n",
        "163": "        ExampleDerivedFeature.DERIVED_FEATURE_2,\n",
        "164": "        ExampleBaseFeature.BASE_FEATURE_1);\n",
        "165": "\n",
        "166": "    features = Sets.<Feature<?>>newHashSet(\n",
        "167": "        ExampleDerivedFeature.COMPOUND_DERIVED_FEATURE);\n",
        "168": "    assertThat(FeatureUtil.addImpliedFeatures(features)).containsExactly(\n",
        "169": "        ExampleDerivedFeature.COMPOUND_DERIVED_FEATURE,\n",
        "170": "        ExampleDerivedFeature.DERIVED_FEATURE_1,\n",
        "171": "        ExampleDerivedFeature.DERIVED_FEATURE_2,\n",
        "172": "        ExampleBaseFeature.BASE_FEATURE_1,\n",
        "173": "        ExampleBaseFeature.BASE_FEATURE_2);\n",
        "177": "    Set<Feature<?>> features = Sets.<Feature<?>>newHashSet(\n",
        "178": "        ExampleBaseFeature.BASE_FEATURE_1);\n",
        "185": "    features = Sets.<Feature<?>>newHashSet(\n",
        "186": "        ExampleDerivedFeature.DERIVED_FEATURE_1);\n",
        "189": "    features = Sets.<Feature<?>>newHashSet(\n",
        "190": "        ExampleDerivedFeature.DERIVED_FEATURE_2);\n",
        "194": "    assertThat(FeatureUtil.impliedFeatures(features)).containsExactly(\n",
        "195": "        ExampleDerivedFeature.DERIVED_FEATURE_1,\n",
        "196": "        ExampleDerivedFeature.DERIVED_FEATURE_2,\n",
        "197": "        ExampleBaseFeature.BASE_FEATURE_1,\n",
        "198": "        ExampleBaseFeature.BASE_FEATURE_2);\n",
        "203": "    assertEquals(FeatureUtil.buildTesterRequirements(\n",
        "204": "            ExampleBaseInterfaceTester.class),\n",
        "209": "    assertEquals(FeatureUtil.buildTesterRequirements(\n",
        "210": "            ExampleDerivedInterfaceTester.class),\n",
        "213": "                ExampleBaseFeature.BASE_FEATURE_1,\n",
        "214": "                ExampleDerivedFeature.DERIVED_FEATURE_2),\n",
        "220": "    assertEquals(FeatureUtil.buildTesterRequirements(\n",
        "221": "        ExampleDerivedInterfaceTester.class.getMethod(\n",
        "222": "            \"testRequiringTwoExplicitDerivedFeatures\")),\n",
        "229": "    assertEquals(FeatureUtil.buildTesterRequirements(\n",
        "230": "        ExampleDerivedInterfaceTester.class.getMethod(\n",
        "231": "            \"testRequiringAllThreeDerivedFeatures\")),\n",
        "255": "    final Method method = ExampleDerivedInterfaceTester.class\n",
        "256": "        .getMethod(\"testRequiringConflictingFeatures\");\n",
        "268": "    assertEquals(FeatureUtil.buildDeclaredTesterRequirements(\n",
        "269": "        ExampleDerivedInterfaceTester.class\n",
        "270": "            .getMethod(\"testRequiringTwoExplicitDerivedFeatures\")),\n",
        "271": "        new TesterRequirements(FeatureUtil.addImpliedFeatures(\n",
        "272": "            Sets.<Feature<?>>newHashSet(\n",
        "273": "                ExampleDerivedFeature.DERIVED_FEATURE_1,\n",
        "274": "                ExampleDerivedFeature.DERIVED_FEATURE_2)),\n",
        "277": "\n"
    }
}