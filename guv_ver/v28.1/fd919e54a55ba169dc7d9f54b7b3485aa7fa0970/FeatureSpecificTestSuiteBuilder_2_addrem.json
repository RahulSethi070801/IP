{
    "addition": {
        "43": " * Creates, based on your criteria, a JUnit test suite that exhaustively tests the object generated\n",
        "44": " * by a G, selecting appropriate tests by matching them against specified features.\n",
        "46": " * @param <B> The concrete type of this builder (the 'self-type'). All the Builder methods of this\n",
        "47": " *     class (such as {@link #named}) return this type, so that Builder methods of more derived\n",
        "48": " *     classes can be chained onto them without casting.\n",
        "49": " * @param <G> The type of the generator to be passed to testers in the generated test suite. An\n",
        "50": " *     instance of G should somehow provide an instance of the class under test, plus any other\n",
        "51": " *     information required to parameterize the test.\n",
        "102": "   * Configures this builder to produce tests appropriate for the given features. This method may be\n",
        "103": "   * called more than once to add features in multiple groups.\n",
        "146": "   * <p><em>Note:</em> in principle this should never need to be used, but it might be useful if the\n",
        "147": "   * semantics of an implementation disagree in unforeseen ways with the semantics expected by a\n",
        "148": "   * test, or to keep dependent builds clean in spite of an erroneous test.\n",
        "166": "  /** Creates a runnable JUnit test suite based on the criteria already given. */\n",
        "197": "  /** Throw {@link IllegalStateException} if {@link #createTestSuite()} can't be called yet. */\n"
    },
    "removed": {
        "43": " * Creates, based on your criteria, a JUnit test suite that exhaustively tests\n",
        "44": " * the object generated by a G, selecting appropriate tests by matching them\n",
        "45": " * against specified features.\n",
        "46": " *\n",
        "47": " * @param <B> The concrete type of this builder (the 'self-type'). All the\n",
        "48": " * Builder methods of this class (such as {@link #named}) return this type, so\n",
        "49": " * that Builder methods of more derived classes can be chained onto them without\n",
        "50": " * casting.\n",
        "51": " * @param <G> The type of the generator to be passed to testers in the\n",
        "52": " * generated test suite. An instance of G should somehow provide an\n",
        "53": " * instance of the class under test, plus any other information required\n",
        "54": " * to parameterize the test.\n",
        "106": "   * Configures this builder to produce tests appropriate for the given\n",
        "107": "   * features.  This method may be called more than once to add features\n",
        "108": "   * in multiple groups.\n",
        "151": "   * <em>Note:</em> in principle this should never need to be used, but it\n",
        "152": "   * might be useful if the semantics of an implementation disagree in\n",
        "153": "   * unforeseen ways with the semantics expected by a test, or to keep dependent\n",
        "154": "   * builds clean in spite of an erroneous test.\n",
        "172": "  /**\n",
        "173": "   * Creates a runnable JUnit test suite based on the criteria already given.\n",
        "174": "   */\n",
        "205": "  /**\n",
        "206": "   * Throw {@link IllegalStateException} if {@link #createTestSuite()} can't\n",
        "207": "   * be called yet.\n",
        "208": "   */\n"
    }
}