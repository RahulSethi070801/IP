public static boolean is6to4Address(Inet6Address ip)
public ImmutableBiMap<V, K> inverse()

public static boolean is6to4Address(Inet6Address ip)
public int size()

public static boolean is6to4Address(Inet6Address ip)
public ImmutableBiMap<V, K> inverse()

public static boolean is6to4Address(Inet6Address ip)
public int size()

public static boolean is6to4Address(Inet6Address ip)
public int size()

public static boolean is6to4Address(Inet6Address ip)
public int size()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
public int size()

public static boolean is6to4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableCollection<V> createValues()

public static boolean is6to4Address(Inet6Address ip)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean is6to4Address(Inet6Address ip)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static boolean is6to4Address(Inet6Address ip)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean is6to4Address(Inet6Address ip)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static boolean is6to4Address(Inet6Address ip)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static boolean is6to4Address(Inet6Address ip)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean is6to4Address(Inet6Address ip)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static boolean is6to4Address(Inet6Address ip)
public ImmutableSortedSet<K> keySet()

public static boolean is6to4Address(Inet6Address ip)
public ImmutableSet<K> keySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableCollection<V> createValues()

public static boolean is6to4Address(Inet6Address ip)
public int size()

public static boolean is6to4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableCollection<V> createValues()

public static boolean is6to4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
public boolean contains(@Nullable Object object)

public static boolean is6to4Address(Inet6Address ip)
public boolean contains(Object object)

public static boolean is6to4Address(Inet6Address ip)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static boolean is6to4Address(Inet6Address ip)
public Builder<K, V> put(K key, V value)

public static boolean is6to4Address(Inet6Address ip)
ImmutableCollection<V> createValues()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
public ImmutableBiMap<V, K> inverse()

public static boolean is6to4Address(Inet6Address ip)
public int size()

public static boolean is6to4Address(Inet6Address ip)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static boolean is6to4Address(Inet6Address ip)
public Builder<K, V> put(K key, V value)

public static boolean is6to4Address(Inet6Address ip)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static boolean is6to4Address(Inet6Address ip)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
public boolean contains(@Nullable Object object)

public static boolean is6to4Address(Inet6Address ip)
public boolean contains(Object object)

public static boolean is6to4Address(Inet6Address ip)
public int size()

public static boolean is6to4Address(Inet6Address ip)
public int size()

public static boolean is6to4Address(Inet6Address ip)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static boolean is6to4Address(Inet6Address ip)
public ImmutableSet<V> get(@Nullable Object key)

public static boolean is6to4Address(Inet6Address ip)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static boolean is6to4Address(Inet6Address ip)
public ImmutableSet<V> get(@Nullable Object key)

public static boolean is6to4Address(Inet6Address ip)
public int size()

public static boolean is6to4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
boolean isPartialView()

public static boolean is6to4Address(Inet6Address ip)
ImmutableCollection<V> createValues()

public static boolean is6to4Address(Inet6Address ip)
public Iterator<E> iterator()

public static boolean is6to4Address(Inet6Address ip)
public UnmodifiableIterator<E> iterator()

public static boolean is6to4Address(Inet6Address ip)
public Iterator<Entry<E>> iterator()

public static boolean is6to4Address(Inet6Address ip)
public int size()

public static boolean is6to4Address(Inet6Address ip)
public int size()

public static boolean is6to4Address(Inet6Address ip)
public Iterator<E> iterator()

public static boolean is6to4Address(Inet6Address ip)
public UnmodifiableIterator<E> iterator()

public static boolean is6to4Address(Inet6Address ip)
public Iterator<Entry<E>> iterator()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
public int size()

public static boolean is6to4Address(Inet6Address ip)
public int size()

public static boolean is6to4Address(Inet6Address ip)
public ImmutableBiMap<V, K> inverse()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean is6to4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
public ImmutableBiMap<V, K> inverse()

public final boolean isSubtypeOf(Type supertype)
public int size()

public final boolean isSubtypeOf(Type supertype)
public ImmutableBiMap<V, K> inverse()

public final boolean isSubtypeOf(Type supertype)
public int size()

public final boolean isSubtypeOf(Type supertype)
public int size()

public final boolean isSubtypeOf(Type supertype)
public int size()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
public int size()

public final boolean isSubtypeOf(Type supertype)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableCollection<V> createValues()

public final boolean isSubtypeOf(Type supertype)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final boolean isSubtypeOf(Type supertype)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public final boolean isSubtypeOf(Type supertype)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final boolean isSubtypeOf(Type supertype)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public final boolean isSubtypeOf(Type supertype)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public final boolean isSubtypeOf(Type supertype)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final boolean isSubtypeOf(Type supertype)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public final boolean isSubtypeOf(Type supertype)
public ImmutableSortedSet<K> keySet()

public final boolean isSubtypeOf(Type supertype)
public ImmutableSet<K> keySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableCollection<V> createValues()

public final boolean isSubtypeOf(Type supertype)
public int size()

public final boolean isSubtypeOf(Type supertype)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableCollection<V> createValues()

public final boolean isSubtypeOf(Type supertype)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
public boolean contains(@Nullable Object object)

public final boolean isSubtypeOf(Type supertype)
public boolean contains(Object object)

public final boolean isSubtypeOf(Type supertype)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public final boolean isSubtypeOf(Type supertype)
public Builder<K, V> put(K key, V value)

public final boolean isSubtypeOf(Type supertype)
ImmutableCollection<V> createValues()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
public ImmutableBiMap<V, K> inverse()

public final boolean isSubtypeOf(Type supertype)
public int size()

public final boolean isSubtypeOf(Type supertype)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public final boolean isSubtypeOf(Type supertype)
public Builder<K, V> put(K key, V value)

public final boolean isSubtypeOf(Type supertype)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public final boolean isSubtypeOf(Type supertype)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
public boolean contains(@Nullable Object object)

public final boolean isSubtypeOf(Type supertype)
public boolean contains(Object object)

public final boolean isSubtypeOf(Type supertype)
public int size()

public final boolean isSubtypeOf(Type supertype)
public int size()

public final boolean isSubtypeOf(Type supertype)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public final boolean isSubtypeOf(Type supertype)
public ImmutableSet<V> get(@Nullable Object key)

public final boolean isSubtypeOf(Type supertype)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public final boolean isSubtypeOf(Type supertype)
public ImmutableSet<V> get(@Nullable Object key)

public final boolean isSubtypeOf(Type supertype)
public int size()

public final boolean isSubtypeOf(Type supertype)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
boolean isPartialView()

public final boolean isSubtypeOf(Type supertype)
ImmutableCollection<V> createValues()

public final boolean isSubtypeOf(Type supertype)
public Iterator<E> iterator()

public final boolean isSubtypeOf(Type supertype)
public UnmodifiableIterator<E> iterator()

public final boolean isSubtypeOf(Type supertype)
public Iterator<Entry<E>> iterator()

public final boolean isSubtypeOf(Type supertype)
public int size()

public final boolean isSubtypeOf(Type supertype)
public int size()

public final boolean isSubtypeOf(Type supertype)
public Iterator<E> iterator()

public final boolean isSubtypeOf(Type supertype)
public UnmodifiableIterator<E> iterator()

public final boolean isSubtypeOf(Type supertype)
public Iterator<Entry<E>> iterator()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
public int size()

public final boolean isSubtypeOf(Type supertype)
public int size()

public final boolean isSubtypeOf(Type supertype)
public ImmutableBiMap<V, K> inverse()

public final boolean isSubtypeOf(Type supertype)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(Type supertype)
ImmutableSortedSet<K> createKeySet()

public static String toUriString(InetAddress ip)
public ImmutableBiMap<V, K> inverse()

public static String toUriString(InetAddress ip)
public int size()

public static String toUriString(InetAddress ip)
public ImmutableBiMap<V, K> inverse()

public static String toUriString(InetAddress ip)
public int size()

public static String toUriString(InetAddress ip)
public int size()

public static String toUriString(InetAddress ip)
public int size()

public static String toUriString(InetAddress ip)
ImmutableSet<K> createKeySet()

public static String toUriString(InetAddress ip)
ImmutableSortedSet<K> createKeySet()

public static String toUriString(InetAddress ip)
ImmutableSet<K> createKeySet()

public static String toUriString(InetAddress ip)
ImmutableSortedSet<K> createKeySet()

public static String toUriString(InetAddress ip)
public int size()

public static String toUriString(InetAddress ip)
Set<Entry<E>> createEntrySet()

public static String toUriString(InetAddress ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String toUriString(InetAddress ip)
ImmutableCollection<V> createValues()

public static String toUriString(InetAddress ip)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static String toUriString(InetAddress ip)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static String toUriString(InetAddress ip)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static String toUriString(InetAddress ip)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static String toUriString(InetAddress ip)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static String toUriString(InetAddress ip)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static String toUriString(InetAddress ip)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static String toUriString(InetAddress ip)
public ImmutableSortedSet<K> keySet()

public static String toUriString(InetAddress ip)
public ImmutableSet<K> keySet()

public static String toUriString(InetAddress ip)
ImmutableCollection<V> createValues()

public static String toUriString(InetAddress ip)
public int size()

public static String toUriString(InetAddress ip)
Set<Entry<E>> createEntrySet()

public static String toUriString(InetAddress ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String toUriString(InetAddress ip)
ImmutableCollection<V> createValues()

public static String toUriString(InetAddress ip)
Set<Entry<E>> createEntrySet()

public static String toUriString(InetAddress ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String toUriString(InetAddress ip)
public boolean contains(@Nullable Object object)

public static String toUriString(InetAddress ip)
public boolean contains(Object object)

public static String toUriString(InetAddress ip)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static String toUriString(InetAddress ip)
public Builder<K, V> put(K key, V value)

public static String toUriString(InetAddress ip)
ImmutableCollection<V> createValues()

public static String toUriString(InetAddress ip)
ImmutableSet<K> createKeySet()

public static String toUriString(InetAddress ip)
ImmutableSortedSet<K> createKeySet()

public static String toUriString(InetAddress ip)
Set<Entry<E>> createEntrySet()

public static String toUriString(InetAddress ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String toUriString(InetAddress ip)
public ImmutableBiMap<V, K> inverse()

public static String toUriString(InetAddress ip)
public int size()

public static String toUriString(InetAddress ip)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static String toUriString(InetAddress ip)
public Builder<K, V> put(K key, V value)

public static String toUriString(InetAddress ip)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static String toUriString(InetAddress ip)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static String toUriString(InetAddress ip)
ImmutableSet<K> createKeySet()

public static String toUriString(InetAddress ip)
ImmutableSortedSet<K> createKeySet()

public static String toUriString(InetAddress ip)
Set<Entry<E>> createEntrySet()

public static String toUriString(InetAddress ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String toUriString(InetAddress ip)
Set<Entry<E>> createEntrySet()

public static String toUriString(InetAddress ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String toUriString(InetAddress ip)
ImmutableSet<K> createKeySet()

public static String toUriString(InetAddress ip)
ImmutableSortedSet<K> createKeySet()

public static String toUriString(InetAddress ip)
Set<Entry<E>> createEntrySet()

public static String toUriString(InetAddress ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String toUriString(InetAddress ip)
public boolean contains(@Nullable Object object)

public static String toUriString(InetAddress ip)
public boolean contains(Object object)

public static String toUriString(InetAddress ip)
public int size()

public static String toUriString(InetAddress ip)
public int size()

public static String toUriString(InetAddress ip)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static String toUriString(InetAddress ip)
public ImmutableSet<V> get(@Nullable Object key)

public static String toUriString(InetAddress ip)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static String toUriString(InetAddress ip)
public ImmutableSet<V> get(@Nullable Object key)

public static String toUriString(InetAddress ip)
public int size()

public static String toUriString(InetAddress ip)
Set<Entry<E>> createEntrySet()

public static String toUriString(InetAddress ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String toUriString(InetAddress ip)
ImmutableSet<K> createKeySet()

public static String toUriString(InetAddress ip)
ImmutableSortedSet<K> createKeySet()

public static String toUriString(InetAddress ip)
boolean isPartialView()

public static String toUriString(InetAddress ip)
ImmutableCollection<V> createValues()

public static String toUriString(InetAddress ip)
public Iterator<E> iterator()

public static String toUriString(InetAddress ip)
public UnmodifiableIterator<E> iterator()

public static String toUriString(InetAddress ip)
public Iterator<Entry<E>> iterator()

public static String toUriString(InetAddress ip)
public int size()

public static String toUriString(InetAddress ip)
public int size()

public static String toUriString(InetAddress ip)
public Iterator<E> iterator()

public static String toUriString(InetAddress ip)
public UnmodifiableIterator<E> iterator()

public static String toUriString(InetAddress ip)
public Iterator<Entry<E>> iterator()

public static String toUriString(InetAddress ip)
ImmutableSet<K> createKeySet()

public static String toUriString(InetAddress ip)
ImmutableSortedSet<K> createKeySet()

public static String toUriString(InetAddress ip)
ImmutableSet<K> createKeySet()

public static String toUriString(InetAddress ip)
ImmutableSortedSet<K> createKeySet()

public static String toUriString(InetAddress ip)
public int size()

public static String toUriString(InetAddress ip)
public int size()

public static String toUriString(InetAddress ip)
public ImmutableBiMap<V, K> inverse()

public static String toUriString(InetAddress ip)
ImmutableSet<K> createKeySet()

public static String toUriString(InetAddress ip)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
public ImmutableBiMap<V, K> inverse()

public final boolean isSubtypeOf(TypeToken<?> type)
public int size()

public final boolean isSubtypeOf(TypeToken<?> type)
public ImmutableBiMap<V, K> inverse()

public final boolean isSubtypeOf(TypeToken<?> type)
public int size()

public final boolean isSubtypeOf(TypeToken<?> type)
public int size()

public final boolean isSubtypeOf(TypeToken<?> type)
public int size()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
public int size()

public final boolean isSubtypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableCollection<V> createValues()

public final boolean isSubtypeOf(TypeToken<?> type)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final boolean isSubtypeOf(TypeToken<?> type)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public final boolean isSubtypeOf(TypeToken<?> type)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final boolean isSubtypeOf(TypeToken<?> type)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public final boolean isSubtypeOf(TypeToken<?> type)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public final boolean isSubtypeOf(TypeToken<?> type)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final boolean isSubtypeOf(TypeToken<?> type)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public final boolean isSubtypeOf(TypeToken<?> type)
public ImmutableSortedSet<K> keySet()

public final boolean isSubtypeOf(TypeToken<?> type)
public ImmutableSet<K> keySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableCollection<V> createValues()

public final boolean isSubtypeOf(TypeToken<?> type)
public int size()

public final boolean isSubtypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableCollection<V> createValues()

public final boolean isSubtypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
public boolean contains(@Nullable Object object)

public final boolean isSubtypeOf(TypeToken<?> type)
public boolean contains(Object object)

public final boolean isSubtypeOf(TypeToken<?> type)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public final boolean isSubtypeOf(TypeToken<?> type)
public Builder<K, V> put(K key, V value)

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableCollection<V> createValues()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
public ImmutableBiMap<V, K> inverse()

public final boolean isSubtypeOf(TypeToken<?> type)
public int size()

public final boolean isSubtypeOf(TypeToken<?> type)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public final boolean isSubtypeOf(TypeToken<?> type)
public Builder<K, V> put(K key, V value)

public final boolean isSubtypeOf(TypeToken<?> type)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public final boolean isSubtypeOf(TypeToken<?> type)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
public boolean contains(@Nullable Object object)

public final boolean isSubtypeOf(TypeToken<?> type)
public boolean contains(Object object)

public final boolean isSubtypeOf(TypeToken<?> type)
public int size()

public final boolean isSubtypeOf(TypeToken<?> type)
public int size()

public final boolean isSubtypeOf(TypeToken<?> type)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public final boolean isSubtypeOf(TypeToken<?> type)
public ImmutableSet<V> get(@Nullable Object key)

public final boolean isSubtypeOf(TypeToken<?> type)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public final boolean isSubtypeOf(TypeToken<?> type)
public ImmutableSet<V> get(@Nullable Object key)

public final boolean isSubtypeOf(TypeToken<?> type)
public int size()

public final boolean isSubtypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
boolean isPartialView()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableCollection<V> createValues()

public final boolean isSubtypeOf(TypeToken<?> type)
public Iterator<E> iterator()

public final boolean isSubtypeOf(TypeToken<?> type)
public UnmodifiableIterator<E> iterator()

public final boolean isSubtypeOf(TypeToken<?> type)
public Iterator<Entry<E>> iterator()

public final boolean isSubtypeOf(TypeToken<?> type)
public int size()

public final boolean isSubtypeOf(TypeToken<?> type)
public int size()

public final boolean isSubtypeOf(TypeToken<?> type)
public Iterator<E> iterator()

public final boolean isSubtypeOf(TypeToken<?> type)
public UnmodifiableIterator<E> iterator()

public final boolean isSubtypeOf(TypeToken<?> type)
public Iterator<Entry<E>> iterator()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
public int size()

public final boolean isSubtypeOf(TypeToken<?> type)
public int size()

public final boolean isSubtypeOf(TypeToken<?> type)
public ImmutableBiMap<V, K> inverse()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSubtypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper urlPathSegmentEscaper()
public int size()

public static Escaper urlPathSegmentEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper urlPathSegmentEscaper()
public int size()

public static Escaper urlPathSegmentEscaper()
public int size()

public static Escaper urlPathSegmentEscaper()
public int size()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
public int size()

public static Escaper urlPathSegmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
ImmutableCollection<V> createValues()

public static Escaper urlPathSegmentEscaper()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper urlPathSegmentEscaper()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static Escaper urlPathSegmentEscaper()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper urlPathSegmentEscaper()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static Escaper urlPathSegmentEscaper()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static Escaper urlPathSegmentEscaper()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper urlPathSegmentEscaper()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Escaper urlPathSegmentEscaper()
public ImmutableSortedSet<K> keySet()

public static Escaper urlPathSegmentEscaper()
public ImmutableSet<K> keySet()

public static Escaper urlPathSegmentEscaper()
ImmutableCollection<V> createValues()

public static Escaper urlPathSegmentEscaper()
public int size()

public static Escaper urlPathSegmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
ImmutableCollection<V> createValues()

public static Escaper urlPathSegmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
public boolean contains(@Nullable Object object)

public static Escaper urlPathSegmentEscaper()
public boolean contains(Object object)

public static Escaper urlPathSegmentEscaper()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Escaper urlPathSegmentEscaper()
public Builder<K, V> put(K key, V value)

public static Escaper urlPathSegmentEscaper()
ImmutableCollection<V> createValues()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper urlPathSegmentEscaper()
public int size()

public static Escaper urlPathSegmentEscaper()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Escaper urlPathSegmentEscaper()
public Builder<K, V> put(K key, V value)

public static Escaper urlPathSegmentEscaper()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static Escaper urlPathSegmentEscaper()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Escaper urlPathSegmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
public boolean contains(@Nullable Object object)

public static Escaper urlPathSegmentEscaper()
public boolean contains(Object object)

public static Escaper urlPathSegmentEscaper()
public int size()

public static Escaper urlPathSegmentEscaper()
public int size()

public static Escaper urlPathSegmentEscaper()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Escaper urlPathSegmentEscaper()
public ImmutableSet<V> get(@Nullable Object key)

public static Escaper urlPathSegmentEscaper()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Escaper urlPathSegmentEscaper()
public ImmutableSet<V> get(@Nullable Object key)

public static Escaper urlPathSegmentEscaper()
public int size()

public static Escaper urlPathSegmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
boolean isPartialView()

public static Escaper urlPathSegmentEscaper()
ImmutableCollection<V> createValues()

public static Escaper urlPathSegmentEscaper()
public Iterator<E> iterator()

public static Escaper urlPathSegmentEscaper()
public UnmodifiableIterator<E> iterator()

public static Escaper urlPathSegmentEscaper()
public Iterator<Entry<E>> iterator()

public static Escaper urlPathSegmentEscaper()
public int size()

public static Escaper urlPathSegmentEscaper()
public int size()

public static Escaper urlPathSegmentEscaper()
public Iterator<E> iterator()

public static Escaper urlPathSegmentEscaper()
public UnmodifiableIterator<E> iterator()

public static Escaper urlPathSegmentEscaper()
public Iterator<Entry<E>> iterator()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
public int size()

public static Escaper urlPathSegmentEscaper()
public int size()

public static Escaper urlPathSegmentEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper urlPathSegmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlPathSegmentEscaper()
ImmutableSortedSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
public ImmutableBiMap<V, K> inverse()

public int compareTo(UnsignedInteger other)
public int size()

public int compareTo(UnsignedInteger other)
public ImmutableBiMap<V, K> inverse()

public int compareTo(UnsignedInteger other)
public int size()

public int compareTo(UnsignedInteger other)
public int size()

public int compareTo(UnsignedInteger other)
public int size()

public int compareTo(UnsignedInteger other)
ImmutableSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
ImmutableSortedSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
ImmutableSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
ImmutableSortedSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
public int size()

public int compareTo(UnsignedInteger other)
Set<Entry<E>> createEntrySet()

public int compareTo(UnsignedInteger other)
ImmutableSet<Entry<K, V>> createEntrySet()

public int compareTo(UnsignedInteger other)
ImmutableCollection<V> createValues()

public int compareTo(UnsignedInteger other)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public int compareTo(UnsignedInteger other)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public int compareTo(UnsignedInteger other)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public int compareTo(UnsignedInteger other)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public int compareTo(UnsignedInteger other)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public int compareTo(UnsignedInteger other)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public int compareTo(UnsignedInteger other)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public int compareTo(UnsignedInteger other)
public ImmutableSortedSet<K> keySet()

public int compareTo(UnsignedInteger other)
public ImmutableSet<K> keySet()

public int compareTo(UnsignedInteger other)
ImmutableCollection<V> createValues()

public int compareTo(UnsignedInteger other)
public int size()

public int compareTo(UnsignedInteger other)
public int compare(Entry<?> entry1, Entry<?> entry2)

public int compareTo(UnsignedInteger other)
Set<Entry<E>> createEntrySet()

public int compareTo(UnsignedInteger other)
ImmutableSet<Entry<K, V>> createEntrySet()

public int compareTo(UnsignedInteger other)
ImmutableCollection<V> createValues()

public int compareTo(UnsignedInteger other)
Set<Entry<E>> createEntrySet()

public int compareTo(UnsignedInteger other)
ImmutableSet<Entry<K, V>> createEntrySet()

public int compareTo(UnsignedInteger other)
public boolean contains(@Nullable Object object)

public int compareTo(UnsignedInteger other)
public boolean contains(Object object)

public int compareTo(UnsignedInteger other)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public int compareTo(UnsignedInteger other)
public Builder<K, V> put(K key, V value)

public int compareTo(UnsignedInteger other)
ImmutableCollection<V> createValues()

public int compareTo(UnsignedInteger other)
ImmutableSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
ImmutableSortedSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
Set<Entry<E>> createEntrySet()

public int compareTo(UnsignedInteger other)
ImmutableSet<Entry<K, V>> createEntrySet()

public int compareTo(UnsignedInteger other)
public ImmutableBiMap<V, K> inverse()

public int compareTo(UnsignedInteger other)
public int size()

public int compareTo(UnsignedInteger other)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public int compareTo(UnsignedInteger other)
public Builder<K, V> put(K key, V value)

public int compareTo(UnsignedInteger other)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public int compareTo(UnsignedInteger other)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public int compareTo(UnsignedInteger other)
ImmutableSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
ImmutableSortedSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
Set<Entry<E>> createEntrySet()

public int compareTo(UnsignedInteger other)
ImmutableSet<Entry<K, V>> createEntrySet()

public int compareTo(UnsignedInteger other)
Set<Entry<E>> createEntrySet()

public int compareTo(UnsignedInteger other)
ImmutableSet<Entry<K, V>> createEntrySet()

public int compareTo(UnsignedInteger other)
ImmutableSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
ImmutableSortedSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
Set<Entry<E>> createEntrySet()

public int compareTo(UnsignedInteger other)
ImmutableSet<Entry<K, V>> createEntrySet()

public int compareTo(UnsignedInteger other)
public boolean contains(@Nullable Object object)

public int compareTo(UnsignedInteger other)
public boolean contains(Object object)

public int compareTo(UnsignedInteger other)
public int size()

public int compareTo(UnsignedInteger other)
public int size()

public int compareTo(UnsignedInteger other)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public int compareTo(UnsignedInteger other)
public ImmutableSet<V> get(@Nullable Object key)

public int compareTo(UnsignedInteger other)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public int compareTo(UnsignedInteger other)
public ImmutableSet<V> get(@Nullable Object key)

public int compareTo(UnsignedInteger other)
public int size()

public int compareTo(UnsignedInteger other)
Set<Entry<E>> createEntrySet()

public int compareTo(UnsignedInteger other)
ImmutableSet<Entry<K, V>> createEntrySet()

public int compareTo(UnsignedInteger other)
ImmutableSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
ImmutableSortedSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
boolean isPartialView()

public int compareTo(UnsignedInteger other)
ImmutableCollection<V> createValues()

public int compareTo(UnsignedInteger other)
public Iterator<E> iterator()

public int compareTo(UnsignedInteger other)
public UnmodifiableIterator<E> iterator()

public int compareTo(UnsignedInteger other)
public Iterator<Entry<E>> iterator()

public int compareTo(UnsignedInteger other)
public int size()

public int compareTo(UnsignedInteger other)
public int size()

public int compareTo(UnsignedInteger other)
public Iterator<E> iterator()

public int compareTo(UnsignedInteger other)
public UnmodifiableIterator<E> iterator()

public int compareTo(UnsignedInteger other)
public Iterator<Entry<E>> iterator()

public int compareTo(UnsignedInteger other)
ImmutableSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
ImmutableSortedSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
ImmutableSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
ImmutableSortedSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
public int size()

public int compareTo(UnsignedInteger other)
public int size()

public int compareTo(UnsignedInteger other)
public ImmutableBiMap<V, K> inverse()

public int compareTo(UnsignedInteger other)
ImmutableSet<K> createKeySet()

public int compareTo(UnsignedInteger other)
ImmutableSortedSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
public ImmutableBiMap<V, K> inverse()

public final LinearTransformation leastSquaresFit()
public int size()

public final LinearTransformation leastSquaresFit()
public ImmutableBiMap<V, K> inverse()

public final LinearTransformation leastSquaresFit()
public int size()

public final LinearTransformation leastSquaresFit()
public int size()

public final LinearTransformation leastSquaresFit()
public int size()

public final LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
public int size()

public final LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public final LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public final LinearTransformation leastSquaresFit()
ImmutableCollection<V> createValues()

public final LinearTransformation leastSquaresFit()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final LinearTransformation leastSquaresFit()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public final LinearTransformation leastSquaresFit()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final LinearTransformation leastSquaresFit()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public final LinearTransformation leastSquaresFit()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public final LinearTransformation leastSquaresFit()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final LinearTransformation leastSquaresFit()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public final LinearTransformation leastSquaresFit()
public ImmutableSortedSet<K> keySet()

public final LinearTransformation leastSquaresFit()
public ImmutableSet<K> keySet()

public final LinearTransformation leastSquaresFit()
ImmutableCollection<V> createValues()

public final LinearTransformation leastSquaresFit()
public int size()

public final LinearTransformation leastSquaresFit()
public int compare(Entry<?> entry1, Entry<?> entry2)

public final LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public final LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public final LinearTransformation leastSquaresFit()
ImmutableCollection<V> createValues()

public final LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public final LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public final LinearTransformation leastSquaresFit()
public boolean contains(@Nullable Object object)

public final LinearTransformation leastSquaresFit()
public boolean contains(Object object)

public final LinearTransformation leastSquaresFit()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public final LinearTransformation leastSquaresFit()
public Builder<K, V> put(K key, V value)

public final LinearTransformation leastSquaresFit()
ImmutableCollection<V> createValues()

public final LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public final LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public final LinearTransformation leastSquaresFit()
public ImmutableBiMap<V, K> inverse()

public final LinearTransformation leastSquaresFit()
public int size()

public final LinearTransformation leastSquaresFit()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public final LinearTransformation leastSquaresFit()
public Builder<K, V> put(K key, V value)

public final LinearTransformation leastSquaresFit()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public final LinearTransformation leastSquaresFit()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public final LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public final LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public final LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public final LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public final LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public final LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public final LinearTransformation leastSquaresFit()
public boolean contains(@Nullable Object object)

public final LinearTransformation leastSquaresFit()
public boolean contains(Object object)

public final LinearTransformation leastSquaresFit()
public int size()

public final LinearTransformation leastSquaresFit()
public int size()

public final LinearTransformation leastSquaresFit()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public final LinearTransformation leastSquaresFit()
public ImmutableSet<V> get(@Nullable Object key)

public final LinearTransformation leastSquaresFit()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public final LinearTransformation leastSquaresFit()
public ImmutableSet<V> get(@Nullable Object key)

public final LinearTransformation leastSquaresFit()
public int size()

public final LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public final LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public final LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
boolean isPartialView()

public final LinearTransformation leastSquaresFit()
ImmutableCollection<V> createValues()

public final LinearTransformation leastSquaresFit()
public Iterator<E> iterator()

public final LinearTransformation leastSquaresFit()
public UnmodifiableIterator<E> iterator()

public final LinearTransformation leastSquaresFit()
public Iterator<Entry<E>> iterator()

public final LinearTransformation leastSquaresFit()
public int size()

public final LinearTransformation leastSquaresFit()
public int size()

public final LinearTransformation leastSquaresFit()
public Iterator<E> iterator()

public final LinearTransformation leastSquaresFit()
public UnmodifiableIterator<E> iterator()

public final LinearTransformation leastSquaresFit()
public Iterator<Entry<E>> iterator()

public final LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
public int size()

public final LinearTransformation leastSquaresFit()
public int size()

public final LinearTransformation leastSquaresFit()
public ImmutableBiMap<V, K> inverse()

public final LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public final LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
public ImmutableBiMap<V, K> inverse()

public final boolean isSupertypeOf(Type type)
public int size()

public final boolean isSupertypeOf(Type type)
public ImmutableBiMap<V, K> inverse()

public final boolean isSupertypeOf(Type type)
public int size()

public final boolean isSupertypeOf(Type type)
public int size()

public final boolean isSupertypeOf(Type type)
public int size()

public final boolean isSupertypeOf(Type type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
public int size()

public final boolean isSupertypeOf(Type type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(Type type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(Type type)
ImmutableCollection<V> createValues()

public final boolean isSupertypeOf(Type type)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final boolean isSupertypeOf(Type type)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public final boolean isSupertypeOf(Type type)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final boolean isSupertypeOf(Type type)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public final boolean isSupertypeOf(Type type)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public final boolean isSupertypeOf(Type type)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final boolean isSupertypeOf(Type type)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public final boolean isSupertypeOf(Type type)
public ImmutableSortedSet<K> keySet()

public final boolean isSupertypeOf(Type type)
public ImmutableSet<K> keySet()

public final boolean isSupertypeOf(Type type)
ImmutableCollection<V> createValues()

public final boolean isSupertypeOf(Type type)
public int size()

public final boolean isSupertypeOf(Type type)
public int compare(Entry<?> entry1, Entry<?> entry2)

public final boolean isSupertypeOf(Type type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(Type type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(Type type)
ImmutableCollection<V> createValues()

public final boolean isSupertypeOf(Type type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(Type type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(Type type)
public boolean contains(@Nullable Object object)

public final boolean isSupertypeOf(Type type)
public boolean contains(Object object)

public final boolean isSupertypeOf(Type type)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public final boolean isSupertypeOf(Type type)
public Builder<K, V> put(K key, V value)

public final boolean isSupertypeOf(Type type)
ImmutableCollection<V> createValues()

public final boolean isSupertypeOf(Type type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(Type type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(Type type)
public ImmutableBiMap<V, K> inverse()

public final boolean isSupertypeOf(Type type)
public int size()

public final boolean isSupertypeOf(Type type)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public final boolean isSupertypeOf(Type type)
public Builder<K, V> put(K key, V value)

public final boolean isSupertypeOf(Type type)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public final boolean isSupertypeOf(Type type)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public final boolean isSupertypeOf(Type type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(Type type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(Type type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(Type type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(Type type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(Type type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(Type type)
public boolean contains(@Nullable Object object)

public final boolean isSupertypeOf(Type type)
public boolean contains(Object object)

public final boolean isSupertypeOf(Type type)
public int size()

public final boolean isSupertypeOf(Type type)
public int size()

public final boolean isSupertypeOf(Type type)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public final boolean isSupertypeOf(Type type)
public ImmutableSet<V> get(@Nullable Object key)

public final boolean isSupertypeOf(Type type)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public final boolean isSupertypeOf(Type type)
public ImmutableSet<V> get(@Nullable Object key)

public final boolean isSupertypeOf(Type type)
public int size()

public final boolean isSupertypeOf(Type type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(Type type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(Type type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
boolean isPartialView()

public final boolean isSupertypeOf(Type type)
ImmutableCollection<V> createValues()

public final boolean isSupertypeOf(Type type)
public Iterator<E> iterator()

public final boolean isSupertypeOf(Type type)
public UnmodifiableIterator<E> iterator()

public final boolean isSupertypeOf(Type type)
public Iterator<Entry<E>> iterator()

public final boolean isSupertypeOf(Type type)
public int size()

public final boolean isSupertypeOf(Type type)
public int size()

public final boolean isSupertypeOf(Type type)
public Iterator<E> iterator()

public final boolean isSupertypeOf(Type type)
public UnmodifiableIterator<E> iterator()

public final boolean isSupertypeOf(Type type)
public Iterator<Entry<E>> iterator()

public final boolean isSupertypeOf(Type type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
public int size()

public final boolean isSupertypeOf(Type type)
public int size()

public final boolean isSupertypeOf(Type type)
public ImmutableBiMap<V, K> inverse()

public final boolean isSupertypeOf(Type type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(Type type)
ImmutableSortedSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public ImmutableBiMap<V, K> inverse()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public int size()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public ImmutableBiMap<V, K> inverse()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public int size()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public int size()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public int size()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public int size()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableCollection<V> createValues()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public ImmutableSortedSet<K> keySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public ImmutableSet<K> keySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableCollection<V> createValues()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public int size()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public int compare(Entry<?> entry1, Entry<?> entry2)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableCollection<V> createValues()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public boolean contains(@Nullable Object object)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public boolean contains(Object object)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public Builder<K, V> put(K key, V value)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableCollection<V> createValues()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public ImmutableBiMap<V, K> inverse()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public int size()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public Builder<K, V> put(K key, V value)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public boolean contains(@Nullable Object object)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public boolean contains(Object object)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public int size()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public int size()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public ImmutableSet<V> get(@Nullable Object key)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public ImmutableSet<V> get(@Nullable Object key)

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public int size()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
boolean isPartialView()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableCollection<V> createValues()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public Iterator<E> iterator()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public UnmodifiableIterator<E> iterator()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public Iterator<Entry<E>> iterator()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public int size()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public int size()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public Iterator<E> iterator()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public UnmodifiableIterator<E> iterator()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public Iterator<Entry<E>> iterator()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public int size()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public int size()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
public ImmutableBiMap<V, K> inverse()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper xmlAttributeEscaper()
public int size()

public static Escaper xmlAttributeEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper xmlAttributeEscaper()
public int size()

public static Escaper xmlAttributeEscaper()
public int size()

public static Escaper xmlAttributeEscaper()
public int size()

public static Escaper xmlAttributeEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
public int size()

public static Escaper xmlAttributeEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlAttributeEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlAttributeEscaper()
ImmutableCollection<V> createValues()

public static Escaper xmlAttributeEscaper()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper xmlAttributeEscaper()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static Escaper xmlAttributeEscaper()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper xmlAttributeEscaper()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static Escaper xmlAttributeEscaper()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static Escaper xmlAttributeEscaper()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper xmlAttributeEscaper()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Escaper xmlAttributeEscaper()
public ImmutableSortedSet<K> keySet()

public static Escaper xmlAttributeEscaper()
public ImmutableSet<K> keySet()

public static Escaper xmlAttributeEscaper()
ImmutableCollection<V> createValues()

public static Escaper xmlAttributeEscaper()
public int size()

public static Escaper xmlAttributeEscaper()
public int compare(Entry<?> entry1, Entry<?> entry2)

public static Escaper xmlAttributeEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlAttributeEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlAttributeEscaper()
ImmutableCollection<V> createValues()

public static Escaper xmlAttributeEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlAttributeEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlAttributeEscaper()
public boolean contains(@Nullable Object object)

public static Escaper xmlAttributeEscaper()
public boolean contains(Object object)

public static Escaper xmlAttributeEscaper()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Escaper xmlAttributeEscaper()
public Builder<K, V> put(K key, V value)

public static Escaper xmlAttributeEscaper()
ImmutableCollection<V> createValues()

public static Escaper xmlAttributeEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlAttributeEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlAttributeEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper xmlAttributeEscaper()
public int size()

public static Escaper xmlAttributeEscaper()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Escaper xmlAttributeEscaper()
public Builder<K, V> put(K key, V value)

public static Escaper xmlAttributeEscaper()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static Escaper xmlAttributeEscaper()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Escaper xmlAttributeEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlAttributeEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlAttributeEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlAttributeEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlAttributeEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlAttributeEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlAttributeEscaper()
public boolean contains(@Nullable Object object)

public static Escaper xmlAttributeEscaper()
public boolean contains(Object object)

public static Escaper xmlAttributeEscaper()
public int size()

public static Escaper xmlAttributeEscaper()
public int size()

public static Escaper xmlAttributeEscaper()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Escaper xmlAttributeEscaper()
public ImmutableSet<V> get(@Nullable Object key)

public static Escaper xmlAttributeEscaper()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Escaper xmlAttributeEscaper()
public ImmutableSet<V> get(@Nullable Object key)

public static Escaper xmlAttributeEscaper()
public int size()

public static Escaper xmlAttributeEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlAttributeEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlAttributeEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
boolean isPartialView()

public static Escaper xmlAttributeEscaper()
ImmutableCollection<V> createValues()

public static Escaper xmlAttributeEscaper()
public Iterator<E> iterator()

public static Escaper xmlAttributeEscaper()
public UnmodifiableIterator<E> iterator()

public static Escaper xmlAttributeEscaper()
public Iterator<Entry<E>> iterator()

public static Escaper xmlAttributeEscaper()
public int size()

public static Escaper xmlAttributeEscaper()
public int size()

public static Escaper xmlAttributeEscaper()
public Iterator<E> iterator()

public static Escaper xmlAttributeEscaper()
public UnmodifiableIterator<E> iterator()

public static Escaper xmlAttributeEscaper()
public Iterator<Entry<E>> iterator()

public static Escaper xmlAttributeEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
public int size()

public static Escaper xmlAttributeEscaper()
public int size()

public static Escaper xmlAttributeEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper xmlAttributeEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlAttributeEscaper()
ImmutableSortedSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public boolean matchesNoneOf(CharSequence sequence)
public int size()

public boolean matchesNoneOf(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public boolean matchesNoneOf(CharSequence sequence)
public int size()

public boolean matchesNoneOf(CharSequence sequence)
public int size()

public boolean matchesNoneOf(CharSequence sequence)
public int size()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
public int size()

public boolean matchesNoneOf(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableCollection<V> createValues()

public boolean matchesNoneOf(CharSequence sequence)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public boolean matchesNoneOf(CharSequence sequence)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public boolean matchesNoneOf(CharSequence sequence)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public boolean matchesNoneOf(CharSequence sequence)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public boolean matchesNoneOf(CharSequence sequence)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public boolean matchesNoneOf(CharSequence sequence)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public boolean matchesNoneOf(CharSequence sequence)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public boolean matchesNoneOf(CharSequence sequence)
public ImmutableSortedSet<K> keySet()

public boolean matchesNoneOf(CharSequence sequence)
public ImmutableSet<K> keySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableCollection<V> createValues()

public boolean matchesNoneOf(CharSequence sequence)
public int size()

public boolean matchesNoneOf(CharSequence sequence)
public int compare(Entry<?> entry1, Entry<?> entry2)

public boolean matchesNoneOf(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableCollection<V> createValues()

public boolean matchesNoneOf(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
public boolean contains(@Nullable Object object)

public boolean matchesNoneOf(CharSequence sequence)
public boolean contains(Object object)

public boolean matchesNoneOf(CharSequence sequence)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public boolean matchesNoneOf(CharSequence sequence)
public Builder<K, V> put(K key, V value)

public boolean matchesNoneOf(CharSequence sequence)
ImmutableCollection<V> createValues()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public boolean matchesNoneOf(CharSequence sequence)
public int size()

public boolean matchesNoneOf(CharSequence sequence)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public boolean matchesNoneOf(CharSequence sequence)
public Builder<K, V> put(K key, V value)

public boolean matchesNoneOf(CharSequence sequence)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public boolean matchesNoneOf(CharSequence sequence)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
public boolean contains(@Nullable Object object)

public boolean matchesNoneOf(CharSequence sequence)
public boolean contains(Object object)

public boolean matchesNoneOf(CharSequence sequence)
public int size()

public boolean matchesNoneOf(CharSequence sequence)
public int size()

public boolean matchesNoneOf(CharSequence sequence)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public boolean matchesNoneOf(CharSequence sequence)
public ImmutableSet<V> get(@Nullable Object key)

public boolean matchesNoneOf(CharSequence sequence)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public boolean matchesNoneOf(CharSequence sequence)
public ImmutableSet<V> get(@Nullable Object key)

public boolean matchesNoneOf(CharSequence sequence)
public int size()

public boolean matchesNoneOf(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
boolean isPartialView()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableCollection<V> createValues()

public boolean matchesNoneOf(CharSequence sequence)
public Iterator<E> iterator()

public boolean matchesNoneOf(CharSequence sequence)
public UnmodifiableIterator<E> iterator()

public boolean matchesNoneOf(CharSequence sequence)
public Iterator<Entry<E>> iterator()

public boolean matchesNoneOf(CharSequence sequence)
public int size()

public boolean matchesNoneOf(CharSequence sequence)
public int size()

public boolean matchesNoneOf(CharSequence sequence)
public Iterator<E> iterator()

public boolean matchesNoneOf(CharSequence sequence)
public UnmodifiableIterator<E> iterator()

public boolean matchesNoneOf(CharSequence sequence)
public Iterator<Entry<E>> iterator()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
public int size()

public boolean matchesNoneOf(CharSequence sequence)
public int size()

public boolean matchesNoneOf(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSet<K> createKeySet()

public boolean matchesNoneOf(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public static CharMatcher digit()
public ImmutableBiMap<V, K> inverse()

public static CharMatcher digit()
public int size()

public static CharMatcher digit()
public ImmutableBiMap<V, K> inverse()

public static CharMatcher digit()
public int size()

public static CharMatcher digit()
public int size()

public static CharMatcher digit()
public int size()

public static CharMatcher digit()
ImmutableSet<K> createKeySet()

public static CharMatcher digit()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher digit()
ImmutableSet<K> createKeySet()

public static CharMatcher digit()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher digit()
public int size()

public static CharMatcher digit()
Set<Entry<E>> createEntrySet()

public static CharMatcher digit()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher digit()
ImmutableCollection<V> createValues()

public static CharMatcher digit()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static CharMatcher digit()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static CharMatcher digit()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static CharMatcher digit()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static CharMatcher digit()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static CharMatcher digit()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static CharMatcher digit()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static CharMatcher digit()
public ImmutableSortedSet<K> keySet()

public static CharMatcher digit()
public ImmutableSet<K> keySet()

public static CharMatcher digit()
ImmutableCollection<V> createValues()

public static CharMatcher digit()
public int size()

public static CharMatcher digit()
public int compare(Entry<?> entry1, Entry<?> entry2)

public static CharMatcher digit()
Set<Entry<E>> createEntrySet()

public static CharMatcher digit()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher digit()
ImmutableCollection<V> createValues()

public static CharMatcher digit()
Set<Entry<E>> createEntrySet()

public static CharMatcher digit()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher digit()
public boolean contains(@Nullable Object object)

public static CharMatcher digit()
public boolean contains(Object object)

public static CharMatcher digit()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static CharMatcher digit()
public Builder<K, V> put(K key, V value)

public static CharMatcher digit()
ImmutableCollection<V> createValues()

public static CharMatcher digit()
ImmutableSet<K> createKeySet()

public static CharMatcher digit()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher digit()
Set<Entry<E>> createEntrySet()

public static CharMatcher digit()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher digit()
public ImmutableBiMap<V, K> inverse()

public static CharMatcher digit()
public int size()

public static CharMatcher digit()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static CharMatcher digit()
public Builder<K, V> put(K key, V value)

public static CharMatcher digit()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static CharMatcher digit()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static CharMatcher digit()
ImmutableSet<K> createKeySet()

public static CharMatcher digit()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher digit()
Set<Entry<E>> createEntrySet()

public static CharMatcher digit()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher digit()
Set<Entry<E>> createEntrySet()

public static CharMatcher digit()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher digit()
ImmutableSet<K> createKeySet()

public static CharMatcher digit()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher digit()
Set<Entry<E>> createEntrySet()

public static CharMatcher digit()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher digit()
public boolean contains(@Nullable Object object)

public static CharMatcher digit()
public boolean contains(Object object)

public static CharMatcher digit()
public int size()

public static CharMatcher digit()
public int size()

public static CharMatcher digit()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static CharMatcher digit()
public ImmutableSet<V> get(@Nullable Object key)

public static CharMatcher digit()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static CharMatcher digit()
public ImmutableSet<V> get(@Nullable Object key)

public static CharMatcher digit()
public int size()

public static CharMatcher digit()
Set<Entry<E>> createEntrySet()

public static CharMatcher digit()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher digit()
ImmutableSet<K> createKeySet()

public static CharMatcher digit()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher digit()
boolean isPartialView()

public static CharMatcher digit()
ImmutableCollection<V> createValues()

public static CharMatcher digit()
public Iterator<E> iterator()

public static CharMatcher digit()
public UnmodifiableIterator<E> iterator()

public static CharMatcher digit()
public Iterator<Entry<E>> iterator()

public static CharMatcher digit()
public int size()

public static CharMatcher digit()
public int size()

public static CharMatcher digit()
public Iterator<E> iterator()

public static CharMatcher digit()
public UnmodifiableIterator<E> iterator()

public static CharMatcher digit()
public Iterator<Entry<E>> iterator()

public static CharMatcher digit()
ImmutableSet<K> createKeySet()

public static CharMatcher digit()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher digit()
ImmutableSet<K> createKeySet()

public static CharMatcher digit()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher digit()
public int size()

public static CharMatcher digit()
public int size()

public static CharMatcher digit()
public ImmutableBiMap<V, K> inverse()

public static CharMatcher digit()
ImmutableSet<K> createKeySet()

public static CharMatcher digit()
ImmutableSortedSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
public ImmutableBiMap<V, K> inverse()

public LinearTransformation leastSquaresFit()
public int size()

public LinearTransformation leastSquaresFit()
public ImmutableBiMap<V, K> inverse()

public LinearTransformation leastSquaresFit()
public int size()

public LinearTransformation leastSquaresFit()
public int size()

public LinearTransformation leastSquaresFit()
public int size()

public LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
public int size()

public LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public LinearTransformation leastSquaresFit()
ImmutableCollection<V> createValues()

public LinearTransformation leastSquaresFit()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public LinearTransformation leastSquaresFit()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public LinearTransformation leastSquaresFit()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public LinearTransformation leastSquaresFit()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public LinearTransformation leastSquaresFit()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public LinearTransformation leastSquaresFit()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public LinearTransformation leastSquaresFit()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public LinearTransformation leastSquaresFit()
public ImmutableSortedSet<K> keySet()

public LinearTransformation leastSquaresFit()
public ImmutableSet<K> keySet()

public LinearTransformation leastSquaresFit()
ImmutableCollection<V> createValues()

public LinearTransformation leastSquaresFit()
public int size()

public LinearTransformation leastSquaresFit()
public int compare(Entry<?> entry1, Entry<?> entry2)

public LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public LinearTransformation leastSquaresFit()
ImmutableCollection<V> createValues()

public LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public LinearTransformation leastSquaresFit()
public boolean contains(@Nullable Object object)

public LinearTransformation leastSquaresFit()
public boolean contains(Object object)

public LinearTransformation leastSquaresFit()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public LinearTransformation leastSquaresFit()
public Builder<K, V> put(K key, V value)

public LinearTransformation leastSquaresFit()
ImmutableCollection<V> createValues()

public LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public LinearTransformation leastSquaresFit()
public ImmutableBiMap<V, K> inverse()

public LinearTransformation leastSquaresFit()
public int size()

public LinearTransformation leastSquaresFit()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public LinearTransformation leastSquaresFit()
public Builder<K, V> put(K key, V value)

public LinearTransformation leastSquaresFit()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public LinearTransformation leastSquaresFit()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public LinearTransformation leastSquaresFit()
public boolean contains(@Nullable Object object)

public LinearTransformation leastSquaresFit()
public boolean contains(Object object)

public LinearTransformation leastSquaresFit()
public int size()

public LinearTransformation leastSquaresFit()
public int size()

public LinearTransformation leastSquaresFit()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public LinearTransformation leastSquaresFit()
public ImmutableSet<V> get(@Nullable Object key)

public LinearTransformation leastSquaresFit()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public LinearTransformation leastSquaresFit()
public ImmutableSet<V> get(@Nullable Object key)

public LinearTransformation leastSquaresFit()
public int size()

public LinearTransformation leastSquaresFit()
Set<Entry<E>> createEntrySet()

public LinearTransformation leastSquaresFit()
ImmutableSet<Entry<K, V>> createEntrySet()

public LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
boolean isPartialView()

public LinearTransformation leastSquaresFit()
ImmutableCollection<V> createValues()

public LinearTransformation leastSquaresFit()
public Iterator<E> iterator()

public LinearTransformation leastSquaresFit()
public UnmodifiableIterator<E> iterator()

public LinearTransformation leastSquaresFit()
public Iterator<Entry<E>> iterator()

public LinearTransformation leastSquaresFit()
public int size()

public LinearTransformation leastSquaresFit()
public int size()

public LinearTransformation leastSquaresFit()
public Iterator<E> iterator()

public LinearTransformation leastSquaresFit()
public UnmodifiableIterator<E> iterator()

public LinearTransformation leastSquaresFit()
public Iterator<Entry<E>> iterator()

public LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
public int size()

public LinearTransformation leastSquaresFit()
public int size()

public LinearTransformation leastSquaresFit()
public ImmutableBiMap<V, K> inverse()

public LinearTransformation leastSquaresFit()
ImmutableSet<K> createKeySet()

public LinearTransformation leastSquaresFit()
ImmutableSortedSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
public ImmutableBiMap<V, K> inverse()

public static boolean isCompatIPv4Address(Inet6Address ip)
public int size()

public static boolean isCompatIPv4Address(Inet6Address ip)
public ImmutableBiMap<V, K> inverse()

public static boolean isCompatIPv4Address(Inet6Address ip)
public int size()

public static boolean isCompatIPv4Address(Inet6Address ip)
public int size()

public static boolean isCompatIPv4Address(Inet6Address ip)
public int size()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
public int size()

public static boolean isCompatIPv4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableCollection<V> createValues()

public static boolean isCompatIPv4Address(Inet6Address ip)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean isCompatIPv4Address(Inet6Address ip)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static boolean isCompatIPv4Address(Inet6Address ip)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean isCompatIPv4Address(Inet6Address ip)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static boolean isCompatIPv4Address(Inet6Address ip)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static boolean isCompatIPv4Address(Inet6Address ip)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean isCompatIPv4Address(Inet6Address ip)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static boolean isCompatIPv4Address(Inet6Address ip)
public ImmutableSortedSet<K> keySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
public ImmutableSet<K> keySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableCollection<V> createValues()

public static boolean isCompatIPv4Address(Inet6Address ip)
public int size()

public static boolean isCompatIPv4Address(Inet6Address ip)
public int compare(Entry<?> entry1, Entry<?> entry2)

public static boolean isCompatIPv4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableCollection<V> createValues()

public static boolean isCompatIPv4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
public boolean contains(@Nullable Object object)

public static boolean isCompatIPv4Address(Inet6Address ip)
public boolean contains(Object object)

public static boolean isCompatIPv4Address(Inet6Address ip)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static boolean isCompatIPv4Address(Inet6Address ip)
public Builder<K, V> put(K key, V value)

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableCollection<V> createValues()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
public ImmutableBiMap<V, K> inverse()

public static boolean isCompatIPv4Address(Inet6Address ip)
public int size()

public static boolean isCompatIPv4Address(Inet6Address ip)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static boolean isCompatIPv4Address(Inet6Address ip)
public Builder<K, V> put(K key, V value)

public static boolean isCompatIPv4Address(Inet6Address ip)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static boolean isCompatIPv4Address(Inet6Address ip)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
public boolean contains(@Nullable Object object)

public static boolean isCompatIPv4Address(Inet6Address ip)
public boolean contains(Object object)

public static boolean isCompatIPv4Address(Inet6Address ip)
public int size()

public static boolean isCompatIPv4Address(Inet6Address ip)
public int size()

public static boolean isCompatIPv4Address(Inet6Address ip)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static boolean isCompatIPv4Address(Inet6Address ip)
public ImmutableSet<V> get(@Nullable Object key)

public static boolean isCompatIPv4Address(Inet6Address ip)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static boolean isCompatIPv4Address(Inet6Address ip)
public ImmutableSet<V> get(@Nullable Object key)

public static boolean isCompatIPv4Address(Inet6Address ip)
public int size()

public static boolean isCompatIPv4Address(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
boolean isPartialView()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableCollection<V> createValues()

public static boolean isCompatIPv4Address(Inet6Address ip)
public Iterator<E> iterator()

public static boolean isCompatIPv4Address(Inet6Address ip)
public UnmodifiableIterator<E> iterator()

public static boolean isCompatIPv4Address(Inet6Address ip)
public Iterator<Entry<E>> iterator()

public static boolean isCompatIPv4Address(Inet6Address ip)
public int size()

public static boolean isCompatIPv4Address(Inet6Address ip)
public int size()

public static boolean isCompatIPv4Address(Inet6Address ip)
public Iterator<E> iterator()

public static boolean isCompatIPv4Address(Inet6Address ip)
public UnmodifiableIterator<E> iterator()

public static boolean isCompatIPv4Address(Inet6Address ip)
public Iterator<Entry<E>> iterator()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
public int size()

public static boolean isCompatIPv4Address(Inet6Address ip)
public int size()

public static boolean isCompatIPv4Address(Inet6Address ip)
public ImmutableBiMap<V, K> inverse()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isCompatIPv4Address(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32()
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_32()
public int size()

public static HashFunction murmur3_32()
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_32()
public int size()

public static HashFunction murmur3_32()
public int size()

public static HashFunction murmur3_32()
public int size()

public static HashFunction murmur3_32()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32()
public int size()

public static HashFunction murmur3_32()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32()
ImmutableCollection<V> createValues()

public static HashFunction murmur3_32()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_32()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static HashFunction murmur3_32()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_32()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static HashFunction murmur3_32()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static HashFunction murmur3_32()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_32()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static HashFunction murmur3_32()
public ImmutableSortedSet<K> keySet()

public static HashFunction murmur3_32()
public ImmutableSet<K> keySet()

public static HashFunction murmur3_32()
ImmutableCollection<V> createValues()

public static HashFunction murmur3_32()
public int size()

public static HashFunction murmur3_32()
public int compare(Entry<?> entry1, Entry<?> entry2)

public static HashFunction murmur3_32()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32()
ImmutableCollection<V> createValues()

public static HashFunction murmur3_32()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32()
public boolean contains(@Nullable Object object)

public static HashFunction murmur3_32()
public boolean contains(Object object)

public static HashFunction murmur3_32()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static HashFunction murmur3_32()
public Builder<K, V> put(K key, V value)

public static HashFunction murmur3_32()
ImmutableCollection<V> createValues()

public static HashFunction murmur3_32()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32()
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_32()
public int size()

public static HashFunction murmur3_32()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static HashFunction murmur3_32()
public Builder<K, V> put(K key, V value)

public static HashFunction murmur3_32()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_32()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static HashFunction murmur3_32()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32()
public boolean contains(@Nullable Object object)

public static HashFunction murmur3_32()
public boolean contains(Object object)

public static HashFunction murmur3_32()
public int size()

public static HashFunction murmur3_32()
public int size()

public static HashFunction murmur3_32()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static HashFunction murmur3_32()
public ImmutableSet<V> get(@Nullable Object key)

public static HashFunction murmur3_32()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static HashFunction murmur3_32()
public ImmutableSet<V> get(@Nullable Object key)

public static HashFunction murmur3_32()
public int size()

public static HashFunction murmur3_32()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32()
boolean isPartialView()

public static HashFunction murmur3_32()
ImmutableCollection<V> createValues()

public static HashFunction murmur3_32()
public Iterator<E> iterator()

public static HashFunction murmur3_32()
public UnmodifiableIterator<E> iterator()

public static HashFunction murmur3_32()
public Iterator<Entry<E>> iterator()

public static HashFunction murmur3_32()
public int size()

public static HashFunction murmur3_32()
public int size()

public static HashFunction murmur3_32()
public Iterator<E> iterator()

public static HashFunction murmur3_32()
public UnmodifiableIterator<E> iterator()

public static HashFunction murmur3_32()
public Iterator<Entry<E>> iterator()

public static HashFunction murmur3_32()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32()
public int size()

public static HashFunction murmur3_32()
public int size()

public static HashFunction murmur3_32()
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_32()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32()
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
public ImmutableBiMap<V, K> inverse()

public static String getNameWithoutExtension(String file)
public int size()

public static String getNameWithoutExtension(String file)
public ImmutableBiMap<V, K> inverse()

public static String getNameWithoutExtension(String file)
public int size()

public static String getNameWithoutExtension(String file)
public int size()

public static String getNameWithoutExtension(String file)
public int size()

public static String getNameWithoutExtension(String file)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
public int size()

public static String getNameWithoutExtension(String file)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(String file)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(String file)
ImmutableCollection<V> createValues()

public static String getNameWithoutExtension(String file)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static String getNameWithoutExtension(String file)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static String getNameWithoutExtension(String file)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static String getNameWithoutExtension(String file)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static String getNameWithoutExtension(String file)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static String getNameWithoutExtension(String file)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static String getNameWithoutExtension(String file)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static String getNameWithoutExtension(String file)
public ImmutableSortedSet<K> keySet()

public static String getNameWithoutExtension(String file)
public ImmutableSet<K> keySet()

public static String getNameWithoutExtension(String file)
ImmutableCollection<V> createValues()

public static String getNameWithoutExtension(String file)
public int size()

public static String getNameWithoutExtension(String file)
public int compare(Entry<?> entry1, Entry<?> entry2)

public static String getNameWithoutExtension(String file)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(String file)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(String file)
ImmutableCollection<V> createValues()

public static String getNameWithoutExtension(String file)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(String file)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(String file)
public boolean contains(@Nullable Object object)

public static String getNameWithoutExtension(String file)
public boolean contains(Object object)

public static String getNameWithoutExtension(String file)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static String getNameWithoutExtension(String file)
public Builder<K, V> put(K key, V value)

public static String getNameWithoutExtension(String file)
ImmutableCollection<V> createValues()

public static String getNameWithoutExtension(String file)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(String file)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(String file)
public ImmutableBiMap<V, K> inverse()

public static String getNameWithoutExtension(String file)
public int size()

public static String getNameWithoutExtension(String file)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static String getNameWithoutExtension(String file)
public Builder<K, V> put(K key, V value)

public static String getNameWithoutExtension(String file)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static String getNameWithoutExtension(String file)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static String getNameWithoutExtension(String file)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(String file)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(String file)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(String file)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(String file)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(String file)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(String file)
public boolean contains(@Nullable Object object)

public static String getNameWithoutExtension(String file)
public boolean contains(Object object)

public static String getNameWithoutExtension(String file)
public int size()

public static String getNameWithoutExtension(String file)
public int size()

public static String getNameWithoutExtension(String file)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static String getNameWithoutExtension(String file)
public ImmutableSet<V> get(@Nullable Object key)

public static String getNameWithoutExtension(String file)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static String getNameWithoutExtension(String file)
public ImmutableSet<V> get(@Nullable Object key)

public static String getNameWithoutExtension(String file)
public int size()

public static String getNameWithoutExtension(String file)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(String file)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(String file)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
boolean isPartialView()

public static String getNameWithoutExtension(String file)
ImmutableCollection<V> createValues()

public static String getNameWithoutExtension(String file)
public Iterator<E> iterator()

public static String getNameWithoutExtension(String file)
public UnmodifiableIterator<E> iterator()

public static String getNameWithoutExtension(String file)
public Iterator<Entry<E>> iterator()

public static String getNameWithoutExtension(String file)
public int size()

public static String getNameWithoutExtension(String file)
public int size()

public static String getNameWithoutExtension(String file)
public Iterator<E> iterator()

public static String getNameWithoutExtension(String file)
public UnmodifiableIterator<E> iterator()

public static String getNameWithoutExtension(String file)
public Iterator<Entry<E>> iterator()

public static String getNameWithoutExtension(String file)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
public int size()

public static String getNameWithoutExtension(String file)
public int size()

public static String getNameWithoutExtension(String file)
public ImmutableBiMap<V, K> inverse()

public static String getNameWithoutExtension(String file)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(String file)
ImmutableSortedSet<K> createKeySet()

void setBits(BitSet table)
public ImmutableBiMap<V, K> inverse()

void setBits(BitSet table)
public int size()

void setBits(BitSet table)
public ImmutableBiMap<V, K> inverse()

void setBits(BitSet table)
public int size()

void setBits(BitSet table)
public int size()

void setBits(BitSet table)
public int size()

void setBits(BitSet table)
ImmutableSet<K> createKeySet()

void setBits(BitSet table)
ImmutableSortedSet<K> createKeySet()

void setBits(BitSet table)
ImmutableSet<K> createKeySet()

void setBits(BitSet table)
ImmutableSortedSet<K> createKeySet()

void setBits(BitSet table)
public int size()

void setBits(BitSet table)
Set<Entry<E>> createEntrySet()

void setBits(BitSet table)
ImmutableSet<Entry<K, V>> createEntrySet()

void setBits(BitSet table)
ImmutableCollection<V> createValues()

void setBits(BitSet table)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

void setBits(BitSet table)
public static ImmutableSortedSet<E> copyOf(E[] elements)

void setBits(BitSet table)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

void setBits(BitSet table)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

void setBits(BitSet table)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

void setBits(BitSet table)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

void setBits(BitSet table)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

void setBits(BitSet table)
public ImmutableSortedSet<K> keySet()

void setBits(BitSet table)
public ImmutableSet<K> keySet()

void setBits(BitSet table)
ImmutableCollection<V> createValues()

void setBits(BitSet table)
public int size()

void setBits(BitSet table)
public int compare(Entry<?> entry1, Entry<?> entry2)

void setBits(BitSet table)
Set<Entry<E>> createEntrySet()

void setBits(BitSet table)
ImmutableSet<Entry<K, V>> createEntrySet()

void setBits(BitSet table)
ImmutableCollection<V> createValues()

void setBits(BitSet table)
Set<Entry<E>> createEntrySet()

void setBits(BitSet table)
ImmutableSet<Entry<K, V>> createEntrySet()

void setBits(BitSet table)
public boolean contains(@Nullable Object object)

void setBits(BitSet table)
public boolean contains(Object object)

void setBits(BitSet table)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

void setBits(BitSet table)
public Builder<K, V> put(K key, V value)

void setBits(BitSet table)
ImmutableCollection<V> createValues()

void setBits(BitSet table)
ImmutableSet<K> createKeySet()

void setBits(BitSet table)
ImmutableSortedSet<K> createKeySet()

void setBits(BitSet table)
Set<Entry<E>> createEntrySet()

void setBits(BitSet table)
ImmutableSet<Entry<K, V>> createEntrySet()

void setBits(BitSet table)
public ImmutableBiMap<V, K> inverse()

void setBits(BitSet table)
public int size()

void setBits(BitSet table)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

void setBits(BitSet table)
public Builder<K, V> put(K key, V value)

void setBits(BitSet table)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

void setBits(BitSet table)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

void setBits(BitSet table)
ImmutableSet<K> createKeySet()

void setBits(BitSet table)
ImmutableSortedSet<K> createKeySet()

void setBits(BitSet table)
Set<Entry<E>> createEntrySet()

void setBits(BitSet table)
ImmutableSet<Entry<K, V>> createEntrySet()

void setBits(BitSet table)
Set<Entry<E>> createEntrySet()

void setBits(BitSet table)
ImmutableSet<Entry<K, V>> createEntrySet()

void setBits(BitSet table)
ImmutableSet<K> createKeySet()

void setBits(BitSet table)
ImmutableSortedSet<K> createKeySet()

void setBits(BitSet table)
Set<Entry<E>> createEntrySet()

void setBits(BitSet table)
ImmutableSet<Entry<K, V>> createEntrySet()

void setBits(BitSet table)
public boolean contains(@Nullable Object object)

void setBits(BitSet table)
public boolean contains(Object object)

void setBits(BitSet table)
public int size()

void setBits(BitSet table)
public int size()

void setBits(BitSet table)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

void setBits(BitSet table)
public ImmutableSet<V> get(@Nullable Object key)

void setBits(BitSet table)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

void setBits(BitSet table)
public ImmutableSet<V> get(@Nullable Object key)

void setBits(BitSet table)
public int size()

void setBits(BitSet table)
Set<Entry<E>> createEntrySet()

void setBits(BitSet table)
ImmutableSet<Entry<K, V>> createEntrySet()

void setBits(BitSet table)
ImmutableSet<K> createKeySet()

void setBits(BitSet table)
ImmutableSortedSet<K> createKeySet()

void setBits(BitSet table)
boolean isPartialView()

void setBits(BitSet table)
ImmutableCollection<V> createValues()

void setBits(BitSet table)
public Iterator<E> iterator()

void setBits(BitSet table)
public UnmodifiableIterator<E> iterator()

void setBits(BitSet table)
public Iterator<Entry<E>> iterator()

void setBits(BitSet table)
public int size()

void setBits(BitSet table)
public int size()

void setBits(BitSet table)
public Iterator<E> iterator()

void setBits(BitSet table)
public UnmodifiableIterator<E> iterator()

void setBits(BitSet table)
public Iterator<Entry<E>> iterator()

void setBits(BitSet table)
ImmutableSet<K> createKeySet()

void setBits(BitSet table)
ImmutableSortedSet<K> createKeySet()

void setBits(BitSet table)
ImmutableSet<K> createKeySet()

void setBits(BitSet table)
ImmutableSortedSet<K> createKeySet()

void setBits(BitSet table)
public int size()

void setBits(BitSet table)
public int size()

void setBits(BitSet table)
public ImmutableBiMap<V, K> inverse()

void setBits(BitSet table)
ImmutableSet<K> createKeySet()

void setBits(BitSet table)
ImmutableSortedSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
public ImmutableBiMap<V, K> inverse()

public int indexIn(CharSequence sequence, int start)
public int size()

public int indexIn(CharSequence sequence, int start)
public ImmutableBiMap<V, K> inverse()

public int indexIn(CharSequence sequence, int start)
public int size()

public int indexIn(CharSequence sequence, int start)
public int size()

public int indexIn(CharSequence sequence, int start)
public int size()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSortedSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSortedSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
public int size()

public int indexIn(CharSequence sequence, int start)
Set<Entry<E>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<Entry<K, V>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
ImmutableCollection<V> createValues()

public int indexIn(CharSequence sequence, int start)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public int indexIn(CharSequence sequence, int start)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public int indexIn(CharSequence sequence, int start)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public int indexIn(CharSequence sequence, int start)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public int indexIn(CharSequence sequence, int start)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public int indexIn(CharSequence sequence, int start)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public int indexIn(CharSequence sequence, int start)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public int indexIn(CharSequence sequence, int start)
public ImmutableSortedSet<K> keySet()

public int indexIn(CharSequence sequence, int start)
public ImmutableSet<K> keySet()

public int indexIn(CharSequence sequence, int start)
ImmutableCollection<V> createValues()

public int indexIn(CharSequence sequence, int start)
public int size()

public int indexIn(CharSequence sequence, int start)
public int compare(Entry<?> entry1, Entry<?> entry2)

public int indexIn(CharSequence sequence, int start)
Set<Entry<E>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<Entry<K, V>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
ImmutableCollection<V> createValues()

public int indexIn(CharSequence sequence, int start)
Set<Entry<E>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<Entry<K, V>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
public boolean contains(@Nullable Object object)

public int indexIn(CharSequence sequence, int start)
public boolean contains(Object object)

public int indexIn(CharSequence sequence, int start)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public int indexIn(CharSequence sequence, int start)
public Builder<K, V> put(K key, V value)

public int indexIn(CharSequence sequence, int start)
ImmutableCollection<V> createValues()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSortedSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
Set<Entry<E>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<Entry<K, V>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
public ImmutableBiMap<V, K> inverse()

public int indexIn(CharSequence sequence, int start)
public int size()

public int indexIn(CharSequence sequence, int start)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public int indexIn(CharSequence sequence, int start)
public Builder<K, V> put(K key, V value)

public int indexIn(CharSequence sequence, int start)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public int indexIn(CharSequence sequence, int start)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public int indexIn(CharSequence sequence, int start)
ImmutableSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSortedSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
Set<Entry<E>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<Entry<K, V>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
Set<Entry<E>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<Entry<K, V>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSortedSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
Set<Entry<E>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<Entry<K, V>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
public boolean contains(@Nullable Object object)

public int indexIn(CharSequence sequence, int start)
public boolean contains(Object object)

public int indexIn(CharSequence sequence, int start)
public int size()

public int indexIn(CharSequence sequence, int start)
public int size()

public int indexIn(CharSequence sequence, int start)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public int indexIn(CharSequence sequence, int start)
public ImmutableSet<V> get(@Nullable Object key)

public int indexIn(CharSequence sequence, int start)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public int indexIn(CharSequence sequence, int start)
public ImmutableSet<V> get(@Nullable Object key)

public int indexIn(CharSequence sequence, int start)
public int size()

public int indexIn(CharSequence sequence, int start)
Set<Entry<E>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<Entry<K, V>> createEntrySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSortedSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
boolean isPartialView()

public int indexIn(CharSequence sequence, int start)
ImmutableCollection<V> createValues()

public int indexIn(CharSequence sequence, int start)
public Iterator<E> iterator()

public int indexIn(CharSequence sequence, int start)
public UnmodifiableIterator<E> iterator()

public int indexIn(CharSequence sequence, int start)
public Iterator<Entry<E>> iterator()

public int indexIn(CharSequence sequence, int start)
public int size()

public int indexIn(CharSequence sequence, int start)
public int size()

public int indexIn(CharSequence sequence, int start)
public Iterator<E> iterator()

public int indexIn(CharSequence sequence, int start)
public UnmodifiableIterator<E> iterator()

public int indexIn(CharSequence sequence, int start)
public Iterator<Entry<E>> iterator()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSortedSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSortedSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
public int size()

public int indexIn(CharSequence sequence, int start)
public int size()

public int indexIn(CharSequence sequence, int start)
public ImmutableBiMap<V, K> inverse()

public int indexIn(CharSequence sequence, int start)
ImmutableSet<K> createKeySet()

public int indexIn(CharSequence sequence, int start)
ImmutableSortedSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
public ImmutableBiMap<V, K> inverse()

public SortedMap<C, V> row(R rowKey)
public int size()

public SortedMap<C, V> row(R rowKey)
public ImmutableBiMap<V, K> inverse()

public SortedMap<C, V> row(R rowKey)
public int size()

public SortedMap<C, V> row(R rowKey)
public int size()

public SortedMap<C, V> row(R rowKey)
public int size()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSortedSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSortedSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
public int size()

public SortedMap<C, V> row(R rowKey)
Set<Entry<E>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<Entry<K, V>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
ImmutableCollection<V> createValues()

public SortedMap<C, V> row(R rowKey)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public SortedMap<C, V> row(R rowKey)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public SortedMap<C, V> row(R rowKey)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public SortedMap<C, V> row(R rowKey)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public SortedMap<C, V> row(R rowKey)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public SortedMap<C, V> row(R rowKey)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public SortedMap<C, V> row(R rowKey)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public SortedMap<C, V> row(R rowKey)
public ImmutableSortedSet<K> keySet()

public SortedMap<C, V> row(R rowKey)
public ImmutableSet<K> keySet()

public SortedMap<C, V> row(R rowKey)
ImmutableCollection<V> createValues()

public SortedMap<C, V> row(R rowKey)
public int size()

public SortedMap<C, V> row(R rowKey)
public int compare(Entry<?> entry1, Entry<?> entry2)

public SortedMap<C, V> row(R rowKey)
Set<Entry<E>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<Entry<K, V>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
ImmutableCollection<V> createValues()

public SortedMap<C, V> row(R rowKey)
Set<Entry<E>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<Entry<K, V>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
public boolean contains(@Nullable Object object)

public SortedMap<C, V> row(R rowKey)
public boolean contains(Object object)

public SortedMap<C, V> row(R rowKey)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public SortedMap<C, V> row(R rowKey)
public Builder<K, V> put(K key, V value)

public SortedMap<C, V> row(R rowKey)
ImmutableCollection<V> createValues()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSortedSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
Set<Entry<E>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<Entry<K, V>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
public ImmutableBiMap<V, K> inverse()

public SortedMap<C, V> row(R rowKey)
public int size()

public SortedMap<C, V> row(R rowKey)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public SortedMap<C, V> row(R rowKey)
public Builder<K, V> put(K key, V value)

public SortedMap<C, V> row(R rowKey)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public SortedMap<C, V> row(R rowKey)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public SortedMap<C, V> row(R rowKey)
ImmutableSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSortedSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
Set<Entry<E>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<Entry<K, V>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
Set<Entry<E>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<Entry<K, V>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSortedSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
Set<Entry<E>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<Entry<K, V>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
public boolean contains(@Nullable Object object)

public SortedMap<C, V> row(R rowKey)
public boolean contains(Object object)

public SortedMap<C, V> row(R rowKey)
public int size()

public SortedMap<C, V> row(R rowKey)
public int size()

public SortedMap<C, V> row(R rowKey)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public SortedMap<C, V> row(R rowKey)
public ImmutableSet<V> get(@Nullable Object key)

public SortedMap<C, V> row(R rowKey)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public SortedMap<C, V> row(R rowKey)
public ImmutableSet<V> get(@Nullable Object key)

public SortedMap<C, V> row(R rowKey)
public int size()

public SortedMap<C, V> row(R rowKey)
Set<Entry<E>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<Entry<K, V>> createEntrySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSortedSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
boolean isPartialView()

public SortedMap<C, V> row(R rowKey)
ImmutableCollection<V> createValues()

public SortedMap<C, V> row(R rowKey)
public Iterator<E> iterator()

public SortedMap<C, V> row(R rowKey)
public UnmodifiableIterator<E> iterator()

public SortedMap<C, V> row(R rowKey)
public Iterator<Entry<E>> iterator()

public SortedMap<C, V> row(R rowKey)
public int size()

public SortedMap<C, V> row(R rowKey)
public int size()

public SortedMap<C, V> row(R rowKey)
public Iterator<E> iterator()

public SortedMap<C, V> row(R rowKey)
public UnmodifiableIterator<E> iterator()

public SortedMap<C, V> row(R rowKey)
public Iterator<Entry<E>> iterator()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSortedSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSortedSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
public int size()

public SortedMap<C, V> row(R rowKey)
public int size()

public SortedMap<C, V> row(R rowKey)
public ImmutableBiMap<V, K> inverse()

public SortedMap<C, V> row(R rowKey)
ImmutableSet<K> createKeySet()

public SortedMap<C, V> row(R rowKey)
ImmutableSortedSet<K> createKeySet()

public ImmutableList<E> reverse()
public ImmutableBiMap<V, K> inverse()

public ImmutableList<E> reverse()
public int size()

public ImmutableList<E> reverse()
public ImmutableBiMap<V, K> inverse()

public ImmutableList<E> reverse()
public int size()

public ImmutableList<E> reverse()
public int size()

public ImmutableList<E> reverse()
public int size()

public ImmutableList<E> reverse()
ImmutableSet<K> createKeySet()

public ImmutableList<E> reverse()
ImmutableSortedSet<K> createKeySet()

public ImmutableList<E> reverse()
ImmutableSet<K> createKeySet()

public ImmutableList<E> reverse()
ImmutableSortedSet<K> createKeySet()

public ImmutableList<E> reverse()
public int size()

public ImmutableList<E> reverse()
Set<Entry<E>> createEntrySet()

public ImmutableList<E> reverse()
ImmutableSet<Entry<K, V>> createEntrySet()

public ImmutableList<E> reverse()
ImmutableCollection<V> createValues()

public ImmutableList<E> reverse()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public ImmutableList<E> reverse()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public ImmutableList<E> reverse()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public ImmutableList<E> reverse()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public ImmutableList<E> reverse()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public ImmutableList<E> reverse()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public ImmutableList<E> reverse()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public ImmutableList<E> reverse()
public ImmutableSortedSet<K> keySet()

public ImmutableList<E> reverse()
public ImmutableSet<K> keySet()

public ImmutableList<E> reverse()
ImmutableCollection<V> createValues()

public ImmutableList<E> reverse()
public int size()

public ImmutableList<E> reverse()
public int compare(Entry<?> entry1, Entry<?> entry2)

public ImmutableList<E> reverse()
Set<Entry<E>> createEntrySet()

public ImmutableList<E> reverse()
ImmutableSet<Entry<K, V>> createEntrySet()

public ImmutableList<E> reverse()
ImmutableCollection<V> createValues()

public ImmutableList<E> reverse()
Set<Entry<E>> createEntrySet()

public ImmutableList<E> reverse()
ImmutableSet<Entry<K, V>> createEntrySet()

public ImmutableList<E> reverse()
public boolean contains(@Nullable Object object)

public ImmutableList<E> reverse()
public boolean contains(Object object)

public ImmutableList<E> reverse()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public ImmutableList<E> reverse()
public Builder<K, V> put(K key, V value)

public ImmutableList<E> reverse()
ImmutableCollection<V> createValues()

public ImmutableList<E> reverse()
ImmutableSet<K> createKeySet()

public ImmutableList<E> reverse()
ImmutableSortedSet<K> createKeySet()

public ImmutableList<E> reverse()
Set<Entry<E>> createEntrySet()

public ImmutableList<E> reverse()
ImmutableSet<Entry<K, V>> createEntrySet()

public ImmutableList<E> reverse()
public ImmutableBiMap<V, K> inverse()

public ImmutableList<E> reverse()
public int size()

public ImmutableList<E> reverse()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public ImmutableList<E> reverse()
public Builder<K, V> put(K key, V value)

public ImmutableList<E> reverse()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public ImmutableList<E> reverse()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public ImmutableList<E> reverse()
ImmutableSet<K> createKeySet()

public ImmutableList<E> reverse()
ImmutableSortedSet<K> createKeySet()

public ImmutableList<E> reverse()
Set<Entry<E>> createEntrySet()

public ImmutableList<E> reverse()
ImmutableSet<Entry<K, V>> createEntrySet()

public ImmutableList<E> reverse()
Set<Entry<E>> createEntrySet()

public ImmutableList<E> reverse()
ImmutableSet<Entry<K, V>> createEntrySet()

public ImmutableList<E> reverse()
ImmutableSet<K> createKeySet()

public ImmutableList<E> reverse()
ImmutableSortedSet<K> createKeySet()

public ImmutableList<E> reverse()
Set<Entry<E>> createEntrySet()

public ImmutableList<E> reverse()
ImmutableSet<Entry<K, V>> createEntrySet()

public ImmutableList<E> reverse()
public boolean contains(@Nullable Object object)

public ImmutableList<E> reverse()
public boolean contains(Object object)

public ImmutableList<E> reverse()
public int size()

public ImmutableList<E> reverse()
public int size()

public ImmutableList<E> reverse()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public ImmutableList<E> reverse()
public ImmutableSet<V> get(@Nullable Object key)

public ImmutableList<E> reverse()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public ImmutableList<E> reverse()
public ImmutableSet<V> get(@Nullable Object key)

public ImmutableList<E> reverse()
public int size()

public ImmutableList<E> reverse()
Set<Entry<E>> createEntrySet()

public ImmutableList<E> reverse()
ImmutableSet<Entry<K, V>> createEntrySet()

public ImmutableList<E> reverse()
ImmutableSet<K> createKeySet()

public ImmutableList<E> reverse()
ImmutableSortedSet<K> createKeySet()

public ImmutableList<E> reverse()
boolean isPartialView()

public ImmutableList<E> reverse()
ImmutableCollection<V> createValues()

public ImmutableList<E> reverse()
public Iterator<E> iterator()

public ImmutableList<E> reverse()
public UnmodifiableIterator<E> iterator()

public ImmutableList<E> reverse()
public Iterator<Entry<E>> iterator()

public ImmutableList<E> reverse()
public int size()

public ImmutableList<E> reverse()
public int size()

public ImmutableList<E> reverse()
public Iterator<E> iterator()

public ImmutableList<E> reverse()
public UnmodifiableIterator<E> iterator()

public ImmutableList<E> reverse()
public Iterator<Entry<E>> iterator()

public ImmutableList<E> reverse()
ImmutableSet<K> createKeySet()

public ImmutableList<E> reverse()
ImmutableSortedSet<K> createKeySet()

public ImmutableList<E> reverse()
ImmutableSet<K> createKeySet()

public ImmutableList<E> reverse()
ImmutableSortedSet<K> createKeySet()

public ImmutableList<E> reverse()
public int size()

public ImmutableList<E> reverse()
public int size()

public ImmutableList<E> reverse()
public ImmutableBiMap<V, K> inverse()

public ImmutableList<E> reverse()
ImmutableSet<K> createKeySet()

public ImmutableList<E> reverse()
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
public ImmutableBiMap<V, K> inverse()

public String replaceFrom(CharSequence sequence, char replacement)
public int size()

public String replaceFrom(CharSequence sequence, char replacement)
public ImmutableBiMap<V, K> inverse()

public String replaceFrom(CharSequence sequence, char replacement)
public int size()

public String replaceFrom(CharSequence sequence, char replacement)
public int size()

public String replaceFrom(CharSequence sequence, char replacement)
public int size()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
public int size()

public String replaceFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableCollection<V> createValues()

public String replaceFrom(CharSequence sequence, char replacement)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String replaceFrom(CharSequence sequence, char replacement)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public String replaceFrom(CharSequence sequence, char replacement)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String replaceFrom(CharSequence sequence, char replacement)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public String replaceFrom(CharSequence sequence, char replacement)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public String replaceFrom(CharSequence sequence, char replacement)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String replaceFrom(CharSequence sequence, char replacement)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public String replaceFrom(CharSequence sequence, char replacement)
public ImmutableSortedSet<K> keySet()

public String replaceFrom(CharSequence sequence, char replacement)
public ImmutableSet<K> keySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableCollection<V> createValues()

public String replaceFrom(CharSequence sequence, char replacement)
public int size()

public String replaceFrom(CharSequence sequence, char replacement)
public int compare(Entry<?> entry1, Entry<?> entry2)

public String replaceFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableCollection<V> createValues()

public String replaceFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
public boolean contains(@Nullable Object object)

public String replaceFrom(CharSequence sequence, char replacement)
public boolean contains(Object object)

public String replaceFrom(CharSequence sequence, char replacement)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public String replaceFrom(CharSequence sequence, char replacement)
public Builder<K, V> put(K key, V value)

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableCollection<V> createValues()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
public ImmutableBiMap<V, K> inverse()

public String replaceFrom(CharSequence sequence, char replacement)
public int size()

public String replaceFrom(CharSequence sequence, char replacement)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public String replaceFrom(CharSequence sequence, char replacement)
public Builder<K, V> put(K key, V value)

public String replaceFrom(CharSequence sequence, char replacement)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public String replaceFrom(CharSequence sequence, char replacement)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
public boolean contains(@Nullable Object object)

public String replaceFrom(CharSequence sequence, char replacement)
public boolean contains(Object object)

public String replaceFrom(CharSequence sequence, char replacement)
public int size()

public String replaceFrom(CharSequence sequence, char replacement)
public int size()

public String replaceFrom(CharSequence sequence, char replacement)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public String replaceFrom(CharSequence sequence, char replacement)
public ImmutableSet<V> get(@Nullable Object key)

public String replaceFrom(CharSequence sequence, char replacement)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public String replaceFrom(CharSequence sequence, char replacement)
public ImmutableSet<V> get(@Nullable Object key)

public String replaceFrom(CharSequence sequence, char replacement)
public int size()

public String replaceFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
boolean isPartialView()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableCollection<V> createValues()

public String replaceFrom(CharSequence sequence, char replacement)
public Iterator<E> iterator()

public String replaceFrom(CharSequence sequence, char replacement)
public UnmodifiableIterator<E> iterator()

public String replaceFrom(CharSequence sequence, char replacement)
public Iterator<Entry<E>> iterator()

public String replaceFrom(CharSequence sequence, char replacement)
public int size()

public String replaceFrom(CharSequence sequence, char replacement)
public int size()

public String replaceFrom(CharSequence sequence, char replacement)
public Iterator<E> iterator()

public String replaceFrom(CharSequence sequence, char replacement)
public UnmodifiableIterator<E> iterator()

public String replaceFrom(CharSequence sequence, char replacement)
public Iterator<Entry<E>> iterator()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
public int size()

public String replaceFrom(CharSequence sequence, char replacement)
public int size()

public String replaceFrom(CharSequence sequence, char replacement)
public ImmutableBiMap<V, K> inverse()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public double populationStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public double populationStandardDeviation()
public int size()

public double populationStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public double populationStandardDeviation()
public int size()

public double populationStandardDeviation()
public int size()

public double populationStandardDeviation()
public int size()

public double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double populationStandardDeviation()
public int size()

public double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double populationStandardDeviation()
ImmutableCollection<V> createValues()

public double populationStandardDeviation()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public double populationStandardDeviation()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public double populationStandardDeviation()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public double populationStandardDeviation()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public double populationStandardDeviation()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public double populationStandardDeviation()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public double populationStandardDeviation()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public double populationStandardDeviation()
public ImmutableSortedSet<K> keySet()

public double populationStandardDeviation()
public ImmutableSet<K> keySet()

public double populationStandardDeviation()
ImmutableCollection<V> createValues()

public double populationStandardDeviation()
public int size()

public double populationStandardDeviation()
public int compare(Entry<?> entry1, Entry<?> entry2)

public double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double populationStandardDeviation()
ImmutableCollection<V> createValues()

public double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double populationStandardDeviation()
public boolean contains(@Nullable Object object)

public double populationStandardDeviation()
public boolean contains(Object object)

public double populationStandardDeviation()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public double populationStandardDeviation()
public Builder<K, V> put(K key, V value)

public double populationStandardDeviation()
ImmutableCollection<V> createValues()

public double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double populationStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public double populationStandardDeviation()
public int size()

public double populationStandardDeviation()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public double populationStandardDeviation()
public Builder<K, V> put(K key, V value)

public double populationStandardDeviation()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public double populationStandardDeviation()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double populationStandardDeviation()
public boolean contains(@Nullable Object object)

public double populationStandardDeviation()
public boolean contains(Object object)

public double populationStandardDeviation()
public int size()

public double populationStandardDeviation()
public int size()

public double populationStandardDeviation()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public double populationStandardDeviation()
public ImmutableSet<V> get(@Nullable Object key)

public double populationStandardDeviation()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public double populationStandardDeviation()
public ImmutableSet<V> get(@Nullable Object key)

public double populationStandardDeviation()
public int size()

public double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double populationStandardDeviation()
boolean isPartialView()

public double populationStandardDeviation()
ImmutableCollection<V> createValues()

public double populationStandardDeviation()
public Iterator<E> iterator()

public double populationStandardDeviation()
public UnmodifiableIterator<E> iterator()

public double populationStandardDeviation()
public Iterator<Entry<E>> iterator()

public double populationStandardDeviation()
public int size()

public double populationStandardDeviation()
public int size()

public double populationStandardDeviation()
public Iterator<E> iterator()

public double populationStandardDeviation()
public UnmodifiableIterator<E> iterator()

public double populationStandardDeviation()
public Iterator<Entry<E>> iterator()

public double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double populationStandardDeviation()
public int size()

public double populationStandardDeviation()
public int size()

public double populationStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public String escape(String string)
public ImmutableBiMap<V, K> inverse()

public String escape(String string)
public int size()

public String escape(String string)
public ImmutableBiMap<V, K> inverse()

public String escape(String string)
public int size()

public String escape(String string)
public int size()

public String escape(String string)
public int size()

public String escape(String string)
ImmutableSet<K> createKeySet()

public String escape(String string)
ImmutableSortedSet<K> createKeySet()

public String escape(String string)
ImmutableSet<K> createKeySet()

public String escape(String string)
ImmutableSortedSet<K> createKeySet()

public String escape(String string)
public int size()

public String escape(String string)
Set<Entry<E>> createEntrySet()

public String escape(String string)
ImmutableSet<Entry<K, V>> createEntrySet()

public String escape(String string)
ImmutableCollection<V> createValues()

public String escape(String string)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String escape(String string)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public String escape(String string)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String escape(String string)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public String escape(String string)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public String escape(String string)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String escape(String string)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public String escape(String string)
public ImmutableSortedSet<K> keySet()

public String escape(String string)
public ImmutableSet<K> keySet()

public String escape(String string)
ImmutableCollection<V> createValues()

public String escape(String string)
public int size()

public String escape(String string)
public int compare(Entry<?> entry1, Entry<?> entry2)

public String escape(String string)
Set<Entry<E>> createEntrySet()

public String escape(String string)
ImmutableSet<Entry<K, V>> createEntrySet()

public String escape(String string)
ImmutableCollection<V> createValues()

public String escape(String string)
Set<Entry<E>> createEntrySet()

public String escape(String string)
ImmutableSet<Entry<K, V>> createEntrySet()

public String escape(String string)
public boolean contains(@Nullable Object object)

public String escape(String string)
public boolean contains(Object object)

public String escape(String string)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public String escape(String string)
public Builder<K, V> put(K key, V value)

public String escape(String string)
ImmutableCollection<V> createValues()

public String escape(String string)
ImmutableSet<K> createKeySet()

public String escape(String string)
ImmutableSortedSet<K> createKeySet()

public String escape(String string)
Set<Entry<E>> createEntrySet()

public String escape(String string)
ImmutableSet<Entry<K, V>> createEntrySet()

public String escape(String string)
public ImmutableBiMap<V, K> inverse()

public String escape(String string)
public int size()

public String escape(String string)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public String escape(String string)
public Builder<K, V> put(K key, V value)

public String escape(String string)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public String escape(String string)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public String escape(String string)
ImmutableSet<K> createKeySet()

public String escape(String string)
ImmutableSortedSet<K> createKeySet()

public String escape(String string)
Set<Entry<E>> createEntrySet()

public String escape(String string)
ImmutableSet<Entry<K, V>> createEntrySet()

public String escape(String string)
Set<Entry<E>> createEntrySet()

public String escape(String string)
ImmutableSet<Entry<K, V>> createEntrySet()

public String escape(String string)
ImmutableSet<K> createKeySet()

public String escape(String string)
ImmutableSortedSet<K> createKeySet()

public String escape(String string)
Set<Entry<E>> createEntrySet()

public String escape(String string)
ImmutableSet<Entry<K, V>> createEntrySet()

public String escape(String string)
public boolean contains(@Nullable Object object)

public String escape(String string)
public boolean contains(Object object)

public String escape(String string)
public int size()

public String escape(String string)
public int size()

public String escape(String string)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public String escape(String string)
public ImmutableSet<V> get(@Nullable Object key)

public String escape(String string)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public String escape(String string)
public ImmutableSet<V> get(@Nullable Object key)

public String escape(String string)
public int size()

public String escape(String string)
Set<Entry<E>> createEntrySet()

public String escape(String string)
ImmutableSet<Entry<K, V>> createEntrySet()

public String escape(String string)
ImmutableSet<K> createKeySet()

public String escape(String string)
ImmutableSortedSet<K> createKeySet()

public String escape(String string)
boolean isPartialView()

public String escape(String string)
ImmutableCollection<V> createValues()

public String escape(String string)
public Iterator<E> iterator()

public String escape(String string)
public UnmodifiableIterator<E> iterator()

public String escape(String string)
public Iterator<Entry<E>> iterator()

public String escape(String string)
public int size()

public String escape(String string)
public int size()

public String escape(String string)
public Iterator<E> iterator()

public String escape(String string)
public UnmodifiableIterator<E> iterator()

public String escape(String string)
public Iterator<Entry<E>> iterator()

public String escape(String string)
ImmutableSet<K> createKeySet()

public String escape(String string)
ImmutableSortedSet<K> createKeySet()

public String escape(String string)
ImmutableSet<K> createKeySet()

public String escape(String string)
ImmutableSortedSet<K> createKeySet()

public String escape(String string)
public int size()

public String escape(String string)
public int size()

public String escape(String string)
public ImmutableBiMap<V, K> inverse()

public String escape(String string)
ImmutableSet<K> createKeySet()

public String escape(String string)
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64Url()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base64Url()
public int size()

public static BaseEncoding base64Url()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base64Url()
public int size()

public static BaseEncoding base64Url()
public int size()

public static BaseEncoding base64Url()
public int size()

public static BaseEncoding base64Url()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64Url()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64Url()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64Url()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64Url()
public int size()

public static BaseEncoding base64Url()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64Url()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64Url()
ImmutableCollection<V> createValues()

public static BaseEncoding base64Url()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static BaseEncoding base64Url()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static BaseEncoding base64Url()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static BaseEncoding base64Url()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static BaseEncoding base64Url()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static BaseEncoding base64Url()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static BaseEncoding base64Url()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static BaseEncoding base64Url()
public ImmutableSortedSet<K> keySet()

public static BaseEncoding base64Url()
public ImmutableSet<K> keySet()

public static BaseEncoding base64Url()
ImmutableCollection<V> createValues()

public static BaseEncoding base64Url()
public int size()

public static BaseEncoding base64Url()
public int compare(Entry<?> entry1, Entry<?> entry2)

public static BaseEncoding base64Url()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64Url()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64Url()
ImmutableCollection<V> createValues()

public static BaseEncoding base64Url()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64Url()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64Url()
public boolean contains(@Nullable Object object)

public static BaseEncoding base64Url()
public boolean contains(Object object)

public static BaseEncoding base64Url()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static BaseEncoding base64Url()
public Builder<K, V> put(K key, V value)

public static BaseEncoding base64Url()
ImmutableCollection<V> createValues()

public static BaseEncoding base64Url()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64Url()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64Url()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64Url()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64Url()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base64Url()
public int size()

public static BaseEncoding base64Url()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static BaseEncoding base64Url()
public Builder<K, V> put(K key, V value)

public static BaseEncoding base64Url()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static BaseEncoding base64Url()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static BaseEncoding base64Url()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64Url()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64Url()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64Url()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64Url()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64Url()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64Url()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64Url()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64Url()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64Url()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64Url()
public boolean contains(@Nullable Object object)

public static BaseEncoding base64Url()
public boolean contains(Object object)

public static BaseEncoding base64Url()
public int size()

public static BaseEncoding base64Url()
public int size()

public static BaseEncoding base64Url()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static BaseEncoding base64Url()
public ImmutableSet<V> get(@Nullable Object key)

public static BaseEncoding base64Url()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static BaseEncoding base64Url()
public ImmutableSet<V> get(@Nullable Object key)

public static BaseEncoding base64Url()
public int size()

public static BaseEncoding base64Url()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64Url()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64Url()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64Url()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64Url()
boolean isPartialView()

public static BaseEncoding base64Url()
ImmutableCollection<V> createValues()

public static BaseEncoding base64Url()
public Iterator<E> iterator()

public static BaseEncoding base64Url()
public UnmodifiableIterator<E> iterator()

public static BaseEncoding base64Url()
public Iterator<Entry<E>> iterator()

public static BaseEncoding base64Url()
public int size()

public static BaseEncoding base64Url()
public int size()

public static BaseEncoding base64Url()
public Iterator<E> iterator()

public static BaseEncoding base64Url()
public UnmodifiableIterator<E> iterator()

public static BaseEncoding base64Url()
public Iterator<Entry<E>> iterator()

public static BaseEncoding base64Url()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64Url()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64Url()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64Url()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64Url()
public int size()

public static BaseEncoding base64Url()
public int size()

public static BaseEncoding base64Url()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base64Url()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64Url()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128()
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_128()
public int size()

public static HashFunction murmur3_128()
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_128()
public int size()

public static HashFunction murmur3_128()
public int size()

public static HashFunction murmur3_128()
public int size()

public static HashFunction murmur3_128()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128()
public int size()

public static HashFunction murmur3_128()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128()
ImmutableCollection<V> createValues()

public static HashFunction murmur3_128()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_128()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static HashFunction murmur3_128()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_128()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static HashFunction murmur3_128()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static HashFunction murmur3_128()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_128()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static HashFunction murmur3_128()
public ImmutableSortedSet<K> keySet()

public static HashFunction murmur3_128()
public ImmutableSet<K> keySet()

public static HashFunction murmur3_128()
ImmutableCollection<V> createValues()

public static HashFunction murmur3_128()
public int size()

public static HashFunction murmur3_128()
public int compare(Entry<?> entry1, Entry<?> entry2)

public static HashFunction murmur3_128()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128()
ImmutableCollection<V> createValues()

public static HashFunction murmur3_128()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128()
public boolean contains(@Nullable Object object)

public static HashFunction murmur3_128()
public boolean contains(Object object)

public static HashFunction murmur3_128()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static HashFunction murmur3_128()
public Builder<K, V> put(K key, V value)

public static HashFunction murmur3_128()
ImmutableCollection<V> createValues()

public static HashFunction murmur3_128()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128()
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_128()
public int size()

public static HashFunction murmur3_128()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static HashFunction murmur3_128()
public Builder<K, V> put(K key, V value)

public static HashFunction murmur3_128()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_128()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static HashFunction murmur3_128()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128()
public boolean contains(@Nullable Object object)

public static HashFunction murmur3_128()
public boolean contains(Object object)

public static HashFunction murmur3_128()
public int size()

public static HashFunction murmur3_128()
public int size()

public static HashFunction murmur3_128()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static HashFunction murmur3_128()
public ImmutableSet<V> get(@Nullable Object key)

public static HashFunction murmur3_128()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static HashFunction murmur3_128()
public ImmutableSet<V> get(@Nullable Object key)

public static HashFunction murmur3_128()
public int size()

public static HashFunction murmur3_128()
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128()
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128()
boolean isPartialView()

public static HashFunction murmur3_128()
ImmutableCollection<V> createValues()

public static HashFunction murmur3_128()
public Iterator<E> iterator()

public static HashFunction murmur3_128()
public UnmodifiableIterator<E> iterator()

public static HashFunction murmur3_128()
public Iterator<Entry<E>> iterator()

public static HashFunction murmur3_128()
public int size()

public static HashFunction murmur3_128()
public int size()

public static HashFunction murmur3_128()
public Iterator<E> iterator()

public static HashFunction murmur3_128()
public UnmodifiableIterator<E> iterator()

public static HashFunction murmur3_128()
public Iterator<Entry<E>> iterator()

public static HashFunction murmur3_128()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128()
public int size()

public static HashFunction murmur3_128()
public int size()

public static HashFunction murmur3_128()
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_128()
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base64()
public int size()

public static BaseEncoding base64()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base64()
public int size()

public static BaseEncoding base64()
public int size()

public static BaseEncoding base64()
public int size()

public static BaseEncoding base64()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64()
public int size()

public static BaseEncoding base64()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64()
ImmutableCollection<V> createValues()

public static BaseEncoding base64()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static BaseEncoding base64()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static BaseEncoding base64()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static BaseEncoding base64()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static BaseEncoding base64()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static BaseEncoding base64()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static BaseEncoding base64()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static BaseEncoding base64()
public ImmutableSortedSet<K> keySet()

public static BaseEncoding base64()
public ImmutableSet<K> keySet()

public static BaseEncoding base64()
ImmutableCollection<V> createValues()

public static BaseEncoding base64()
public int size()

public static BaseEncoding base64()
public int compare(Entry<?> entry1, Entry<?> entry2)

public static BaseEncoding base64()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64()
ImmutableCollection<V> createValues()

public static BaseEncoding base64()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64()
public boolean contains(@Nullable Object object)

public static BaseEncoding base64()
public boolean contains(Object object)

public static BaseEncoding base64()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static BaseEncoding base64()
public Builder<K, V> put(K key, V value)

public static BaseEncoding base64()
ImmutableCollection<V> createValues()

public static BaseEncoding base64()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base64()
public int size()

public static BaseEncoding base64()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static BaseEncoding base64()
public Builder<K, V> put(K key, V value)

public static BaseEncoding base64()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static BaseEncoding base64()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static BaseEncoding base64()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64()
public boolean contains(@Nullable Object object)

public static BaseEncoding base64()
public boolean contains(Object object)

public static BaseEncoding base64()
public int size()

public static BaseEncoding base64()
public int size()

public static BaseEncoding base64()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static BaseEncoding base64()
public ImmutableSet<V> get(@Nullable Object key)

public static BaseEncoding base64()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static BaseEncoding base64()
public ImmutableSet<V> get(@Nullable Object key)

public static BaseEncoding base64()
public int size()

public static BaseEncoding base64()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base64()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base64()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64()
boolean isPartialView()

public static BaseEncoding base64()
ImmutableCollection<V> createValues()

public static BaseEncoding base64()
public Iterator<E> iterator()

public static BaseEncoding base64()
public UnmodifiableIterator<E> iterator()

public static BaseEncoding base64()
public Iterator<Entry<E>> iterator()

public static BaseEncoding base64()
public int size()

public static BaseEncoding base64()
public int size()

public static BaseEncoding base64()
public Iterator<E> iterator()

public static BaseEncoding base64()
public UnmodifiableIterator<E> iterator()

public static BaseEncoding base64()
public Iterator<Entry<E>> iterator()

public static BaseEncoding base64()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base64()
public int size()

public static BaseEncoding base64()
public int size()

public static BaseEncoding base64()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base64()
ImmutableSet<K> createKeySet()

public static BaseEncoding base64()
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public ImmutableBiMap<V, K> inverse()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public int size()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public ImmutableBiMap<V, K> inverse()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public int size()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public int size()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public int size()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public int size()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableCollection<V> createValues()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public ImmutableSortedSet<K> keySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public ImmutableSet<K> keySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableCollection<V> createValues()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public int size()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public int compare(Entry<?> entry1, Entry<?> entry2)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableCollection<V> createValues()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public boolean contains(@Nullable Object object)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public boolean contains(Object object)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public Builder<K, V> put(K key, V value)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableCollection<V> createValues()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public ImmutableBiMap<V, K> inverse()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public int size()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public Builder<K, V> put(K key, V value)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public boolean contains(@Nullable Object object)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public boolean contains(Object object)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public int size()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public int size()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public ImmutableSet<V> get(@Nullable Object key)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public ImmutableSet<V> get(@Nullable Object key)

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public int size()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
Set<Entry<E>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
boolean isPartialView()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableCollection<V> createValues()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public Iterator<E> iterator()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public UnmodifiableIterator<E> iterator()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public Iterator<Entry<E>> iterator()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public int size()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public int size()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public Iterator<E> iterator()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public UnmodifiableIterator<E> iterator()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public Iterator<Entry<E>> iterator()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSortedSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public int size()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public int size()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
public ImmutableBiMap<V, K> inverse()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSet<K> createKeySet()

public String replaceFrom(CharSequence sequence, CharSequence replacement)
ImmutableSortedSet<K> createKeySet()

public static CharMatcher whitespace()
public ImmutableBiMap<V, K> inverse()

public static CharMatcher whitespace()
public int size()

public static CharMatcher whitespace()
public ImmutableBiMap<V, K> inverse()

public static CharMatcher whitespace()
public int size()

public static CharMatcher whitespace()
public int size()

public static CharMatcher whitespace()
public int size()

public static CharMatcher whitespace()
ImmutableSet<K> createKeySet()

public static CharMatcher whitespace()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher whitespace()
ImmutableSet<K> createKeySet()

public static CharMatcher whitespace()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher whitespace()
public int size()

public static CharMatcher whitespace()
Set<Entry<E>> createEntrySet()

public static CharMatcher whitespace()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher whitespace()
ImmutableCollection<V> createValues()

public static CharMatcher whitespace()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static CharMatcher whitespace()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static CharMatcher whitespace()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static CharMatcher whitespace()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static CharMatcher whitespace()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static CharMatcher whitespace()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static CharMatcher whitespace()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static CharMatcher whitespace()
public ImmutableSortedSet<K> keySet()

public static CharMatcher whitespace()
public ImmutableSet<K> keySet()

public static CharMatcher whitespace()
ImmutableCollection<V> createValues()

public static CharMatcher whitespace()
public int size()

public static CharMatcher whitespace()
public int compare(Entry<?> entry1, Entry<?> entry2)

public static CharMatcher whitespace()
Set<Entry<E>> createEntrySet()

public static CharMatcher whitespace()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher whitespace()
ImmutableCollection<V> createValues()

public static CharMatcher whitespace()
Set<Entry<E>> createEntrySet()

public static CharMatcher whitespace()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher whitespace()
public boolean contains(@Nullable Object object)

public static CharMatcher whitespace()
public boolean contains(Object object)

public static CharMatcher whitespace()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static CharMatcher whitespace()
public Builder<K, V> put(K key, V value)

public static CharMatcher whitespace()
ImmutableCollection<V> createValues()

public static CharMatcher whitespace()
ImmutableSet<K> createKeySet()

public static CharMatcher whitespace()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher whitespace()
Set<Entry<E>> createEntrySet()

public static CharMatcher whitespace()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher whitespace()
public ImmutableBiMap<V, K> inverse()

public static CharMatcher whitespace()
public int size()

public static CharMatcher whitespace()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static CharMatcher whitespace()
public Builder<K, V> put(K key, V value)

public static CharMatcher whitespace()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static CharMatcher whitespace()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static CharMatcher whitespace()
ImmutableSet<K> createKeySet()

public static CharMatcher whitespace()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher whitespace()
Set<Entry<E>> createEntrySet()

public static CharMatcher whitespace()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher whitespace()
Set<Entry<E>> createEntrySet()

public static CharMatcher whitespace()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher whitespace()
ImmutableSet<K> createKeySet()

public static CharMatcher whitespace()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher whitespace()
Set<Entry<E>> createEntrySet()

public static CharMatcher whitespace()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher whitespace()
public boolean contains(@Nullable Object object)

public static CharMatcher whitespace()
public boolean contains(Object object)

public static CharMatcher whitespace()
public int size()

public static CharMatcher whitespace()
public int size()

public static CharMatcher whitespace()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static CharMatcher whitespace()
public ImmutableSet<V> get(@Nullable Object key)

public static CharMatcher whitespace()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static CharMatcher whitespace()
public ImmutableSet<V> get(@Nullable Object key)

public static CharMatcher whitespace()
public int size()

public static CharMatcher whitespace()
Set<Entry<E>> createEntrySet()

public static CharMatcher whitespace()
ImmutableSet<Entry<K, V>> createEntrySet()

public static CharMatcher whitespace()
ImmutableSet<K> createKeySet()

public static CharMatcher whitespace()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher whitespace()
boolean isPartialView()

public static CharMatcher whitespace()
ImmutableCollection<V> createValues()

public static CharMatcher whitespace()
public Iterator<E> iterator()

public static CharMatcher whitespace()
public UnmodifiableIterator<E> iterator()

public static CharMatcher whitespace()
public Iterator<Entry<E>> iterator()

public static CharMatcher whitespace()
public int size()

public static CharMatcher whitespace()
public int size()

public static CharMatcher whitespace()
public Iterator<E> iterator()

public static CharMatcher whitespace()
public UnmodifiableIterator<E> iterator()

public static CharMatcher whitespace()
public Iterator<Entry<E>> iterator()

public static CharMatcher whitespace()
ImmutableSet<K> createKeySet()

public static CharMatcher whitespace()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher whitespace()
ImmutableSet<K> createKeySet()

public static CharMatcher whitespace()
ImmutableSortedSet<K> createKeySet()

public static CharMatcher whitespace()
public int size()

public static CharMatcher whitespace()
public int size()

public static CharMatcher whitespace()
public ImmutableBiMap<V, K> inverse()

public static CharMatcher whitespace()
ImmutableSet<K> createKeySet()

public static CharMatcher whitespace()
ImmutableSortedSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
public ImmutableBiMap<V, K> inverse()

public long copyTo(OutputStream output) throws IOException
public int size()

public long copyTo(OutputStream output) throws IOException
public ImmutableBiMap<V, K> inverse()

public long copyTo(OutputStream output) throws IOException
public int size()

public long copyTo(OutputStream output) throws IOException
public int size()

public long copyTo(OutputStream output) throws IOException
public int size()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
public int size()

public long copyTo(OutputStream output) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
ImmutableCollection<V> createValues()

public long copyTo(OutputStream output) throws IOException
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public long copyTo(OutputStream output) throws IOException
public static ImmutableSortedSet<E> copyOf(E[] elements)

public long copyTo(OutputStream output) throws IOException
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public long copyTo(OutputStream output) throws IOException
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public long copyTo(OutputStream output) throws IOException
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public long copyTo(OutputStream output) throws IOException
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public long copyTo(OutputStream output) throws IOException
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public long copyTo(OutputStream output) throws IOException
public ImmutableSortedSet<K> keySet()

public long copyTo(OutputStream output) throws IOException
public ImmutableSet<K> keySet()

public long copyTo(OutputStream output) throws IOException
ImmutableCollection<V> createValues()

public long copyTo(OutputStream output) throws IOException
public int size()

public long copyTo(OutputStream output) throws IOException
public int compare(Entry<?> entry1, Entry<?> entry2)

public long copyTo(OutputStream output) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
ImmutableCollection<V> createValues()

public long copyTo(OutputStream output) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
public boolean contains(@Nullable Object object)

public long copyTo(OutputStream output) throws IOException
public boolean contains(Object object)

public long copyTo(OutputStream output) throws IOException
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public long copyTo(OutputStream output) throws IOException
public Builder<K, V> put(K key, V value)

public long copyTo(OutputStream output) throws IOException
ImmutableCollection<V> createValues()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
public ImmutableBiMap<V, K> inverse()

public long copyTo(OutputStream output) throws IOException
public int size()

public long copyTo(OutputStream output) throws IOException
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public long copyTo(OutputStream output) throws IOException
public Builder<K, V> put(K key, V value)

public long copyTo(OutputStream output) throws IOException
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public long copyTo(OutputStream output) throws IOException
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public long copyTo(OutputStream output) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
public boolean contains(@Nullable Object object)

public long copyTo(OutputStream output) throws IOException
public boolean contains(Object object)

public long copyTo(OutputStream output) throws IOException
public int size()

public long copyTo(OutputStream output) throws IOException
public int size()

public long copyTo(OutputStream output) throws IOException
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public long copyTo(OutputStream output) throws IOException
public ImmutableSet<V> get(@Nullable Object key)

public long copyTo(OutputStream output) throws IOException
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public long copyTo(OutputStream output) throws IOException
public ImmutableSet<V> get(@Nullable Object key)

public long copyTo(OutputStream output) throws IOException
public int size()

public long copyTo(OutputStream output) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
boolean isPartialView()

public long copyTo(OutputStream output) throws IOException
ImmutableCollection<V> createValues()

public long copyTo(OutputStream output) throws IOException
public Iterator<E> iterator()

public long copyTo(OutputStream output) throws IOException
public UnmodifiableIterator<E> iterator()

public long copyTo(OutputStream output) throws IOException
public Iterator<Entry<E>> iterator()

public long copyTo(OutputStream output) throws IOException
public int size()

public long copyTo(OutputStream output) throws IOException
public int size()

public long copyTo(OutputStream output) throws IOException
public Iterator<E> iterator()

public long copyTo(OutputStream output) throws IOException
public UnmodifiableIterator<E> iterator()

public long copyTo(OutputStream output) throws IOException
public Iterator<Entry<E>> iterator()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
public int size()

public long copyTo(OutputStream output) throws IOException
public int size()

public long copyTo(OutputStream output) throws IOException
public ImmutableBiMap<V, K> inverse()

public long copyTo(OutputStream output) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(OutputStream output) throws IOException
ImmutableSortedSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
public ImmutableBiMap<V, K> inverse()

public InputStream openBufferedStream() throws IOException
public int size()

public InputStream openBufferedStream() throws IOException
public ImmutableBiMap<V, K> inverse()

public InputStream openBufferedStream() throws IOException
public int size()

public InputStream openBufferedStream() throws IOException
public int size()

public InputStream openBufferedStream() throws IOException
public int size()

public InputStream openBufferedStream() throws IOException
ImmutableSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
ImmutableSortedSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
ImmutableSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
ImmutableSortedSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
public int size()

public InputStream openBufferedStream() throws IOException
Set<Entry<E>> createEntrySet()

public InputStream openBufferedStream() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public InputStream openBufferedStream() throws IOException
ImmutableCollection<V> createValues()

public InputStream openBufferedStream() throws IOException
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public InputStream openBufferedStream() throws IOException
public static ImmutableSortedSet<E> copyOf(E[] elements)

public InputStream openBufferedStream() throws IOException
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public InputStream openBufferedStream() throws IOException
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public InputStream openBufferedStream() throws IOException
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public InputStream openBufferedStream() throws IOException
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public InputStream openBufferedStream() throws IOException
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public InputStream openBufferedStream() throws IOException
public ImmutableSortedSet<K> keySet()

public InputStream openBufferedStream() throws IOException
public ImmutableSet<K> keySet()

public InputStream openBufferedStream() throws IOException
ImmutableCollection<V> createValues()

public InputStream openBufferedStream() throws IOException
public int size()

public InputStream openBufferedStream() throws IOException
public int compare(Entry<?> entry1, Entry<?> entry2)

public InputStream openBufferedStream() throws IOException
Set<Entry<E>> createEntrySet()

public InputStream openBufferedStream() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public InputStream openBufferedStream() throws IOException
ImmutableCollection<V> createValues()

public InputStream openBufferedStream() throws IOException
Set<Entry<E>> createEntrySet()

public InputStream openBufferedStream() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public InputStream openBufferedStream() throws IOException
public boolean contains(@Nullable Object object)

public InputStream openBufferedStream() throws IOException
public boolean contains(Object object)

public InputStream openBufferedStream() throws IOException
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public InputStream openBufferedStream() throws IOException
public Builder<K, V> put(K key, V value)

public InputStream openBufferedStream() throws IOException
ImmutableCollection<V> createValues()

public InputStream openBufferedStream() throws IOException
ImmutableSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
ImmutableSortedSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
Set<Entry<E>> createEntrySet()

public InputStream openBufferedStream() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public InputStream openBufferedStream() throws IOException
public ImmutableBiMap<V, K> inverse()

public InputStream openBufferedStream() throws IOException
public int size()

public InputStream openBufferedStream() throws IOException
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public InputStream openBufferedStream() throws IOException
public Builder<K, V> put(K key, V value)

public InputStream openBufferedStream() throws IOException
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public InputStream openBufferedStream() throws IOException
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public InputStream openBufferedStream() throws IOException
ImmutableSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
ImmutableSortedSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
Set<Entry<E>> createEntrySet()

public InputStream openBufferedStream() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public InputStream openBufferedStream() throws IOException
Set<Entry<E>> createEntrySet()

public InputStream openBufferedStream() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public InputStream openBufferedStream() throws IOException
ImmutableSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
ImmutableSortedSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
Set<Entry<E>> createEntrySet()

public InputStream openBufferedStream() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public InputStream openBufferedStream() throws IOException
public boolean contains(@Nullable Object object)

public InputStream openBufferedStream() throws IOException
public boolean contains(Object object)

public InputStream openBufferedStream() throws IOException
public int size()

public InputStream openBufferedStream() throws IOException
public int size()

public InputStream openBufferedStream() throws IOException
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public InputStream openBufferedStream() throws IOException
public ImmutableSet<V> get(@Nullable Object key)

public InputStream openBufferedStream() throws IOException
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public InputStream openBufferedStream() throws IOException
public ImmutableSet<V> get(@Nullable Object key)

public InputStream openBufferedStream() throws IOException
public int size()

public InputStream openBufferedStream() throws IOException
Set<Entry<E>> createEntrySet()

public InputStream openBufferedStream() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public InputStream openBufferedStream() throws IOException
ImmutableSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
ImmutableSortedSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
boolean isPartialView()

public InputStream openBufferedStream() throws IOException
ImmutableCollection<V> createValues()

public InputStream openBufferedStream() throws IOException
public Iterator<E> iterator()

public InputStream openBufferedStream() throws IOException
public UnmodifiableIterator<E> iterator()

public InputStream openBufferedStream() throws IOException
public Iterator<Entry<E>> iterator()

public InputStream openBufferedStream() throws IOException
public int size()

public InputStream openBufferedStream() throws IOException
public int size()

public InputStream openBufferedStream() throws IOException
public Iterator<E> iterator()

public InputStream openBufferedStream() throws IOException
public UnmodifiableIterator<E> iterator()

public InputStream openBufferedStream() throws IOException
public Iterator<Entry<E>> iterator()

public InputStream openBufferedStream() throws IOException
ImmutableSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
ImmutableSortedSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
ImmutableSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
ImmutableSortedSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
public int size()

public InputStream openBufferedStream() throws IOException
public int size()

public InputStream openBufferedStream() throws IOException
public ImmutableBiMap<V, K> inverse()

public InputStream openBufferedStream() throws IOException
ImmutableSet<K> createKeySet()

public InputStream openBufferedStream() throws IOException
ImmutableSortedSet<K> createKeySet()

public static Escaper htmlEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper htmlEscaper()
public int size()

public static Escaper htmlEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper htmlEscaper()
public int size()

public static Escaper htmlEscaper()
public int size()

public static Escaper htmlEscaper()
public int size()

public static Escaper htmlEscaper()
ImmutableSet<K> createKeySet()

public static Escaper htmlEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper htmlEscaper()
ImmutableSet<K> createKeySet()

public static Escaper htmlEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper htmlEscaper()
public int size()

public static Escaper htmlEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper htmlEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper htmlEscaper()
ImmutableCollection<V> createValues()

public static Escaper htmlEscaper()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper htmlEscaper()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static Escaper htmlEscaper()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper htmlEscaper()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static Escaper htmlEscaper()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static Escaper htmlEscaper()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper htmlEscaper()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Escaper htmlEscaper()
public ImmutableSortedSet<K> keySet()

public static Escaper htmlEscaper()
public ImmutableSet<K> keySet()

public static Escaper htmlEscaper()
ImmutableCollection<V> createValues()

public static Escaper htmlEscaper()
public int size()

public static Escaper htmlEscaper()
public int compare(Entry<?> entry1, Entry<?> entry2)

public static Escaper htmlEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper htmlEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper htmlEscaper()
ImmutableCollection<V> createValues()

public static Escaper htmlEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper htmlEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper htmlEscaper()
public boolean contains(@Nullable Object object)

public static Escaper htmlEscaper()
public boolean contains(Object object)

public static Escaper htmlEscaper()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Escaper htmlEscaper()
public Builder<K, V> put(K key, V value)

public static Escaper htmlEscaper()
ImmutableCollection<V> createValues()

public static Escaper htmlEscaper()
ImmutableSet<K> createKeySet()

public static Escaper htmlEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper htmlEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper htmlEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper htmlEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper htmlEscaper()
public int size()

public static Escaper htmlEscaper()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Escaper htmlEscaper()
public Builder<K, V> put(K key, V value)

public static Escaper htmlEscaper()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static Escaper htmlEscaper()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Escaper htmlEscaper()
ImmutableSet<K> createKeySet()

public static Escaper htmlEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper htmlEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper htmlEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper htmlEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper htmlEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper htmlEscaper()
ImmutableSet<K> createKeySet()

public static Escaper htmlEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper htmlEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper htmlEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper htmlEscaper()
public boolean contains(@Nullable Object object)

public static Escaper htmlEscaper()
public boolean contains(Object object)

public static Escaper htmlEscaper()
public int size()

public static Escaper htmlEscaper()
public int size()

public static Escaper htmlEscaper()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Escaper htmlEscaper()
public ImmutableSet<V> get(@Nullable Object key)

public static Escaper htmlEscaper()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Escaper htmlEscaper()
public ImmutableSet<V> get(@Nullable Object key)

public static Escaper htmlEscaper()
public int size()

public static Escaper htmlEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper htmlEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper htmlEscaper()
ImmutableSet<K> createKeySet()

public static Escaper htmlEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper htmlEscaper()
boolean isPartialView()

public static Escaper htmlEscaper()
ImmutableCollection<V> createValues()

public static Escaper htmlEscaper()
public Iterator<E> iterator()

public static Escaper htmlEscaper()
public UnmodifiableIterator<E> iterator()

public static Escaper htmlEscaper()
public Iterator<Entry<E>> iterator()

public static Escaper htmlEscaper()
public int size()

public static Escaper htmlEscaper()
public int size()

public static Escaper htmlEscaper()
public Iterator<E> iterator()

public static Escaper htmlEscaper()
public UnmodifiableIterator<E> iterator()

public static Escaper htmlEscaper()
public Iterator<Entry<E>> iterator()

public static Escaper htmlEscaper()
ImmutableSet<K> createKeySet()

public static Escaper htmlEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper htmlEscaper()
ImmutableSet<K> createKeySet()

public static Escaper htmlEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper htmlEscaper()
public int size()

public static Escaper htmlEscaper()
public int size()

public static Escaper htmlEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper htmlEscaper()
ImmutableSet<K> createKeySet()

public static Escaper htmlEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlContentEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper xmlContentEscaper()
public int size()

public static Escaper xmlContentEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper xmlContentEscaper()
public int size()

public static Escaper xmlContentEscaper()
public int size()

public static Escaper xmlContentEscaper()
public int size()

public static Escaper xmlContentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlContentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlContentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlContentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlContentEscaper()
public int size()

public static Escaper xmlContentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlContentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlContentEscaper()
ImmutableCollection<V> createValues()

public static Escaper xmlContentEscaper()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper xmlContentEscaper()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static Escaper xmlContentEscaper()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper xmlContentEscaper()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static Escaper xmlContentEscaper()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static Escaper xmlContentEscaper()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper xmlContentEscaper()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Escaper xmlContentEscaper()
public ImmutableSortedSet<K> keySet()

public static Escaper xmlContentEscaper()
public ImmutableSet<K> keySet()

public static Escaper xmlContentEscaper()
ImmutableCollection<V> createValues()

public static Escaper xmlContentEscaper()
public int size()

public static Escaper xmlContentEscaper()
public int compare(Entry<?> entry1, Entry<?> entry2)

public static Escaper xmlContentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlContentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlContentEscaper()
ImmutableCollection<V> createValues()

public static Escaper xmlContentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlContentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlContentEscaper()
public boolean contains(@Nullable Object object)

public static Escaper xmlContentEscaper()
public boolean contains(Object object)

public static Escaper xmlContentEscaper()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Escaper xmlContentEscaper()
public Builder<K, V> put(K key, V value)

public static Escaper xmlContentEscaper()
ImmutableCollection<V> createValues()

public static Escaper xmlContentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlContentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlContentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlContentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlContentEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper xmlContentEscaper()
public int size()

public static Escaper xmlContentEscaper()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Escaper xmlContentEscaper()
public Builder<K, V> put(K key, V value)

public static Escaper xmlContentEscaper()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static Escaper xmlContentEscaper()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Escaper xmlContentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlContentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlContentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlContentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlContentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlContentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlContentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlContentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlContentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlContentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlContentEscaper()
public boolean contains(@Nullable Object object)

public static Escaper xmlContentEscaper()
public boolean contains(Object object)

public static Escaper xmlContentEscaper()
public int size()

public static Escaper xmlContentEscaper()
public int size()

public static Escaper xmlContentEscaper()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Escaper xmlContentEscaper()
public ImmutableSet<V> get(@Nullable Object key)

public static Escaper xmlContentEscaper()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Escaper xmlContentEscaper()
public ImmutableSet<V> get(@Nullable Object key)

public static Escaper xmlContentEscaper()
public int size()

public static Escaper xmlContentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper xmlContentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper xmlContentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlContentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlContentEscaper()
boolean isPartialView()

public static Escaper xmlContentEscaper()
ImmutableCollection<V> createValues()

public static Escaper xmlContentEscaper()
public Iterator<E> iterator()

public static Escaper xmlContentEscaper()
public UnmodifiableIterator<E> iterator()

public static Escaper xmlContentEscaper()
public Iterator<Entry<E>> iterator()

public static Escaper xmlContentEscaper()
public int size()

public static Escaper xmlContentEscaper()
public int size()

public static Escaper xmlContentEscaper()
public Iterator<E> iterator()

public static Escaper xmlContentEscaper()
public UnmodifiableIterator<E> iterator()

public static Escaper xmlContentEscaper()
public Iterator<Entry<E>> iterator()

public static Escaper xmlContentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlContentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlContentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlContentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper xmlContentEscaper()
public int size()

public static Escaper xmlContentEscaper()
public int size()

public static Escaper xmlContentEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper xmlContentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper xmlContentEscaper()
ImmutableSortedSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
public ImmutableBiMap<V, K> inverse()

public static boolean isMappedIPv4Address(String ipString)
public int size()

public static boolean isMappedIPv4Address(String ipString)
public ImmutableBiMap<V, K> inverse()

public static boolean isMappedIPv4Address(String ipString)
public int size()

public static boolean isMappedIPv4Address(String ipString)
public int size()

public static boolean isMappedIPv4Address(String ipString)
public int size()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSortedSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSortedSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
public int size()

public static boolean isMappedIPv4Address(String ipString)
Set<Entry<E>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableCollection<V> createValues()

public static boolean isMappedIPv4Address(String ipString)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean isMappedIPv4Address(String ipString)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static boolean isMappedIPv4Address(String ipString)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean isMappedIPv4Address(String ipString)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static boolean isMappedIPv4Address(String ipString)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static boolean isMappedIPv4Address(String ipString)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean isMappedIPv4Address(String ipString)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static boolean isMappedIPv4Address(String ipString)
public ImmutableSortedSet<K> keySet()

public static boolean isMappedIPv4Address(String ipString)
public ImmutableSet<K> keySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableCollection<V> createValues()

public static boolean isMappedIPv4Address(String ipString)
public int size()

public static boolean isMappedIPv4Address(String ipString)
public int compare(Entry<?> entry1, Entry<?> entry2)

public static boolean isMappedIPv4Address(String ipString)
Set<Entry<E>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableCollection<V> createValues()

public static boolean isMappedIPv4Address(String ipString)
Set<Entry<E>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
public boolean contains(@Nullable Object object)

public static boolean isMappedIPv4Address(String ipString)
public boolean contains(Object object)

public static boolean isMappedIPv4Address(String ipString)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static boolean isMappedIPv4Address(String ipString)
public Builder<K, V> put(K key, V value)

public static boolean isMappedIPv4Address(String ipString)
ImmutableCollection<V> createValues()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSortedSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
Set<Entry<E>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
public ImmutableBiMap<V, K> inverse()

public static boolean isMappedIPv4Address(String ipString)
public int size()

public static boolean isMappedIPv4Address(String ipString)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static boolean isMappedIPv4Address(String ipString)
public Builder<K, V> put(K key, V value)

public static boolean isMappedIPv4Address(String ipString)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static boolean isMappedIPv4Address(String ipString)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSortedSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
Set<Entry<E>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
Set<Entry<E>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSortedSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
Set<Entry<E>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
public boolean contains(@Nullable Object object)

public static boolean isMappedIPv4Address(String ipString)
public boolean contains(Object object)

public static boolean isMappedIPv4Address(String ipString)
public int size()

public static boolean isMappedIPv4Address(String ipString)
public int size()

public static boolean isMappedIPv4Address(String ipString)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static boolean isMappedIPv4Address(String ipString)
public ImmutableSet<V> get(@Nullable Object key)

public static boolean isMappedIPv4Address(String ipString)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static boolean isMappedIPv4Address(String ipString)
public ImmutableSet<V> get(@Nullable Object key)

public static boolean isMappedIPv4Address(String ipString)
public int size()

public static boolean isMappedIPv4Address(String ipString)
Set<Entry<E>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSortedSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
boolean isPartialView()

public static boolean isMappedIPv4Address(String ipString)
ImmutableCollection<V> createValues()

public static boolean isMappedIPv4Address(String ipString)
public Iterator<E> iterator()

public static boolean isMappedIPv4Address(String ipString)
public UnmodifiableIterator<E> iterator()

public static boolean isMappedIPv4Address(String ipString)
public Iterator<Entry<E>> iterator()

public static boolean isMappedIPv4Address(String ipString)
public int size()

public static boolean isMappedIPv4Address(String ipString)
public int size()

public static boolean isMappedIPv4Address(String ipString)
public Iterator<E> iterator()

public static boolean isMappedIPv4Address(String ipString)
public UnmodifiableIterator<E> iterator()

public static boolean isMappedIPv4Address(String ipString)
public Iterator<Entry<E>> iterator()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSortedSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSortedSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
public int size()

public static boolean isMappedIPv4Address(String ipString)
public int size()

public static boolean isMappedIPv4Address(String ipString)
public ImmutableBiMap<V, K> inverse()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSet<K> createKeySet()

public static boolean isMappedIPv4Address(String ipString)
ImmutableSortedSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public String removeFrom(CharSequence sequence)
public int size()

public String removeFrom(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public String removeFrom(CharSequence sequence)
public int size()

public String removeFrom(CharSequence sequence)
public int size()

public String removeFrom(CharSequence sequence)
public int size()

public String removeFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
public int size()

public String removeFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String removeFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String removeFrom(CharSequence sequence)
ImmutableCollection<V> createValues()

public String removeFrom(CharSequence sequence)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String removeFrom(CharSequence sequence)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public String removeFrom(CharSequence sequence)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String removeFrom(CharSequence sequence)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public String removeFrom(CharSequence sequence)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public String removeFrom(CharSequence sequence)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String removeFrom(CharSequence sequence)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public String removeFrom(CharSequence sequence)
public ImmutableSortedSet<K> keySet()

public String removeFrom(CharSequence sequence)
public ImmutableSet<K> keySet()

public String removeFrom(CharSequence sequence)
ImmutableCollection<V> createValues()

public String removeFrom(CharSequence sequence)
public int size()

public String removeFrom(CharSequence sequence)
public int compare(Entry<?> entry1, Entry<?> entry2)

public String removeFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String removeFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String removeFrom(CharSequence sequence)
ImmutableCollection<V> createValues()

public String removeFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String removeFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String removeFrom(CharSequence sequence)
public boolean contains(@Nullable Object object)

public String removeFrom(CharSequence sequence)
public boolean contains(Object object)

public String removeFrom(CharSequence sequence)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public String removeFrom(CharSequence sequence)
public Builder<K, V> put(K key, V value)

public String removeFrom(CharSequence sequence)
ImmutableCollection<V> createValues()

public String removeFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String removeFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String removeFrom(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public String removeFrom(CharSequence sequence)
public int size()

public String removeFrom(CharSequence sequence)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public String removeFrom(CharSequence sequence)
public Builder<K, V> put(K key, V value)

public String removeFrom(CharSequence sequence)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public String removeFrom(CharSequence sequence)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public String removeFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String removeFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String removeFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String removeFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String removeFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String removeFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String removeFrom(CharSequence sequence)
public boolean contains(@Nullable Object object)

public String removeFrom(CharSequence sequence)
public boolean contains(Object object)

public String removeFrom(CharSequence sequence)
public int size()

public String removeFrom(CharSequence sequence)
public int size()

public String removeFrom(CharSequence sequence)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public String removeFrom(CharSequence sequence)
public ImmutableSet<V> get(@Nullable Object key)

public String removeFrom(CharSequence sequence)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public String removeFrom(CharSequence sequence)
public ImmutableSet<V> get(@Nullable Object key)

public String removeFrom(CharSequence sequence)
public int size()

public String removeFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String removeFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String removeFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
boolean isPartialView()

public String removeFrom(CharSequence sequence)
ImmutableCollection<V> createValues()

public String removeFrom(CharSequence sequence)
public Iterator<E> iterator()

public String removeFrom(CharSequence sequence)
public UnmodifiableIterator<E> iterator()

public String removeFrom(CharSequence sequence)
public Iterator<Entry<E>> iterator()

public String removeFrom(CharSequence sequence)
public int size()

public String removeFrom(CharSequence sequence)
public int size()

public String removeFrom(CharSequence sequence)
public Iterator<E> iterator()

public String removeFrom(CharSequence sequence)
public UnmodifiableIterator<E> iterator()

public String removeFrom(CharSequence sequence)
public Iterator<Entry<E>> iterator()

public String removeFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
public int size()

public String removeFrom(CharSequence sequence)
public int size()

public String removeFrom(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public String removeFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String removeFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32Hex()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base32Hex()
public int size()

public static BaseEncoding base32Hex()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base32Hex()
public int size()

public static BaseEncoding base32Hex()
public int size()

public static BaseEncoding base32Hex()
public int size()

public static BaseEncoding base32Hex()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32Hex()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32Hex()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32Hex()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32Hex()
public int size()

public static BaseEncoding base32Hex()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32Hex()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32Hex()
ImmutableCollection<V> createValues()

public static BaseEncoding base32Hex()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static BaseEncoding base32Hex()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static BaseEncoding base32Hex()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static BaseEncoding base32Hex()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static BaseEncoding base32Hex()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static BaseEncoding base32Hex()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static BaseEncoding base32Hex()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static BaseEncoding base32Hex()
public ImmutableSortedSet<K> keySet()

public static BaseEncoding base32Hex()
public ImmutableSet<K> keySet()

public static BaseEncoding base32Hex()
ImmutableCollection<V> createValues()

public static BaseEncoding base32Hex()
public int size()

public static BaseEncoding base32Hex()
public int compare(Entry<?> entry1, Entry<?> entry2)

public static BaseEncoding base32Hex()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32Hex()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32Hex()
ImmutableCollection<V> createValues()

public static BaseEncoding base32Hex()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32Hex()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32Hex()
public boolean contains(@Nullable Object object)

public static BaseEncoding base32Hex()
public boolean contains(Object object)

public static BaseEncoding base32Hex()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static BaseEncoding base32Hex()
public Builder<K, V> put(K key, V value)

public static BaseEncoding base32Hex()
ImmutableCollection<V> createValues()

public static BaseEncoding base32Hex()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32Hex()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32Hex()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32Hex()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32Hex()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base32Hex()
public int size()

public static BaseEncoding base32Hex()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static BaseEncoding base32Hex()
public Builder<K, V> put(K key, V value)

public static BaseEncoding base32Hex()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static BaseEncoding base32Hex()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static BaseEncoding base32Hex()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32Hex()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32Hex()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32Hex()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32Hex()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32Hex()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32Hex()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32Hex()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32Hex()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32Hex()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32Hex()
public boolean contains(@Nullable Object object)

public static BaseEncoding base32Hex()
public boolean contains(Object object)

public static BaseEncoding base32Hex()
public int size()

public static BaseEncoding base32Hex()
public int size()

public static BaseEncoding base32Hex()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static BaseEncoding base32Hex()
public ImmutableSet<V> get(@Nullable Object key)

public static BaseEncoding base32Hex()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static BaseEncoding base32Hex()
public ImmutableSet<V> get(@Nullable Object key)

public static BaseEncoding base32Hex()
public int size()

public static BaseEncoding base32Hex()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32Hex()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32Hex()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32Hex()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32Hex()
boolean isPartialView()

public static BaseEncoding base32Hex()
ImmutableCollection<V> createValues()

public static BaseEncoding base32Hex()
public Iterator<E> iterator()

public static BaseEncoding base32Hex()
public UnmodifiableIterator<E> iterator()

public static BaseEncoding base32Hex()
public Iterator<Entry<E>> iterator()

public static BaseEncoding base32Hex()
public int size()

public static BaseEncoding base32Hex()
public int size()

public static BaseEncoding base32Hex()
public Iterator<E> iterator()

public static BaseEncoding base32Hex()
public UnmodifiableIterator<E> iterator()

public static BaseEncoding base32Hex()
public Iterator<Entry<E>> iterator()

public static BaseEncoding base32Hex()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32Hex()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32Hex()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32Hex()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32Hex()
public int size()

public static BaseEncoding base32Hex()
public int size()

public static BaseEncoding base32Hex()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base32Hex()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32Hex()
ImmutableSortedSet<K> createKeySet()

public final double sampleStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public final double sampleStandardDeviation()
public int size()

public final double sampleStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public final double sampleStandardDeviation()
public int size()

public final double sampleStandardDeviation()
public int size()

public final double sampleStandardDeviation()
public int size()

public final double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public final double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public final double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double sampleStandardDeviation()
public int size()

public final double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double sampleStandardDeviation()
ImmutableCollection<V> createValues()

public final double sampleStandardDeviation()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final double sampleStandardDeviation()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public final double sampleStandardDeviation()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final double sampleStandardDeviation()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public final double sampleStandardDeviation()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public final double sampleStandardDeviation()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final double sampleStandardDeviation()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public final double sampleStandardDeviation()
public ImmutableSortedSet<K> keySet()

public final double sampleStandardDeviation()
public ImmutableSet<K> keySet()

public final double sampleStandardDeviation()
ImmutableCollection<V> createValues()

public final double sampleStandardDeviation()
public int size()

public final double sampleStandardDeviation()
public int compare(Entry<?> entry1, Entry<?> entry2)

public final double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double sampleStandardDeviation()
ImmutableCollection<V> createValues()

public final double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double sampleStandardDeviation()
public boolean contains(@Nullable Object object)

public final double sampleStandardDeviation()
public boolean contains(Object object)

public final double sampleStandardDeviation()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public final double sampleStandardDeviation()
public Builder<K, V> put(K key, V value)

public final double sampleStandardDeviation()
ImmutableCollection<V> createValues()

public final double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public final double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double sampleStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public final double sampleStandardDeviation()
public int size()

public final double sampleStandardDeviation()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public final double sampleStandardDeviation()
public Builder<K, V> put(K key, V value)

public final double sampleStandardDeviation()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public final double sampleStandardDeviation()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public final double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public final double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public final double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double sampleStandardDeviation()
public boolean contains(@Nullable Object object)

public final double sampleStandardDeviation()
public boolean contains(Object object)

public final double sampleStandardDeviation()
public int size()

public final double sampleStandardDeviation()
public int size()

public final double sampleStandardDeviation()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public final double sampleStandardDeviation()
public ImmutableSet<V> get(@Nullable Object key)

public final double sampleStandardDeviation()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public final double sampleStandardDeviation()
public ImmutableSet<V> get(@Nullable Object key)

public final double sampleStandardDeviation()
public int size()

public final double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public final double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double sampleStandardDeviation()
boolean isPartialView()

public final double sampleStandardDeviation()
ImmutableCollection<V> createValues()

public final double sampleStandardDeviation()
public Iterator<E> iterator()

public final double sampleStandardDeviation()
public UnmodifiableIterator<E> iterator()

public final double sampleStandardDeviation()
public Iterator<Entry<E>> iterator()

public final double sampleStandardDeviation()
public int size()

public final double sampleStandardDeviation()
public int size()

public final double sampleStandardDeviation()
public Iterator<E> iterator()

public final double sampleStandardDeviation()
public UnmodifiableIterator<E> iterator()

public final double sampleStandardDeviation()
public Iterator<Entry<E>> iterator()

public final double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public final double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public final double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double sampleStandardDeviation()
public int size()

public final double sampleStandardDeviation()
public int size()

public final double sampleStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public final double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public final double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_128(int seed)
public int size()

public static HashFunction murmur3_128(int seed)
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_128(int seed)
public int size()

public static HashFunction murmur3_128(int seed)
public int size()

public static HashFunction murmur3_128(int seed)
public int size()

public static HashFunction murmur3_128(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
public int size()

public static HashFunction murmur3_128(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128(int seed)
ImmutableCollection<V> createValues()

public static HashFunction murmur3_128(int seed)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_128(int seed)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static HashFunction murmur3_128(int seed)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_128(int seed)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static HashFunction murmur3_128(int seed)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static HashFunction murmur3_128(int seed)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_128(int seed)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static HashFunction murmur3_128(int seed)
public ImmutableSortedSet<K> keySet()

public static HashFunction murmur3_128(int seed)
public ImmutableSet<K> keySet()

public static HashFunction murmur3_128(int seed)
ImmutableCollection<V> createValues()

public static HashFunction murmur3_128(int seed)
public int size()

public static HashFunction murmur3_128(int seed)
public int compare(Entry<?> entry1, Entry<?> entry2)

public static HashFunction murmur3_128(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128(int seed)
ImmutableCollection<V> createValues()

public static HashFunction murmur3_128(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128(int seed)
public boolean contains(@Nullable Object object)

public static HashFunction murmur3_128(int seed)
public boolean contains(Object object)

public static HashFunction murmur3_128(int seed)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static HashFunction murmur3_128(int seed)
public Builder<K, V> put(K key, V value)

public static HashFunction murmur3_128(int seed)
ImmutableCollection<V> createValues()

public static HashFunction murmur3_128(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128(int seed)
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_128(int seed)
public int size()

public static HashFunction murmur3_128(int seed)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static HashFunction murmur3_128(int seed)
public Builder<K, V> put(K key, V value)

public static HashFunction murmur3_128(int seed)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_128(int seed)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static HashFunction murmur3_128(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128(int seed)
public boolean contains(@Nullable Object object)

public static HashFunction murmur3_128(int seed)
public boolean contains(Object object)

public static HashFunction murmur3_128(int seed)
public int size()

public static HashFunction murmur3_128(int seed)
public int size()

public static HashFunction murmur3_128(int seed)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static HashFunction murmur3_128(int seed)
public ImmutableSet<V> get(@Nullable Object key)

public static HashFunction murmur3_128(int seed)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static HashFunction murmur3_128(int seed)
public ImmutableSet<V> get(@Nullable Object key)

public static HashFunction murmur3_128(int seed)
public int size()

public static HashFunction murmur3_128(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_128(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_128(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
boolean isPartialView()

public static HashFunction murmur3_128(int seed)
ImmutableCollection<V> createValues()

public static HashFunction murmur3_128(int seed)
public Iterator<E> iterator()

public static HashFunction murmur3_128(int seed)
public UnmodifiableIterator<E> iterator()

public static HashFunction murmur3_128(int seed)
public Iterator<Entry<E>> iterator()

public static HashFunction murmur3_128(int seed)
public int size()

public static HashFunction murmur3_128(int seed)
public int size()

public static HashFunction murmur3_128(int seed)
public Iterator<E> iterator()

public static HashFunction murmur3_128(int seed)
public UnmodifiableIterator<E> iterator()

public static HashFunction murmur3_128(int seed)
public Iterator<Entry<E>> iterator()

public static HashFunction murmur3_128(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
public int size()

public static HashFunction murmur3_128(int seed)
public int size()

public static HashFunction murmur3_128(int seed)
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_128(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_128(int seed)
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper urlFormParameterEscaper()
public int size()

public static Escaper urlFormParameterEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper urlFormParameterEscaper()
public int size()

public static Escaper urlFormParameterEscaper()
public int size()

public static Escaper urlFormParameterEscaper()
public int size()

public static Escaper urlFormParameterEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
public int size()

public static Escaper urlFormParameterEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFormParameterEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFormParameterEscaper()
ImmutableCollection<V> createValues()

public static Escaper urlFormParameterEscaper()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper urlFormParameterEscaper()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static Escaper urlFormParameterEscaper()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper urlFormParameterEscaper()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static Escaper urlFormParameterEscaper()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static Escaper urlFormParameterEscaper()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper urlFormParameterEscaper()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Escaper urlFormParameterEscaper()
public ImmutableSortedSet<K> keySet()

public static Escaper urlFormParameterEscaper()
public ImmutableSet<K> keySet()

public static Escaper urlFormParameterEscaper()
ImmutableCollection<V> createValues()

public static Escaper urlFormParameterEscaper()
public int size()

public static Escaper urlFormParameterEscaper()
public int compare(Entry<?> entry1, Entry<?> entry2)

public static Escaper urlFormParameterEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFormParameterEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFormParameterEscaper()
ImmutableCollection<V> createValues()

public static Escaper urlFormParameterEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFormParameterEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFormParameterEscaper()
public boolean contains(@Nullable Object object)

public static Escaper urlFormParameterEscaper()
public boolean contains(Object object)

public static Escaper urlFormParameterEscaper()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Escaper urlFormParameterEscaper()
public Builder<K, V> put(K key, V value)

public static Escaper urlFormParameterEscaper()
ImmutableCollection<V> createValues()

public static Escaper urlFormParameterEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFormParameterEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFormParameterEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper urlFormParameterEscaper()
public int size()

public static Escaper urlFormParameterEscaper()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Escaper urlFormParameterEscaper()
public Builder<K, V> put(K key, V value)

public static Escaper urlFormParameterEscaper()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static Escaper urlFormParameterEscaper()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Escaper urlFormParameterEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFormParameterEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFormParameterEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFormParameterEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFormParameterEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFormParameterEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFormParameterEscaper()
public boolean contains(@Nullable Object object)

public static Escaper urlFormParameterEscaper()
public boolean contains(Object object)

public static Escaper urlFormParameterEscaper()
public int size()

public static Escaper urlFormParameterEscaper()
public int size()

public static Escaper urlFormParameterEscaper()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Escaper urlFormParameterEscaper()
public ImmutableSet<V> get(@Nullable Object key)

public static Escaper urlFormParameterEscaper()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Escaper urlFormParameterEscaper()
public ImmutableSet<V> get(@Nullable Object key)

public static Escaper urlFormParameterEscaper()
public int size()

public static Escaper urlFormParameterEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFormParameterEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFormParameterEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
boolean isPartialView()

public static Escaper urlFormParameterEscaper()
ImmutableCollection<V> createValues()

public static Escaper urlFormParameterEscaper()
public Iterator<E> iterator()

public static Escaper urlFormParameterEscaper()
public UnmodifiableIterator<E> iterator()

public static Escaper urlFormParameterEscaper()
public Iterator<Entry<E>> iterator()

public static Escaper urlFormParameterEscaper()
public int size()

public static Escaper urlFormParameterEscaper()
public int size()

public static Escaper urlFormParameterEscaper()
public Iterator<E> iterator()

public static Escaper urlFormParameterEscaper()
public UnmodifiableIterator<E> iterator()

public static Escaper urlFormParameterEscaper()
public Iterator<Entry<E>> iterator()

public static Escaper urlFormParameterEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
public int size()

public static Escaper urlFormParameterEscaper()
public int size()

public static Escaper urlFormParameterEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper urlFormParameterEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFormParameterEscaper()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base16()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base16()
public int size()

public static BaseEncoding base16()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base16()
public int size()

public static BaseEncoding base16()
public int size()

public static BaseEncoding base16()
public int size()

public static BaseEncoding base16()
ImmutableSet<K> createKeySet()

public static BaseEncoding base16()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base16()
ImmutableSet<K> createKeySet()

public static BaseEncoding base16()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base16()
public int size()

public static BaseEncoding base16()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base16()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base16()
ImmutableCollection<V> createValues()

public static BaseEncoding base16()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static BaseEncoding base16()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static BaseEncoding base16()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static BaseEncoding base16()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static BaseEncoding base16()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static BaseEncoding base16()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static BaseEncoding base16()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static BaseEncoding base16()
public ImmutableSortedSet<K> keySet()

public static BaseEncoding base16()
public ImmutableSet<K> keySet()

public static BaseEncoding base16()
ImmutableCollection<V> createValues()

public static BaseEncoding base16()
public int size()

public static BaseEncoding base16()
public int compare(Entry<?> entry1, Entry<?> entry2)

public static BaseEncoding base16()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base16()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base16()
ImmutableCollection<V> createValues()

public static BaseEncoding base16()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base16()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base16()
public boolean contains(@Nullable Object object)

public static BaseEncoding base16()
public boolean contains(Object object)

public static BaseEncoding base16()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static BaseEncoding base16()
public Builder<K, V> put(K key, V value)

public static BaseEncoding base16()
ImmutableCollection<V> createValues()

public static BaseEncoding base16()
ImmutableSet<K> createKeySet()

public static BaseEncoding base16()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base16()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base16()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base16()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base16()
public int size()

public static BaseEncoding base16()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static BaseEncoding base16()
public Builder<K, V> put(K key, V value)

public static BaseEncoding base16()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static BaseEncoding base16()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static BaseEncoding base16()
ImmutableSet<K> createKeySet()

public static BaseEncoding base16()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base16()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base16()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base16()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base16()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base16()
ImmutableSet<K> createKeySet()

public static BaseEncoding base16()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base16()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base16()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base16()
public boolean contains(@Nullable Object object)

public static BaseEncoding base16()
public boolean contains(Object object)

public static BaseEncoding base16()
public int size()

public static BaseEncoding base16()
public int size()

public static BaseEncoding base16()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static BaseEncoding base16()
public ImmutableSet<V> get(@Nullable Object key)

public static BaseEncoding base16()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static BaseEncoding base16()
public ImmutableSet<V> get(@Nullable Object key)

public static BaseEncoding base16()
public int size()

public static BaseEncoding base16()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base16()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base16()
ImmutableSet<K> createKeySet()

public static BaseEncoding base16()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base16()
boolean isPartialView()

public static BaseEncoding base16()
ImmutableCollection<V> createValues()

public static BaseEncoding base16()
public Iterator<E> iterator()

public static BaseEncoding base16()
public UnmodifiableIterator<E> iterator()

public static BaseEncoding base16()
public Iterator<Entry<E>> iterator()

public static BaseEncoding base16()
public int size()

public static BaseEncoding base16()
public int size()

public static BaseEncoding base16()
public Iterator<E> iterator()

public static BaseEncoding base16()
public UnmodifiableIterator<E> iterator()

public static BaseEncoding base16()
public Iterator<Entry<E>> iterator()

public static BaseEncoding base16()
ImmutableSet<K> createKeySet()

public static BaseEncoding base16()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base16()
ImmutableSet<K> createKeySet()

public static BaseEncoding base16()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base16()
public int size()

public static BaseEncoding base16()
public int size()

public static BaseEncoding base16()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base16()
ImmutableSet<K> createKeySet()

public static BaseEncoding base16()
ImmutableSortedSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public ImmutableBiMap<V, K> inverse()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public int size()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public ImmutableBiMap<V, K> inverse()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public int size()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public int size()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public int size()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public int size()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableCollection<V> createValues()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public ImmutableSortedSet<K> keySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public ImmutableSet<K> keySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableCollection<V> createValues()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public int size()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public int compare(Entry<?> entry1, Entry<?> entry2)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableCollection<V> createValues()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public boolean contains(@Nullable Object object)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public boolean contains(Object object)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public Builder<K, V> put(K key, V value)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableCollection<V> createValues()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public ImmutableBiMap<V, K> inverse()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public int size()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public Builder<K, V> put(K key, V value)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public boolean contains(@Nullable Object object)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public boolean contains(Object object)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public int size()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public int size()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public ImmutableSet<V> get(@Nullable Object key)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public ImmutableSet<V> get(@Nullable Object key)

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public int size()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
Set<Entry<E>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
boolean isPartialView()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableCollection<V> createValues()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public Iterator<E> iterator()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public UnmodifiableIterator<E> iterator()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public Iterator<Entry<E>> iterator()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public int size()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public int size()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public Iterator<E> iterator()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public UnmodifiableIterator<E> iterator()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public Iterator<Entry<E>> iterator()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public int size()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public int size()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
public ImmutableBiMap<V, K> inverse()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSet<K> createKeySet()

public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
ImmutableSortedSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public ImmutableBiMap<V, K> inverse()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public int size()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public ImmutableBiMap<V, K> inverse()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public int size()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public int size()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public int size()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public int size()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
Set<Entry<E>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableCollection<V> createValues()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public static ImmutableSortedSet<E> copyOf(E[] elements)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public static ImmutableGraph<N> copyOf(Graph<N> graph)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public ImmutableSortedSet<K> keySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public ImmutableSet<K> keySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableCollection<V> createValues()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public int size()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public int compare(Entry<?> entry1, Entry<?> entry2)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
Set<Entry<E>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableCollection<V> createValues()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
Set<Entry<E>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public boolean contains(@Nullable Object object)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public boolean contains(Object object)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public Builder<K, V> put(K key, V value)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableCollection<V> createValues()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
Set<Entry<E>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public ImmutableBiMap<V, K> inverse()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public int size()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public Builder<K, V> put(K key, V value)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
Set<Entry<E>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
Set<Entry<E>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
Set<Entry<E>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public boolean contains(@Nullable Object object)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public boolean contains(Object object)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public int size()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public int size()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public ImmutableSet<V> get(@Nullable Object key)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public ImmutableSet<V> get(@Nullable Object key)

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public int size()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
Set<Entry<E>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
boolean isPartialView()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableCollection<V> createValues()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public Iterator<E> iterator()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public UnmodifiableIterator<E> iterator()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public Iterator<Entry<E>> iterator()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public int size()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public int size()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public Iterator<E> iterator()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public UnmodifiableIterator<E> iterator()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public Iterator<Entry<E>> iterator()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public int size()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public int size()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
public ImmutableBiMap<V, K> inverse()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSet<K> createKeySet()

ImmutableMap<K, V> getAll(Iterable<? extends K> keys) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public String trimFrom(CharSequence sequence)
public int size()

public String trimFrom(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public String trimFrom(CharSequence sequence)
public int size()

public String trimFrom(CharSequence sequence)
public int size()

public String trimFrom(CharSequence sequence)
public int size()

public String trimFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
public int size()

public String trimFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String trimFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String trimFrom(CharSequence sequence)
ImmutableCollection<V> createValues()

public String trimFrom(CharSequence sequence)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String trimFrom(CharSequence sequence)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public String trimFrom(CharSequence sequence)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String trimFrom(CharSequence sequence)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public String trimFrom(CharSequence sequence)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public String trimFrom(CharSequence sequence)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String trimFrom(CharSequence sequence)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public String trimFrom(CharSequence sequence)
public ImmutableSortedSet<K> keySet()

public String trimFrom(CharSequence sequence)
public ImmutableSet<K> keySet()

public String trimFrom(CharSequence sequence)
ImmutableCollection<V> createValues()

public String trimFrom(CharSequence sequence)
public int size()

public String trimFrom(CharSequence sequence)
public int compare(Entry<?> entry1, Entry<?> entry2)

public String trimFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String trimFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String trimFrom(CharSequence sequence)
ImmutableCollection<V> createValues()

public String trimFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String trimFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String trimFrom(CharSequence sequence)
public boolean contains(@Nullable Object object)

public String trimFrom(CharSequence sequence)
public boolean contains(Object object)

public String trimFrom(CharSequence sequence)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public String trimFrom(CharSequence sequence)
public Builder<K, V> put(K key, V value)

public String trimFrom(CharSequence sequence)
ImmutableCollection<V> createValues()

public String trimFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String trimFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String trimFrom(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public String trimFrom(CharSequence sequence)
public int size()

public String trimFrom(CharSequence sequence)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public String trimFrom(CharSequence sequence)
public Builder<K, V> put(K key, V value)

public String trimFrom(CharSequence sequence)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public String trimFrom(CharSequence sequence)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public String trimFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String trimFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String trimFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String trimFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String trimFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String trimFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String trimFrom(CharSequence sequence)
public boolean contains(@Nullable Object object)

public String trimFrom(CharSequence sequence)
public boolean contains(Object object)

public String trimFrom(CharSequence sequence)
public int size()

public String trimFrom(CharSequence sequence)
public int size()

public String trimFrom(CharSequence sequence)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public String trimFrom(CharSequence sequence)
public ImmutableSet<V> get(@Nullable Object key)

public String trimFrom(CharSequence sequence)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public String trimFrom(CharSequence sequence)
public ImmutableSet<V> get(@Nullable Object key)

public String trimFrom(CharSequence sequence)
public int size()

public String trimFrom(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public String trimFrom(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public String trimFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
boolean isPartialView()

public String trimFrom(CharSequence sequence)
ImmutableCollection<V> createValues()

public String trimFrom(CharSequence sequence)
public Iterator<E> iterator()

public String trimFrom(CharSequence sequence)
public UnmodifiableIterator<E> iterator()

public String trimFrom(CharSequence sequence)
public Iterator<Entry<E>> iterator()

public String trimFrom(CharSequence sequence)
public int size()

public String trimFrom(CharSequence sequence)
public int size()

public String trimFrom(CharSequence sequence)
public Iterator<E> iterator()

public String trimFrom(CharSequence sequence)
public UnmodifiableIterator<E> iterator()

public String trimFrom(CharSequence sequence)
public Iterator<Entry<E>> iterator()

public String trimFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
public int size()

public String trimFrom(CharSequence sequence)
public int size()

public String trimFrom(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public String trimFrom(CharSequence sequence)
ImmutableSet<K> createKeySet()

public String trimFrom(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public final double populationStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public final double populationStandardDeviation()
public int size()

public final double populationStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public final double populationStandardDeviation()
public int size()

public final double populationStandardDeviation()
public int size()

public final double populationStandardDeviation()
public int size()

public final double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public final double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public final double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double populationStandardDeviation()
public int size()

public final double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double populationStandardDeviation()
ImmutableCollection<V> createValues()

public final double populationStandardDeviation()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final double populationStandardDeviation()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public final double populationStandardDeviation()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final double populationStandardDeviation()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public final double populationStandardDeviation()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public final double populationStandardDeviation()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final double populationStandardDeviation()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public final double populationStandardDeviation()
public ImmutableSortedSet<K> keySet()

public final double populationStandardDeviation()
public ImmutableSet<K> keySet()

public final double populationStandardDeviation()
ImmutableCollection<V> createValues()

public final double populationStandardDeviation()
public int size()

public final double populationStandardDeviation()
public int compare(Entry<?> entry1, Entry<?> entry2)

public final double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double populationStandardDeviation()
ImmutableCollection<V> createValues()

public final double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double populationStandardDeviation()
public boolean contains(@Nullable Object object)

public final double populationStandardDeviation()
public boolean contains(Object object)

public final double populationStandardDeviation()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public final double populationStandardDeviation()
public Builder<K, V> put(K key, V value)

public final double populationStandardDeviation()
ImmutableCollection<V> createValues()

public final double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public final double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double populationStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public final double populationStandardDeviation()
public int size()

public final double populationStandardDeviation()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public final double populationStandardDeviation()
public Builder<K, V> put(K key, V value)

public final double populationStandardDeviation()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public final double populationStandardDeviation()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public final double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public final double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public final double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double populationStandardDeviation()
public boolean contains(@Nullable Object object)

public final double populationStandardDeviation()
public boolean contains(Object object)

public final double populationStandardDeviation()
public int size()

public final double populationStandardDeviation()
public int size()

public final double populationStandardDeviation()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public final double populationStandardDeviation()
public ImmutableSet<V> get(@Nullable Object key)

public final double populationStandardDeviation()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public final double populationStandardDeviation()
public ImmutableSet<V> get(@Nullable Object key)

public final double populationStandardDeviation()
public int size()

public final double populationStandardDeviation()
Set<Entry<E>> createEntrySet()

public final double populationStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public final double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public final double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double populationStandardDeviation()
boolean isPartialView()

public final double populationStandardDeviation()
ImmutableCollection<V> createValues()

public final double populationStandardDeviation()
public Iterator<E> iterator()

public final double populationStandardDeviation()
public UnmodifiableIterator<E> iterator()

public final double populationStandardDeviation()
public Iterator<Entry<E>> iterator()

public final double populationStandardDeviation()
public int size()

public final double populationStandardDeviation()
public int size()

public final double populationStandardDeviation()
public Iterator<E> iterator()

public final double populationStandardDeviation()
public UnmodifiableIterator<E> iterator()

public final double populationStandardDeviation()
public Iterator<Entry<E>> iterator()

public final double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public final double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public final double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public final double populationStandardDeviation()
public int size()

public final double populationStandardDeviation()
public int size()

public final double populationStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public final double populationStandardDeviation()
ImmutableSet<K> createKeySet()

public final double populationStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base32()
public int size()

public static BaseEncoding base32()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base32()
public int size()

public static BaseEncoding base32()
public int size()

public static BaseEncoding base32()
public int size()

public static BaseEncoding base32()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32()
public int size()

public static BaseEncoding base32()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32()
ImmutableCollection<V> createValues()

public static BaseEncoding base32()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static BaseEncoding base32()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static BaseEncoding base32()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static BaseEncoding base32()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static BaseEncoding base32()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static BaseEncoding base32()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static BaseEncoding base32()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static BaseEncoding base32()
public ImmutableSortedSet<K> keySet()

public static BaseEncoding base32()
public ImmutableSet<K> keySet()

public static BaseEncoding base32()
ImmutableCollection<V> createValues()

public static BaseEncoding base32()
public int size()

public static BaseEncoding base32()
public int compare(Entry<?> entry1, Entry<?> entry2)

public static BaseEncoding base32()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32()
ImmutableCollection<V> createValues()

public static BaseEncoding base32()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32()
public boolean contains(@Nullable Object object)

public static BaseEncoding base32()
public boolean contains(Object object)

public static BaseEncoding base32()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static BaseEncoding base32()
public Builder<K, V> put(K key, V value)

public static BaseEncoding base32()
ImmutableCollection<V> createValues()

public static BaseEncoding base32()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base32()
public int size()

public static BaseEncoding base32()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static BaseEncoding base32()
public Builder<K, V> put(K key, V value)

public static BaseEncoding base32()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static BaseEncoding base32()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static BaseEncoding base32()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32()
public boolean contains(@Nullable Object object)

public static BaseEncoding base32()
public boolean contains(Object object)

public static BaseEncoding base32()
public int size()

public static BaseEncoding base32()
public int size()

public static BaseEncoding base32()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static BaseEncoding base32()
public ImmutableSet<V> get(@Nullable Object key)

public static BaseEncoding base32()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static BaseEncoding base32()
public ImmutableSet<V> get(@Nullable Object key)

public static BaseEncoding base32()
public int size()

public static BaseEncoding base32()
Set<Entry<E>> createEntrySet()

public static BaseEncoding base32()
ImmutableSet<Entry<K, V>> createEntrySet()

public static BaseEncoding base32()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32()
boolean isPartialView()

public static BaseEncoding base32()
ImmutableCollection<V> createValues()

public static BaseEncoding base32()
public Iterator<E> iterator()

public static BaseEncoding base32()
public UnmodifiableIterator<E> iterator()

public static BaseEncoding base32()
public Iterator<Entry<E>> iterator()

public static BaseEncoding base32()
public int size()

public static BaseEncoding base32()
public int size()

public static BaseEncoding base32()
public Iterator<E> iterator()

public static BaseEncoding base32()
public UnmodifiableIterator<E> iterator()

public static BaseEncoding base32()
public Iterator<Entry<E>> iterator()

public static BaseEncoding base32()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32()
ImmutableSortedSet<K> createKeySet()

public static BaseEncoding base32()
public int size()

public static BaseEncoding base32()
public int size()

public static BaseEncoding base32()
public ImmutableBiMap<V, K> inverse()

public static BaseEncoding base32()
ImmutableSet<K> createKeySet()

public static BaseEncoding base32()
ImmutableSortedSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
public ImmutableBiMap<V, K> inverse()

public long copyTo(CharSink sink) throws IOException
public int size()

public long copyTo(CharSink sink) throws IOException
public ImmutableBiMap<V, K> inverse()

public long copyTo(CharSink sink) throws IOException
public int size()

public long copyTo(CharSink sink) throws IOException
public int size()

public long copyTo(CharSink sink) throws IOException
public int size()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
public int size()

public long copyTo(CharSink sink) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
ImmutableCollection<V> createValues()

public long copyTo(CharSink sink) throws IOException
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public long copyTo(CharSink sink) throws IOException
public static ImmutableSortedSet<E> copyOf(E[] elements)

public long copyTo(CharSink sink) throws IOException
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public long copyTo(CharSink sink) throws IOException
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public long copyTo(CharSink sink) throws IOException
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public long copyTo(CharSink sink) throws IOException
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public long copyTo(CharSink sink) throws IOException
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public long copyTo(CharSink sink) throws IOException
public ImmutableSortedSet<K> keySet()

public long copyTo(CharSink sink) throws IOException
public ImmutableSet<K> keySet()

public long copyTo(CharSink sink) throws IOException
ImmutableCollection<V> createValues()

public long copyTo(CharSink sink) throws IOException
public int size()

public long copyTo(CharSink sink) throws IOException
public int compare(Entry<?> entry1, Entry<?> entry2)

public long copyTo(CharSink sink) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
ImmutableCollection<V> createValues()

public long copyTo(CharSink sink) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
public boolean contains(@Nullable Object object)

public long copyTo(CharSink sink) throws IOException
public boolean contains(Object object)

public long copyTo(CharSink sink) throws IOException
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public long copyTo(CharSink sink) throws IOException
public Builder<K, V> put(K key, V value)

public long copyTo(CharSink sink) throws IOException
ImmutableCollection<V> createValues()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
public ImmutableBiMap<V, K> inverse()

public long copyTo(CharSink sink) throws IOException
public int size()

public long copyTo(CharSink sink) throws IOException
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public long copyTo(CharSink sink) throws IOException
public Builder<K, V> put(K key, V value)

public long copyTo(CharSink sink) throws IOException
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public long copyTo(CharSink sink) throws IOException
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public long copyTo(CharSink sink) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
public boolean contains(@Nullable Object object)

public long copyTo(CharSink sink) throws IOException
public boolean contains(Object object)

public long copyTo(CharSink sink) throws IOException
public int size()

public long copyTo(CharSink sink) throws IOException
public int size()

public long copyTo(CharSink sink) throws IOException
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public long copyTo(CharSink sink) throws IOException
public ImmutableSet<V> get(@Nullable Object key)

public long copyTo(CharSink sink) throws IOException
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public long copyTo(CharSink sink) throws IOException
public ImmutableSet<V> get(@Nullable Object key)

public long copyTo(CharSink sink) throws IOException
public int size()

public long copyTo(CharSink sink) throws IOException
Set<Entry<E>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
boolean isPartialView()

public long copyTo(CharSink sink) throws IOException
ImmutableCollection<V> createValues()

public long copyTo(CharSink sink) throws IOException
public Iterator<E> iterator()

public long copyTo(CharSink sink) throws IOException
public UnmodifiableIterator<E> iterator()

public long copyTo(CharSink sink) throws IOException
public Iterator<Entry<E>> iterator()

public long copyTo(CharSink sink) throws IOException
public int size()

public long copyTo(CharSink sink) throws IOException
public int size()

public long copyTo(CharSink sink) throws IOException
public Iterator<E> iterator()

public long copyTo(CharSink sink) throws IOException
public UnmodifiableIterator<E> iterator()

public long copyTo(CharSink sink) throws IOException
public Iterator<Entry<E>> iterator()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSortedSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
public int size()

public long copyTo(CharSink sink) throws IOException
public int size()

public long copyTo(CharSink sink) throws IOException
public ImmutableBiMap<V, K> inverse()

public long copyTo(CharSink sink) throws IOException
ImmutableSet<K> createKeySet()

public long copyTo(CharSink sink) throws IOException
ImmutableSortedSet<K> createKeySet()

public double sampleStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public double sampleStandardDeviation()
public int size()

public double sampleStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public double sampleStandardDeviation()
public int size()

public double sampleStandardDeviation()
public int size()

public double sampleStandardDeviation()
public int size()

public double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double sampleStandardDeviation()
public int size()

public double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double sampleStandardDeviation()
ImmutableCollection<V> createValues()

public double sampleStandardDeviation()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public double sampleStandardDeviation()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public double sampleStandardDeviation()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public double sampleStandardDeviation()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public double sampleStandardDeviation()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public double sampleStandardDeviation()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public double sampleStandardDeviation()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public double sampleStandardDeviation()
public ImmutableSortedSet<K> keySet()

public double sampleStandardDeviation()
public ImmutableSet<K> keySet()

public double sampleStandardDeviation()
ImmutableCollection<V> createValues()

public double sampleStandardDeviation()
public int size()

public double sampleStandardDeviation()
public int compare(Entry<?> entry1, Entry<?> entry2)

public double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double sampleStandardDeviation()
ImmutableCollection<V> createValues()

public double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double sampleStandardDeviation()
public boolean contains(@Nullable Object object)

public double sampleStandardDeviation()
public boolean contains(Object object)

public double sampleStandardDeviation()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public double sampleStandardDeviation()
public Builder<K, V> put(K key, V value)

public double sampleStandardDeviation()
ImmutableCollection<V> createValues()

public double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double sampleStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public double sampleStandardDeviation()
public int size()

public double sampleStandardDeviation()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public double sampleStandardDeviation()
public Builder<K, V> put(K key, V value)

public double sampleStandardDeviation()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public double sampleStandardDeviation()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double sampleStandardDeviation()
public boolean contains(@Nullable Object object)

public double sampleStandardDeviation()
public boolean contains(Object object)

public double sampleStandardDeviation()
public int size()

public double sampleStandardDeviation()
public int size()

public double sampleStandardDeviation()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public double sampleStandardDeviation()
public ImmutableSet<V> get(@Nullable Object key)

public double sampleStandardDeviation()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public double sampleStandardDeviation()
public ImmutableSet<V> get(@Nullable Object key)

public double sampleStandardDeviation()
public int size()

public double sampleStandardDeviation()
Set<Entry<E>> createEntrySet()

public double sampleStandardDeviation()
ImmutableSet<Entry<K, V>> createEntrySet()

public double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double sampleStandardDeviation()
boolean isPartialView()

public double sampleStandardDeviation()
ImmutableCollection<V> createValues()

public double sampleStandardDeviation()
public Iterator<E> iterator()

public double sampleStandardDeviation()
public UnmodifiableIterator<E> iterator()

public double sampleStandardDeviation()
public Iterator<Entry<E>> iterator()

public double sampleStandardDeviation()
public int size()

public double sampleStandardDeviation()
public int size()

public double sampleStandardDeviation()
public Iterator<E> iterator()

public double sampleStandardDeviation()
public UnmodifiableIterator<E> iterator()

public double sampleStandardDeviation()
public Iterator<Entry<E>> iterator()

public double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public double sampleStandardDeviation()
public int size()

public double sampleStandardDeviation()
public int size()

public double sampleStandardDeviation()
public ImmutableBiMap<V, K> inverse()

public double sampleStandardDeviation()
ImmutableSet<K> createKeySet()

public double sampleStandardDeviation()
ImmutableSortedSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
public ImmutableBiMap<V, K> inverse()

public boolean is(MediaType mediaTypeRange)
public int size()

public boolean is(MediaType mediaTypeRange)
public ImmutableBiMap<V, K> inverse()

public boolean is(MediaType mediaTypeRange)
public int size()

public boolean is(MediaType mediaTypeRange)
public int size()

public boolean is(MediaType mediaTypeRange)
public int size()

public boolean is(MediaType mediaTypeRange)
ImmutableSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSortedSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSortedSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
public int size()

public boolean is(MediaType mediaTypeRange)
Set<Entry<E>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
ImmutableCollection<V> createValues()

public boolean is(MediaType mediaTypeRange)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public boolean is(MediaType mediaTypeRange)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public boolean is(MediaType mediaTypeRange)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public boolean is(MediaType mediaTypeRange)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public boolean is(MediaType mediaTypeRange)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public boolean is(MediaType mediaTypeRange)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public boolean is(MediaType mediaTypeRange)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public boolean is(MediaType mediaTypeRange)
public ImmutableSortedSet<K> keySet()

public boolean is(MediaType mediaTypeRange)
public ImmutableSet<K> keySet()

public boolean is(MediaType mediaTypeRange)
ImmutableCollection<V> createValues()

public boolean is(MediaType mediaTypeRange)
public int size()

public boolean is(MediaType mediaTypeRange)
public int compare(Entry<?> entry1, Entry<?> entry2)

public boolean is(MediaType mediaTypeRange)
Set<Entry<E>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
ImmutableCollection<V> createValues()

public boolean is(MediaType mediaTypeRange)
Set<Entry<E>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
public boolean contains(@Nullable Object object)

public boolean is(MediaType mediaTypeRange)
public boolean contains(Object object)

public boolean is(MediaType mediaTypeRange)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public boolean is(MediaType mediaTypeRange)
public Builder<K, V> put(K key, V value)

public boolean is(MediaType mediaTypeRange)
ImmutableCollection<V> createValues()

public boolean is(MediaType mediaTypeRange)
public boolean containsAll(Collection<?> targets)

public boolean is(MediaType mediaTypeRange)
public boolean containsAll(Collection<?> targets)

public boolean is(MediaType mediaTypeRange)
ImmutableSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSortedSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
Set<Entry<E>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
public ImmutableBiMap<V, K> inverse()

public boolean is(MediaType mediaTypeRange)
public int size()

public boolean is(MediaType mediaTypeRange)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public boolean is(MediaType mediaTypeRange)
public Builder<K, V> put(K key, V value)

public boolean is(MediaType mediaTypeRange)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public boolean is(MediaType mediaTypeRange)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public boolean is(MediaType mediaTypeRange)
ImmutableSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSortedSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
Set<Entry<E>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
Set<Entry<E>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSortedSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
Set<Entry<E>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
public boolean contains(@Nullable Object object)

public boolean is(MediaType mediaTypeRange)
public boolean contains(Object object)

public boolean is(MediaType mediaTypeRange)
public int size()

public boolean is(MediaType mediaTypeRange)
public int size()

public boolean is(MediaType mediaTypeRange)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public boolean is(MediaType mediaTypeRange)
public ImmutableSet<V> get(@Nullable Object key)

public boolean is(MediaType mediaTypeRange)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public boolean is(MediaType mediaTypeRange)
public ImmutableSet<V> get(@Nullable Object key)

public boolean is(MediaType mediaTypeRange)
public int size()

public boolean is(MediaType mediaTypeRange)
Set<Entry<E>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSet<Entry<K, V>> createEntrySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSortedSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
boolean isPartialView()

public boolean is(MediaType mediaTypeRange)
ImmutableCollection<V> createValues()

public boolean is(MediaType mediaTypeRange)
public boolean containsAll(Collection<?> targets)

public boolean is(MediaType mediaTypeRange)
public Iterator<E> iterator()

public boolean is(MediaType mediaTypeRange)
public UnmodifiableIterator<E> iterator()

public boolean is(MediaType mediaTypeRange)
public Iterator<Entry<E>> iterator()

public boolean is(MediaType mediaTypeRange)
public int size()

public boolean is(MediaType mediaTypeRange)
public int size()

public boolean is(MediaType mediaTypeRange)
public Iterator<E> iterator()

public boolean is(MediaType mediaTypeRange)
public UnmodifiableIterator<E> iterator()

public boolean is(MediaType mediaTypeRange)
public Iterator<Entry<E>> iterator()

public boolean is(MediaType mediaTypeRange)
ImmutableSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSortedSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSortedSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
public int size()

public boolean is(MediaType mediaTypeRange)
public int size()

public boolean is(MediaType mediaTypeRange)
public ImmutableBiMap<V, K> inverse()

public boolean is(MediaType mediaTypeRange)
ImmutableSet<K> createKeySet()

public boolean is(MediaType mediaTypeRange)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
public ImmutableBiMap<V, K> inverse()

public final boolean isSupertypeOf(TypeToken<?> type)
public int size()

public final boolean isSupertypeOf(TypeToken<?> type)
public ImmutableBiMap<V, K> inverse()

public final boolean isSupertypeOf(TypeToken<?> type)
public int size()

public final boolean isSupertypeOf(TypeToken<?> type)
public int size()

public final boolean isSupertypeOf(TypeToken<?> type)
public int size()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
public int size()

public final boolean isSupertypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableCollection<V> createValues()

public final boolean isSupertypeOf(TypeToken<?> type)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final boolean isSupertypeOf(TypeToken<?> type)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public final boolean isSupertypeOf(TypeToken<?> type)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final boolean isSupertypeOf(TypeToken<?> type)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public final boolean isSupertypeOf(TypeToken<?> type)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public final boolean isSupertypeOf(TypeToken<?> type)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public final boolean isSupertypeOf(TypeToken<?> type)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public final boolean isSupertypeOf(TypeToken<?> type)
public ImmutableSortedSet<K> keySet()

public final boolean isSupertypeOf(TypeToken<?> type)
public ImmutableSet<K> keySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableCollection<V> createValues()

public final boolean isSupertypeOf(TypeToken<?> type)
public int size()

public final boolean isSupertypeOf(TypeToken<?> type)
public int compare(Entry<?> entry1, Entry<?> entry2)

public final boolean isSupertypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableCollection<V> createValues()

public final boolean isSupertypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
public boolean contains(@Nullable Object object)

public final boolean isSupertypeOf(TypeToken<?> type)
public boolean contains(Object object)

public final boolean isSupertypeOf(TypeToken<?> type)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public final boolean isSupertypeOf(TypeToken<?> type)
public Builder<K, V> put(K key, V value)

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableCollection<V> createValues()

public final boolean isSupertypeOf(TypeToken<?> type)
public boolean containsAll(Collection<?> targets)

public final boolean isSupertypeOf(TypeToken<?> type)
public boolean containsAll(Collection<?> targets)

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
public ImmutableBiMap<V, K> inverse()

public final boolean isSupertypeOf(TypeToken<?> type)
public int size()

public final boolean isSupertypeOf(TypeToken<?> type)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public final boolean isSupertypeOf(TypeToken<?> type)
public Builder<K, V> put(K key, V value)

public final boolean isSupertypeOf(TypeToken<?> type)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public final boolean isSupertypeOf(TypeToken<?> type)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
public boolean contains(@Nullable Object object)

public final boolean isSupertypeOf(TypeToken<?> type)
public boolean contains(Object object)

public final boolean isSupertypeOf(TypeToken<?> type)
public int size()

public final boolean isSupertypeOf(TypeToken<?> type)
public int size()

public final boolean isSupertypeOf(TypeToken<?> type)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public final boolean isSupertypeOf(TypeToken<?> type)
public ImmutableSet<V> get(@Nullable Object key)

public final boolean isSupertypeOf(TypeToken<?> type)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public final boolean isSupertypeOf(TypeToken<?> type)
public ImmutableSet<V> get(@Nullable Object key)

public final boolean isSupertypeOf(TypeToken<?> type)
public int size()

public final boolean isSupertypeOf(TypeToken<?> type)
Set<Entry<E>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<Entry<K, V>> createEntrySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
boolean isPartialView()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableCollection<V> createValues()

public final boolean isSupertypeOf(TypeToken<?> type)
public boolean containsAll(Collection<?> targets)

public final boolean isSupertypeOf(TypeToken<?> type)
public Iterator<E> iterator()

public final boolean isSupertypeOf(TypeToken<?> type)
public UnmodifiableIterator<E> iterator()

public final boolean isSupertypeOf(TypeToken<?> type)
public Iterator<Entry<E>> iterator()

public final boolean isSupertypeOf(TypeToken<?> type)
public int size()

public final boolean isSupertypeOf(TypeToken<?> type)
public int size()

public final boolean isSupertypeOf(TypeToken<?> type)
public Iterator<E> iterator()

public final boolean isSupertypeOf(TypeToken<?> type)
public UnmodifiableIterator<E> iterator()

public final boolean isSupertypeOf(TypeToken<?> type)
public Iterator<Entry<E>> iterator()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
public int size()

public final boolean isSupertypeOf(TypeToken<?> type)
public int size()

public final boolean isSupertypeOf(TypeToken<?> type)
public ImmutableBiMap<V, K> inverse()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSet<K> createKeySet()

public final boolean isSupertypeOf(TypeToken<?> type)
ImmutableSortedSet<K> createKeySet()

String convert(CaseFormat format, String s)
public ImmutableBiMap<V, K> inverse()

String convert(CaseFormat format, String s)
public int size()

String convert(CaseFormat format, String s)
public ImmutableBiMap<V, K> inverse()

String convert(CaseFormat format, String s)
public int size()

String convert(CaseFormat format, String s)
public int size()

String convert(CaseFormat format, String s)
public int size()

String convert(CaseFormat format, String s)
ImmutableSet<K> createKeySet()

String convert(CaseFormat format, String s)
ImmutableSortedSet<K> createKeySet()

String convert(CaseFormat format, String s)
ImmutableSet<K> createKeySet()

String convert(CaseFormat format, String s)
ImmutableSortedSet<K> createKeySet()

String convert(CaseFormat format, String s)
public int size()

String convert(CaseFormat format, String s)
Set<Entry<E>> createEntrySet()

String convert(CaseFormat format, String s)
ImmutableSet<Entry<K, V>> createEntrySet()

String convert(CaseFormat format, String s)
ImmutableCollection<V> createValues()

String convert(CaseFormat format, String s)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

String convert(CaseFormat format, String s)
public static ImmutableSortedSet<E> copyOf(E[] elements)

String convert(CaseFormat format, String s)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

String convert(CaseFormat format, String s)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

String convert(CaseFormat format, String s)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

String convert(CaseFormat format, String s)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

String convert(CaseFormat format, String s)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

String convert(CaseFormat format, String s)
public ImmutableSortedSet<K> keySet()

String convert(CaseFormat format, String s)
public ImmutableSet<K> keySet()

String convert(CaseFormat format, String s)
ImmutableCollection<V> createValues()

String convert(CaseFormat format, String s)
public int size()

String convert(CaseFormat format, String s)
public int compare(Entry<?> entry1, Entry<?> entry2)

String convert(CaseFormat format, String s)
Set<Entry<E>> createEntrySet()

String convert(CaseFormat format, String s)
ImmutableSet<Entry<K, V>> createEntrySet()

String convert(CaseFormat format, String s)
ImmutableCollection<V> createValues()

String convert(CaseFormat format, String s)
Set<Entry<E>> createEntrySet()

String convert(CaseFormat format, String s)
ImmutableSet<Entry<K, V>> createEntrySet()

String convert(CaseFormat format, String s)
public boolean contains(@Nullable Object object)

String convert(CaseFormat format, String s)
public boolean contains(Object object)

String convert(CaseFormat format, String s)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

String convert(CaseFormat format, String s)
public Builder<K, V> put(K key, V value)

String convert(CaseFormat format, String s)
ImmutableCollection<V> createValues()

String convert(CaseFormat format, String s)
public boolean containsAll(Collection<?> targets)

String convert(CaseFormat format, String s)
public boolean containsAll(Collection<?> targets)

String convert(CaseFormat format, String s)
ImmutableSet<K> createKeySet()

String convert(CaseFormat format, String s)
ImmutableSortedSet<K> createKeySet()

String convert(CaseFormat format, String s)
Set<Entry<E>> createEntrySet()

String convert(CaseFormat format, String s)
ImmutableSet<Entry<K, V>> createEntrySet()

String convert(CaseFormat format, String s)
public ImmutableBiMap<V, K> inverse()

String convert(CaseFormat format, String s)
public int size()

String convert(CaseFormat format, String s)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

String convert(CaseFormat format, String s)
public Builder<K, V> put(K key, V value)

String convert(CaseFormat format, String s)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

String convert(CaseFormat format, String s)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

String convert(CaseFormat format, String s)
ImmutableSet<K> createKeySet()

String convert(CaseFormat format, String s)
ImmutableSortedSet<K> createKeySet()

String convert(CaseFormat format, String s)
Set<Entry<E>> createEntrySet()

String convert(CaseFormat format, String s)
ImmutableSet<Entry<K, V>> createEntrySet()

String convert(CaseFormat format, String s)
Set<Entry<E>> createEntrySet()

String convert(CaseFormat format, String s)
ImmutableSet<Entry<K, V>> createEntrySet()

String convert(CaseFormat format, String s)
ImmutableSet<K> createKeySet()

String convert(CaseFormat format, String s)
ImmutableSortedSet<K> createKeySet()

String convert(CaseFormat format, String s)
Set<Entry<E>> createEntrySet()

String convert(CaseFormat format, String s)
ImmutableSet<Entry<K, V>> createEntrySet()

String convert(CaseFormat format, String s)
public boolean contains(@Nullable Object object)

String convert(CaseFormat format, String s)
public boolean contains(Object object)

String convert(CaseFormat format, String s)
public int size()

String convert(CaseFormat format, String s)
public int size()

String convert(CaseFormat format, String s)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

String convert(CaseFormat format, String s)
public ImmutableSet<V> get(@Nullable Object key)

String convert(CaseFormat format, String s)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

String convert(CaseFormat format, String s)
public ImmutableSet<V> get(@Nullable Object key)

String convert(CaseFormat format, String s)
public int size()

String convert(CaseFormat format, String s)
Set<Entry<E>> createEntrySet()

String convert(CaseFormat format, String s)
ImmutableSet<Entry<K, V>> createEntrySet()

String convert(CaseFormat format, String s)
ImmutableSet<K> createKeySet()

String convert(CaseFormat format, String s)
ImmutableSortedSet<K> createKeySet()

String convert(CaseFormat format, String s)
boolean isPartialView()

String convert(CaseFormat format, String s)
ImmutableCollection<V> createValues()

String convert(CaseFormat format, String s)
public boolean containsAll(Collection<?> targets)

String convert(CaseFormat format, String s)
public Iterator<E> iterator()

String convert(CaseFormat format, String s)
public UnmodifiableIterator<E> iterator()

String convert(CaseFormat format, String s)
public Iterator<Entry<E>> iterator()

String convert(CaseFormat format, String s)
public int size()

String convert(CaseFormat format, String s)
public int size()

String convert(CaseFormat format, String s)
public Iterator<E> iterator()

String convert(CaseFormat format, String s)
public UnmodifiableIterator<E> iterator()

String convert(CaseFormat format, String s)
public Iterator<Entry<E>> iterator()

String convert(CaseFormat format, String s)
ImmutableSet<K> createKeySet()

String convert(CaseFormat format, String s)
ImmutableSortedSet<K> createKeySet()

String convert(CaseFormat format, String s)
ImmutableSet<K> createKeySet()

String convert(CaseFormat format, String s)
ImmutableSortedSet<K> createKeySet()

String convert(CaseFormat format, String s)
public int size()

String convert(CaseFormat format, String s)
public int size()

String convert(CaseFormat format, String s)
public ImmutableBiMap<V, K> inverse()

String convert(CaseFormat format, String s)
ImmutableSet<K> createKeySet()

String convert(CaseFormat format, String s)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(int n)
public ImmutableBiMap<V, K> inverse()

public static boolean isPrime(int n)
public int size()

public static boolean isPrime(int n)
public ImmutableBiMap<V, K> inverse()

public static boolean isPrime(int n)
public int size()

public static boolean isPrime(int n)
public int size()

public static boolean isPrime(int n)
public int size()

public static boolean isPrime(int n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(int n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(int n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(int n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(int n)
public int size()

public static boolean isPrime(int n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(int n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(int n)
ImmutableCollection<V> createValues()

public static boolean isPrime(int n)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean isPrime(int n)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static boolean isPrime(int n)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean isPrime(int n)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static boolean isPrime(int n)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static boolean isPrime(int n)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean isPrime(int n)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static boolean isPrime(int n)
public ImmutableSortedSet<K> keySet()

public static boolean isPrime(int n)
public ImmutableSet<K> keySet()

public static boolean isPrime(int n)
ImmutableCollection<V> createValues()

public static boolean isPrime(int n)
public int size()

public static boolean isPrime(int n)
public int compare(Entry<?> entry1, Entry<?> entry2)

public static boolean isPrime(int n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(int n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(int n)
ImmutableCollection<V> createValues()

public static boolean isPrime(int n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(int n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(int n)
public boolean contains(@Nullable Object object)

public static boolean isPrime(int n)
public boolean contains(Object object)

public static boolean isPrime(int n)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static boolean isPrime(int n)
public Builder<K, V> put(K key, V value)

public static boolean isPrime(int n)
ImmutableCollection<V> createValues()

public static boolean isPrime(int n)
public boolean containsAll(Collection<?> targets)

public static boolean isPrime(int n)
public boolean containsAll(Collection<?> targets)

public static boolean isPrime(int n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(int n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(int n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(int n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(int n)
public ImmutableBiMap<V, K> inverse()

public static boolean isPrime(int n)
public int size()

public static boolean isPrime(int n)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static boolean isPrime(int n)
public Builder<K, V> put(K key, V value)

public static boolean isPrime(int n)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static boolean isPrime(int n)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static boolean isPrime(int n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(int n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(int n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(int n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(int n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(int n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(int n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(int n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(int n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(int n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(int n)
public boolean contains(@Nullable Object object)

public static boolean isPrime(int n)
public boolean contains(Object object)

public static boolean isPrime(int n)
public int size()

public static boolean isPrime(int n)
public int size()

public static boolean isPrime(int n)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static boolean isPrime(int n)
public ImmutableSet<V> get(@Nullable Object key)

public static boolean isPrime(int n)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static boolean isPrime(int n)
public ImmutableSet<V> get(@Nullable Object key)

public static boolean isPrime(int n)
public int size()

public static boolean isPrime(int n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(int n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(int n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(int n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(int n)
boolean isPartialView()

public static boolean isPrime(int n)
ImmutableCollection<V> createValues()

public static boolean isPrime(int n)
public boolean containsAll(Collection<?> targets)

public static boolean isPrime(int n)
public Iterator<E> iterator()

public static boolean isPrime(int n)
public UnmodifiableIterator<E> iterator()

public static boolean isPrime(int n)
public Iterator<Entry<E>> iterator()

public static boolean isPrime(int n)
public int size()

public static boolean isPrime(int n)
public int size()

public static boolean isPrime(int n)
public Iterator<E> iterator()

public static boolean isPrime(int n)
public UnmodifiableIterator<E> iterator()

public static boolean isPrime(int n)
public Iterator<Entry<E>> iterator()

public static boolean isPrime(int n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(int n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(int n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(int n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(int n)
public int size()

public static boolean isPrime(int n)
public int size()

public static boolean isPrime(int n)
public ImmutableBiMap<V, K> inverse()

public static boolean isPrime(int n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(int n)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
public ImmutableBiMap<V, K> inverse()

public static String getNameWithoutExtension(Path path)
public int size()

public static String getNameWithoutExtension(Path path)
public ImmutableBiMap<V, K> inverse()

public static String getNameWithoutExtension(Path path)
public int size()

public static String getNameWithoutExtension(Path path)
public int size()

public static String getNameWithoutExtension(Path path)
public int size()

public static String getNameWithoutExtension(Path path)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
public int size()

public static String getNameWithoutExtension(Path path)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(Path path)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(Path path)
ImmutableCollection<V> createValues()

public static String getNameWithoutExtension(Path path)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static String getNameWithoutExtension(Path path)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static String getNameWithoutExtension(Path path)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static String getNameWithoutExtension(Path path)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static String getNameWithoutExtension(Path path)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static String getNameWithoutExtension(Path path)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static String getNameWithoutExtension(Path path)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static String getNameWithoutExtension(Path path)
public ImmutableSortedSet<K> keySet()

public static String getNameWithoutExtension(Path path)
public ImmutableSet<K> keySet()

public static String getNameWithoutExtension(Path path)
ImmutableCollection<V> createValues()

public static String getNameWithoutExtension(Path path)
public int size()

public static String getNameWithoutExtension(Path path)
public int compare(Entry<?> entry1, Entry<?> entry2)

public static String getNameWithoutExtension(Path path)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(Path path)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(Path path)
ImmutableCollection<V> createValues()

public static String getNameWithoutExtension(Path path)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(Path path)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(Path path)
public boolean contains(@Nullable Object object)

public static String getNameWithoutExtension(Path path)
public boolean contains(Object object)

public static String getNameWithoutExtension(Path path)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static String getNameWithoutExtension(Path path)
public Builder<K, V> put(K key, V value)

public static String getNameWithoutExtension(Path path)
ImmutableCollection<V> createValues()

public static String getNameWithoutExtension(Path path)
public boolean containsAll(Collection<?> targets)

public static String getNameWithoutExtension(Path path)
public boolean containsAll(Collection<?> targets)

public static String getNameWithoutExtension(Path path)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(Path path)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(Path path)
public ImmutableBiMap<V, K> inverse()

public static String getNameWithoutExtension(Path path)
public int size()

public static String getNameWithoutExtension(Path path)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static String getNameWithoutExtension(Path path)
public Builder<K, V> put(K key, V value)

public static String getNameWithoutExtension(Path path)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static String getNameWithoutExtension(Path path)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static String getNameWithoutExtension(Path path)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(Path path)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(Path path)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(Path path)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(Path path)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(Path path)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(Path path)
public boolean contains(@Nullable Object object)

public static String getNameWithoutExtension(Path path)
public boolean contains(Object object)

public static String getNameWithoutExtension(Path path)
public int size()

public static String getNameWithoutExtension(Path path)
public int size()

public static String getNameWithoutExtension(Path path)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static String getNameWithoutExtension(Path path)
public ImmutableSet<V> get(@Nullable Object key)

public static String getNameWithoutExtension(Path path)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static String getNameWithoutExtension(Path path)
public ImmutableSet<V> get(@Nullable Object key)

public static String getNameWithoutExtension(Path path)
public int size()

public static String getNameWithoutExtension(Path path)
Set<Entry<E>> createEntrySet()

public static String getNameWithoutExtension(Path path)
ImmutableSet<Entry<K, V>> createEntrySet()

public static String getNameWithoutExtension(Path path)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
boolean isPartialView()

public static String getNameWithoutExtension(Path path)
ImmutableCollection<V> createValues()

public static String getNameWithoutExtension(Path path)
public boolean containsAll(Collection<?> targets)

public static String getNameWithoutExtension(Path path)
public Iterator<E> iterator()

public static String getNameWithoutExtension(Path path)
public UnmodifiableIterator<E> iterator()

public static String getNameWithoutExtension(Path path)
public Iterator<Entry<E>> iterator()

public static String getNameWithoutExtension(Path path)
public int size()

public static String getNameWithoutExtension(Path path)
public int size()

public static String getNameWithoutExtension(Path path)
public Iterator<E> iterator()

public static String getNameWithoutExtension(Path path)
public UnmodifiableIterator<E> iterator()

public static String getNameWithoutExtension(Path path)
public Iterator<Entry<E>> iterator()

public static String getNameWithoutExtension(Path path)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
ImmutableSortedSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
public int size()

public static String getNameWithoutExtension(Path path)
public int size()

public static String getNameWithoutExtension(Path path)
public ImmutableBiMap<V, K> inverse()

public static String getNameWithoutExtension(Path path)
ImmutableSet<K> createKeySet()

public static String getNameWithoutExtension(Path path)
ImmutableSortedSet<K> createKeySet()

public static Long tryParse(String string, int radix)
public ImmutableBiMap<V, K> inverse()

public static Long tryParse(String string, int radix)
public int size()

public static Long tryParse(String string, int radix)
public ImmutableBiMap<V, K> inverse()

public static Long tryParse(String string, int radix)
public int size()

public static Long tryParse(String string, int radix)
public int size()

public static Long tryParse(String string, int radix)
public int size()

public static Long tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Long tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Long tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Long tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Long tryParse(String string, int radix)
public int size()

public static Long tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Long tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Long tryParse(String string, int radix)
ImmutableCollection<V> createValues()

public static Long tryParse(String string, int radix)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Long tryParse(String string, int radix)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static Long tryParse(String string, int radix)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Long tryParse(String string, int radix)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static Long tryParse(String string, int radix)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static Long tryParse(String string, int radix)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Long tryParse(String string, int radix)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Long tryParse(String string, int radix)
public ImmutableSortedSet<K> keySet()

public static Long tryParse(String string, int radix)
public ImmutableSet<K> keySet()

public static Long tryParse(String string, int radix)
ImmutableCollection<V> createValues()

public static Long tryParse(String string, int radix)
public int size()

public static Long tryParse(String string, int radix)
public int compare(Entry<?> entry1, Entry<?> entry2)

public static Long tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Long tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Long tryParse(String string, int radix)
ImmutableCollection<V> createValues()

public static Long tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Long tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Long tryParse(String string, int radix)
public boolean contains(@Nullable Object object)

public static Long tryParse(String string, int radix)
public boolean contains(Object object)

public static Long tryParse(String string, int radix)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Long tryParse(String string, int radix)
public Builder<K, V> put(K key, V value)

public static Long tryParse(String string, int radix)
ImmutableCollection<V> createValues()

public static Long tryParse(String string, int radix)
public boolean containsAll(Collection<?> targets)

public static Long tryParse(String string, int radix)
public boolean containsAll(Collection<?> targets)

public static Long tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Long tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Long tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Long tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Long tryParse(String string, int radix)
public ImmutableBiMap<V, K> inverse()

public static Long tryParse(String string, int radix)
public int size()

public static Long tryParse(String string, int radix)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Long tryParse(String string, int radix)
public Builder<K, V> put(K key, V value)

public static Long tryParse(String string, int radix)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static Long tryParse(String string, int radix)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Long tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Long tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Long tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Long tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Long tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Long tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Long tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Long tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Long tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Long tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Long tryParse(String string, int radix)
public boolean contains(@Nullable Object object)

public static Long tryParse(String string, int radix)
public boolean contains(Object object)

public static Long tryParse(String string, int radix)
public int size()

public static Long tryParse(String string, int radix)
public int size()

public static Long tryParse(String string, int radix)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Long tryParse(String string, int radix)
public ImmutableSet<V> get(@Nullable Object key)

public static Long tryParse(String string, int radix)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Long tryParse(String string, int radix)
public ImmutableSet<V> get(@Nullable Object key)

public static Long tryParse(String string, int radix)
public int size()

public static Long tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Long tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Long tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Long tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Long tryParse(String string, int radix)
boolean isPartialView()

public static Long tryParse(String string, int radix)
ImmutableCollection<V> createValues()

public static Long tryParse(String string, int radix)
public boolean containsAll(Collection<?> targets)

public static Long tryParse(String string, int radix)
public Iterator<E> iterator()

public static Long tryParse(String string, int radix)
public UnmodifiableIterator<E> iterator()

public static Long tryParse(String string, int radix)
public Iterator<Entry<E>> iterator()

public static Long tryParse(String string, int radix)
public int size()

public static Long tryParse(String string, int radix)
public int size()

public static Long tryParse(String string, int radix)
public Iterator<E> iterator()

public static Long tryParse(String string, int radix)
public UnmodifiableIterator<E> iterator()

public static Long tryParse(String string, int radix)
public Iterator<Entry<E>> iterator()

public static Long tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Long tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Long tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Long tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Long tryParse(String string, int radix)
public int size()

public static Long tryParse(String string, int radix)
public int size()

public static Long tryParse(String string, int radix)
public ImmutableBiMap<V, K> inverse()

public static Long tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Long tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(long n)
public ImmutableBiMap<V, K> inverse()

public static boolean isPrime(long n)
public int size()

public static boolean isPrime(long n)
public ImmutableBiMap<V, K> inverse()

public static boolean isPrime(long n)
public int size()

public static boolean isPrime(long n)
public int size()

public static boolean isPrime(long n)
public int size()

public static boolean isPrime(long n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(long n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(long n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(long n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(long n)
public int size()

public static boolean isPrime(long n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(long n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(long n)
ImmutableCollection<V> createValues()

public static boolean isPrime(long n)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean isPrime(long n)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static boolean isPrime(long n)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean isPrime(long n)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static boolean isPrime(long n)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static boolean isPrime(long n)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean isPrime(long n)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static boolean isPrime(long n)
public ImmutableSortedSet<K> keySet()

public static boolean isPrime(long n)
public ImmutableSet<K> keySet()

public static boolean isPrime(long n)
ImmutableCollection<V> createValues()

public static boolean isPrime(long n)
public int size()

public static boolean isPrime(long n)
public int compare(Entry<?> entry1, Entry<?> entry2)

public static boolean isPrime(long n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(long n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(long n)
ImmutableCollection<V> createValues()

public static boolean isPrime(long n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(long n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(long n)
public boolean contains(@Nullable Object object)

public static boolean isPrime(long n)
public boolean contains(Object object)

public static boolean isPrime(long n)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static boolean isPrime(long n)
public Builder<K, V> put(K key, V value)

public static boolean isPrime(long n)
ImmutableCollection<V> createValues()

public static boolean isPrime(long n)
public boolean containsAll(Collection<?> targets)

public static boolean isPrime(long n)
public boolean containsAll(Collection<?> targets)

public static boolean isPrime(long n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(long n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(long n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(long n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(long n)
public ImmutableBiMap<V, K> inverse()

public static boolean isPrime(long n)
public int size()

public static boolean isPrime(long n)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static boolean isPrime(long n)
public Builder<K, V> put(K key, V value)

public static boolean isPrime(long n)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static boolean isPrime(long n)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static boolean isPrime(long n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(long n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(long n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(long n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(long n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(long n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(long n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(long n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(long n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(long n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(long n)
public boolean contains(@Nullable Object object)

public static boolean isPrime(long n)
public boolean contains(Object object)

public static boolean isPrime(long n)
public int size()

public static boolean isPrime(long n)
public int size()

public static boolean isPrime(long n)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static boolean isPrime(long n)
public ImmutableSet<V> get(@Nullable Object key)

public static boolean isPrime(long n)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static boolean isPrime(long n)
public ImmutableSet<V> get(@Nullable Object key)

public static boolean isPrime(long n)
public int size()

public static boolean isPrime(long n)
Set<Entry<E>> createEntrySet()

public static boolean isPrime(long n)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isPrime(long n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(long n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(long n)
boolean isPartialView()

public static boolean isPrime(long n)
ImmutableCollection<V> createValues()

public static boolean isPrime(long n)
public boolean containsAll(Collection<?> targets)

public static boolean isPrime(long n)
public Iterator<E> iterator()

public static boolean isPrime(long n)
public UnmodifiableIterator<E> iterator()

public static boolean isPrime(long n)
public Iterator<Entry<E>> iterator()

public static boolean isPrime(long n)
public int size()

public static boolean isPrime(long n)
public int size()

public static boolean isPrime(long n)
public Iterator<E> iterator()

public static boolean isPrime(long n)
public UnmodifiableIterator<E> iterator()

public static boolean isPrime(long n)
public Iterator<Entry<E>> iterator()

public static boolean isPrime(long n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(long n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(long n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(long n)
ImmutableSortedSet<K> createKeySet()

public static boolean isPrime(long n)
public int size()

public static boolean isPrime(long n)
public int size()

public static boolean isPrime(long n)
public ImmutableBiMap<V, K> inverse()

public static boolean isPrime(long n)
ImmutableSet<K> createKeySet()

public static boolean isPrime(long n)
ImmutableSortedSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public int lastIndexIn(CharSequence sequence)
public int size()

public int lastIndexIn(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public int lastIndexIn(CharSequence sequence)
public int size()

public int lastIndexIn(CharSequence sequence)
public int size()

public int lastIndexIn(CharSequence sequence)
public int size()

public int lastIndexIn(CharSequence sequence)
ImmutableSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
public int size()

public int lastIndexIn(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
ImmutableCollection<V> createValues()

public int lastIndexIn(CharSequence sequence)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public int lastIndexIn(CharSequence sequence)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public int lastIndexIn(CharSequence sequence)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public int lastIndexIn(CharSequence sequence)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public int lastIndexIn(CharSequence sequence)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public int lastIndexIn(CharSequence sequence)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public int lastIndexIn(CharSequence sequence)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public int lastIndexIn(CharSequence sequence)
public ImmutableSortedSet<K> keySet()

public int lastIndexIn(CharSequence sequence)
public ImmutableSet<K> keySet()

public int lastIndexIn(CharSequence sequence)
ImmutableCollection<V> createValues()

public int lastIndexIn(CharSequence sequence)
public int size()

public int lastIndexIn(CharSequence sequence)
public int compare(Entry<?> entry1, Entry<?> entry2)

public int lastIndexIn(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
ImmutableCollection<V> createValues()

public int lastIndexIn(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
public boolean contains(@Nullable Object object)

public int lastIndexIn(CharSequence sequence)
public boolean contains(Object object)

public int lastIndexIn(CharSequence sequence)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public int lastIndexIn(CharSequence sequence)
public Builder<K, V> put(K key, V value)

public int lastIndexIn(CharSequence sequence)
ImmutableCollection<V> createValues()

public int lastIndexIn(CharSequence sequence)
public boolean containsAll(Collection<?> targets)

public int lastIndexIn(CharSequence sequence)
public boolean containsAll(Collection<?> targets)

public int lastIndexIn(CharSequence sequence)
ImmutableSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public int lastIndexIn(CharSequence sequence)
public int size()

public int lastIndexIn(CharSequence sequence)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public int lastIndexIn(CharSequence sequence)
public Builder<K, V> put(K key, V value)

public int lastIndexIn(CharSequence sequence)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public int lastIndexIn(CharSequence sequence)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public int lastIndexIn(CharSequence sequence)
ImmutableSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
public boolean contains(@Nullable Object object)

public int lastIndexIn(CharSequence sequence)
public boolean contains(Object object)

public int lastIndexIn(CharSequence sequence)
public int size()

public int lastIndexIn(CharSequence sequence)
public int size()

public int lastIndexIn(CharSequence sequence)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public int lastIndexIn(CharSequence sequence)
public ImmutableSet<V> get(@Nullable Object key)

public int lastIndexIn(CharSequence sequence)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public int lastIndexIn(CharSequence sequence)
public ImmutableSet<V> get(@Nullable Object key)

public int lastIndexIn(CharSequence sequence)
public int size()

public int lastIndexIn(CharSequence sequence)
Set<Entry<E>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSet<Entry<K, V>> createEntrySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
boolean isPartialView()

public int lastIndexIn(CharSequence sequence)
ImmutableCollection<V> createValues()

public int lastIndexIn(CharSequence sequence)
public boolean containsAll(Collection<?> targets)

public int lastIndexIn(CharSequence sequence)
public Iterator<E> iterator()

public int lastIndexIn(CharSequence sequence)
public UnmodifiableIterator<E> iterator()

public int lastIndexIn(CharSequence sequence)
public Iterator<Entry<E>> iterator()

public int lastIndexIn(CharSequence sequence)
public int size()

public int lastIndexIn(CharSequence sequence)
public int size()

public int lastIndexIn(CharSequence sequence)
public Iterator<E> iterator()

public int lastIndexIn(CharSequence sequence)
public UnmodifiableIterator<E> iterator()

public int lastIndexIn(CharSequence sequence)
public Iterator<Entry<E>> iterator()

public int lastIndexIn(CharSequence sequence)
ImmutableSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
public int size()

public int lastIndexIn(CharSequence sequence)
public int size()

public int lastIndexIn(CharSequence sequence)
public ImmutableBiMap<V, K> inverse()

public int lastIndexIn(CharSequence sequence)
ImmutableSet<K> createKeySet()

public int lastIndexIn(CharSequence sequence)
ImmutableSortedSet<K> createKeySet()

int hashCode()
public ImmutableBiMap<V, K> inverse()

int hashCode()
public int size()

int hashCode()
public ImmutableBiMap<V, K> inverse()

int hashCode()
public int size()

int hashCode()
public int size()

int hashCode()
public int size()

int hashCode()
ImmutableSet<K> createKeySet()

int hashCode()
ImmutableSortedSet<K> createKeySet()

int hashCode()
ImmutableSet<K> createKeySet()

int hashCode()
ImmutableSortedSet<K> createKeySet()

int hashCode()
public int size()

int hashCode()
Set<Entry<E>> createEntrySet()

int hashCode()
ImmutableSet<Entry<K, V>> createEntrySet()

int hashCode()
ImmutableCollection<V> createValues()

int hashCode()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

int hashCode()
public static ImmutableSortedSet<E> copyOf(E[] elements)

int hashCode()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

int hashCode()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

int hashCode()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

int hashCode()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

int hashCode()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

int hashCode()
public ImmutableSortedSet<K> keySet()

int hashCode()
public ImmutableSet<K> keySet()

int hashCode()
ImmutableCollection<V> createValues()

int hashCode()
public int size()

int hashCode()
public int compare(Entry<?> entry1, Entry<?> entry2)

int hashCode()
Set<Entry<E>> createEntrySet()

int hashCode()
ImmutableSet<Entry<K, V>> createEntrySet()

int hashCode()
ImmutableCollection<V> createValues()

int hashCode()
Set<Entry<E>> createEntrySet()

int hashCode()
ImmutableSet<Entry<K, V>> createEntrySet()

int hashCode()
public boolean contains(@Nullable Object object)

int hashCode()
public boolean contains(Object object)

int hashCode()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

int hashCode()
public Builder<K, V> put(K key, V value)

int hashCode()
ImmutableCollection<V> createValues()

int hashCode()
public boolean containsAll(Collection<?> targets)

int hashCode()
public boolean containsAll(Collection<?> targets)

int hashCode()
ImmutableSet<K> createKeySet()

int hashCode()
ImmutableSortedSet<K> createKeySet()

int hashCode()
Set<Entry<E>> createEntrySet()

int hashCode()
ImmutableSet<Entry<K, V>> createEntrySet()

int hashCode()
public ImmutableBiMap<V, K> inverse()

int hashCode()
public int size()

int hashCode()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

int hashCode()
public Builder<K, V> put(K key, V value)

int hashCode()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

int hashCode()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

int hashCode()
ImmutableSet<K> createKeySet()

int hashCode()
ImmutableSortedSet<K> createKeySet()

int hashCode()
Set<Entry<E>> createEntrySet()

int hashCode()
ImmutableSet<Entry<K, V>> createEntrySet()

int hashCode()
Set<Entry<E>> createEntrySet()

int hashCode()
ImmutableSet<Entry<K, V>> createEntrySet()

int hashCode()
ImmutableSet<K> createKeySet()

int hashCode()
ImmutableSortedSet<K> createKeySet()

int hashCode()
Set<Entry<E>> createEntrySet()

int hashCode()
ImmutableSet<Entry<K, V>> createEntrySet()

int hashCode()
public boolean contains(@Nullable Object object)

int hashCode()
public boolean contains(Object object)

int hashCode()
public int size()

int hashCode()
public int size()

int hashCode()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

int hashCode()
public ImmutableSet<V> get(@Nullable Object key)

int hashCode()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

int hashCode()
public ImmutableSet<V> get(@Nullable Object key)

int hashCode()
public int size()

int hashCode()
Set<Entry<E>> createEntrySet()

int hashCode()
ImmutableSet<Entry<K, V>> createEntrySet()

int hashCode()
ImmutableSet<K> createKeySet()

int hashCode()
ImmutableSortedSet<K> createKeySet()

int hashCode()
boolean isPartialView()

int hashCode()
ImmutableCollection<V> createValues()

int hashCode()
public boolean containsAll(Collection<?> targets)

int hashCode()
public Iterator<E> iterator()

int hashCode()
public UnmodifiableIterator<E> iterator()

int hashCode()
public Iterator<Entry<E>> iterator()

int hashCode()
public int size()

int hashCode()
public int size()

int hashCode()
public Iterator<E> iterator()

int hashCode()
public UnmodifiableIterator<E> iterator()

int hashCode()
public Iterator<Entry<E>> iterator()

int hashCode()
ImmutableSet<K> createKeySet()

int hashCode()
ImmutableSortedSet<K> createKeySet()

int hashCode()
ImmutableSet<K> createKeySet()

int hashCode()
ImmutableSortedSet<K> createKeySet()

int hashCode()
public int size()

int hashCode()
public int size()

int hashCode()
public ImmutableBiMap<V, K> inverse()

int hashCode()
ImmutableSet<K> createKeySet()

int hashCode()
ImmutableSortedSet<K> createKeySet()

V get(K key) throws ExecutionException
public ImmutableBiMap<V, K> inverse()

V get(K key) throws ExecutionException
public int size()

V get(K key) throws ExecutionException
public ImmutableBiMap<V, K> inverse()

V get(K key) throws ExecutionException
public int size()

V get(K key) throws ExecutionException
public int size()

V get(K key) throws ExecutionException
public int size()

V get(K key) throws ExecutionException
ImmutableSet<K> createKeySet()

V get(K key) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

V get(K key) throws ExecutionException
ImmutableSet<K> createKeySet()

V get(K key) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

V get(K key) throws ExecutionException
public int size()

V get(K key) throws ExecutionException
Set<Entry<E>> createEntrySet()

V get(K key) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

V get(K key) throws ExecutionException
ImmutableCollection<V> createValues()

V get(K key) throws ExecutionException
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

V get(K key) throws ExecutionException
public static ImmutableSortedSet<E> copyOf(E[] elements)

V get(K key) throws ExecutionException
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

V get(K key) throws ExecutionException
public static ImmutableGraph<N> copyOf(Graph<N> graph)

V get(K key) throws ExecutionException
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

V get(K key) throws ExecutionException
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

V get(K key) throws ExecutionException
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

V get(K key) throws ExecutionException
public ImmutableSortedSet<K> keySet()

V get(K key) throws ExecutionException
public ImmutableSet<K> keySet()

V get(K key) throws ExecutionException
ImmutableCollection<V> createValues()

V get(K key) throws ExecutionException
public int size()

V get(K key) throws ExecutionException
public int compare(Entry<?> entry1, Entry<?> entry2)

V get(K key) throws ExecutionException
Set<Entry<E>> createEntrySet()

V get(K key) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

V get(K key) throws ExecutionException
ImmutableCollection<V> createValues()

V get(K key) throws ExecutionException
Set<Entry<E>> createEntrySet()

V get(K key) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

V get(K key) throws ExecutionException
public boolean contains(@Nullable Object object)

V get(K key) throws ExecutionException
public boolean contains(Object object)

V get(K key) throws ExecutionException
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

V get(K key) throws ExecutionException
public Builder<K, V> put(K key, V value)

V get(K key) throws ExecutionException
ImmutableCollection<V> createValues()

V get(K key) throws ExecutionException
public boolean containsAll(Collection<?> targets)

V get(K key) throws ExecutionException
public boolean containsAll(Collection<?> targets)

V get(K key) throws ExecutionException
ImmutableSet<K> createKeySet()

V get(K key) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

V get(K key) throws ExecutionException
Set<Entry<E>> createEntrySet()

V get(K key) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

V get(K key) throws ExecutionException
public ImmutableBiMap<V, K> inverse()

V get(K key) throws ExecutionException
public int size()

V get(K key) throws ExecutionException
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

V get(K key) throws ExecutionException
public Builder<K, V> put(K key, V value)

V get(K key) throws ExecutionException
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

V get(K key) throws ExecutionException
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

V get(K key) throws ExecutionException
ImmutableSet<K> createKeySet()

V get(K key) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

V get(K key) throws ExecutionException
Set<Entry<E>> createEntrySet()

V get(K key) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

V get(K key) throws ExecutionException
Set<Entry<E>> createEntrySet()

V get(K key) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

V get(K key) throws ExecutionException
ImmutableSet<K> createKeySet()

V get(K key) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

V get(K key) throws ExecutionException
Set<Entry<E>> createEntrySet()

V get(K key) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

V get(K key) throws ExecutionException
public boolean contains(@Nullable Object object)

V get(K key) throws ExecutionException
public boolean contains(Object object)

V get(K key) throws ExecutionException
public int size()

V get(K key) throws ExecutionException
public int size()

V get(K key) throws ExecutionException
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

V get(K key) throws ExecutionException
public ImmutableSet<V> get(@Nullable Object key)

V get(K key) throws ExecutionException
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

V get(K key) throws ExecutionException
public ImmutableSet<V> get(@Nullable Object key)

V get(K key) throws ExecutionException
public int size()

V get(K key) throws ExecutionException
Set<Entry<E>> createEntrySet()

V get(K key) throws ExecutionException
ImmutableSet<Entry<K, V>> createEntrySet()

V get(K key) throws ExecutionException
ImmutableSet<K> createKeySet()

V get(K key) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

V get(K key) throws ExecutionException
boolean isPartialView()

V get(K key) throws ExecutionException
ImmutableCollection<V> createValues()

V get(K key) throws ExecutionException
public boolean containsAll(Collection<?> targets)

V get(K key) throws ExecutionException
public Iterator<E> iterator()

V get(K key) throws ExecutionException
public UnmodifiableIterator<E> iterator()

V get(K key) throws ExecutionException
public Iterator<Entry<E>> iterator()

V get(K key) throws ExecutionException
public int size()

V get(K key) throws ExecutionException
public int size()

V get(K key) throws ExecutionException
public Iterator<E> iterator()

V get(K key) throws ExecutionException
public UnmodifiableIterator<E> iterator()

V get(K key) throws ExecutionException
public Iterator<Entry<E>> iterator()

V get(K key) throws ExecutionException
ImmutableSet<K> createKeySet()

V get(K key) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

V get(K key) throws ExecutionException
ImmutableSet<K> createKeySet()

V get(K key) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

V get(K key) throws ExecutionException
public int size()

V get(K key) throws ExecutionException
public int size()

V get(K key) throws ExecutionException
public ImmutableBiMap<V, K> inverse()

V get(K key) throws ExecutionException
ImmutableSet<K> createKeySet()

V get(K key) throws ExecutionException
ImmutableSortedSet<K> createKeySet()

public long size() throws IOException
public ImmutableBiMap<V, K> inverse()

public long size() throws IOException
public int size()

public long size() throws IOException
public ImmutableBiMap<V, K> inverse()

public long size() throws IOException
public int size()

public long size() throws IOException
public int size()

public long size() throws IOException
public int size()

public long size() throws IOException
ImmutableSet<K> createKeySet()

public long size() throws IOException
ImmutableSortedSet<K> createKeySet()

public long size() throws IOException
ImmutableSet<K> createKeySet()

public long size() throws IOException
ImmutableSortedSet<K> createKeySet()

public long size() throws IOException
public int size()

public long size() throws IOException
Set<Entry<E>> createEntrySet()

public long size() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long size() throws IOException
ImmutableCollection<V> createValues()

public long size() throws IOException
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public long size() throws IOException
public static ImmutableSortedSet<E> copyOf(E[] elements)

public long size() throws IOException
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public long size() throws IOException
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public long size() throws IOException
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public long size() throws IOException
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public long size() throws IOException
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public long size() throws IOException
public ImmutableSortedSet<K> keySet()

public long size() throws IOException
public ImmutableSet<K> keySet()

public long size() throws IOException
ImmutableCollection<V> createValues()

public long size() throws IOException
public int size()

public long size() throws IOException
public int compare(Entry<?> entry1, Entry<?> entry2)

public long size() throws IOException
Set<Entry<E>> createEntrySet()

public long size() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long size() throws IOException
ImmutableCollection<V> createValues()

public long size() throws IOException
Set<Entry<E>> createEntrySet()

public long size() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long size() throws IOException
public boolean contains(@Nullable Object object)

public long size() throws IOException
public boolean contains(Object object)

public long size() throws IOException
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public long size() throws IOException
public Builder<K, V> put(K key, V value)

public long size() throws IOException
ImmutableCollection<V> createValues()

public long size() throws IOException
public boolean containsAll(Collection<?> targets)

public long size() throws IOException
public boolean containsAll(Collection<?> targets)

public long size() throws IOException
ImmutableSet<K> createKeySet()

public long size() throws IOException
ImmutableSortedSet<K> createKeySet()

public long size() throws IOException
Set<Entry<E>> createEntrySet()

public long size() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long size() throws IOException
public ImmutableBiMap<V, K> inverse()

public long size() throws IOException
public int size()

public long size() throws IOException
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public long size() throws IOException
public Builder<K, V> put(K key, V value)

public long size() throws IOException
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public long size() throws IOException
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public long size() throws IOException
ImmutableSet<K> createKeySet()

public long size() throws IOException
ImmutableSortedSet<K> createKeySet()

public long size() throws IOException
Set<Entry<E>> createEntrySet()

public long size() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long size() throws IOException
Set<Entry<E>> createEntrySet()

public long size() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long size() throws IOException
ImmutableSet<K> createKeySet()

public long size() throws IOException
ImmutableSortedSet<K> createKeySet()

public long size() throws IOException
Set<Entry<E>> createEntrySet()

public long size() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long size() throws IOException
public boolean contains(@Nullable Object object)

public long size() throws IOException
public boolean contains(Object object)

public long size() throws IOException
public int size()

public long size() throws IOException
public int size()

public long size() throws IOException
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public long size() throws IOException
public ImmutableSet<V> get(@Nullable Object key)

public long size() throws IOException
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public long size() throws IOException
public ImmutableSet<V> get(@Nullable Object key)

public long size() throws IOException
public int size()

public long size() throws IOException
Set<Entry<E>> createEntrySet()

public long size() throws IOException
ImmutableSet<Entry<K, V>> createEntrySet()

public long size() throws IOException
ImmutableSet<K> createKeySet()

public long size() throws IOException
ImmutableSortedSet<K> createKeySet()

public long size() throws IOException
boolean isPartialView()

public long size() throws IOException
ImmutableCollection<V> createValues()

public long size() throws IOException
public boolean containsAll(Collection<?> targets)

public long size() throws IOException
public Iterator<E> iterator()

public long size() throws IOException
public UnmodifiableIterator<E> iterator()

public long size() throws IOException
public Iterator<Entry<E>> iterator()

public long size() throws IOException
public int size()

public long size() throws IOException
public int size()

public long size() throws IOException
public Iterator<E> iterator()

public long size() throws IOException
public UnmodifiableIterator<E> iterator()

public long size() throws IOException
public Iterator<Entry<E>> iterator()

public long size() throws IOException
ImmutableSet<K> createKeySet()

public long size() throws IOException
ImmutableSortedSet<K> createKeySet()

public long size() throws IOException
ImmutableSet<K> createKeySet()

public long size() throws IOException
ImmutableSortedSet<K> createKeySet()

public long size() throws IOException
public int size()

public long size() throws IOException
public int size()

public long size() throws IOException
public ImmutableBiMap<V, K> inverse()

public long size() throws IOException
ImmutableSet<K> createKeySet()

public long size() throws IOException
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_32(int seed)
public int size()

public static HashFunction murmur3_32(int seed)
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_32(int seed)
public int size()

public static HashFunction murmur3_32(int seed)
public int size()

public static HashFunction murmur3_32(int seed)
public int size()

public static HashFunction murmur3_32(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
public int size()

public static HashFunction murmur3_32(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32(int seed)
ImmutableCollection<V> createValues()

public static HashFunction murmur3_32(int seed)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_32(int seed)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static HashFunction murmur3_32(int seed)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_32(int seed)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static HashFunction murmur3_32(int seed)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static HashFunction murmur3_32(int seed)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_32(int seed)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static HashFunction murmur3_32(int seed)
public ImmutableSortedSet<K> keySet()

public static HashFunction murmur3_32(int seed)
public ImmutableSet<K> keySet()

public static HashFunction murmur3_32(int seed)
ImmutableCollection<V> createValues()

public static HashFunction murmur3_32(int seed)
public int size()

public static HashFunction murmur3_32(int seed)
public int compare(Entry<?> entry1, Entry<?> entry2)

public static HashFunction murmur3_32(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32(int seed)
ImmutableCollection<V> createValues()

public static HashFunction murmur3_32(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32(int seed)
public boolean contains(@Nullable Object object)

public static HashFunction murmur3_32(int seed)
public boolean contains(Object object)

public static HashFunction murmur3_32(int seed)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static HashFunction murmur3_32(int seed)
public Builder<K, V> put(K key, V value)

public static HashFunction murmur3_32(int seed)
ImmutableCollection<V> createValues()

public static HashFunction murmur3_32(int seed)
public boolean containsAll(Collection<?> targets)

public static HashFunction murmur3_32(int seed)
public boolean containsAll(Collection<?> targets)

public static HashFunction murmur3_32(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32(int seed)
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_32(int seed)
public int size()

public static HashFunction murmur3_32(int seed)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static HashFunction murmur3_32(int seed)
public Builder<K, V> put(K key, V value)

public static HashFunction murmur3_32(int seed)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static HashFunction murmur3_32(int seed)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static HashFunction murmur3_32(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32(int seed)
public boolean contains(@Nullable Object object)

public static HashFunction murmur3_32(int seed)
public boolean contains(Object object)

public static HashFunction murmur3_32(int seed)
public int size()

public static HashFunction murmur3_32(int seed)
public int size()

public static HashFunction murmur3_32(int seed)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static HashFunction murmur3_32(int seed)
public ImmutableSet<V> get(@Nullable Object key)

public static HashFunction murmur3_32(int seed)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static HashFunction murmur3_32(int seed)
public ImmutableSet<V> get(@Nullable Object key)

public static HashFunction murmur3_32(int seed)
public int size()

public static HashFunction murmur3_32(int seed)
Set<Entry<E>> createEntrySet()

public static HashFunction murmur3_32(int seed)
ImmutableSet<Entry<K, V>> createEntrySet()

public static HashFunction murmur3_32(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
boolean isPartialView()

public static HashFunction murmur3_32(int seed)
ImmutableCollection<V> createValues()

public static HashFunction murmur3_32(int seed)
public boolean containsAll(Collection<?> targets)

public static HashFunction murmur3_32(int seed)
public Iterator<E> iterator()

public static HashFunction murmur3_32(int seed)
public UnmodifiableIterator<E> iterator()

public static HashFunction murmur3_32(int seed)
public Iterator<Entry<E>> iterator()

public static HashFunction murmur3_32(int seed)
public int size()

public static HashFunction murmur3_32(int seed)
public int size()

public static HashFunction murmur3_32(int seed)
public Iterator<E> iterator()

public static HashFunction murmur3_32(int seed)
public UnmodifiableIterator<E> iterator()

public static HashFunction murmur3_32(int seed)
public Iterator<Entry<E>> iterator()

public static HashFunction murmur3_32(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
ImmutableSortedSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
public int size()

public static HashFunction murmur3_32(int seed)
public int size()

public static HashFunction murmur3_32(int seed)
public ImmutableBiMap<V, K> inverse()

public static HashFunction murmur3_32(int seed)
ImmutableSet<K> createKeySet()

public static HashFunction murmur3_32(int seed)
ImmutableSortedSet<K> createKeySet()

public static void initialize(Class<?>... classes)
public ImmutableBiMap<V, K> inverse()

public static void initialize(Class<?>... classes)
public int size()

public static void initialize(Class<?>... classes)
public ImmutableBiMap<V, K> inverse()

public static void initialize(Class<?>... classes)
public int size()

public static void initialize(Class<?>... classes)
public int size()

public static void initialize(Class<?>... classes)
public int size()

public static void initialize(Class<?>... classes)
ImmutableSet<K> createKeySet()

public static void initialize(Class<?>... classes)
ImmutableSortedSet<K> createKeySet()

public static void initialize(Class<?>... classes)
ImmutableSet<K> createKeySet()

public static void initialize(Class<?>... classes)
ImmutableSortedSet<K> createKeySet()

public static void initialize(Class<?>... classes)
public int size()

public static void initialize(Class<?>... classes)
Set<Entry<E>> createEntrySet()

public static void initialize(Class<?>... classes)
ImmutableSet<Entry<K, V>> createEntrySet()

public static void initialize(Class<?>... classes)
ImmutableCollection<V> createValues()

public static void initialize(Class<?>... classes)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static void initialize(Class<?>... classes)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static void initialize(Class<?>... classes)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static void initialize(Class<?>... classes)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static void initialize(Class<?>... classes)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static void initialize(Class<?>... classes)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static void initialize(Class<?>... classes)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static void initialize(Class<?>... classes)
public ImmutableSortedSet<K> keySet()

public static void initialize(Class<?>... classes)
public ImmutableSet<K> keySet()

public static void initialize(Class<?>... classes)
ImmutableCollection<V> createValues()

public static void initialize(Class<?>... classes)
public int size()

public static void initialize(Class<?>... classes)
public int compare(Entry<?> entry1, Entry<?> entry2)

public static void initialize(Class<?>... classes)
Set<Entry<E>> createEntrySet()

public static void initialize(Class<?>... classes)
ImmutableSet<Entry<K, V>> createEntrySet()

public static void initialize(Class<?>... classes)
ImmutableCollection<V> createValues()

public static void initialize(Class<?>... classes)
Set<Entry<E>> createEntrySet()

public static void initialize(Class<?>... classes)
ImmutableSet<Entry<K, V>> createEntrySet()

public static void initialize(Class<?>... classes)
public boolean contains(@Nullable Object object)

public static void initialize(Class<?>... classes)
public boolean contains(Object object)

public static void initialize(Class<?>... classes)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static void initialize(Class<?>... classes)
public Builder<K, V> put(K key, V value)

public static void initialize(Class<?>... classes)
ImmutableCollection<V> createValues()

public static void initialize(Class<?>... classes)
public boolean containsAll(Collection<?> targets)

public static void initialize(Class<?>... classes)
public boolean containsAll(Collection<?> targets)

public static void initialize(Class<?>... classes)
ImmutableSet<K> createKeySet()

public static void initialize(Class<?>... classes)
ImmutableSortedSet<K> createKeySet()

public static void initialize(Class<?>... classes)
Set<Entry<E>> createEntrySet()

public static void initialize(Class<?>... classes)
ImmutableSet<Entry<K, V>> createEntrySet()

public static void initialize(Class<?>... classes)
public ImmutableBiMap<V, K> inverse()

public static void initialize(Class<?>... classes)
public int size()

public static void initialize(Class<?>... classes)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static void initialize(Class<?>... classes)
public Builder<K, V> put(K key, V value)

public static void initialize(Class<?>... classes)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static void initialize(Class<?>... classes)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static void initialize(Class<?>... classes)
ImmutableSet<K> createKeySet()

public static void initialize(Class<?>... classes)
ImmutableSortedSet<K> createKeySet()

public static void initialize(Class<?>... classes)
Set<Entry<E>> createEntrySet()

public static void initialize(Class<?>... classes)
ImmutableSet<Entry<K, V>> createEntrySet()

public static void initialize(Class<?>... classes)
Set<Entry<E>> createEntrySet()

public static void initialize(Class<?>... classes)
ImmutableSet<Entry<K, V>> createEntrySet()

public static void initialize(Class<?>... classes)
ImmutableSet<K> createKeySet()

public static void initialize(Class<?>... classes)
ImmutableSortedSet<K> createKeySet()

public static void initialize(Class<?>... classes)
Set<Entry<E>> createEntrySet()

public static void initialize(Class<?>... classes)
ImmutableSet<Entry<K, V>> createEntrySet()

public static void initialize(Class<?>... classes)
public boolean contains(@Nullable Object object)

public static void initialize(Class<?>... classes)
public boolean contains(Object object)

public static void initialize(Class<?>... classes)
public int size()

public static void initialize(Class<?>... classes)
public int size()

public static void initialize(Class<?>... classes)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static void initialize(Class<?>... classes)
public ImmutableSet<V> get(@Nullable Object key)

public static void initialize(Class<?>... classes)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static void initialize(Class<?>... classes)
public ImmutableSet<V> get(@Nullable Object key)

public static void initialize(Class<?>... classes)
public int size()

public static void initialize(Class<?>... classes)
Set<Entry<E>> createEntrySet()

public static void initialize(Class<?>... classes)
ImmutableSet<Entry<K, V>> createEntrySet()

public static void initialize(Class<?>... classes)
ImmutableSet<K> createKeySet()

public static void initialize(Class<?>... classes)
ImmutableSortedSet<K> createKeySet()

public static void initialize(Class<?>... classes)
boolean isPartialView()

public static void initialize(Class<?>... classes)
ImmutableCollection<V> createValues()

public static void initialize(Class<?>... classes)
public boolean containsAll(Collection<?> targets)

public static void initialize(Class<?>... classes)
public Iterator<E> iterator()

public static void initialize(Class<?>... classes)
public UnmodifiableIterator<E> iterator()

public static void initialize(Class<?>... classes)
public Iterator<Entry<E>> iterator()

public static void initialize(Class<?>... classes)
public int size()

public static void initialize(Class<?>... classes)
public int size()

public static void initialize(Class<?>... classes)
public Iterator<E> iterator()

public static void initialize(Class<?>... classes)
public UnmodifiableIterator<E> iterator()

public static void initialize(Class<?>... classes)
public Iterator<Entry<E>> iterator()

public static void initialize(Class<?>... classes)
ImmutableSet<K> createKeySet()

public static void initialize(Class<?>... classes)
ImmutableSortedSet<K> createKeySet()

public static void initialize(Class<?>... classes)
ImmutableSet<K> createKeySet()

public static void initialize(Class<?>... classes)
ImmutableSortedSet<K> createKeySet()

public static void initialize(Class<?>... classes)
public int size()

public static void initialize(Class<?>... classes)
public int size()

public static void initialize(Class<?>... classes)
public ImmutableBiMap<V, K> inverse()

public static void initialize(Class<?>... classes)
ImmutableSet<K> createKeySet()

public static void initialize(Class<?>... classes)
ImmutableSortedSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
public ImmutableBiMap<V, K> inverse()

public String collapseFrom(CharSequence sequence, char replacement)
public int size()

public String collapseFrom(CharSequence sequence, char replacement)
public ImmutableBiMap<V, K> inverse()

public String collapseFrom(CharSequence sequence, char replacement)
public int size()

public String collapseFrom(CharSequence sequence, char replacement)
public int size()

public String collapseFrom(CharSequence sequence, char replacement)
public int size()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
public int size()

public String collapseFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableCollection<V> createValues()

public String collapseFrom(CharSequence sequence, char replacement)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String collapseFrom(CharSequence sequence, char replacement)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public String collapseFrom(CharSequence sequence, char replacement)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String collapseFrom(CharSequence sequence, char replacement)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public String collapseFrom(CharSequence sequence, char replacement)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public String collapseFrom(CharSequence sequence, char replacement)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public String collapseFrom(CharSequence sequence, char replacement)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public String collapseFrom(CharSequence sequence, char replacement)
public ImmutableSortedSet<K> keySet()

public String collapseFrom(CharSequence sequence, char replacement)
public ImmutableSet<K> keySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableCollection<V> createValues()

public String collapseFrom(CharSequence sequence, char replacement)
public int size()

public String collapseFrom(CharSequence sequence, char replacement)
public int compare(Entry<?> entry1, Entry<?> entry2)

public String collapseFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableCollection<V> createValues()

public String collapseFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
public boolean contains(@Nullable Object object)

public String collapseFrom(CharSequence sequence, char replacement)
public boolean contains(Object object)

public String collapseFrom(CharSequence sequence, char replacement)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public String collapseFrom(CharSequence sequence, char replacement)
public Builder<K, V> put(K key, V value)

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableCollection<V> createValues()

public String collapseFrom(CharSequence sequence, char replacement)
public boolean containsAll(Collection<?> targets)

public String collapseFrom(CharSequence sequence, char replacement)
public boolean containsAll(Collection<?> targets)

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
public ImmutableBiMap<V, K> inverse()

public String collapseFrom(CharSequence sequence, char replacement)
public int size()

public String collapseFrom(CharSequence sequence, char replacement)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public String collapseFrom(CharSequence sequence, char replacement)
public Builder<K, V> put(K key, V value)

public String collapseFrom(CharSequence sequence, char replacement)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public String collapseFrom(CharSequence sequence, char replacement)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
public boolean contains(@Nullable Object object)

public String collapseFrom(CharSequence sequence, char replacement)
public boolean contains(Object object)

public String collapseFrom(CharSequence sequence, char replacement)
public int size()

public String collapseFrom(CharSequence sequence, char replacement)
public int size()

public String collapseFrom(CharSequence sequence, char replacement)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public String collapseFrom(CharSequence sequence, char replacement)
public ImmutableSet<V> get(@Nullable Object key)

public String collapseFrom(CharSequence sequence, char replacement)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public String collapseFrom(CharSequence sequence, char replacement)
public ImmutableSet<V> get(@Nullable Object key)

public String collapseFrom(CharSequence sequence, char replacement)
public int size()

public String collapseFrom(CharSequence sequence, char replacement)
Set<Entry<E>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<Entry<K, V>> createEntrySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
boolean isPartialView()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableCollection<V> createValues()

public String collapseFrom(CharSequence sequence, char replacement)
public boolean containsAll(Collection<?> targets)

public String collapseFrom(CharSequence sequence, char replacement)
public Iterator<E> iterator()

public String collapseFrom(CharSequence sequence, char replacement)
public UnmodifiableIterator<E> iterator()

public String collapseFrom(CharSequence sequence, char replacement)
public Iterator<Entry<E>> iterator()

public String collapseFrom(CharSequence sequence, char replacement)
public int size()

public String collapseFrom(CharSequence sequence, char replacement)
public int size()

public String collapseFrom(CharSequence sequence, char replacement)
public Iterator<E> iterator()

public String collapseFrom(CharSequence sequence, char replacement)
public UnmodifiableIterator<E> iterator()

public String collapseFrom(CharSequence sequence, char replacement)
public Iterator<Entry<E>> iterator()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
public int size()

public String collapseFrom(CharSequence sequence, char replacement)
public int size()

public String collapseFrom(CharSequence sequence, char replacement)
public ImmutableBiMap<V, K> inverse()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSet<K> createKeySet()

public String collapseFrom(CharSequence sequence, char replacement)
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper urlFragmentEscaper()
public int size()

public static Escaper urlFragmentEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper urlFragmentEscaper()
public int size()

public static Escaper urlFragmentEscaper()
public int size()

public static Escaper urlFragmentEscaper()
public int size()

public static Escaper urlFragmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
public int size()

public static Escaper urlFragmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFragmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFragmentEscaper()
ImmutableCollection<V> createValues()

public static Escaper urlFragmentEscaper()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper urlFragmentEscaper()
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static Escaper urlFragmentEscaper()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper urlFragmentEscaper()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static Escaper urlFragmentEscaper()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static Escaper urlFragmentEscaper()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Escaper urlFragmentEscaper()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Escaper urlFragmentEscaper()
public ImmutableSortedSet<K> keySet()

public static Escaper urlFragmentEscaper()
public ImmutableSet<K> keySet()

public static Escaper urlFragmentEscaper()
ImmutableCollection<V> createValues()

public static Escaper urlFragmentEscaper()
public int size()

public static Escaper urlFragmentEscaper()
public int compare(Entry<?> entry1, Entry<?> entry2)

public static Escaper urlFragmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFragmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFragmentEscaper()
ImmutableCollection<V> createValues()

public static Escaper urlFragmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFragmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFragmentEscaper()
public boolean contains(@Nullable Object object)

public static Escaper urlFragmentEscaper()
public boolean contains(Object object)

public static Escaper urlFragmentEscaper()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Escaper urlFragmentEscaper()
public Builder<K, V> put(K key, V value)

public static Escaper urlFragmentEscaper()
ImmutableCollection<V> createValues()

public static Escaper urlFragmentEscaper()
public boolean containsAll(Collection<?> targets)

public static Escaper urlFragmentEscaper()
public boolean containsAll(Collection<?> targets)

public static Escaper urlFragmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFragmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFragmentEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper urlFragmentEscaper()
public int size()

public static Escaper urlFragmentEscaper()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Escaper urlFragmentEscaper()
public Builder<K, V> put(K key, V value)

public static Escaper urlFragmentEscaper()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static Escaper urlFragmentEscaper()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Escaper urlFragmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFragmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFragmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFragmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFragmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFragmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFragmentEscaper()
public boolean contains(@Nullable Object object)

public static Escaper urlFragmentEscaper()
public boolean contains(Object object)

public static Escaper urlFragmentEscaper()
public int size()

public static Escaper urlFragmentEscaper()
public int size()

public static Escaper urlFragmentEscaper()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Escaper urlFragmentEscaper()
public ImmutableSet<V> get(@Nullable Object key)

public static Escaper urlFragmentEscaper()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Escaper urlFragmentEscaper()
public ImmutableSet<V> get(@Nullable Object key)

public static Escaper urlFragmentEscaper()
public int size()

public static Escaper urlFragmentEscaper()
Set<Entry<E>> createEntrySet()

public static Escaper urlFragmentEscaper()
ImmutableSet<Entry<K, V>> createEntrySet()

public static Escaper urlFragmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
boolean isPartialView()

public static Escaper urlFragmentEscaper()
ImmutableCollection<V> createValues()

public static Escaper urlFragmentEscaper()
public boolean containsAll(Collection<?> targets)

public static Escaper urlFragmentEscaper()
public Iterator<E> iterator()

public static Escaper urlFragmentEscaper()
public UnmodifiableIterator<E> iterator()

public static Escaper urlFragmentEscaper()
public Iterator<Entry<E>> iterator()

public static Escaper urlFragmentEscaper()
public int size()

public static Escaper urlFragmentEscaper()
public int size()

public static Escaper urlFragmentEscaper()
public Iterator<E> iterator()

public static Escaper urlFragmentEscaper()
public UnmodifiableIterator<E> iterator()

public static Escaper urlFragmentEscaper()
public Iterator<Entry<E>> iterator()

public static Escaper urlFragmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
public int size()

public static Escaper urlFragmentEscaper()
public int size()

public static Escaper urlFragmentEscaper()
public ImmutableBiMap<V, K> inverse()

public static Escaper urlFragmentEscaper()
ImmutableSet<K> createKeySet()

public static Escaper urlFragmentEscaper()
ImmutableSortedSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
public ImmutableBiMap<V, K> inverse()

public static boolean isIsatapAddress(Inet6Address ip)
public int size()

public static boolean isIsatapAddress(Inet6Address ip)
public ImmutableBiMap<V, K> inverse()

public static boolean isIsatapAddress(Inet6Address ip)
public int size()

public static boolean isIsatapAddress(Inet6Address ip)
public int size()

public static boolean isIsatapAddress(Inet6Address ip)
public int size()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
public int size()

public static boolean isIsatapAddress(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableCollection<V> createValues()

public static boolean isIsatapAddress(Inet6Address ip)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean isIsatapAddress(Inet6Address ip)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static boolean isIsatapAddress(Inet6Address ip)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean isIsatapAddress(Inet6Address ip)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static boolean isIsatapAddress(Inet6Address ip)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static boolean isIsatapAddress(Inet6Address ip)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static boolean isIsatapAddress(Inet6Address ip)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static boolean isIsatapAddress(Inet6Address ip)
public ImmutableSortedSet<K> keySet()

public static boolean isIsatapAddress(Inet6Address ip)
public ImmutableSet<K> keySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableCollection<V> createValues()

public static boolean isIsatapAddress(Inet6Address ip)
public int size()

public static boolean isIsatapAddress(Inet6Address ip)
public int compare(Entry<?> entry1, Entry<?> entry2)

public static boolean isIsatapAddress(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableCollection<V> createValues()

public static boolean isIsatapAddress(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
public boolean contains(@Nullable Object object)

public static boolean isIsatapAddress(Inet6Address ip)
public boolean contains(Object object)

public static boolean isIsatapAddress(Inet6Address ip)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static boolean isIsatapAddress(Inet6Address ip)
public Builder<K, V> put(K key, V value)

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableCollection<V> createValues()

public static boolean isIsatapAddress(Inet6Address ip)
public boolean containsAll(Collection<?> targets)

public static boolean isIsatapAddress(Inet6Address ip)
public boolean containsAll(Collection<?> targets)

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
public ImmutableBiMap<V, K> inverse()

public static boolean isIsatapAddress(Inet6Address ip)
public int size()

public static boolean isIsatapAddress(Inet6Address ip)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static boolean isIsatapAddress(Inet6Address ip)
public Builder<K, V> put(K key, V value)

public static boolean isIsatapAddress(Inet6Address ip)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static boolean isIsatapAddress(Inet6Address ip)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
public boolean contains(@Nullable Object object)

public static boolean isIsatapAddress(Inet6Address ip)
public boolean contains(Object object)

public static boolean isIsatapAddress(Inet6Address ip)
public int size()

public static boolean isIsatapAddress(Inet6Address ip)
public int size()

public static boolean isIsatapAddress(Inet6Address ip)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static boolean isIsatapAddress(Inet6Address ip)
public ImmutableSet<V> get(@Nullable Object key)

public static boolean isIsatapAddress(Inet6Address ip)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static boolean isIsatapAddress(Inet6Address ip)
public ImmutableSet<V> get(@Nullable Object key)

public static boolean isIsatapAddress(Inet6Address ip)
public int size()

public static boolean isIsatapAddress(Inet6Address ip)
Set<Entry<E>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<Entry<K, V>> createEntrySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
boolean isPartialView()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableCollection<V> createValues()

public static boolean isIsatapAddress(Inet6Address ip)
public boolean containsAll(Collection<?> targets)

public static boolean isIsatapAddress(Inet6Address ip)
public Iterator<E> iterator()

public static boolean isIsatapAddress(Inet6Address ip)
public UnmodifiableIterator<E> iterator()

public static boolean isIsatapAddress(Inet6Address ip)
public Iterator<Entry<E>> iterator()

public static boolean isIsatapAddress(Inet6Address ip)
public int size()

public static boolean isIsatapAddress(Inet6Address ip)
public int size()

public static boolean isIsatapAddress(Inet6Address ip)
public Iterator<E> iterator()

public static boolean isIsatapAddress(Inet6Address ip)
public UnmodifiableIterator<E> iterator()

public static boolean isIsatapAddress(Inet6Address ip)
public Iterator<Entry<E>> iterator()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
public int size()

public static boolean isIsatapAddress(Inet6Address ip)
public int size()

public static boolean isIsatapAddress(Inet6Address ip)
public ImmutableBiMap<V, K> inverse()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSet<K> createKeySet()

public static boolean isIsatapAddress(Inet6Address ip)
ImmutableSortedSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
public ImmutableBiMap<V, K> inverse()

public static Integer tryParse(String string, int radix)
public int size()

public static Integer tryParse(String string, int radix)
public ImmutableBiMap<V, K> inverse()

public static Integer tryParse(String string, int radix)
public int size()

public static Integer tryParse(String string, int radix)
public int size()

public static Integer tryParse(String string, int radix)
public int size()

public static Integer tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
public int size()

public static Integer tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Integer tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Integer tryParse(String string, int radix)
ImmutableCollection<V> createValues()

public static Integer tryParse(String string, int radix)
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Integer tryParse(String string, int radix)
public static ImmutableSortedSet<E> copyOf(E[] elements)

public static Integer tryParse(String string, int radix)
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Integer tryParse(String string, int radix)
public static ImmutableGraph<N> copyOf(Graph<N> graph)

public static Integer tryParse(String string, int radix)
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

public static Integer tryParse(String string, int radix)
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

public static Integer tryParse(String string, int radix)
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Integer tryParse(String string, int radix)
public ImmutableSortedSet<K> keySet()

public static Integer tryParse(String string, int radix)
public ImmutableSet<K> keySet()

public static Integer tryParse(String string, int radix)
ImmutableCollection<V> createValues()

public static Integer tryParse(String string, int radix)
public int size()

public static Integer tryParse(String string, int radix)
public int compare(Entry<?> entry1, Entry<?> entry2)

public static Integer tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Integer tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Integer tryParse(String string, int radix)
ImmutableCollection<V> createValues()

public static Integer tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Integer tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Integer tryParse(String string, int radix)
public boolean contains(@Nullable Object object)

public static Integer tryParse(String string, int radix)
public boolean contains(Object object)

public static Integer tryParse(String string, int radix)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Integer tryParse(String string, int radix)
public Builder<K, V> put(K key, V value)

public static Integer tryParse(String string, int radix)
ImmutableCollection<V> createValues()

public static Integer tryParse(String string, int radix)
public boolean containsAll(Collection<?> targets)

public static Integer tryParse(String string, int radix)
public boolean containsAll(Collection<?> targets)

public static Integer tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Integer tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Integer tryParse(String string, int radix)
public ImmutableBiMap<V, K> inverse()

public static Integer tryParse(String string, int radix)
public int size()

public static Integer tryParse(String string, int radix)
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

public static Integer tryParse(String string, int radix)
public Builder<K, V> put(K key, V value)

public static Integer tryParse(String string, int radix)
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

public static Integer tryParse(String string, int radix)
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

public static Integer tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Integer tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Integer tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Integer tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Integer tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Integer tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Integer tryParse(String string, int radix)
public boolean contains(@Nullable Object object)

public static Integer tryParse(String string, int radix)
public boolean contains(Object object)

public static Integer tryParse(String string, int radix)
public int size()

public static Integer tryParse(String string, int radix)
public int size()

public static Integer tryParse(String string, int radix)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Integer tryParse(String string, int radix)
public ImmutableSet<V> get(@Nullable Object key)

public static Integer tryParse(String string, int radix)
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

public static Integer tryParse(String string, int radix)
public ImmutableSet<V> get(@Nullable Object key)

public static Integer tryParse(String string, int radix)
public int size()

public static Integer tryParse(String string, int radix)
Set<Entry<E>> createEntrySet()

public static Integer tryParse(String string, int radix)
ImmutableSet<Entry<K, V>> createEntrySet()

public static Integer tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
boolean isPartialView()

public static Integer tryParse(String string, int radix)
ImmutableCollection<V> createValues()

public static Integer tryParse(String string, int radix)
public boolean containsAll(Collection<?> targets)

public static Integer tryParse(String string, int radix)
public Iterator<E> iterator()

public static Integer tryParse(String string, int radix)
public UnmodifiableIterator<E> iterator()

public static Integer tryParse(String string, int radix)
public Iterator<Entry<E>> iterator()

public static Integer tryParse(String string, int radix)
public int size()

public static Integer tryParse(String string, int radix)
public int size()

public static Integer tryParse(String string, int radix)
public Iterator<E> iterator()

public static Integer tryParse(String string, int radix)
public UnmodifiableIterator<E> iterator()

public static Integer tryParse(String string, int radix)
public Iterator<Entry<E>> iterator()

public static Integer tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
public int size()

public static Integer tryParse(String string, int radix)
public int size()

public static Integer tryParse(String string, int radix)
public ImmutableBiMap<V, K> inverse()

public static Integer tryParse(String string, int radix)
ImmutableSet<K> createKeySet()

public static Integer tryParse(String string, int radix)
ImmutableSortedSet<K> createKeySet()

String toString()
public ImmutableBiMap<V, K> inverse()

String toString()
public int size()

String toString()
public ImmutableBiMap<V, K> inverse()

String toString()
public int size()

String toString()
public int size()

String toString()
public int size()

String toString()
ImmutableSet<K> createKeySet()

String toString()
ImmutableSortedSet<K> createKeySet()

String toString()
ImmutableSet<K> createKeySet()

String toString()
ImmutableSortedSet<K> createKeySet()

String toString()
public int size()

String toString()
Set<Entry<E>> createEntrySet()

String toString()
ImmutableSet<Entry<K, V>> createEntrySet()

String toString()
ImmutableCollection<V> createValues()

String toString()
public static ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)

String toString()
public static ImmutableSortedSet<E> copyOf(E[] elements)

String toString()
public static ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)

String toString()
public static ImmutableGraph<N> copyOf(Graph<N> graph)

String toString()
public static ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)

String toString()
public static ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)

String toString()
public static ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)

String toString()
public ImmutableSortedSet<K> keySet()

String toString()
public ImmutableSet<K> keySet()

String toString()
ImmutableCollection<V> createValues()

String toString()
public int size()

String toString()
public int compare(Entry<?> entry1, Entry<?> entry2)

String toString()
Set<Entry<E>> createEntrySet()

String toString()
ImmutableSet<Entry<K, V>> createEntrySet()

String toString()
ImmutableCollection<V> createValues()

String toString()
Set<Entry<E>> createEntrySet()

String toString()
ImmutableSet<Entry<K, V>> createEntrySet()

String toString()
public boolean contains(@Nullable Object object)

String toString()
public boolean contains(Object object)

String toString()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

String toString()
public Builder<K, V> put(K key, V value)

String toString()
ImmutableCollection<V> createValues()

String toString()
public boolean containsAll(Collection<?> targets)

String toString()
public boolean containsAll(Collection<?> targets)

String toString()
ImmutableSet<K> createKeySet()

String toString()
ImmutableSortedSet<K> createKeySet()

String toString()
Set<Entry<E>> createEntrySet()

String toString()
ImmutableSet<Entry<K, V>> createEntrySet()

String toString()
public ImmutableBiMap<V, K> inverse()

String toString()
public int size()

String toString()
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)

String toString()
public Builder<K, V> put(K key, V value)

String toString()
public Builder<K, V> putAll(Map<? extends K, ? extends V> map)

String toString()
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)

String toString()
ImmutableSet<K> createKeySet()

String toString()
ImmutableSortedSet<K> createKeySet()

String toString()
Set<Entry<E>> createEntrySet()

String toString()
ImmutableSet<Entry<K, V>> createEntrySet()

String toString()
Set<Entry<E>> createEntrySet()

String toString()
ImmutableSet<Entry<K, V>> createEntrySet()

String toString()
ImmutableSet<K> createKeySet()

String toString()
ImmutableSortedSet<K> createKeySet()

String toString()
Set<Entry<E>> createEntrySet()

String toString()
ImmutableSet<Entry<K, V>> createEntrySet()

String toString()
public boolean contains(@Nullable Object object)

String toString()
public boolean contains(Object object)

String toString()
public int size()

String toString()
public int size()

String toString()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

String toString()
public ImmutableSet<V> get(@Nullable Object key)

String toString()
public V get(long timeout, TimeUnit unit) throws InterruptedException, TimeoutException, ExecutionException

String toString()
public ImmutableSet<V> get(@Nullable Object key)

String toString()
public int size()

String toString()
Set<Entry<E>> createEntrySet()

String toString()
ImmutableSet<Entry<K, V>> createEntrySet()

String toString()
ImmutableSet<K> createKeySet()

String toString()
ImmutableSortedSet<K> createKeySet()

String toString()
boolean isPartialView()

String toString()
ImmutableCollection<V> createValues()

String toString()
public boolean containsAll(Collection<?> targets)

String toString()
public Iterator<E> iterator()

String toString()
public UnmodifiableIterator<E> iterator()

String toString()
public Iterator<Entry<E>> iterator()

String toString()
public int size()

String toString()
public int size()

String toString()
public Iterator<E> iterator()

String toString()
public UnmodifiableIterator<E> iterator()

String toString()
public Iterator<Entry<E>> iterator()

String toString()
ImmutableSet<K> createKeySet()

String toString()
ImmutableSortedSet<K> createKeySet()

String toString()
ImmutableSet<K> createKeySet()

String toString()
ImmutableSortedSet<K> createKeySet()

String toString()
public int size()

String toString()
public int size()

String toString()
public ImmutableBiMap<V, K> inverse()

String toString()
ImmutableSet<K> createKeySet()

String toString()
ImmutableSortedSet<K> createKeySet()

