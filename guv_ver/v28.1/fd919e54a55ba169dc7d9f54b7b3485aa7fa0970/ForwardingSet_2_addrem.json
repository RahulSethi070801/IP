{
    "addition": {
        "27": " * A set which forwards all its method calls to another set. Subclasses should override one or more\n",
        "28": " * methods to modify the behavior of the backing set as desired per the <a\n",
        "31": " * <p><b>Warning:</b> The methods of {@code ForwardingSet} forward <b>indiscriminately</b> to the\n",
        "32": " * methods of the delegate. For example, overriding {@link #add} alone <b>will not</b> change the\n",
        "33": " * behavior of {@link #addAll}, which can lead to unexpected behavior. In this case, you should\n",
        "34": " * override {@code addAll} as well, either providing your own implementation, or delegating to the\n",
        "35": " * provided {@code standardAddAll} method.\n",
        "41": " * <p>The {@code standard} methods are not guaranteed to be thread-safe, even when all of the\n",
        "42": " * methods that they depend on are thread-safe.\n",
        "69": "   * A sensible definition of {@link #removeAll} in terms of {@link #iterator} and {@link #remove}.\n",
        "70": "   * If you override {@code iterator} or {@code remove}, you may wish to override {@link #removeAll}\n",
        "71": "   * to forward to this implementation.\n",
        "81": "   * A sensible definition of {@link #equals} in terms of {@link #size} and {@link #containsAll}. If\n",
        "82": "   * you override either of those methods, you may wish to override {@link #equals} to forward to\n",
        "83": "   * this implementation.\n",
        "92": "   * A sensible definition of {@link #hashCode} in terms of {@link #iterator}. If you override\n",
        "93": "   * {@link #iterator}, you may wish to override {@link #equals} to forward to this implementation.\n"
    },
    "removed": {
        "27": " * A set which forwards all its method calls to another set. Subclasses should\n",
        "28": " * override one or more methods to modify the behavior of the backing set as\n",
        "29": " * desired per the <a\n",
        "32": " * <p><b>Warning:</b> The methods of {@code ForwardingSet} forward\n",
        "33": " * <b>indiscriminately</b> to the methods of the delegate. For example,\n",
        "34": " * overriding {@link #add} alone <b>will not</b> change the behavior of {@link\n",
        "35": " * #addAll}, which can lead to unexpected behavior. In this case, you should\n",
        "36": " * override {@code addAll} as well, either providing your own implementation, or\n",
        "37": " * delegating to the provided {@code standardAddAll} method.\n",
        "43": " * <p>The {@code standard} methods are not guaranteed to be thread-safe, even\n",
        "44": " * when all of the methods that they depend on are thread-safe.\n",
        "71": "   * A sensible definition of {@link #removeAll} in terms of {@link #iterator}\n",
        "72": "   * and {@link #remove}.  If you override {@code iterator} or {@code remove},\n",
        "73": "   * you may wish to override {@link #removeAll} to forward to this\n",
        "74": "   * implementation.\n",
        "84": "   * A sensible definition of {@link #equals} in terms of {@link #size} and\n",
        "85": "   * {@link #containsAll}. If you override either of those methods, you may wish\n",
        "86": "   * to override {@link #equals} to forward to this implementation.\n",
        "95": "   * A sensible definition of {@link #hashCode} in terms of {@link #iterator}.\n",
        "96": "   * If you override {@link #iterator}, you may wish to override {@link #equals}\n",
        "97": "   * to forward to this implementation.\n"
    }
}