{
    "addition": {
        "49": "    assertThat(set)\n",
        "50": "        .containsExactly(\n",
        "51": "            new DerivedComparable(\"bar\"),\n",
        "52": "            new DerivedComparable(\"bar\"),\n",
        "53": "            new DerivedComparable(\"bar\"),\n",
        "54": "            new DerivedComparable(\"foo\"),\n",
        "55": "            new DerivedComparable(\"foo\"))\n",
        "56": "        .inOrder();\n",
        "64": "    assertThat(set)\n",
        "65": "        .containsExactly(\n",
        "66": "            new LegacyComparable(\"bar\"),\n",
        "67": "            new LegacyComparable(\"bar\"),\n",
        "68": "            new LegacyComparable(\"bar\"),\n",
        "69": "            new LegacyComparable(\"foo\"),\n",
        "70": "            new LegacyComparable(\"foo\"))\n",
        "71": "        .inOrder();\n",
        "75": "    TreeMultiset<String> multiset = TreeMultiset.create(Collections.reverseOrder());\n",
        "83": "    Multiset<String> toRetain = HashMultiset.create(Arrays.asList(\"a\", \"b\", \"a\"));\n",
        "97": "    Multiset<String> toRemove = HashMultiset.create(Arrays.asList(\"a\", \"b\", \"a\"));\n",
        "104": "    Multiset<String> ms2 = HashMultiset.create(Arrays.asList(\"a\", \"b\", \"b\", \"c\"));\n",
        "209": "    Multiset<String> multiset = HashMultiset.create(Arrays.asList(\"a\", \"b\", \"a\"));\n",
        "216": "    Multiset<String> multiset = TreeMultiset.create(Arrays.asList(\"a\", \"b\", \"a\", \"c\"));\n",
        "217": "    Multiset<String> toRetain = HashMultiset.create(Arrays.asList(\"a\", \"b\", \"b\"));\n",
        "223": "    Multiset<String> multiset = TreeMultiset.create(Arrays.asList(\"a\", \"b\", \"a\"));\n",
        "230": "    Multiset<String> multiset = TreeMultiset.create(Arrays.asList(\"a\", \"b\", \"a\", \"c\"));\n",
        "231": "    Multiset<String> toRemove = HashMultiset.create(Arrays.asList(\"a\", \"b\", \"b\"));\n",
        "237": "    Multiset<String> multiset = TreeMultiset.create(Arrays.asList(\"a\", \"b\", \"a\"));\n",
        "244": "    Multiset<String> multiset = TreeMultiset.create(Arrays.asList(\"a\", \"b\", \"a\", \"c\"));\n",
        "262": "    Multiset<String> multiset = HashMultiset.create(Arrays.asList(\"a\", \"a\", \"a\", \"b\", \"c\", \"c\"));\n",
        "263": "    ImmutableMultiset<String> sortedMultiset = Multisets.copyHighestCountFirst(multiset);\n",
        "264": "\n",
        "265": "    assertThat(sortedMultiset.entrySet())\n",
        "266": "        .containsExactly(\n",
        "267": "            Multisets.immutableEntry(\"a\", 3),\n",
        "268": "            Multisets.immutableEntry(\"c\", 2),\n",
        "269": "            Multisets.immutableEntry(\"b\", 1))\n",
        "270": "        .inOrder();\n",
        "271": "\n",
        "272": "    assertThat(sortedMultiset).containsExactly(\"a\", \"a\", \"a\", \"c\", \"c\", \"b\").inOrder();\n"
    },
    "removed": {
        "49": "    assertThat(set).containsExactly(\n",
        "50": "        new DerivedComparable(\"bar\"), new DerivedComparable(\"bar\"), new DerivedComparable(\"bar\"),\n",
        "51": "        new DerivedComparable(\"foo\"), new DerivedComparable(\"foo\")).inOrder();\n",
        "59": "    assertThat(set).containsExactly(new LegacyComparable(\"bar\"),\n",
        "60": "        new LegacyComparable(\"bar\"), new LegacyComparable(\"bar\"),\n",
        "61": "        new LegacyComparable(\"foo\"), new LegacyComparable(\"foo\")).inOrder();\n",
        "65": "    TreeMultiset<String> multiset\n",
        "66": "        = TreeMultiset.create(Collections.reverseOrder());\n",
        "74": "    Multiset<String> toRetain =\n",
        "75": "        HashMultiset.create(Arrays.asList(\"a\", \"b\", \"a\"));\n",
        "89": "    Multiset<String> toRemove =\n",
        "90": "        HashMultiset.create(Arrays.asList(\"a\", \"b\", \"a\"));\n",
        "97": "    Multiset<String> ms2 = HashMultiset.create(\n",
        "98": "        Arrays.asList(\"a\", \"b\", \"b\", \"c\"));\n",
        "203": "    Multiset<String> multiset =\n",
        "204": "        HashMultiset.create(Arrays.asList(\"a\", \"b\", \"a\"));\n",
        "211": "    Multiset<String> multiset =\n",
        "212": "        TreeMultiset.create(Arrays.asList(\"a\", \"b\", \"a\", \"c\"));\n",
        "213": "    Multiset<String> toRetain =\n",
        "214": "        HashMultiset.create(Arrays.asList(\"a\", \"b\", \"b\"));\n",
        "220": "    Multiset<String> multiset =\n",
        "221": "        TreeMultiset.create(Arrays.asList(\"a\", \"b\", \"a\"));\n",
        "228": "    Multiset<String> multiset =\n",
        "229": "        TreeMultiset.create(Arrays.asList(\"a\", \"b\", \"a\", \"c\"));\n",
        "230": "    Multiset<String> toRemove =\n",
        "231": "        HashMultiset.create(Arrays.asList(\"a\", \"b\", \"b\"));\n",
        "237": "    Multiset<String> multiset =\n",
        "238": "        TreeMultiset.create(Arrays.asList(\"a\", \"b\", \"a\"));\n",
        "245": "    Multiset<String> multiset =\n",
        "246": "        TreeMultiset.create(Arrays.asList(\"a\", \"b\", \"a\", \"c\"));\n",
        "264": "    Multiset<String> multiset = HashMultiset.create(\n",
        "265": "        Arrays.asList(\"a\", \"a\", \"a\", \"b\", \"c\", \"c\"));\n",
        "266": "    ImmutableMultiset<String> sortedMultiset =\n",
        "267": "        Multisets.copyHighestCountFirst(multiset);\n",
        "268": "\n",
        "269": "    assertThat(sortedMultiset.entrySet()).containsExactly(\n",
        "270": "        Multisets.immutableEntry(\"a\", 3), Multisets.immutableEntry(\"c\", 2),\n",
        "271": "        Multisets.immutableEntry(\"b\", 1)).inOrder();\n",
        "272": "\n",
        "273": "    assertThat(sortedMultiset).containsExactly(\n",
        "274": "        \"a\",\n",
        "275": "        \"a\",\n",
        "276": "        \"a\",\n",
        "277": "        \"c\",\n",
        "278": "        \"c\",\n",
        "279": "        \"b\").inOrder();\n"
    }
}