{
    "addition": {
        "29": " * A multiset which forwards all its method calls to another multiset. Subclasses should override\n",
        "30": " * one or more methods to modify the behavior of the backing multiset as desired per the <a\n",
        "33": " * <p><b>Warning:</b> The methods of {@code ForwardingMultiset} forward <b>indiscriminately</b> to\n",
        "34": " * the methods of the delegate. For example, overriding {@link #add(Object, int)} alone <b>will\n",
        "35": " * not</b> change the behavior of {@link #add(Object)}, which can lead to unexpected behavior. In\n",
        "36": " * this case, you should override {@code add(Object)} as well, either providing your own\n",
        "37": " * implementation, or delegating to the provided {@code standardAdd} method.\n",
        "43": " * <p>The {@code standard} methods and any collection views they return are not guaranteed to be\n",
        "44": " * thread-safe, even when all of the methods that they depend on are thread-safe.\n",
        "109": "   * A sensible definition of {@link #contains} in terms of {@link #count}. If you override {@link\n",
        "110": "   * #count}, you may wish to override {@link #contains} to forward to this implementation.\n",
        "120": "   * A sensible definition of {@link #clear} in terms of the {@code iterator} method of {@link\n",
        "121": "   * #entrySet}. If you override {@link #entrySet}, you may wish to override {@link #clear} to\n",
        "122": "   * forward to this implementation.\n",
        "132": "   * A sensible, albeit inefficient, definition of {@link #count} in terms of {@link #entrySet}. If\n",
        "133": "   * you override {@link #entrySet}, you may wish to override {@link #count} to forward to this\n",
        "134": "   * implementation.\n",
        "149": "   * A sensible definition of {@link #add(Object)} in terms of {@link #add(Object, int)}. If you\n",
        "150": "   * override {@link #add(Object, int)}, you may wish to override {@link #add(Object)} to forward to\n",
        "151": "   * this implementation.\n",
        "161": "   * A sensible definition of {@link #addAll(Collection)} in terms of {@link #add(Object)} and\n",
        "162": "   * {@link #add(Object, int)}. If you override either of these methods, you may wish to override\n",
        "163": "   * {@link #addAll(Collection)} to forward to this implementation.\n",
        "174": "   * A sensible definition of {@link #remove(Object)} in terms of {@link #remove(Object, int)}. If\n",
        "175": "   * you override {@link #remove(Object, int)}, you may wish to override {@link #remove(Object)} to\n",
        "176": "   * forward to this implementation.\n",
        "186": "   * A sensible definition of {@link #removeAll} in terms of the {@code removeAll} method of {@link\n",
        "187": "   * #elementSet}. If you override {@link #elementSet}, you may wish to override {@link #removeAll}\n",
        "188": "   * to forward to this implementation.\n",
        "198": "   * A sensible definition of {@link #retainAll} in terms of the {@code retainAll} method of {@link\n",
        "199": "   * #elementSet}. If you override {@link #elementSet}, you may wish to override {@link #retainAll}\n",
        "200": "   * to forward to this implementation.\n",
        "210": "   * A sensible definition of {@link #setCount(Object, int)} in terms of {@link #count(Object)},\n",
        "211": "   * {@link #add(Object, int)}, and {@link #remove(Object, int)}. {@link #entrySet()}. If you\n",
        "212": "   * override any of these methods, you may wish to override {@link #setCount(Object, int)} to\n",
        "213": "   * forward to this implementation.\n",
        "222": "   * A sensible definition of {@link #setCount(Object, int, int)} in terms of {@link #count(Object)}\n",
        "223": "   * and {@link #setCount(Object, int)}. If you override either of these methods, you may wish to\n",
        "224": "   * override {@link #setCount(Object, int, int)} to forward to this implementation.\n",
        "233": "   * A sensible implementation of {@link Multiset#elementSet} in terms of the following methods:\n",
        "234": "   * {@link ForwardingMultiset#clear}, {@link ForwardingMultiset#contains}, {@link\n",
        "235": "   * ForwardingMultiset#containsAll}, {@link ForwardingMultiset#count}, {@link\n",
        "236": "   * ForwardingMultiset#isEmpty}, the {@link Set#size} and {@link Set#iterator} methods of {@link\n",
        "237": "   * ForwardingMultiset#entrySet}, and {@link ForwardingMultiset#remove(Object, int)}. In many\n",
        "238": "   * situations, you may wish to override {@link ForwardingMultiset#elementSet} to forward to this\n",
        "239": "   * implementation or a subclass thereof.\n",
        "255": "   * A sensible definition of {@link #iterator} in terms of {@link #entrySet} and {@link\n",
        "256": "   * #remove(Object)}. If you override either of these methods, you may wish to override {@link\n",
        "257": "   * #iterator} to forward to this implementation.\n",
        "266": "   * A sensible, albeit inefficient, definition of {@link #size} in terms of {@link #entrySet}. If\n",
        "267": "   * you override {@link #entrySet}, you may wish to override {@link #size} to forward to this\n",
        "268": "   * implementation.\n",
        "277": "   * A sensible, albeit inefficient, definition of {@link #equals} in terms of {@code\n",
        "278": "   * entrySet().size()} and {@link #count}. If you override either of these methods, you may wish to\n",
        "279": "   * override {@link #equals} to forward to this implementation.\n",
        "288": "   * A sensible definition of {@link #hashCode} as {@code entrySet().hashCode()} . If you override\n",
        "289": "   * {@link #entrySet}, you may wish to override {@link #hashCode} to forward to this\n",
        "290": "   * implementation.\n",
        "299": "   * A sensible definition of {@link #toString} as {@code entrySet().toString()} . If you override\n",
        "300": "   * {@link #entrySet}, you may wish to override {@link #toString} to forward to this\n",
        "301": "   * implementation.\n"
    },
    "removed": {
        "29": " * A multiset which forwards all its method calls to another multiset.\n",
        "30": " * Subclasses should override one or more methods to modify the behavior of the\n",
        "31": " * backing multiset as desired per the <a\n",
        "34": " * <p><b>Warning:</b> The methods of {@code ForwardingMultiset} forward\n",
        "35": " * <b>indiscriminately</b> to the methods of the delegate. For example,\n",
        "36": " * overriding {@link #add(Object, int)} alone <b>will not</b> change the\n",
        "37": " * behavior of {@link #add(Object)}, which can lead to unexpected behavior. In\n",
        "38": " * this case, you should override {@code add(Object)} as well, either providing\n",
        "39": " * your own implementation, or delegating to the provided {@code standardAdd}\n",
        "40": " * method.\n",
        "46": " * <p>The {@code standard} methods and any collection views they return are not\n",
        "47": " * guaranteed to be thread-safe, even when all of the methods that they depend\n",
        "48": " * on are thread-safe.\n",
        "113": "   * A sensible definition of {@link #contains} in terms of {@link #count}. If\n",
        "114": "   * you override {@link #count}, you may wish to override {@link #contains} to\n",
        "115": "   * forward to this implementation.\n",
        "125": "   * A sensible definition of {@link #clear} in terms of the {@code iterator}\n",
        "126": "   * method of {@link #entrySet}. If you override {@link #entrySet}, you may\n",
        "127": "   * wish to override {@link #clear} to forward to this implementation.\n",
        "137": "   * A sensible, albeit inefficient, definition of {@link #count} in terms of\n",
        "138": "   * {@link #entrySet}. If you override {@link #entrySet}, you may wish to\n",
        "139": "   * override {@link #count} to forward to this implementation.\n",
        "154": "   * A sensible definition of {@link #add(Object)} in terms of {@link\n",
        "155": "   * #add(Object, int)}. If you override {@link #add(Object, int)}, you may\n",
        "156": "   * wish to override {@link #add(Object)} to forward to this implementation.\n",
        "166": "   * A sensible definition of {@link #addAll(Collection)} in terms of {@link\n",
        "167": "   * #add(Object)} and {@link #add(Object, int)}. If you override either of\n",
        "168": "   * these methods, you may wish to override {@link #addAll(Collection)} to\n",
        "169": "   * forward to this implementation.\n",
        "180": "   * A sensible definition of {@link #remove(Object)} in terms of {@link\n",
        "181": "   * #remove(Object, int)}. If you override {@link #remove(Object, int)}, you\n",
        "182": "   * may wish to override {@link #remove(Object)} to forward to this\n",
        "183": "   * implementation.\n",
        "193": "   * A sensible definition of {@link #removeAll} in terms of the {@code\n",
        "194": "   * removeAll} method of {@link #elementSet}. If you override {@link\n",
        "195": "   * #elementSet}, you may wish to override {@link #removeAll} to forward to\n",
        "196": "   * this implementation.\n",
        "206": "   * A sensible definition of {@link #retainAll} in terms of the {@code\n",
        "207": "   * retainAll} method of {@link #elementSet}. If you override {@link\n",
        "208": "   * #elementSet}, you may wish to override {@link #retainAll} to forward to\n",
        "209": "   * this implementation.\n",
        "219": "   * A sensible definition of {@link #setCount(Object, int)} in terms of {@link\n",
        "220": "   * #count(Object)}, {@link #add(Object, int)}, and {@link #remove(Object,\n",
        "221": "   * int)}. {@link #entrySet()}. If you override any of these methods, you may\n",
        "222": "   * wish to override {@link #setCount(Object, int)} to forward to this\n",
        "223": "   * implementation.\n",
        "232": "   * A sensible definition of {@link #setCount(Object, int, int)} in terms of\n",
        "233": "   * {@link #count(Object)} and {@link #setCount(Object, int)}. If you override\n",
        "234": "   * either of these methods, you may wish to override {@link #setCount(Object,\n",
        "235": "   * int, int)} to forward to this implementation.\n",
        "244": "   * A sensible implementation of {@link Multiset#elementSet} in terms of the\n",
        "245": "   * following methods: {@link ForwardingMultiset#clear}, {@link\n",
        "246": "   * ForwardingMultiset#contains}, {@link ForwardingMultiset#containsAll},\n",
        "247": "   * {@link ForwardingMultiset#count}, {@link ForwardingMultiset#isEmpty}, the\n",
        "248": "   * {@link Set#size} and {@link Set#iterator} methods of {@link\n",
        "249": "   * ForwardingMultiset#entrySet}, and {@link ForwardingMultiset#remove(Object,\n",
        "250": "   * int)}.  In many situations, you may wish to override {@link\n",
        "251": "   * ForwardingMultiset#elementSet} to forward to this implementation or a\n",
        "252": "   * subclass thereof.\n",
        "268": "   * A sensible definition of {@link #iterator} in terms of {@link #entrySet}\n",
        "269": "   * and {@link #remove(Object)}. If you override either of these methods, you\n",
        "270": "   * may wish to override {@link #iterator} to forward to this implementation.\n",
        "279": "   * A sensible, albeit inefficient, definition of {@link #size} in terms of\n",
        "280": "   * {@link #entrySet}. If you override {@link #entrySet}, you may wish to\n",
        "281": "   * override {@link #size} to forward to this implementation.\n",
        "290": "   * A sensible, albeit inefficient, definition of {@link #equals} in terms of\n",
        "291": "   * {@code entrySet().size()} and {@link #count}. If you override either of\n",
        "292": "   * these methods, you may wish to override {@link #equals} to forward to this\n",
        "293": "   * implementation.\n",
        "302": "   * A sensible definition of {@link #hashCode} as {@code entrySet().hashCode()}\n",
        "303": "   * . If you override {@link #entrySet}, you may wish to override {@link\n",
        "304": "   * #hashCode} to forward to this implementation.\n",
        "313": "   * A sensible definition of {@link #toString} as {@code entrySet().toString()}\n",
        "314": "   * . If you override {@link #entrySet}, you may wish to override {@link\n",
        "315": "   * #toString} to forward to this implementation.\n"
    }
}