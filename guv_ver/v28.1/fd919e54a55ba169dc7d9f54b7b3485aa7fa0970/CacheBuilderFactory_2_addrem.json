{
    "addition": {
        "92": "    Iterable<List<Object>> combinations =\n",
        "93": "        buildCartesianProduct(\n",
        "94": "            concurrencyLevels,\n",
        "95": "            initialCapacities,\n",
        "96": "            maximumSizes,\n",
        "97": "            expireAfterWrites,\n",
        "98": "            expireAfterAccesses,\n",
        "99": "            refreshes,\n",
        "100": "            keyStrengths,\n",
        "101": "            valueStrengths);\n",
        "102": "    return Iterables.transform(\n",
        "103": "        combinations,\n",
        "105": "          @Override\n",
        "106": "          public CacheBuilder<Object, Object> apply(List<Object> combination) {\n",
        "122": "        @Override\n",
        "123": "        public Optional<?> apply(@Nullable Object obj) {\n",
        "130": "        @Override\n",
        "131": "        public Object apply(Optional<?> optional) {\n",
        "137": "   * Sets.cartesianProduct doesn't allow sets that contain null, but we want null to mean \"don't\n",
        "138": "   * call the associated CacheBuilder method\" - that is, get the default CacheBuilder behavior. This\n",
        "139": "   * method wraps the elements in the input sets (which may contain null) as Optionals, calls\n",
        "140": "   * Sets.cartesianProduct with those, then transforms the result to unwrap the Optionals.\n",
        "150": "    return Iterables.transform(\n",
        "151": "        cartesianProduct,\n",
        "153": "          @Override\n",
        "154": "          public List<Object> apply(List<Optional<?>> objs) {\n",
        "161": "      Integer concurrencyLevel,\n",
        "162": "      Integer initialCapacity,\n",
        "163": "      Integer maximumSize,\n",
        "164": "      DurationSpec expireAfterWrite,\n",
        "165": "      DurationSpec expireAfterAccess,\n",
        "166": "      DurationSpec refresh,\n",
        "167": "      Strength keyStrength,\n",
        "168": "      Strength valueStrength) {\n"
    },
    "removed": {
        "92": "    Iterable<List<Object>> combinations = buildCartesianProduct(concurrencyLevels,\n",
        "93": "        initialCapacities, maximumSizes, expireAfterWrites, expireAfterAccesses, refreshes,\n",
        "94": "        keyStrengths, valueStrengths);\n",
        "95": "    return Iterables.transform(combinations,\n",
        "97": "          @Override public CacheBuilder<Object, Object> apply(List<Object> combination) {\n",
        "113": "        @Override public Optional<?> apply(@Nullable Object obj) {\n",
        "120": "        @Override public Object apply(Optional<?> optional) {\n",
        "126": "   * Sets.cartesianProduct doesn't allow sets that contain null, but we want null to mean\n",
        "127": "   * \"don't call the associated CacheBuilder method\" - that is, get the default CacheBuilder\n",
        "128": "   * behavior. This method wraps the elements in the input sets (which may contain null) as\n",
        "129": "   * Optionals, calls Sets.cartesianProduct with those, then transforms the result to unwrap\n",
        "130": "   * the Optionals.\n",
        "140": "    return Iterables.transform(cartesianProduct,\n",
        "142": "          @Override public List<Object> apply(List<Optional<?>> objs) {\n",
        "149": "      Integer concurrencyLevel, Integer initialCapacity, Integer maximumSize,\n",
        "150": "      DurationSpec expireAfterWrite, DurationSpec expireAfterAccess, DurationSpec refresh,\n",
        "151": "      Strength keyStrength, Strength valueStrength) {\n"
    }
}