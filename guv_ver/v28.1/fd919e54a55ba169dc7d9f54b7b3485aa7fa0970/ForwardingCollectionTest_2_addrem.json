{
    "addition": {
        "41": "  static final class StandardImplForwardingCollection<T> extends ForwardingCollection<T> {\n",
        "48": "    @Override\n",
        "49": "    protected Collection<T> delegate() {\n",
        "53": "    @Override\n",
        "54": "    public boolean addAll(Collection<? extends T> collection) {\n",
        "58": "    @Override\n",
        "59": "    public void clear() {\n",
        "63": "    @Override\n",
        "64": "    public boolean contains(Object object) {\n",
        "68": "    @Override\n",
        "69": "    public boolean containsAll(Collection<?> collection) {\n",
        "73": "    @Override\n",
        "74": "    public boolean remove(Object object) {\n",
        "78": "    @Override\n",
        "79": "    public boolean removeAll(Collection<?> collection) {\n",
        "83": "    @Override\n",
        "84": "    public boolean retainAll(Collection<?> collection) {\n",
        "88": "    @Override\n",
        "89": "    public Object[] toArray() {\n",
        "93": "    @Override\n",
        "94": "    public <T> T[] toArray(T[] array) {\n",
        "98": "    @Override\n",
        "99": "    public String toString() {\n",
        "141": "        .testForwarding(\n",
        "142": "            Collection.class,\n",
        "143": "            new Function<Collection, Collection>() {\n",
        "144": "              @Override\n",
        "145": "              public Collection apply(Collection delegate) {\n",
        "146": "                return wrap(delegate);\n",
        "147": "              }\n",
        "148": "            });\n",
        "153": "      @Override\n",
        "154": "      protected Collection<T> delegate() {\n"
    },
    "removed": {
        "41": "  static final class StandardImplForwardingCollection<T>\n",
        "42": "      extends ForwardingCollection<T> {\n",
        "49": "    @Override protected Collection<T> delegate() {\n",
        "53": "    @Override public boolean addAll(Collection<? extends T> collection) {\n",
        "57": "    @Override public void clear() {\n",
        "61": "    @Override public boolean contains(Object object) {\n",
        "65": "    @Override public boolean containsAll(Collection<?> collection) {\n",
        "69": "    @Override public boolean remove(Object object) {\n",
        "73": "    @Override public boolean removeAll(Collection<?> collection) {\n",
        "77": "    @Override public boolean retainAll(Collection<?> collection) {\n",
        "81": "    @Override public Object[] toArray() {\n",
        "85": "    @Override public <T> T[] toArray(T[] array) {\n",
        "89": "    @Override public String toString() {\n",
        "131": "        .testForwarding(Collection.class, new Function<Collection, Collection>() {\n",
        "132": "          @Override public Collection apply(Collection delegate) {\n",
        "133": "            return wrap(delegate);\n",
        "134": "          }\n",
        "135": "        });\n",
        "140": "      @Override protected Collection<T> delegate() {\n"
    }
}