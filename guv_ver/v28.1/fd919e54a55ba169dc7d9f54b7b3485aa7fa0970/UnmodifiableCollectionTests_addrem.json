{
    "addition": {
        "40": " * A series of tests that support asserting that collections cannot be modified, either through\n",
        "41": " * direct or indirect means.\n",
        "100": "   *\n",
        "102": "   *   <li>All its mutation methods result in UnsupportedOperationException, and do not change the\n",
        "103": "   *       underlying contents.\n",
        "104": "   *   <li>All methods that return objects that can indirectly mutate the collection throw\n",
        "105": "   *       UnsupportedOperationException when those mutators are called.\n",
        "109": "   * @param sampleElement an element of the same type as that contained by {@code collection}.\n",
        "110": "   *     {@code collection} may or may not have {@code sampleElement} as a member.\n",
        "172": "   *\n",
        "174": "   *   <li>All its mutation methods result in UnsupportedOperationException, and do not change the\n",
        "175": "   *       underlying contents.\n",
        "176": "   *   <li>All methods that return objects that can indirectly mutate the set throw\n",
        "177": "   *       UnsupportedOperationException when those mutators are called.\n",
        "181": "   * @param sampleElement an element of the same type as that contained by {@code set}. {@code set}\n",
        "182": "   *     may or may not have {@code sampleElement} as a member.\n",
        "192": "   *\n",
        "194": "   *   <li>All its mutation methods result in UnsupportedOperationException, and do not change the\n",
        "195": "   *       underlying contents.\n",
        "196": "   *   <li>All methods that return objects that can indirectly mutate the multiset throw\n",
        "197": "   *       UnsupportedOperationException when those mutators are called.\n",
        "201": "   * @param sampleElement an element of the same type as that contained by {@code multiset}. {@code\n",
        "202": "   *     multiset} may or may not have {@code sampleElement} as a member.\n",
        "252": "   *\n",
        "254": "   *   <li>All its mutation methods result in UnsupportedOperationException, and do not change the\n",
        "255": "   *       underlying contents.\n",
        "256": "   *   <li>All methods that return objects that can indirectly mutate the multimap throw\n",
        "257": "   *       UnsupportedOperationException when those mutators\n",
        "261": "   * @param sampleKey a key of the same type as that contained by {@code multimap}. {@code multimap}\n",
        "262": "   *     may or may not have {@code sampleKey} as a key.\n",
        "263": "   * @param sampleValue a key of the same type as that contained by {@code multimap}. {@code\n",
        "264": "   *     multimap} may or may not have {@code sampleValue} as a key.\n"
    },
    "removed": {
        "40": " * A series of tests that support asserting that collections cannot be\n",
        "41": " * modified, either through direct or indirect means.\n",
        "101": "   * <li>All its mutation methods result in UnsupportedOperationException, and\n",
        "102": "   * do not change the underlying contents.\n",
        "103": "   * <li>All methods that return objects that can indirectly mutate the\n",
        "104": "   * collection throw UnsupportedOperationException when those mutators\n",
        "105": "   * are called.\n",
        "109": "   * @param sampleElement an element of the same type as that contained by\n",
        "110": "   * {@code collection}. {@code collection} may or may not have {@code\n",
        "111": "   * sampleElement} as a member.\n",
        "174": "   * <li>All its mutation methods result in UnsupportedOperationException, and\n",
        "175": "   * do not change the underlying contents.\n",
        "176": "   * <li>All methods that return objects that can indirectly mutate the\n",
        "177": "   * set throw UnsupportedOperationException when those mutators\n",
        "178": "   * are called.\n",
        "182": "   * @param sampleElement an element of the same type as that contained by\n",
        "183": "   * {@code set}. {@code set} may or may not have {@code sampleElement} as a\n",
        "184": "   * member.\n",
        "195": "   * <li>All its mutation methods result in UnsupportedOperationException, and\n",
        "196": "   * do not change the underlying contents.\n",
        "197": "   * <li>All methods that return objects that can indirectly mutate the\n",
        "198": "   * multiset throw UnsupportedOperationException when those mutators\n",
        "199": "   * are called.\n",
        "203": "   * @param sampleElement an element of the same type as that contained by\n",
        "204": "   * {@code multiset}. {@code multiset} may or may not have {@code\n",
        "205": "   * sampleElement} as a member.\n",
        "256": "   * <li>All its mutation methods result in UnsupportedOperationException, and\n",
        "257": "   * do not change the underlying contents.\n",
        "258": "   * <li>All methods that return objects that can indirectly mutate the\n",
        "259": "   * multimap throw UnsupportedOperationException when those mutators\n",
        "263": "   * @param sampleKey a key of the same type as that contained by\n",
        "264": "   * {@code multimap}. {@code multimap} may or may not have {@code sampleKey} as\n",
        "265": "   * a key.\n",
        "266": "   * @param sampleValue a key of the same type as that contained by\n",
        "267": "   * {@code multimap}. {@code multimap} may or may not have {@code sampleValue}\n",
        "268": "   * as a key.\n"
    }
}