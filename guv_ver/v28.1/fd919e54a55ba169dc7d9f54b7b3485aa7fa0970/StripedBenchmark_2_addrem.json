{
    "addition": {
        "37": "/** A benchmark comparing the various striped implementations. */\n",
        "40": "  private static final Supplier<Lock> LOCK_SUPPLIER =\n",
        "41": "      new Supplier<Lock>() {\n",
        "42": "        @Override\n",
        "43": "        public Lock get() {\n",
        "44": "          return new ReentrantLock();\n",
        "45": "        }\n",
        "46": "      };\n",
        "47": "\n",
        "48": "  @Param({\"2\", \"8\", \"64\", \"1024\", \"65536\"})\n",
        "49": "  int numStripes;\n",
        "55": "      @Override\n",
        "56": "      Striped<Lock> get(int stripes) {\n",
        "61": "      @Override\n",
        "62": "      Striped<Lock> get(int stripes) {\n",
        "67": "      @Override\n",
        "68": "      Striped<Lock> get(int stripes) {\n",
        "80": "  @BeforeExperiment\n",
        "81": "  void setUp() {\n",
        "94": "  @Footprint\n",
        "95": "  Object sizeOfStriped() {\n",
        "102": "  @Footprint\n",
        "103": "  Object sizeOfPopulatedStriped() {\n",
        "112": "  @Benchmark\n",
        "113": "  long timeConstruct(long reps) {\n",
        "123": "  @Benchmark\n",
        "124": "  long timeGetAt(long reps) {\n",
        "135": "  @Benchmark\n",
        "136": "  long timeBulkGet(long reps) {\n"
    },
    "removed": {
        "37": "/**\n",
        "38": " * A benchmark comparing the various striped implementations.\n",
        "39": " */\n",
        "42": "  private static final Supplier<Lock> LOCK_SUPPLIER = new Supplier<Lock>() {\n",
        "43": "    @Override public Lock get() {\n",
        "44": "      return new ReentrantLock();\n",
        "45": "    }\n",
        "46": "  };\n",
        "48": "  @Param({\"2\", \"8\", \"64\", \"1024\", \"65536\"}) int numStripes;\n",
        "53": "      @Override Striped<Lock> get(int stripes) {\n",
        "58": "      @Override Striped<Lock> get(int stripes) {\n",
        "63": "      @Override Striped<Lock> get(int stripes) {\n",
        "75": "  @BeforeExperiment void setUp() {\n",
        "88": "  @Footprint Object sizeOfStriped() {\n",
        "95": "  @Footprint Object sizeOfPopulatedStriped() {\n",
        "104": "  @Benchmark long timeConstruct(long reps) {\n",
        "114": "  @Benchmark long timeGetAt(long reps) {\n",
        "125": "  @Benchmark long timeBulkGet(long reps) {\n"
    }
}