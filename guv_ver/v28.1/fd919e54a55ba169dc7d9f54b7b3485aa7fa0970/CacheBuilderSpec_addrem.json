{
    "addition": {
        "40": " *\n",
        "42": " *   <li>{@code concurrencyLevel=[integer]}: sets {@link CacheBuilder#concurrencyLevel}.\n",
        "43": " *   <li>{@code initialCapacity=[integer]}: sets {@link CacheBuilder#initialCapacity}.\n",
        "44": " *   <li>{@code maximumSize=[long]}: sets {@link CacheBuilder#maximumSize}.\n",
        "45": " *   <li>{@code maximumWeight=[long]}: sets {@link CacheBuilder#maximumWeight}.\n",
        "46": " *   <li>{@code expireAfterAccess=[duration]}: sets {@link CacheBuilder#expireAfterAccess}.\n",
        "47": " *   <li>{@code expireAfterWrite=[duration]}: sets {@link CacheBuilder#expireAfterWrite}.\n",
        "48": " *   <li>{@code refreshAfterWrite=[duration]}: sets {@link CacheBuilder#refreshAfterWrite}.\n",
        "49": " *   <li>{@code weakKeys}: sets {@link CacheBuilder#weakKeys}.\n",
        "50": " *   <li>{@code softValues}: sets {@link CacheBuilder#softValues}.\n",
        "51": " *   <li>{@code weakValues}: sets {@link CacheBuilder#weakValues}.\n",
        "52": " *   <li>{@code recordStats}: sets {@link CacheBuilder#recordStats}.\n",
        "64": " *\n",
        "66": " *   <li>{@code maximumSize} and {@code maximumWeight}\n",
        "67": " *   <li>{@code softValues} and {@code weakValues}\n",
        "73": " * <p>A new {@code CacheBuilder} can be instantiated from a {@code CacheBuilderSpec} using {@link\n",
        "74": " * CacheBuilder#from(CacheBuilderSpec)} or {@link CacheBuilder#from(String)}.\n",
        "158": "  /** Returns a CacheBuilderSpec that will prevent caching. */\n",
        "164": "  /** Returns a CacheBuilder configured according to this instance's specification. */\n"
    },
    "removed": {
        "41": " * <li>{@code concurrencyLevel=[integer]}: sets {@link CacheBuilder#concurrencyLevel}.\n",
        "42": " * <li>{@code initialCapacity=[integer]}: sets {@link CacheBuilder#initialCapacity}.\n",
        "43": " * <li>{@code maximumSize=[long]}: sets {@link CacheBuilder#maximumSize}.\n",
        "44": " * <li>{@code maximumWeight=[long]}: sets {@link CacheBuilder#maximumWeight}.\n",
        "45": " * <li>{@code expireAfterAccess=[duration]}: sets {@link CacheBuilder#expireAfterAccess}.\n",
        "46": " * <li>{@code expireAfterWrite=[duration]}: sets {@link CacheBuilder#expireAfterWrite}.\n",
        "47": " * <li>{@code refreshAfterWrite=[duration]}: sets {@link CacheBuilder#refreshAfterWrite}.\n",
        "48": " * <li>{@code weakKeys}: sets {@link CacheBuilder#weakKeys}.\n",
        "49": " * <li>{@code softValues}: sets {@link CacheBuilder#softValues}.\n",
        "50": " * <li>{@code weakValues}: sets {@link CacheBuilder#weakValues}.\n",
        "51": " * <li>{@code recordStats}: sets {@link CacheBuilder#recordStats}.\n",
        "64": " * <li>{@code maximumSize} and {@code maximumWeight}\n",
        "65": " * <li>{@code softValues} and {@code weakValues}\n",
        "71": " * <p>A new {@code CacheBuilder} can be instantiated from a {@code CacheBuilderSpec} using\n",
        "72": " * {@link CacheBuilder#from(CacheBuilderSpec)} or {@link CacheBuilder#from(String)}.\n",
        "156": "  /**\n",
        "157": "   * Returns a CacheBuilderSpec that will prevent caching.\n",
        "158": "   */\n",
        "164": "  /**\n",
        "165": "   * Returns a CacheBuilder configured according to this instance's specification.\n",
        "166": "   */\n"
    }
}