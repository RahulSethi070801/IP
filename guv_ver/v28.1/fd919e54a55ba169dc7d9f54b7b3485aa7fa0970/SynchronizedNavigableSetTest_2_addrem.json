{
    "addition": {
        "52": "  static class TestSet<E> extends SynchronizedSetTest.TestSet<E> implements NavigableSet<E> {\n",
        "58": "    @Override\n",
        "59": "    protected NavigableSet<E> delegate() {\n",
        "63": "    @Override\n",
        "64": "    public E ceiling(E e) {\n",
        "69": "    @Override\n",
        "70": "    public Iterator<E> descendingIterator() {\n",
        "74": "    @Override\n",
        "75": "    public NavigableSet<E> descendingSet() {\n",
        "80": "    @Override\n",
        "81": "    public E floor(E e) {\n",
        "86": "    @Override\n",
        "87": "    public NavigableSet<E> headSet(E toElement, boolean inclusive) {\n",
        "92": "    @Override\n",
        "93": "    public SortedSet<E> headSet(E toElement) {\n",
        "97": "    @Override\n",
        "98": "    public E higher(E e) {\n",
        "103": "    @Override\n",
        "104": "    public E lower(E e) {\n",
        "108": "    @Override\n",
        "109": "    public E pollFirst() {\n",
        "114": "    @Override\n",
        "115": "    public E pollLast() {\n",
        "120": "    @Override\n",
        "121": "    public NavigableSet<E> subSet(\n",
        "122": "        E fromElement, boolean fromInclusive, E toElement, boolean toInclusive) {\n",
        "124": "      return delegate().subSet(fromElement, fromInclusive, toElement, toInclusive);\n",
        "127": "    @Override\n",
        "128": "    public SortedSet<E> subSet(E fromElement, E toElement) {\n",
        "132": "    @Override\n",
        "133": "    public NavigableSet<E> tailSet(E fromElement, boolean inclusive) {\n",
        "138": "    @Override\n",
        "139": "    public SortedSet<E> tailSet(E fromElement) {\n",
        "143": "    @Override\n",
        "144": "    public Comparator<? super E> comparator() {\n",
        "149": "    @Override\n",
        "150": "    public E first() {\n",
        "155": "    @Override\n",
        "156": "    public E last() {\n"
    },
    "removed": {
        "52": "  static class TestSet<E> extends SynchronizedSetTest.TestSet<E>\n",
        "53": "      implements NavigableSet<E> {\n",
        "59": "    @Override protected NavigableSet<E> delegate() {\n",
        "63": "    @Override public E ceiling(E e) {\n",
        "68": "    @Override public Iterator<E> descendingIterator() {\n",
        "72": "    @Override public NavigableSet<E> descendingSet() {\n",
        "77": "    @Override public E floor(E e) {\n",
        "82": "    @Override public NavigableSet<E> headSet(E toElement, boolean inclusive) {\n",
        "87": "    @Override public SortedSet<E> headSet(E toElement) {\n",
        "91": "    @Override public E higher(E e) {\n",
        "96": "    @Override public E lower(E e) {\n",
        "100": "    @Override public E pollFirst() {\n",
        "105": "    @Override public E pollLast() {\n",
        "110": "    @Override public NavigableSet<E> subSet(E fromElement,\n",
        "111": "        boolean fromInclusive, E toElement, boolean toInclusive) {\n",
        "113": "      return delegate().subSet(\n",
        "114": "          fromElement, fromInclusive, toElement, toInclusive);\n",
        "117": "    @Override public SortedSet<E> subSet(E fromElement, E toElement) {\n",
        "121": "    @Override public NavigableSet<E> tailSet(E fromElement, boolean inclusive) {\n",
        "126": "    @Override public SortedSet<E> tailSet(E fromElement) {\n",
        "130": "    @Override public Comparator<? super E> comparator() {\n",
        "135": "    @Override public E first() {\n",
        "140": "    @Override public E last() {\n"
    }
}