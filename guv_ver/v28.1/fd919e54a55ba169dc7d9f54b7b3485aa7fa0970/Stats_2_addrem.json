{
    "addition": {
        "44": " *   <li>If all the values you want to summarize are already known, use the appropriate {@code\n",
        "45": " *       Stats.of} factory method below. Primitive arrays, iterables and iterators of any kind of\n",
        "46": " *       {@code Number}, and primitive varargs are supported.\n",
        "47": " *   <li>Or, to avoid storing up all the data first, create a {@link StatsAccumulator} instance,\n",
        "48": " *       feed values to it as you get them, then call {@link StatsAccumulator#snapshot}.\n",
        "76": "   *\n",
        "78": "   *   <li>If {@code count} is 0, {@code mean} may have any finite value (its only usage will be to\n",
        "79": "   *       get multiplied by 0 to calculate the sum), and the other parameters may have any values\n",
        "80": "   *       (they will not be used).\n",
        "81": "   *   <li>If {@code count} is 1, {@code sumOfSquaresOfDeltas} must be exactly 0.0 or {@link\n",
        "82": "   *       Double#NaN}.\n",
        "151": "  /** Returns the number of values. */\n",
        "169": "   * If it contains {@link Double#NEGATIVE_INFINITY} and finite values only or {@link\n",
        "170": "   * Double#NEGATIVE_INFINITY} only, the result is {@link Double#NEGATIVE_INFINITY}.\n",
        "191": "   * If it contains {@link Double#NEGATIVE_INFINITY} and finite values only or {@link\n",
        "192": "   * Double#NEGATIVE_INFINITY} only, the result is {@link Double#NEGATIVE_INFINITY}.\n",
        "202": "   * <p>This is guaranteed to return zero if the dataset contains only exactly one finite value. It\n",
        "203": "   * is not guaranteed to return zero when the dataset consists of the same value multiple times,\n",
        "208": "   * <p>If the dataset contains any non-finite values ({@link Double#POSITIVE_INFINITY}, {@link\n",
        "209": "   * Double#NEGATIVE_INFINITY}, or {@link Double#NaN}) then the result is {@link Double#NaN}.\n",
        "225": "   * Returns the <a\n",
        "226": "   * href=\"http://en.wikipedia.org/wiki/Standard_deviation#Definition_of_population_values\">\n",
        "229": "   * <p>This is guaranteed to return zero if the dataset contains only exactly one finite value. It\n",
        "230": "   * is not guaranteed to return zero when the dataset consists of the same value multiple times,\n",
        "235": "   * <p>If the dataset contains any non-finite values ({@link Double#POSITIVE_INFINITY}, {@link\n",
        "236": "   * Double#NEGATIVE_INFINITY}, or {@link Double#NaN}) then the result is {@link Double#NaN}.\n",
        "255": "   * <p>If the dataset contains any non-finite values ({@link Double#POSITIVE_INFINITY}, {@link\n",
        "256": "   * Double#NEGATIVE_INFINITY}, or {@link Double#NaN}) then the result is {@link Double#NaN}.\n",
        "269": "   * Returns the <a\n",
        "270": "   * href=\"http://en.wikipedia.org/wiki/Standard_deviation#Corrected_sample_standard_deviation\">\n",
        "281": "   * <p>If the dataset contains any non-finite values ({@link Double#POSITIVE_INFINITY}, {@link\n",
        "282": "   * Double#NEGATIVE_INFINITY}, or {@link Double#NaN}) then the result is {@link Double#NaN}.\n",
        "296": "   * contains {@link Double#NEGATIVE_INFINITY} and not {@link Double#NaN} then the result is {@link\n",
        "297": "   * Double#NEGATIVE_INFINITY}. If it contains {@link Double#POSITIVE_INFINITY} and finite values\n",
        "298": "   * only then the result is the lowest finite value. If it contains {@link\n",
        "299": "   * Double#POSITIVE_INFINITY} only then the result is {@link Double#POSITIVE_INFINITY}.\n",
        "314": "   * contains {@link Double#POSITIVE_INFINITY} and not {@link Double#NaN} then the result is {@link\n",
        "315": "   * Double#POSITIVE_INFINITY}. If it contains {@link Double#NEGATIVE_INFINITY} and finite values\n",
        "316": "   * only then the result is the highest finite value. If it contains {@link\n",
        "317": "   * Double#NEGATIVE_INFINITY} only then the result is {@link Double#NEGATIVE_INFINITY}.\n",
        "503": "  /** The size of byte array representation in bytes. */\n",
        "544": "   * Creates a Stats instance from the given byte representation which was obtained by {@link\n",
        "545": "   * #toByteArray}.\n"
    },
    "removed": {
        "44": " * <li>If all the values you want to summarize are already known, use the appropriate {@code\n",
        "45": " *     Stats.of} factory method below. Primitive arrays, iterables and iterators of any kind of\n",
        "46": " *     {@code Number}, and primitive varargs are supported.\n",
        "47": " * <li>Or, to avoid storing up all the data first, create a {@link StatsAccumulator} instance, feed\n",
        "48": " *     values to it as you get them, then call {@link StatsAccumulator#snapshot}.\n",
        "77": "   * <li>If {@code count} is 0, {@code mean} may have any finite value (its only usage will be to\n",
        "78": "   * get multiplied by 0 to calculate the sum), and the other parameters may have any values (they\n",
        "79": "   * will not be used).\n",
        "80": "   * <li>If {@code count} is 1, {@code sumOfSquaresOfDeltas} must be exactly 0.0 or\n",
        "81": "   * {@link Double#NaN}.\n",
        "150": "  /**\n",
        "151": "   * Returns the number of values.\n",
        "152": "   */\n",
        "170": "   * If it contains {@link Double#NEGATIVE_INFINITY} and finite values only or\n",
        "171": "   * {@link Double#NEGATIVE_INFINITY} only, the result is {@link Double#NEGATIVE_INFINITY}.\n",
        "192": "   * If it contains {@link Double#NEGATIVE_INFINITY} and finite values only or\n",
        "193": "   * {@link Double#NEGATIVE_INFINITY} only, the result is {@link Double#NEGATIVE_INFINITY}.\n",
        "203": "   * <p>This is guaranteed to return zero if the dataset contains only exactly one finite value.\n",
        "204": "   * It is not guaranteed to return zero when the dataset consists of the same value multiple times,\n",
        "209": "   * <p>If the dataset contains any non-finite values ({@link Double#POSITIVE_INFINITY},\n",
        "210": "   * {@link Double#NEGATIVE_INFINITY}, or {@link Double#NaN}) then the result is {@link Double#NaN}.\n",
        "226": "   * Returns the\n",
        "227": "   * <a href=\"http://en.wikipedia.org/wiki/Standard_deviation#Definition_of_population_values\">\n",
        "230": "   * <p>This is guaranteed to return zero if the dataset contains only exactly one finite value.\n",
        "231": "   * It is not guaranteed to return zero when the dataset consists of the same value multiple times,\n",
        "236": "   * <p>If the dataset contains any non-finite values ({@link Double#POSITIVE_INFINITY},\n",
        "237": "   * {@link Double#NEGATIVE_INFINITY}, or {@link Double#NaN}) then the result is {@link Double#NaN}.\n",
        "256": "   * <p>If the dataset contains any non-finite values ({@link Double#POSITIVE_INFINITY},\n",
        "257": "   * {@link Double#NEGATIVE_INFINITY}, or {@link Double#NaN}) then the result is {@link Double#NaN}.\n",
        "270": "   * Returns the\n",
        "271": "   * <a href=\"http://en.wikipedia.org/wiki/Standard_deviation#Corrected_sample_standard_deviation\">\n",
        "282": "   * <p>If the dataset contains any non-finite values ({@link Double#POSITIVE_INFINITY},\n",
        "283": "   * {@link Double#NEGATIVE_INFINITY}, or {@link Double#NaN}) then the result is {@link Double#NaN}.\n",
        "297": "   * contains {@link Double#NEGATIVE_INFINITY} and not {@link Double#NaN} then the result is\n",
        "298": "   * {@link Double#NEGATIVE_INFINITY}. If it contains {@link Double#POSITIVE_INFINITY} and finite\n",
        "299": "   * values only then the result is the lowest finite value. If it contains\n",
        "300": "   * {@link Double#POSITIVE_INFINITY} only then the result is {@link Double#POSITIVE_INFINITY}.\n",
        "315": "   * contains {@link Double#POSITIVE_INFINITY} and not {@link Double#NaN} then the result is\n",
        "316": "   * {@link Double#POSITIVE_INFINITY}. If it contains {@link Double#NEGATIVE_INFINITY} and finite\n",
        "317": "   * values only then the result is the highest finite value. If it contains\n",
        "318": "   * {@link Double#NEGATIVE_INFINITY} only then the result is {@link Double#NEGATIVE_INFINITY}.\n",
        "504": "  /**\n",
        "505": "   * The size of byte array representation in bytes.\n",
        "506": "   */\n",
        "547": "   * Creates a Stats instance from the given byte representation which was obtained by\n",
        "548": "   * {@link #toByteArray}.\n"
    }
}