{
    "addition": {
        "32": " * implemented in terms of {@link #getIfPresent}; {@link #putAll} is implemented in terms of {@link\n",
        "33": " * #put}, {@link #invalidateAll(Iterable)} is implemented in terms of {@link #invalidate}. The\n",
        "34": " * method {@link #cleanUp} is a no-op. All other methods throw an {@link\n",
        "35": " * UnsupportedOperationException}.\n",
        "46": "  /** @since 11.0 */\n",
        "77": "  /** @since 11.0 */\n",
        "83": "  /** @since 12.0 */\n",
        "104": "  /** @since 11.0 */\n",
        "128": "   * Accumulates statistics during the operation of a {@link Cache} for presentation by {@link\n",
        "129": "   * Cache#stats}. This is solely intended for consumption by {@code Cache} implementors.\n",
        "157": "     * an entry to be loaded, and the loading completes successfully. In contrast to {@link\n",
        "158": "     * #recordMisses}, this method should only be called by the loading thread.\n",
        "167": "     * entry to be loaded, but an exception is thrown while loading the entry. In contrast to {@link\n",
        "168": "     * #recordMisses}, this method should only be called by the loading thread.\n",
        "177": "     * is evicted due to the cache's eviction strategy, and not as a result of manual {@linkplain\n",
        "178": "     * Cache#invalidate invalidations}.\n",
        "202": "    /** Constructs an instance with all counts initialized to zero. */\n",
        "205": "    /** @since 11.0 */\n",
        "211": "    /** @since 11.0 */\n",
        "245": "    /** Increments all counters by the values in {@code other}. */\n"
    },
    "removed": {
        "32": " * implemented in terms of {@link #getIfPresent}; {@link #putAll} is implemented in terms of\n",
        "33": " * {@link #put}, {@link #invalidateAll(Iterable)} is implemented in terms of {@link #invalidate}.\n",
        "34": " * The method {@link #cleanUp} is a no-op. All other methods throw an\n",
        "35": " * {@link UnsupportedOperationException}.\n",
        "46": "  /**\n",
        "47": "   * @since 11.0\n",
        "48": "   */\n",
        "79": "  /**\n",
        "80": "   * @since 11.0\n",
        "81": "   */\n",
        "87": "  /**\n",
        "88": "   * @since 12.0\n",
        "89": "   */\n",
        "110": "  /**\n",
        "111": "   * @since 11.0\n",
        "112": "   */\n",
        "136": "   * Accumulates statistics during the operation of a {@link Cache} for presentation by\n",
        "137": "   * {@link Cache#stats}. This is solely intended for consumption by {@code Cache} implementors.\n",
        "165": "     * an entry to be loaded, and the loading completes successfully. In contrast to\n",
        "166": "     * {@link #recordMisses}, this method should only be called by the loading thread.\n",
        "175": "     * entry to be loaded, but an exception is thrown while loading the entry. In contrast to\n",
        "176": "     * {@link #recordMisses}, this method should only be called by the loading thread.\n",
        "185": "     * is evicted due to the cache's eviction strategy, and not as a result of manual\n",
        "186": "     * {@linkplain Cache#invalidate invalidations}.\n",
        "210": "    /**\n",
        "211": "     * Constructs an instance with all counts initialized to zero.\n",
        "212": "     */\n",
        "215": "    /**\n",
        "216": "     * @since 11.0\n",
        "217": "     */\n",
        "223": "    /**\n",
        "224": "     * @since 11.0\n",
        "225": "     */\n",
        "259": "    /**\n",
        "260": "     * Increments all counters by the values in {@code other}.\n",
        "261": "     */\n"
    }
}