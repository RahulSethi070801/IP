{
    "addition": {
        "45": "  static final class StandardImplForwardingMultiset<T> extends ForwardingMultiset<T> {\n",
        "52": "    @Override\n",
        "53": "    protected Multiset<T> delegate() {\n",
        "57": "    @Override\n",
        "58": "    public boolean addAll(Collection<? extends T> collection) {\n",
        "62": "    @Override\n",
        "63": "    public boolean add(T element) {\n",
        "67": "    @Override\n",
        "68": "    public void clear() {\n",
        "72": "    @Override\n",
        "73": "    public int count(Object element) {\n",
        "77": "    @Override\n",
        "78": "    public boolean contains(Object object) {\n",
        "82": "    @Override\n",
        "83": "    public boolean containsAll(Collection<?> collection) {\n",
        "87": "    @Override\n",
        "88": "    public boolean remove(Object object) {\n",
        "92": "    @Override\n",
        "93": "    public boolean removeAll(Collection<?> collection) {\n",
        "97": "    @Override\n",
        "98": "    public boolean retainAll(Collection<?> collection) {\n",
        "102": "    @Override\n",
        "103": "    public Object[] toArray() {\n",
        "107": "    @Override\n",
        "108": "    public <T> T[] toArray(T[] array) {\n",
        "112": "    @Override\n",
        "113": "    public String toString() {\n",
        "117": "    @Override\n",
        "118": "    public boolean equals(Object object) {\n",
        "122": "    @Override\n",
        "123": "    public int hashCode() {\n",
        "127": "    @Override\n",
        "128": "    public boolean setCount(T element, int oldCount, int newCount) {\n",
        "132": "    @Override\n",
        "133": "    public int setCount(T element, int count) {\n",
        "137": "    @Override\n",
        "138": "    public Set<T> elementSet() {\n",
        "142": "    @Override\n",
        "143": "    public Iterator<T> iterator() {\n",
        "147": "    @Override\n",
        "148": "    public boolean isEmpty() {\n",
        "152": "    @Override\n",
        "153": "    public int size() {\n",
        "190": "    suite.addTest(\n",
        "191": "        SetTestSuiteBuilder.using(\n",
        "192": "                new TestStringSetGenerator() {\n",
        "193": "\n",
        "194": "                  /**\n",
        "195": "                   * Returns a Multiset that throws an exception on any attempt to use a method not\n",
        "196": "                   * specifically authorized by the elementSet() or hashCode() docs.\n",
        "197": "                   */\n",
        "198": "                  @Override\n",
        "199": "                  protected Set<String> create(String[] elements) {\n",
        "200": "                    final Multiset<String> inner =\n",
        "201": "                        LinkedHashMultiset.create(Arrays.asList(elements));\n",
        "202": "                    return new ForwardingMultiset<String>() {\n",
        "203": "                      @Override\n",
        "204": "                      protected Multiset<String> delegate() {\n",
        "205": "                        return inner;\n",
        "206": "                      }\n",
        "207": "\n",
        "208": "                      @Override\n",
        "209": "                      public Set<String> elementSet() {\n",
        "210": "                        return new StandardElementSet();\n",
        "211": "                      }\n",
        "212": "\n",
        "213": "                      @Override\n",
        "214": "                      public int add(String element, int occurrences) {\n",
        "215": "                        throw new UnsupportedOperationException();\n",
        "216": "                      }\n",
        "217": "\n",
        "218": "                      @Override\n",
        "219": "                      public Set<Entry<String>> entrySet() {\n",
        "220": "                        final Set<Entry<String>> backingSet = super.entrySet();\n",
        "221": "                        return new ForwardingSet<Entry<String>>() {\n",
        "222": "                          @Override\n",
        "223": "                          protected Set<Entry<String>> delegate() {\n",
        "224": "                            return backingSet;\n",
        "225": "                          }\n",
        "226": "\n",
        "227": "                          @Override\n",
        "228": "                          public boolean add(Entry<String> element) {\n",
        "229": "                            throw new UnsupportedOperationException();\n",
        "230": "                          }\n",
        "231": "\n",
        "232": "                          @Override\n",
        "233": "                          public boolean addAll(Collection<? extends Entry<String>> collection) {\n",
        "234": "                            throw new UnsupportedOperationException();\n",
        "235": "                          }\n",
        "236": "\n",
        "237": "                          @Override\n",
        "238": "                          public void clear() {\n",
        "239": "                            throw new UnsupportedOperationException();\n",
        "240": "                          }\n",
        "241": "\n",
        "242": "                          @Override\n",
        "243": "                          public boolean contains(Object object) {\n",
        "244": "                            throw new UnsupportedOperationException();\n",
        "245": "                          }\n",
        "246": "\n",
        "247": "                          @Override\n",
        "248": "                          public boolean containsAll(Collection<?> collection) {\n",
        "249": "                            throw new UnsupportedOperationException();\n",
        "250": "                          }\n",
        "251": "\n",
        "252": "                          @Override\n",
        "253": "                          public boolean isEmpty() {\n",
        "254": "                            throw new UnsupportedOperationException();\n",
        "255": "                          }\n",
        "256": "\n",
        "257": "                          @Override\n",
        "258": "                          public boolean remove(Object object) {\n",
        "259": "                            throw new UnsupportedOperationException();\n",
        "260": "                          }\n",
        "261": "\n",
        "262": "                          @Override\n",
        "263": "                          public boolean removeAll(Collection<?> collection) {\n",
        "264": "                            throw new UnsupportedOperationException();\n",
        "265": "                          }\n",
        "266": "\n",
        "267": "                          @Override\n",
        "268": "                          public boolean retainAll(Collection<?> collection) {\n",
        "269": "                            throw new UnsupportedOperationException();\n",
        "270": "                          }\n",
        "271": "                        };\n",
        "272": "                      }\n",
        "273": "\n",
        "274": "                      @Override\n",
        "275": "                      public boolean equals(Object object) {\n",
        "276": "                        throw new UnsupportedOperationException();\n",
        "277": "                      }\n",
        "278": "\n",
        "279": "                      @Override\n",
        "280": "                      public boolean remove(Object element) {\n",
        "281": "                        throw new UnsupportedOperationException();\n",
        "282": "                      }\n",
        "283": "\n",
        "284": "                      @Override\n",
        "285": "                      public boolean setCount(String element, int oldCount, int newCount) {\n",
        "286": "                        throw new UnsupportedOperationException();\n",
        "287": "                      }\n",
        "288": "\n",
        "289": "                      @Override\n",
        "290": "                      public int setCount(String element, int count) {\n",
        "291": "                        throw new UnsupportedOperationException();\n",
        "292": "                      }\n",
        "293": "\n",
        "294": "                      @Override\n",
        "295": "                      public boolean add(String element) {\n",
        "296": "                        throw new UnsupportedOperationException();\n",
        "297": "                      }\n",
        "298": "\n",
        "299": "                      @Override\n",
        "300": "                      public boolean addAll(Collection<? extends String> collection) {\n",
        "301": "                        throw new UnsupportedOperationException();\n",
        "302": "                      }\n",
        "303": "\n",
        "304": "                      @Override\n",
        "305": "                      public Iterator<String> iterator() {\n",
        "306": "                        throw new UnsupportedOperationException();\n",
        "307": "                      }\n",
        "308": "\n",
        "309": "                      @Override\n",
        "310": "                      public boolean removeAll(Collection<?> collection) {\n",
        "311": "                        throw new UnsupportedOperationException();\n",
        "312": "                      }\n",
        "313": "\n",
        "314": "                      @Override\n",
        "315": "                      public boolean retainAll(Collection<?> collection) {\n",
        "316": "                        throw new UnsupportedOperationException();\n",
        "317": "                      }\n",
        "318": "\n",
        "319": "                      @Override\n",
        "320": "                      public int size() {\n",
        "321": "                        throw new UnsupportedOperationException();\n",
        "322": "                      }\n",
        "323": "                    }.elementSet();\n",
        "324": "                  }\n",
        "325": "                })\n",
        "326": "            .named(\"standardElementSet tripwire\")\n",
        "327": "            .withFeatures(\n",
        "328": "                CollectionSize.ANY,\n",
        "329": "                CollectionFeature.ALLOWS_NULL_VALUES,\n",
        "330": "                CollectionFeature.REMOVE_OPERATIONS)\n",
        "331": "            .createTestSuite());\n",
        "339": "        .testForwarding(\n",
        "340": "            Multiset.class,\n",
        "341": "            new Function<Multiset, Multiset>() {\n",
        "342": "              @Override\n",
        "343": "              public Multiset apply(Multiset delegate) {\n",
        "344": "                return wrap(delegate);\n",
        "345": "              }\n",
        "346": "            });\n",
        "360": "      @Override\n",
        "361": "      protected Multiset<T> delegate() {\n"
    },
    "removed": {
        "45": "  static final class StandardImplForwardingMultiset<T>\n",
        "46": "      extends ForwardingMultiset<T> {\n",
        "53": "    @Override protected Multiset<T> delegate() {\n",
        "57": "    @Override public boolean addAll(Collection<? extends T> collection) {\n",
        "61": "    @Override public boolean add(T element) {\n",
        "65": "    @Override public void clear() {\n",
        "69": "    @Override public int count(Object element) {\n",
        "73": "    @Override public boolean contains(Object object) {\n",
        "77": "    @Override public boolean containsAll(Collection<?> collection) {\n",
        "81": "    @Override public boolean remove(Object object) {\n",
        "85": "    @Override public boolean removeAll(Collection<?> collection) {\n",
        "89": "    @Override public boolean retainAll(Collection<?> collection) {\n",
        "93": "    @Override public Object[] toArray() {\n",
        "97": "    @Override public <T> T[] toArray(T[] array) {\n",
        "101": "    @Override public String toString() {\n",
        "105": "    @Override public boolean equals(Object object) {\n",
        "109": "    @Override public int hashCode() {\n",
        "113": "    @Override public boolean setCount(T element, int oldCount, int newCount) {\n",
        "117": "    @Override public int setCount(T element, int count) {\n",
        "121": "    @Override public Set<T> elementSet() {\n",
        "125": "    @Override public Iterator<T> iterator() {\n",
        "129": "    @Override public boolean isEmpty() {\n",
        "133": "    @Override public int size() {\n",
        "170": "    suite.addTest(SetTestSuiteBuilder.using(new TestStringSetGenerator() {\n",
        "171": "\n",
        "172": "      /**\n",
        "173": "       * Returns a Multiset that throws an exception on any attempt to use a\n",
        "174": "       * method not specifically authorized by the elementSet() or hashCode()\n",
        "175": "       * docs.\n",
        "176": "       */\n",
        "177": "      @Override protected Set<String> create(String[] elements) {\n",
        "178": "        final Multiset<String> inner =\n",
        "179": "            LinkedHashMultiset.create(Arrays.asList(elements));\n",
        "180": "        return new ForwardingMultiset<String>() {\n",
        "181": "          @Override protected Multiset<String> delegate() {\n",
        "182": "            return inner;\n",
        "183": "          }\n",
        "184": "\n",
        "185": "          @Override public Set<String> elementSet() {\n",
        "186": "            return new StandardElementSet();\n",
        "187": "          }\n",
        "188": "\n",
        "189": "          @Override public int add(String element, int occurrences) {\n",
        "190": "            throw new UnsupportedOperationException();\n",
        "191": "          }\n",
        "192": "          @Override public Set<Entry<String>> entrySet() {\n",
        "193": "            final Set<Entry<String>> backingSet = super.entrySet();\n",
        "194": "            return new ForwardingSet<Entry<String>>() {\n",
        "195": "              @Override protected Set<Entry<String>> delegate() {\n",
        "196": "                return backingSet;\n",
        "197": "              }\n",
        "198": "              @Override public boolean add(Entry<String> element) {\n",
        "199": "                throw new UnsupportedOperationException();\n",
        "200": "              }\n",
        "201": "              @Override public boolean addAll(\n",
        "202": "                  Collection<? extends Entry<String>> collection) {\n",
        "203": "                throw new UnsupportedOperationException();\n",
        "204": "              }\n",
        "205": "              @Override public void clear() {\n",
        "206": "                throw new UnsupportedOperationException();\n",
        "207": "              }\n",
        "208": "              @Override public boolean contains(Object object) {\n",
        "209": "                throw new UnsupportedOperationException();\n",
        "210": "              }\n",
        "211": "              @Override public boolean containsAll(Collection<?> collection) {\n",
        "212": "                throw new UnsupportedOperationException();\n",
        "213": "              }\n",
        "214": "              @Override public boolean isEmpty() {\n",
        "215": "                throw new UnsupportedOperationException();\n",
        "216": "              }\n",
        "217": "              @Override public boolean remove(Object object) {\n",
        "218": "                throw new UnsupportedOperationException();\n",
        "219": "              }\n",
        "220": "              @Override public boolean removeAll(Collection<?> collection) {\n",
        "221": "                throw new UnsupportedOperationException();\n",
        "222": "              }\n",
        "223": "              @Override public boolean retainAll(Collection<?> collection) {\n",
        "224": "                throw new UnsupportedOperationException();\n",
        "225": "              }\n",
        "226": "            };\n",
        "227": "          }\n",
        "228": "          @Override public boolean equals(Object object) {\n",
        "229": "            throw new UnsupportedOperationException();\n",
        "230": "          }\n",
        "231": "          @Override public boolean remove(Object element) {\n",
        "232": "            throw new UnsupportedOperationException();\n",
        "233": "          }\n",
        "234": "          @Override public boolean setCount(\n",
        "235": "              String element, int oldCount, int newCount) {\n",
        "236": "            throw new UnsupportedOperationException();\n",
        "237": "          }\n",
        "238": "          @Override public int setCount(String element, int count) {\n",
        "239": "            throw new UnsupportedOperationException();\n",
        "240": "          }\n",
        "241": "          @Override public boolean add(String element) {\n",
        "242": "            throw new UnsupportedOperationException();\n",
        "243": "          }\n",
        "244": "          @Override public boolean addAll(\n",
        "245": "              Collection<? extends String> collection) {\n",
        "246": "            throw new UnsupportedOperationException();\n",
        "247": "          }\n",
        "248": "          @Override public Iterator<String> iterator() {\n",
        "249": "            throw new UnsupportedOperationException();\n",
        "250": "          }\n",
        "251": "          @Override public boolean removeAll(Collection<?> collection) {\n",
        "252": "            throw new UnsupportedOperationException();\n",
        "253": "          }\n",
        "254": "          @Override public boolean retainAll(Collection<?> collection) {\n",
        "255": "            throw new UnsupportedOperationException();\n",
        "256": "          }\n",
        "257": "          @Override public int size() {\n",
        "258": "            throw new UnsupportedOperationException();\n",
        "259": "          }\n",
        "260": "        }.elementSet();\n",
        "261": "      }\n",
        "262": "    }).named(\"standardElementSet tripwire\").withFeatures(CollectionSize.ANY,\n",
        "263": "        CollectionFeature.ALLOWS_NULL_VALUES,\n",
        "264": "        CollectionFeature.REMOVE_OPERATIONS).createTestSuite());\n",
        "272": "        .testForwarding(Multiset.class, new Function<Multiset, Multiset>() {\n",
        "273": "          @Override public Multiset apply(Multiset delegate) {\n",
        "274": "            return wrap(delegate);\n",
        "275": "          }\n",
        "276": "        });\n",
        "290": "      @Override protected Multiset<T> delegate() {\n"
    }
}