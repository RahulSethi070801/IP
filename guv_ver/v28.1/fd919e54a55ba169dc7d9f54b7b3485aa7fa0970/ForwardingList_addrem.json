{
    "addition": {
        "29": " * A list which forwards all its method calls to another list. Subclasses should override one or\n",
        "30": " * more methods to modify the behavior of the backing list as desired per the <a\n",
        "33": " * <p>This class does not implement {@link java.util.RandomAccess}. If the delegate supports random\n",
        "34": " * access, the {@code ForwardingList} subclass should implement the {@code RandomAccess} interface.\n",
        "36": " * <p><b>Warning:</b> The methods of {@code ForwardingList} forward <b>indiscriminately</b> to the\n",
        "37": " * methods of the delegate. For example, overriding {@link #add} alone <b>will not</b> change the\n",
        "38": " * behavior of {@link #addAll}, which can lead to unexpected behavior. In this case, you should\n",
        "39": " * override {@code addAll} as well, either providing your own implementation, or delegating to the\n",
        "40": " * provided {@code standardAddAll} method.\n",
        "46": " * <p>The {@code standard} methods and any collection views they return are not guaranteed to be\n",
        "47": " * thread-safe, even when all of the methods that they depend on are thread-safe.\n",
        "127": "   * A sensible default implementation of {@link #add(Object)}, in terms of {@link #add(int,\n",
        "128": "   * Object)}. If you override {@link #add(int, Object)}, you may wish to override {@link\n",
        "129": "   * #add(Object)} to forward to this implementation.\n",
        "139": "   * A sensible default implementation of {@link #addAll(int, Collection)}, in terms of the {@code\n",
        "140": "   * add} method of {@link #listIterator(int)}. If you override {@link #listIterator(int)}, you may\n",
        "141": "   * wish to override {@link #addAll(int, Collection)} to forward to this implementation.\n",
        "150": "   * A sensible default implementation of {@link #indexOf}, in terms of {@link #listIterator()}. If\n",
        "151": "   * you override {@link #listIterator()}, you may wish to override {@link #indexOf} to forward to\n",
        "152": "   * this implementation.\n",
        "161": "   * A sensible default implementation of {@link #lastIndexOf}, in terms of {@link\n",
        "162": "   * #listIterator(int)}. If you override {@link #listIterator(int)}, you may wish to override\n",
        "163": "   * {@link #lastIndexOf} to forward to this implementation.\n",
        "172": "   * A sensible default implementation of {@link #iterator}, in terms of {@link #listIterator()}. If\n",
        "173": "   * you override {@link #listIterator()}, you may wish to override {@link #iterator} to forward to\n",
        "174": "   * this implementation.\n",
        "183": "   * A sensible default implementation of {@link #listIterator()}, in terms of {@link\n",
        "184": "   * #listIterator(int)}. If you override {@link #listIterator(int)}, you may wish to override\n",
        "185": "   * {@link #listIterator()} to forward to this implementation.\n",
        "194": "   * A sensible default implementation of {@link #listIterator(int)}, in terms of {@link #size},\n",
        "195": "   * {@link #get(int)}, {@link #set(int, Object)}, {@link #add(int, Object)}, and {@link\n",
        "196": "   * #remove(int)}. If you override any of these methods, you may wish to override {@link\n",
        "197": "   * #listIterator(int)} to forward to this implementation.\n",
        "207": "   * A sensible default implementation of {@link #subList(int, int)}. If you override any other\n",
        "208": "   * methods, you may wish to override {@link #subList(int, int)} to forward to this implementation.\n",
        "218": "   * A sensible definition of {@link #equals(Object)} in terms of {@link #size} and {@link\n",
        "219": "   * #iterator}. If you override either of those methods, you may wish to override {@link\n",
        "220": "   * #equals(Object)} to forward to this implementation.\n",
        "230": "   * A sensible definition of {@link #hashCode} in terms of {@link #iterator}. If you override\n",
        "231": "   * {@link #iterator}, you may wish to override {@link #hashCode} to forward to this\n",
        "232": "   * implementation.\n"
    },
    "removed": {
        "29": " * A list which forwards all its method calls to another list. Subclasses should\n",
        "30": " * override one or more methods to modify the behavior of the backing list as\n",
        "31": " * desired per the <a\n",
        "34": " * <p>This class does not implement {@link java.util.RandomAccess}. If the\n",
        "35": " * delegate supports random access, the {@code ForwardingList} subclass should\n",
        "36": " * implement the {@code RandomAccess} interface.\n",
        "38": " * <p><b>Warning:</b> The methods of {@code ForwardingList} forward\n",
        "39": " * <b>indiscriminately</b> to the methods of the delegate. For example,\n",
        "40": " * overriding {@link #add} alone <b>will not</b> change the behavior of {@link\n",
        "41": " * #addAll}, which can lead to unexpected behavior. In this case, you should\n",
        "42": " * override {@code addAll} as well, either providing your own implementation, or\n",
        "43": " * delegating to the provided {@code standardAddAll} method.\n",
        "49": " * <p>The {@code standard} methods and any collection views they return are not\n",
        "50": " * guaranteed to be thread-safe, even when all of the methods that they depend\n",
        "51": " * on are thread-safe.\n",
        "131": "   * A sensible default implementation of {@link #add(Object)}, in terms of\n",
        "132": "   * {@link #add(int, Object)}. If you override {@link #add(int, Object)}, you\n",
        "133": "   * may wish to override {@link #add(Object)} to forward to this\n",
        "134": "   * implementation.\n",
        "144": "   * A sensible default implementation of {@link #addAll(int, Collection)}, in\n",
        "145": "   * terms of the {@code add} method of {@link #listIterator(int)}. If you\n",
        "146": "   * override {@link #listIterator(int)}, you may wish to override {@link\n",
        "147": "   * #addAll(int, Collection)} to forward to this implementation.\n",
        "156": "   * A sensible default implementation of {@link #indexOf}, in terms of {@link\n",
        "157": "   * #listIterator()}. If you override {@link #listIterator()}, you may wish to\n",
        "158": "   * override {@link #indexOf} to forward to this implementation.\n",
        "167": "   * A sensible default implementation of {@link #lastIndexOf}, in terms of\n",
        "168": "   * {@link #listIterator(int)}. If you override {@link #listIterator(int)}, you\n",
        "169": "   * may wish to override {@link #lastIndexOf} to forward to this\n",
        "170": "   * implementation.\n",
        "179": "   * A sensible default implementation of {@link #iterator}, in terms of\n",
        "180": "   * {@link #listIterator()}. If you override {@link #listIterator()}, you may\n",
        "181": "   * wish to override {@link #iterator} to forward to this implementation.\n",
        "190": "   * A sensible default implementation of {@link #listIterator()}, in terms of\n",
        "191": "   * {@link #listIterator(int)}. If you override {@link #listIterator(int)}, you\n",
        "192": "   * may wish to override {@link #listIterator()} to forward to this\n",
        "193": "   * implementation.\n",
        "202": "   * A sensible default implementation of {@link #listIterator(int)}, in terms\n",
        "203": "   * of {@link #size}, {@link #get(int)}, {@link #set(int, Object)}, {@link\n",
        "204": "   * #add(int, Object)}, and {@link #remove(int)}. If you override any of these\n",
        "205": "   * methods, you may wish to override {@link #listIterator(int)} to forward to\n",
        "206": "   * this implementation.\n",
        "216": "   * A sensible default implementation of {@link #subList(int, int)}. If you\n",
        "217": "   * override any other methods, you may wish to override {@link #subList(int,\n",
        "218": "   * int)} to forward to this implementation.\n",
        "228": "   * A sensible definition of {@link #equals(Object)} in terms of {@link #size}\n",
        "229": "   * and {@link #iterator}. If you override either of those methods, you may\n",
        "230": "   * wish to override {@link #equals(Object)} to forward to this implementation.\n",
        "240": "   * A sensible definition of {@link #hashCode} in terms of {@link #iterator}.\n",
        "241": "   * If you override {@link #iterator}, you may wish to override {@link\n",
        "242": "   * #hashCode} to forward to this implementation.\n"
    }
}