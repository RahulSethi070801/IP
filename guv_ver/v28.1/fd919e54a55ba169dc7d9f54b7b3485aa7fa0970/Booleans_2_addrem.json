{
    "addition": {
        "38": " * <p>See the Guava User Guide article on <a\n",
        "39": " * href=\"https://github.com/google/guava/wiki/PrimitivesExplained\">primitive utilities</a>.\n",
        "48": "  /** Comparators for {@code Boolean} values. */\n",
        "101": "   * Returns a hash code for {@code value}; equal to the result of invoking {@code ((Boolean)\n",
        "102": "   * value).hashCode()}.\n",
        "123": "   * @return a positive number if only {@code a} is {@code true}, a negative number if only {@code\n",
        "124": "   *     b} is true, or zero if {@code a == b}\n",
        "134": "   * replacing {@code Booleans.contains(array, true)} with {@code !bitSet.isEmpty()} and {@code\n",
        "135": "   * Booleans.contains(array, false)} with {@code bitSet.nextClearBit(0) == sizeOfBitSet}.\n",
        "139": "   * @return {@code true} if {@code array[i] == target} for some value of {@code i}\n",
        "176": "   * Returns the start position of the first occurrence of the specified {@code target} within\n",
        "177": "   * {@code array}, or {@code -1} if there is no such occurrence.\n",
        "179": "   * <p>More formally, returns the lowest index {@code i} such that {@code Arrays.copyOfRange(array,\n",
        "180": "   * i, i + target.length)} contains exactly the same elements as {@code target}.\n",
        "227": "   * Returns the values from each provided array combined into a single array. For example, {@code\n",
        "228": "   * concat(new boolean[] {a, b}, new boolean[] {}, new boolean[] {c}} returns the array {@code {a,\n",
        "229": "   * b, c}}.\n",
        "258": "   * @return an array containing the values of {@code array}, with guaranteed minimum length {@code\n",
        "259": "   *     minLength}\n",
        "269": "   * For example, {@code join(\"-\", false, true, false)} returns the string {@code\n",
        "270": "   * \"false-true-false\"}.\n",
        "299": "   * support only identity equality), but it is consistent with {@link Arrays#equals(boolean[],\n",
        "300": "   * boolean[])}.\n",
        "333": "   * <p>Elements are copied from the argument collection as if by {@code collection.toArray()}.\n",
        "334": "   * Calling this method is as thread-safe as calling that method.\n",
        "359": "   * Returns a fixed-size list backed by the specified array, similar to {@link\n",
        "360": "   * Arrays#asList(Object[])}. The list supports {@link List#set(int, Object)}, but any attempt to\n",
        "361": "   * set a value to {@code null} will result in a {@link NullPointerException}.\n"
    },
    "removed": {
        "38": " * <p>See the Guava User Guide article on\n",
        "39": " * <a href=\"https://github.com/google/guava/wiki/PrimitivesExplained\">primitive utilities</a>.\n",
        "48": "  /**\n",
        "49": "   * Comparators for {@code Boolean} values.\n",
        "50": "   */\n",
        "103": "   * Returns a hash code for {@code value}; equal to the result of invoking\n",
        "104": "   * {@code ((Boolean) value).hashCode()}.\n",
        "125": "   * @return a positive number if only {@code a} is {@code true}, a negative number if only\n",
        "126": "   *     {@code b} is true, or zero if {@code a == b}\n",
        "136": "   * replacing {@code Booleans.contains(array, true)} with {@code !bitSet.isEmpty()} and\n",
        "137": "   * {@code Booleans.contains(array, false)} with {@code bitSet.nextClearBit(0) == sizeOfBitSet}.\n",
        "141": "   * @return {@code true} if {@code array[i] == target} for some value of {@code\n",
        "142": "   *     i}\n",
        "179": "   * Returns the start position of the first occurrence of the specified {@code\n",
        "180": "   * target} within {@code array}, or {@code -1} if there is no such occurrence.\n",
        "182": "   * <p>More formally, returns the lowest index {@code i} such that {@code\n",
        "183": "   * Arrays.copyOfRange(array, i, i + target.length)} contains exactly the same elements as\n",
        "184": "   * {@code target}.\n",
        "231": "   * Returns the values from each provided array combined into a single array. For example,\n",
        "232": "   * {@code concat(new boolean[] {a, b}, new boolean[] {}, new boolean[] {c}} returns the array\n",
        "233": "   * {@code {a, b, c}}.\n",
        "262": "   * @return an array containing the values of {@code array}, with guaranteed minimum length\n",
        "263": "   *     {@code minLength}\n",
        "273": "   * For example, {@code join(\"-\", false, true, false)} returns the string\n",
        "274": "   * {@code \"false-true-false\"}.\n",
        "303": "   * support only identity equality), but it is consistent with\n",
        "304": "   * {@link Arrays#equals(boolean[], boolean[])}.\n",
        "337": "   * <p>Elements are copied from the argument collection as if by {@code\n",
        "338": "   * collection.toArray()}. Calling this method is as thread-safe as calling that method.\n",
        "363": "   * Returns a fixed-size list backed by the specified array, similar to\n",
        "364": "   * {@link Arrays#asList(Object[])}. The list supports {@link List#set(int, Object)}, but any\n",
        "365": "   * attempt to set a value to {@code null} will result in a {@link NullPointerException}.\n"
    }
}