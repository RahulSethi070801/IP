{
    "addition": {
        "36": " * A generic JUnit test which tests {@code add} operations on a collection. Can't be invoked\n",
        "37": " * directly; please see {@link com.google.common.collect.testing.CollectionTestSuiteBuilder}.\n",
        "106": "   * Returns the {@link Method} instance for {@link #testAdd_nullSupported()} so that tests of\n",
        "107": "   * {@link java.util.Collections#checkedCollection(java.util.Collection, Class)} can suppress it\n",
        "108": "   * with {@code FeatureSpecificTestSuiteBuilder.suppressing()} until <a\n",
        "109": "   * href=\"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6409434\">Sun bug 6409434</a> is fixed.\n",
        "110": "   * It's unclear whether nulls were to be permitted or forbidden, but presumably the eventual fix\n",
        "111": "   * will be to permit them, as it seems more likely that code would depend on that behavior than on\n",
        "112": "   * the other. Thus, we say the bug is in add(), which fails to support null.\n",
        "120": "   * Returns the {@link Method} instance for {@link #testAdd_nullSupported()} so that tests of\n",
        "121": "   * {@link java.util.TreeSet} can suppress it with {@code\n",
        "123": "   * href=\"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5045147\">Sun bug 5045147</a> is fixed.\n",
        "131": "   * Returns the {@link Method} instance for {@link #testAdd_unsupportedNotPresent()} so that tests\n",
        "132": "   * can suppress it with {@code FeatureSpecificTestSuiteBuilder.suppressing()} while we figure out\n",
        "133": "   * what to do with <a href=\"http://goo.gl/qJBruX\">{@code ConcurrentHashMap} support for {@code\n",
        "134": "   * entrySet().add()}</a>.\n"
    },
    "removed": {
        "36": " * A generic JUnit test which tests {@code add} operations on a collection.\n",
        "37": " * Can't be invoked directly; please see\n",
        "38": " * {@link com.google.common.collect.testing.CollectionTestSuiteBuilder}.\n",
        "107": "   * Returns the {@link Method} instance for {@link #testAdd_nullSupported()} so\n",
        "108": "   * that tests of {@link\n",
        "109": "   * java.util.Collections#checkedCollection(java.util.Collection, Class)} can\n",
        "110": "   * suppress it with {@code FeatureSpecificTestSuiteBuilder.suppressing()}\n",
        "111": "   * until <a\n",
        "112": "   * href=\"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6409434\">Sun bug\n",
        "113": "   * 6409434</a> is fixed. It's unclear whether nulls were to be permitted or\n",
        "114": "   * forbidden, but presumably the eventual fix will be to permit them, as it\n",
        "115": "   * seems more likely that code would depend on that behavior than on the\n",
        "116": "   * other. Thus, we say the bug is in add(), which fails to support null.\n",
        "124": "   * Returns the {@link Method} instance for {@link #testAdd_nullSupported()}\n",
        "125": "   * so that tests of {@link java.util.TreeSet} can suppress it with {@code\n",
        "127": "   * href=\"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5045147\">Sun bug\n",
        "128": "   * 5045147</a> is fixed.\n",
        "136": "   * Returns the {@link Method} instance for {@link\n",
        "137": "   * #testAdd_unsupportedNotPresent()} so that tests can suppress it with\n",
        "138": "   * {@code FeatureSpecificTestSuiteBuilder.suppressing()} while we figure out\n",
        "139": "   * what to do with <a href=\"http://goo.gl/qJBruX\">{@code ConcurrentHashMap}\n",
        "140": "   * support for {@code entrySet().add()}</a>.\n"
    }
}