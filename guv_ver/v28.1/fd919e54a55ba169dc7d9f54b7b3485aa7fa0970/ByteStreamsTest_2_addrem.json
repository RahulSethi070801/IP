{
    "addition": {
        "49": "    ReadableByteChannel inChannel = Channels.newChannel(new ByteArrayInputStream(expected));\n",
        "136": "    assertEquals(new byte[] {0, 1, 2, 3, 4, 0, 0, 0, 0, 0}, b);\n",
        "153": "  private static void skipHelper(long n, int expect, InputStream in) throws IOException {\n",
        "159": "  private static final byte[] bytes = new byte[] {0x12, 0x34, 0x56, 0x78, 0x76, 0x54, 0x32, 0x10};\n",
        "211": "    ByteArrayDataInput in =\n",
        "212": "        ByteStreams.newDataInput(\n",
        "213": "            \"This is a line\\r\\nThis too\\rand this\\nand also this\".getBytes(Charsets.UTF_8));\n",
        "398": "    byte[] expected = \"r\\u00C9sum\\u00C9\".getBytes(Charsets.UTF_8);\n",
        "481": "    @Override\n",
        "482": "    public long skip(long n) throws IOException {\n",
        "489": "    assertEquals(\n",
        "490": "        array, ByteStreams.readBytes(new ByteArrayInputStream(array), new TestByteProcessor()));\n",
        "497": "    public boolean processBytes(byte[] buf, int off, int len) throws IOException {\n",
        "510": "    assertEquals(\n",
        "511": "        (Integer) 42,\n",
        "512": "        ByteStreams.readBytes(\n",
        "513": "            new ByteArrayInputStream(array),\n",
        "517": "                assertEquals(copyOfRange(buf, off, off + len), newPreFilledByteArray(8192));\n"
    },
    "removed": {
        "49": "    ReadableByteChannel inChannel =\n",
        "50": "        Channels.newChannel(new ByteArrayInputStream(expected));\n",
        "137": "    assertEquals(new byte[]{0, 1, 2, 3, 4, 0, 0, 0, 0, 0}, b);\n",
        "154": "  private static void skipHelper(long n, int expect, InputStream in)\n",
        "155": "      throws IOException {\n",
        "161": "  private static final byte[] bytes =\n",
        "162": "      new byte[] { 0x12, 0x34, 0x56, 0x78, 0x76, 0x54, 0x32, 0x10 };\n",
        "214": "    ByteArrayDataInput in = ByteStreams.newDataInput(\n",
        "215": "        \"This is a line\\r\\nThis too\\rand this\\nand also this\".getBytes(Charsets.UTF_8));\n",
        "400": "    byte[] expected =\"r\\u00C9sum\\u00C9\".getBytes(Charsets.UTF_8);\n",
        "483": "    @Override public long skip(long n) throws IOException {\n",
        "490": "    assertEquals(array, ByteStreams.readBytes(\n",
        "491": "      new ByteArrayInputStream(array), new TestByteProcessor()));\n",
        "498": "    public boolean processBytes(byte[] buf, int off, int len)\n",
        "499": "        throws IOException {\n",
        "512": "    assertEquals((Integer) 42,\n",
        "513": "        ByteStreams.readBytes(new ByteArrayInputStream(array),\n",
        "517": "                assertEquals(\n",
        "518": "                    copyOfRange(buf, off, off + len),\n",
        "519": "                    newPreFilledByteArray(8192));\n"
    }
}