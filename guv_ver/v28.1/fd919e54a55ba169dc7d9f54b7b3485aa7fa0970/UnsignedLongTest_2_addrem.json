{
    "addition": {
        "69": "      BigInteger expected =\n",
        "70": "          (value >= 0)\n",
        "71": "              ? BigInteger.valueOf(value)\n",
        "72": "              : BigInteger.valueOf(value).add(BigInteger.ZERO.setBit(64));\n",
        "73": "      assertEquals(\n",
        "74": "          UnsignedLongs.toString(value),\n",
        "75": "          expected,\n",
        "96": "      boolean expectSuccess = big.compareTo(min) >= 0 && big.compareTo(max) <= 0;\n",
        "152": "        long expected = aUnsigned.bigIntegerValue().add(bUnsigned.bigIntegerValue()).longValue();\n",
        "164": "        long expected =\n",
        "165": "            aUnsigned.bigIntegerValue().subtract(bUnsigned.bigIntegerValue()).longValue();\n",
        "177": "        long expected =\n",
        "178": "            aUnsigned.bigIntegerValue().multiply(bUnsigned.bigIntegerValue()).longValue();\n",
        "191": "          long expected =\n",
        "192": "              aUnsigned.bigIntegerValue().divide(bUnsigned.bigIntegerValue()).longValue();\n",
        "205": "      } catch (ArithmeticException expected) {\n",
        "206": "      }\n",
        "216": "          long expected =\n",
        "217": "              aUnsigned.bigIntegerValue().remainder(bUnsigned.bigIntegerValue()).longValue();\n",
        "230": "      } catch (ArithmeticException expected) {\n",
        "231": "      }\n",
        "240": "        assertEquals(\n",
        "241": "            aUnsigned.bigIntegerValue().compareTo(bUnsigned.bigIntegerValue()),\n",
        "253": "      equalsTester.addEqualityGroup(\n",
        "254": "          UnsignedLong.fromLongBits(a),\n",
        "255": "          UnsignedLong.valueOf(big),\n",
        "256": "          UnsignedLong.valueOf(big.toString()),\n",
        "257": "          UnsignedLong.valueOf(big.toString(16), 16));\n"
    },
    "removed": {
        "69": "      BigInteger expected = (value >= 0)\n",
        "70": "          ? BigInteger.valueOf(value)\n",
        "71": "          : BigInteger.valueOf(value).add(BigInteger.ZERO.setBit(64));\n",
        "72": "      assertEquals(UnsignedLongs.toString(value), expected,\n",
        "93": "      boolean expectSuccess =\n",
        "94": "          big.compareTo(min) >= 0 && big.compareTo(max) <= 0;\n",
        "150": "        long expected = aUnsigned\n",
        "151": "            .bigIntegerValue()\n",
        "152": "            .add(bUnsigned.bigIntegerValue())\n",
        "153": "            .longValue();\n",
        "165": "        long expected = aUnsigned\n",
        "166": "            .bigIntegerValue()\n",
        "167": "            .subtract(bUnsigned.bigIntegerValue())\n",
        "168": "            .longValue();\n",
        "180": "        long expected = aUnsigned\n",
        "181": "            .bigIntegerValue()\n",
        "182": "            .multiply(bUnsigned.bigIntegerValue())\n",
        "183": "            .longValue();\n",
        "196": "          long expected = aUnsigned\n",
        "197": "              .bigIntegerValue()\n",
        "198": "              .divide(bUnsigned.bigIntegerValue())\n",
        "199": "              .longValue();\n",
        "212": "      } catch (ArithmeticException expected) {}\n",
        "222": "          long expected = aUnsigned\n",
        "223": "              .bigIntegerValue()\n",
        "224": "              .remainder(bUnsigned.bigIntegerValue())\n",
        "225": "              .longValue();\n",
        "238": "      } catch (ArithmeticException expected) {}\n",
        "247": "        assertEquals(aUnsigned.bigIntegerValue().compareTo(bUnsigned.bigIntegerValue()),\n",
        "259": "      equalsTester.addEqualityGroup(UnsignedLong.fromLongBits(a), UnsignedLong.valueOf(big),\n",
        "260": "          UnsignedLong.valueOf(big.toString()), UnsignedLong.valueOf(big.toString(16), 16));\n"
    }
}