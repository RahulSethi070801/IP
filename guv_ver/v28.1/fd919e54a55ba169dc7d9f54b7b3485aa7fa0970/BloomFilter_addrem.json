{
    "addition": {
        "108": "  /** The strategy we employ to map an element T to {@code numHashFunctions} bit indexes. */\n",
        "134": "   * Returns {@code true} if the element <i>might</i> have been put in this Bloom filter, {@code\n",
        "135": "   * false} if this is <i>definitely</i> not the case.\n",
        "168": "   * Returns the probability that {@linkplain #mightContain(Object)} will erroneously return {@code\n",
        "169": "   * true} for an object that has not actually been put in the {@code BloomFilter}.\n",
        "171": "   * <p>Ideally, this number should be close to the {@code fpp} parameter passed in {@linkplain\n",
        "172": "   * #create(Funnel, int, double)}, or smaller. If it is significantly higher, it is usually the\n",
        "173": "   * case that too many elements (more than expected) have been put in the {@code BloomFilter},\n",
        "174": "   * degenerating it.\n",
        "205": "  /** Returns the number of bits in the underlying bit array. */\n",
        "291": "   * Creates a {@link BloomFilter} with the expected number of insertions and expected false\n",
        "292": "   * positive probability.\n",
        "297": "   * <p>The constructed {@code BloomFilter} will be serializable if the provided {@code Funnel<T>}\n",
        "298": "   * is.\n",
        "305": "   * @param expectedInsertions the number of expected insertions to the constructed {@code\n",
        "306": "   *     BloomFilter}; must be positive\n",
        "316": "   * Creates a {@link BloomFilter} with the expected number of insertions and expected false\n",
        "317": "   * positive probability.\n",
        "322": "   * <p>The constructed {@code BloomFilter} will be serializable if the provided {@code Funnel<T>}\n",
        "323": "   * is.\n",
        "330": "   * @param expectedInsertions the number of expected insertions to the constructed {@code\n",
        "331": "   *     BloomFilter}; must be positive\n",
        "369": "   * Creates a {@link BloomFilter} with the expected number of insertions and a default expected\n",
        "370": "   * false positive probability of 3%.\n",
        "375": "   * <p>The constructed {@code BloomFilter} will be serializable if the provided {@code Funnel<T>}\n",
        "376": "   * is.\n",
        "383": "   * @param expectedInsertions the number of expected insertions to the constructed {@code\n",
        "384": "   *     BloomFilter}; must be positive\n",
        "392": "   * Creates a {@link BloomFilter} with the expected number of insertions and a default expected\n",
        "393": "   * false positive probability of 3%.\n",
        "398": "   * <p>The constructed {@code BloomFilter} will be serializable if the provided {@code Funnel<T>}\n",
        "399": "   * is.\n",
        "406": "   * @param expectedInsertions the number of expected insertions to the constructed {@code\n",
        "407": "   *     BloomFilter}; must be positive\n",
        "431": "   * <p>See http://en.wikipedia.org/wiki/File:Bloom_filter_fp_probability.svg for the formula.\n",
        "446": "   * <p>See http://en.wikipedia.org/wiki/Bloom_filter#Probability_of_false_positives for the\n",
        "447": "   * formula.\n",
        "507": "   * Reads a byte stream, which was written by {@linkplain #writeTo(OutputStream)}, into a {@code\n",
        "508": "   * BloomFilter}.\n",
        "510": "   * <p>The {@code Funnel} to be used is not encoded in the stream, so it must be provided here.\n"
    },
    "removed": {
        "108": "  /**\n",
        "109": "   * The strategy we employ to map an element T to {@code numHashFunctions} bit indexes.\n",
        "110": "   */\n",
        "136": "   * Returns {@code true} if the element <i>might</i> have been put in this Bloom filter,\n",
        "137": "   * {@code false} if this is <i>definitely</i> not the case.\n",
        "170": "   * Returns the probability that {@linkplain #mightContain(Object)} will erroneously return\n",
        "171": "   * {@code true} for an object that has not actually been put in the {@code BloomFilter}.\n",
        "173": "   * <p>Ideally, this number should be close to the {@code fpp} parameter passed in\n",
        "174": "   * {@linkplain #create(Funnel, int, double)}, or smaller. If it is significantly higher, it is\n",
        "175": "   * usually the case that too many elements (more than expected) have been put in the\n",
        "176": "   * {@code BloomFilter}, degenerating it.\n",
        "207": "  /**\n",
        "208": "   * Returns the number of bits in the underlying bit array.\n",
        "209": "   */\n",
        "295": "   * Creates a {@link BloomFilter} with the expected number of insertions and\n",
        "296": "   * expected false positive probability.\n",
        "301": "   * <p>The constructed {@code BloomFilter} will be serializable if the provided\n",
        "302": "   * {@code Funnel<T>} is.\n",
        "309": "   * @param expectedInsertions the number of expected insertions to the constructed\n",
        "310": "   *     {@code BloomFilter}; must be positive\n",
        "320": "   * Creates a {@link BloomFilter} with the expected number of insertions and\n",
        "321": "   * expected false positive probability.\n",
        "326": "   * <p>The constructed {@code BloomFilter} will be serializable if the provided\n",
        "327": "   * {@code Funnel<T>} is.\n",
        "334": "   * @param expectedInsertions the number of expected insertions to the constructed\n",
        "335": "   *     {@code BloomFilter}; must be positive\n",
        "373": "   * Creates a {@link BloomFilter} with the expected number of insertions and a\n",
        "374": "   * default expected false positive probability of 3%.\n",
        "379": "   * <p>The constructed {@code BloomFilter} will be serializable if the provided\n",
        "380": "   * {@code Funnel<T>} is.\n",
        "387": "   * @param expectedInsertions the number of expected insertions to the constructed\n",
        "388": "   *     {@code BloomFilter}; must be positive\n",
        "396": "   * Creates a {@link BloomFilter} with the expected number of insertions and a\n",
        "397": "   * default expected false positive probability of 3%.\n",
        "402": "   * <p>The constructed {@code BloomFilter} will be serializable if the provided\n",
        "403": "   * {@code Funnel<T>} is.\n",
        "410": "   * @param expectedInsertions the number of expected insertions to the constructed\n",
        "411": "   *     {@code BloomFilter}; must be positive\n",
        "435": "   * See http://en.wikipedia.org/wiki/File:Bloom_filter_fp_probability.svg for the formula.\n",
        "450": "   * See http://en.wikipedia.org/wiki/Bloom_filter#Probability_of_false_positives for the formula.\n",
        "510": "   * Reads a byte stream, which was written by {@linkplain #writeTo(OutputStream)}, into a\n",
        "511": "   * {@code BloomFilter}.\n",
        "513": "   * The {@code Funnel} to be used is not encoded in the stream, so it must be provided here.\n"
    }
}