{
    "addition": {
        "110": "  //    @GoogleInternal\n",
        "111": "  //    CompactHashSetImpl {\n",
        "112": "  //      @Override\n",
        "113": "  //      public <E extends Comparable<E>> Set<E> create(Collection<E> contents) {\n",
        "114": "  //        return CompactHashSet.create(contents);\n",
        "115": "  //      }\n",
        "116": "  //    },\n",
        "117": "  //    @GoogleInternal\n",
        "118": "  //    CompactLinkedHashSetImpl {\n",
        "119": "  //      @Override\n",
        "120": "  //      public <E extends Comparable<E>> Set<E> create(Collection<E> contents) {\n",
        "121": "  //        return CompactLinkedHashSet.create(contents);\n",
        "122": "  //      }\n",
        "123": "  //    },\n",
        "124": "  ;\n",
        "220": "    //    @GoogleInternal\n",
        "221": "    //    CompactHashmapImpl {\n",
        "222": "    //      @Override\n",
        "223": "    //      public <K extends Comparable<K>, V> Map<K, V> create(Map<K, V> map) {\n",
        "224": "    //        Map<K, V> result = CompactHashMap.createWithExpectedSize(map.size());\n",
        "225": "    //        result.putAll(map);\n",
        "226": "    //        return result;\n",
        "227": "    //      }\n",
        "228": "    //    },\n",
        "229": "    //    @GoogleInternal\n",
        "230": "    //    CompactLinkedHashmapImpl {\n",
        "231": "    //      @Override\n",
        "232": "    //      public <K extends Comparable<K>, V> Map<K, V> create(Map<K, V> map) {\n",
        "233": "    //        Map<K, V> result = CompactLinkedHashMap.createWithExpectedSize(map.size());\n",
        "234": "    //        result.putAll(map);\n",
        "235": "    //        return result;\n",
        "236": "    //      }\n",
        "237": "    //    },\n",
        "411": "    abstract <R extends Comparable<R>, C extends Comparable<C>, V> Table<R, C, V> create(\n",
        "412": "        Table<R, C, V> contents);\n"
    },
    "removed": {
        "107": "//    @GoogleInternal\n",
        "108": "//    CompactHashSetImpl {\n",
        "109": "//      @Override\n",
        "110": "//      public <E extends Comparable<E>> Set<E> create(Collection<E> contents) {\n",
        "111": "//        return CompactHashSet.create(contents);\n",
        "112": "//      }\n",
        "113": "//    },\n",
        "114": "//    @GoogleInternal\n",
        "115": "//    CompactLinkedHashSetImpl {\n",
        "116": "//      @Override\n",
        "117": "//      public <E extends Comparable<E>> Set<E> create(Collection<E> contents) {\n",
        "118": "//        return CompactLinkedHashSet.create(contents);\n",
        "119": "//      }\n",
        "120": "//    },\n",
        "121": "    ;\n",
        "217": "//    @GoogleInternal\n",
        "218": "//    CompactHashmapImpl {\n",
        "219": "//      @Override\n",
        "220": "//      public <K extends Comparable<K>, V> Map<K, V> create(Map<K, V> map) {\n",
        "221": "//        Map<K, V> result = CompactHashMap.createWithExpectedSize(map.size());\n",
        "222": "//        result.putAll(map);\n",
        "223": "//        return result;\n",
        "224": "//      }\n",
        "225": "//    },\n",
        "226": "//    @GoogleInternal\n",
        "227": "//    CompactLinkedHashmapImpl {\n",
        "228": "//      @Override\n",
        "229": "//      public <K extends Comparable<K>, V> Map<K, V> create(Map<K, V> map) {\n",
        "230": "//        Map<K, V> result = CompactLinkedHashMap.createWithExpectedSize(map.size());\n",
        "231": "//        result.putAll(map);\n",
        "232": "//        return result;\n",
        "233": "//      }\n",
        "234": "//    },\n",
        "408": "    abstract <R extends Comparable<R>, C extends Comparable<C>, V>\n",
        "409": "        Table<R, C, V> create(Table<R, C, V> contents);\n"
    }
}