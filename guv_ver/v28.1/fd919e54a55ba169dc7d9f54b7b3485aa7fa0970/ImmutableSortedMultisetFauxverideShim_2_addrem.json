{
    "addition": {
        "23": " * \"Overrides\" the {@link ImmutableMultiset} static methods that lack {@link\n",
        "24": " * ImmutableSortedMultiset} equivalents with deprecated, exception-throwing versions. This prevents\n",
        "25": " * accidents like the following:\n",
        "27": " * <pre>{@code\n",
        "28": " * List<Object> objects = ...;\n",
        "29": " * // Sort them:\n",
        "30": " * Set<Object> sorted = ImmutableSortedMultiset.copyOf(objects);\n",
        "31": " * // BAD CODE! The returned multiset is actually an unsorted ImmutableMultiset!\n",
        "32": " * }</pre>\n",
        "42": "   * Not supported. Use {@link ImmutableSortedMultiset#toImmutableSortedMultiset} instead. This\n",
        "43": "   * method exists only to hide {@link ImmutableMultiset#toImmutableMultiset} from consumers of\n",
        "44": "   * {@code ImmutableSortedMultiset}.\n",
        "56": "   * Not supported. Use {@link ImmutableSortedMultiset#toImmutableSortedMultiset} instead. This\n",
        "57": "   * method exists only to hide {@link ImmutableMultiset#toImmutableMultiset} from consumers of\n",
        "58": "   * {@code ImmutableSortedMultiset}.\n",
        "89": "   * @deprecated <b>Pass a parameter of type {@code Comparable} to use {@link\n",
        "90": "   *     ImmutableSortedMultiset#of(Comparable)}.</b>\n",
        "103": "   * @deprecated <b>Pass the parameters of type {@code Comparable} to use {@link\n",
        "104": "   *     ImmutableSortedMultiset#of(Comparable, Comparable)}.</b>\n",
        "117": "   * @deprecated <b>Pass the parameters of type {@code Comparable} to use {@link\n",
        "118": "   *     ImmutableSortedMultiset#of(Comparable, Comparable, Comparable)}.</b>\n",
        "132": "   *     ImmutableSortedMultiset#of(Comparable, Comparable, Comparable, Comparable)}. </b>\n",
        "146": "   *     ImmutableSortedMultiset#of(Comparable, Comparable, Comparable, Comparable, Comparable)} .\n",
        "147": "   *     </b>\n",
        "161": "   *     ImmutableSortedMultiset#of(Comparable, Comparable, Comparable, Comparable, Comparable,\n",
        "162": "   *     Comparable, Comparable...)} . </b>\n",
        "176": "   * @deprecated <b>Pass parameters of type {@code Comparable} to use {@link\n",
        "177": "   *     ImmutableSortedMultiset#copyOf(Comparable[])}.</b>\n"
    },
    "removed": {
        "23": " * \"Overrides\" the {@link ImmutableMultiset} static methods that lack\n",
        "24": " * {@link ImmutableSortedMultiset} equivalents with deprecated, exception-throwing versions. This\n",
        "25": " * prevents accidents like the following:\n",
        "27": " * <pre>   {@code\n",
        "28": " *\n",
        "29": " *   List<Object> objects = ...;\n",
        "30": " *   // Sort them:\n",
        "31": " *   Set<Object> sorted = ImmutableSortedMultiset.copyOf(objects);\n",
        "32": " *   // BAD CODE! The returned multiset is actually an unsorted ImmutableMultiset!}</pre>\n",
        "42": "   * Not supported. Use {@link ImmutableSortedMultiset#toImmutableSortedMultiset} instead.\n",
        "43": "   * This method exists only to hide {@link ImmutableMultiset#toImmutableMultiset} from\n",
        "44": "   * consumers of {@code ImmutableSortedMultiset}.\n",
        "56": "   * Not supported. Use {@link ImmutableSortedMultiset#toImmutableSortedMultiset} instead.\n",
        "57": "   * This method exists only to hide {@link ImmutableMultiset#toImmutableMultiset} from\n",
        "58": "   * consumers of {@code ImmutableSortedMultiset}.\n",
        "89": "   * @deprecated <b>Pass a parameter of type {@code Comparable} to use\n",
        "90": "   *             {@link ImmutableSortedMultiset#of(Comparable)}.</b>\n",
        "103": "   * @deprecated <b>Pass the parameters of type {@code Comparable} to use\n",
        "104": "   *             {@link ImmutableSortedMultiset#of(Comparable, Comparable)}.</b>\n",
        "117": "   * @deprecated <b>Pass the parameters of type {@code Comparable} to use\n",
        "118": "   *             {@link ImmutableSortedMultiset#of(Comparable, Comparable, Comparable)}.</b>\n",
        "132": "   *             ImmutableSortedMultiset#of(Comparable, Comparable, Comparable, Comparable)}. </b>\n",
        "146": "   *             ImmutableSortedMultiset#of(Comparable, Comparable, Comparable, Comparable,\n",
        "147": "   *             Comparable)} . </b>\n",
        "161": "   *             ImmutableSortedMultiset#of(Comparable, Comparable, Comparable, Comparable,\n",
        "162": "   *             Comparable, Comparable, Comparable...)} . </b>\n",
        "176": "   * @deprecated <b>Pass parameters of type {@code Comparable} to use\n",
        "177": "   *             {@link ImmutableSortedMultiset#copyOf(Comparable[])}.</b>\n"
    }
}