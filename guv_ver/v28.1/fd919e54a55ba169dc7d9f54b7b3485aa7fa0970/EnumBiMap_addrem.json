{
    "addition": {
        "31": " * A {@code BiMap} backed by two {@code EnumMap} instances. Null keys and values are not permitted.\n",
        "32": " * An {@code EnumBiMap} and its inverse are both serializable.\n",
        "35": " * \"https://github.com/google/guava/wiki/NewCollectionTypesExplained#bimap\"> {@code BiMap}</a>.\n",
        "46": "   * Returns a new, empty {@code EnumBiMap} using the specified key and value types.\n",
        "57": "   * Returns a new bimap with the same mappings as the specified map. If the specified map is an\n",
        "58": "   * {@code EnumBiMap}, the new bimap has the same types as the provided map. Otherwise, the\n",
        "59": "   * specified map must contain at least one mapping, in order to determine the key and value types.\n",
        "62": "   * @throws IllegalArgumentException if map is not an {@code EnumBiMap} instance and contains no\n",
        "63": "   *     mappings\n",
        "119": "   * @serialData the key class, value class, number of entries, first key, first value, second key,\n",
        "120": "   *     second value, and so on.\n"
    },
    "removed": {
        "31": " * A {@code BiMap} backed by two {@code EnumMap} instances. Null keys and values\n",
        "32": " * are not permitted. An {@code EnumBiMap} and its inverse are both\n",
        "33": " * serializable.\n",
        "36": " * \"https://github.com/google/guava/wiki/NewCollectionTypesExplained#bimap\">\n",
        "37": " * {@code BiMap}</a>.\n",
        "48": "   * Returns a new, empty {@code EnumBiMap} using the specified key and value\n",
        "49": "   * types.\n",
        "60": "   * Returns a new bimap with the same mappings as the specified map. If the\n",
        "61": "   * specified map is an {@code EnumBiMap}, the new bimap has the same types as\n",
        "62": "   * the provided map. Otherwise, the specified map must contain at least one\n",
        "63": "   * mapping, in order to determine the key and value types.\n",
        "66": "   * @throws IllegalArgumentException if map is not an {@code EnumBiMap}\n",
        "67": "   *     instance and contains no mappings\n",
        "123": "   * @serialData the key class, value class, number of entries, first key, first\n",
        "124": "   *     value, second key, second value, and so on.\n"
    }
}