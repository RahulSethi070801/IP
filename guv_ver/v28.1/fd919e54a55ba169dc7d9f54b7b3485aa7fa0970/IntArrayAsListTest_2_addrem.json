{
    "addition": {
        "47": "      temp[i] = checkNotNull(values[i]); // checkNotNull for GWT (do not optimize).\n",
        "56": "            ListTestSuiteBuilder.using(new IntsAsListGenerator()).named(\"Ints.asList\"),\n",
        "62": "                .named(\"Ints.asList, middle subList\"));\n",
        "68": "              .withFeatures(\n",
        "69": "                  CollectionSize.ONE,\n",
        "70": "                  CollectionSize.SEVERAL,\n",
        "71": "                  CollectionFeature.RESTRICTS_ELEMENTS,\n",
        "72": "                  ListFeature.SUPPORTS_SET)\n",
        "73": "              .createTestSuite());\n",
        "82": "    @Override\n",
        "83": "    protected List<Integer> create(Integer[] elements) {\n",
        "89": "    @Override\n",
        "90": "    protected List<Integer> create(Integer[] elements) {\n",
        "98": "    @Override\n",
        "99": "    protected List<Integer> create(Integer[] elements) {\n",
        "107": "    @Override\n",
        "108": "    protected List<Integer> create(Integer[] elements) {\n",
        "123": "  public abstract static class TestIntegerListGenerator implements TestListGenerator<Integer> {\n",
        "140": "     * Creates a new collection containing the given elements; implement this method instead of\n",
        "141": "     * {@link #create(Object...)}.\n",
        "145": "    @Override\n",
        "146": "    public Integer[] createArray(int length) {\n"
    },
    "removed": {
        "47": "      temp[i] = checkNotNull(values[i]);  // checkNotNull for GWT (do not optimize).\n",
        "56": "            ListTestSuiteBuilder.using(new IntsAsListGenerator())\n",
        "57": "                .named(\"Ints.asList\"),\n",
        "58": "\n",
        "61": "\n",
        "64": "\n",
        "66": "                .named(\"Ints.asList, middle subList\")\n",
        "67": "        );\n",
        "73": "          .withFeatures(CollectionSize.ONE,\n",
        "74": "                        CollectionSize.SEVERAL,\n",
        "75": "                        CollectionFeature.RESTRICTS_ELEMENTS,\n",
        "76": "                        ListFeature.SUPPORTS_SET)\n",
        "77": "          .createTestSuite());\n",
        "86": "    @Override protected List<Integer> create(Integer[] elements) {\n",
        "92": "    @Override protected List<Integer> create(Integer[] elements) {\n",
        "100": "    @Override protected List<Integer> create(Integer[] elements) {\n",
        "108": "    @Override protected List<Integer> create(Integer[] elements) {\n",
        "123": "  public static abstract class TestIntegerListGenerator\n",
        "124": "      implements TestListGenerator<Integer> {\n",
        "141": "     * Creates a new collection containing the given elements; implement this\n",
        "142": "     * method instead of {@link #create(Object...)}.\n",
        "146": "    @Override public Integer[] createArray(int length) {\n"
    }
}