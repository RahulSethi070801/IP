{
    "addition": {
        "69": "    Sample sample =\n",
        "70": "        new Sample() {\n",
        "71": "          @Override\n",
        "72": "          public void noneDeclared() {\n",
        "73": "            try {\n",
        "74": "              methodThatDoesntThrowAnything();\n",
        "75": "            } catch (Throwable t) {\n",
        "76": "              Throwables.propagateIfPossible(t);\n",
        "77": "              throw new SomeChainingException(t);\n",
        "78": "            }\n",
        "79": "          }\n",
        "80": "        };\n",
        "88": "    Sample sample =\n",
        "89": "        new Sample() {\n",
        "90": "          @Override\n",
        "91": "          public void noneDeclared() {\n",
        "92": "            try {\n",
        "93": "              methodThatThrowsUnchecked();\n",
        "94": "            } catch (Throwable t) {\n",
        "95": "              Throwables.propagateIfPossible(t);\n",
        "96": "              throw new SomeChainingException(t);\n",
        "97": "            }\n",
        "98": "          }\n",
        "99": "        };\n",
        "111": "    Sample sample =\n",
        "112": "        new Sample() {\n",
        "113": "          @Override\n",
        "114": "          public void noneDeclared() {\n",
        "115": "            try {\n",
        "116": "              methodThatThrowsUndeclaredChecked();\n",
        "117": "            } catch (Throwable t) {\n",
        "118": "              Throwables.propagateIfPossible(t);\n",
        "119": "              throw new SomeChainingException(t);\n",
        "120": "            }\n",
        "121": "          }\n",
        "122": "        };\n",
        "133": "  public void testPropagateIfPossible_OneDeclared_NoneThrown() throws SomeCheckedException {\n",
        "134": "    Sample sample =\n",
        "135": "        new Sample() {\n",
        "136": "          @Override\n",
        "137": "          public void oneDeclared() throws SomeCheckedException {\n",
        "138": "            try {\n",
        "139": "              methodThatDoesntThrowAnything();\n",
        "140": "            } catch (Throwable t) {\n",
        "141": "              // yes, this block is never reached, but for purposes of illustration\n",
        "142": "              // we're keeping it the same in each test\n",
        "143": "              Throwables.propagateIfPossible(t, SomeCheckedException.class);\n",
        "144": "              throw new SomeChainingException(t);\n",
        "145": "            }\n",
        "146": "          }\n",
        "147": "        };\n",
        "154": "  public void testPropagateIfPossible_OneDeclared_UncheckedThrown() throws SomeCheckedException {\n",
        "155": "    Sample sample =\n",
        "156": "        new Sample() {\n",
        "157": "          @Override\n",
        "158": "          public void oneDeclared() throws SomeCheckedException {\n",
        "159": "            try {\n",
        "160": "              methodThatThrowsUnchecked();\n",
        "161": "            } catch (Throwable t) {\n",
        "162": "              Throwables.propagateIfPossible(t, SomeCheckedException.class);\n",
        "163": "              throw new SomeChainingException(t);\n",
        "164": "            }\n",
        "165": "          }\n",
        "166": "        };\n",
        "178": "    Sample sample =\n",
        "179": "        new Sample() {\n",
        "180": "          @Override\n",
        "181": "          public void oneDeclared() throws SomeCheckedException {\n",
        "182": "            try {\n",
        "183": "              methodThatThrowsChecked();\n",
        "184": "            } catch (Throwable t) {\n",
        "185": "              Throwables.propagateIfPossible(t, SomeCheckedException.class);\n",
        "186": "              throw new SomeChainingException(t);\n",
        "187": "            }\n",
        "188": "          }\n",
        "189": "        };\n",
        "200": "  public void testPropagateIfPossible_OneDeclared_UndeclaredThrown() throws SomeCheckedException {\n",
        "201": "    Sample sample =\n",
        "202": "        new Sample() {\n",
        "203": "          @Override\n",
        "204": "          public void oneDeclared() throws SomeCheckedException {\n",
        "205": "            try {\n",
        "206": "              methodThatThrowsUndeclaredChecked();\n",
        "207": "            } catch (Throwable t) {\n",
        "208": "              Throwables.propagateIfPossible(t, SomeCheckedException.class);\n",
        "209": "              throw new SomeChainingException(t);\n",
        "210": "            }\n",
        "211": "          }\n",
        "212": "        };\n",
        "225": "    Sample sample =\n",
        "226": "        new Sample() {\n",
        "227": "          @Override\n",
        "228": "          public void twoDeclared() throws SomeCheckedException, SomeOtherCheckedException {\n",
        "229": "            try {\n",
        "230": "              methodThatDoesntThrowAnything();\n",
        "231": "            } catch (Throwable t) {\n",
        "232": "              Throwables.propagateIfPossible(\n",
        "233": "                  t, SomeCheckedException.class, SomeOtherCheckedException.class);\n",
        "234": "              throw new SomeChainingException(t);\n",
        "235": "            }\n",
        "236": "          }\n",
        "237": "        };\n",
        "246": "    Sample sample =\n",
        "247": "        new Sample() {\n",
        "248": "          @Override\n",
        "249": "          public void twoDeclared() throws SomeCheckedException, SomeOtherCheckedException {\n",
        "250": "            try {\n",
        "251": "              methodThatThrowsUnchecked();\n",
        "252": "            } catch (Throwable t) {\n",
        "253": "              Throwables.propagateIfPossible(\n",
        "254": "                  t, SomeCheckedException.class, SomeOtherCheckedException.class);\n",
        "255": "              throw new SomeChainingException(t);\n",
        "256": "            }\n",
        "257": "          }\n",
        "258": "        };\n",
        "269": "  public void testPropagateIfPossible_TwoDeclared_CheckedThrown() throws SomeOtherCheckedException {\n",
        "270": "    Sample sample =\n",
        "271": "        new Sample() {\n",
        "272": "          @Override\n",
        "273": "          public void twoDeclared() throws SomeCheckedException, SomeOtherCheckedException {\n",
        "274": "            try {\n",
        "275": "              methodThatThrowsChecked();\n",
        "276": "            } catch (Throwable t) {\n",
        "277": "              Throwables.propagateIfPossible(\n",
        "278": "                  t, SomeCheckedException.class, SomeOtherCheckedException.class);\n",
        "279": "              throw new SomeChainingException(t);\n",
        "280": "            }\n",
        "281": "          }\n",
        "282": "        };\n",
        "293": "  public void testPropagateIfPossible_TwoDeclared_OtherCheckedThrown() throws SomeCheckedException {\n",
        "294": "    Sample sample =\n",
        "295": "        new Sample() {\n",
        "296": "          @Override\n",
        "297": "          public void twoDeclared() throws SomeCheckedException, SomeOtherCheckedException {\n",
        "298": "            try {\n",
        "299": "              methodThatThrowsOtherChecked();\n",
        "300": "            } catch (Throwable t) {\n",
        "301": "              Throwables.propagateIfPossible(\n",
        "302": "                  t, SomeCheckedException.class, SomeOtherCheckedException.class);\n",
        "303": "              throw new SomeChainingException(t);\n",
        "304": "            }\n",
        "305": "          }\n",
        "306": "        };\n",
        "336": "    Throwables.propagateIfPossible(null, SomeCheckedException.class, SomeUncheckedException.class);\n",
        "341": "    Sample sample =\n",
        "342": "        new Sample() {\n",
        "343": "          @Override\n",
        "344": "          public void noneDeclared() {\n",
        "345": "            try {\n",
        "346": "              methodThatDoesntThrowAnything();\n",
        "347": "            } catch (Throwable t) {\n",
        "348": "              throw Throwables.propagate(t);\n",
        "349": "            }\n",
        "350": "          }\n",
        "351": "        };\n",
        "359": "    Sample sample =\n",
        "360": "        new Sample() {\n",
        "361": "          @Override\n",
        "362": "          public void noneDeclared() {\n",
        "363": "            try {\n",
        "364": "              methodThatThrowsUnchecked();\n",
        "365": "            } catch (Throwable t) {\n",
        "366": "              throw Throwables.propagate(t);\n",
        "367": "            }\n",
        "368": "          }\n",
        "369": "        };\n",
        "381": "    Sample sample =\n",
        "382": "        new Sample() {\n",
        "383": "          @Override\n",
        "384": "          public void noneDeclared() {\n",
        "385": "            try {\n",
        "386": "              methodThatThrowsError();\n",
        "387": "            } catch (Throwable t) {\n",
        "388": "              throw Throwables.propagate(t);\n",
        "389": "            }\n",
        "390": "          }\n",
        "391": "        };\n",
        "403": "    Sample sample =\n",
        "404": "        new Sample() {\n",
        "405": "          @Override\n",
        "406": "          public void noneDeclared() {\n",
        "407": "            try {\n",
        "408": "              methodThatThrowsChecked();\n",
        "409": "            } catch (Throwable t) {\n",
        "410": "              throw Throwables.propagate(t);\n",
        "411": "            }\n",
        "412": "          }\n",
        "413": "        };\n",
        "453": "  public void testPropagateIfInstanceOf_NoneThrown() throws SomeCheckedException {\n",
        "454": "    Sample sample =\n",
        "455": "        new Sample() {\n",
        "456": "          @Override\n",
        "457": "          public void oneDeclared() throws SomeCheckedException {\n",
        "458": "            try {\n",
        "459": "              methodThatDoesntThrowAnything();\n",
        "460": "            } catch (Throwable t) {\n",
        "461": "              Throwables.propagateIfInstanceOf(t, SomeCheckedException.class);\n",
        "462": "              throw Throwables.propagate(t);\n",
        "463": "            }\n",
        "464": "          }\n",
        "465": "        };\n",
        "473": "    Sample sample =\n",
        "474": "        new Sample() {\n",
        "475": "          @Override\n",
        "476": "          public void oneDeclared() throws SomeCheckedException {\n",
        "477": "            try {\n",
        "478": "              methodThatThrowsChecked();\n",
        "479": "            } catch (Throwable t) {\n",
        "480": "              Throwables.propagateIfInstanceOf(t, SomeCheckedException.class);\n",
        "481": "              throw Throwables.propagate(t);\n",
        "482": "            }\n",
        "483": "          }\n",
        "484": "        };\n",
        "495": "  public void testPropagateIfInstanceOf_UncheckedThrown() throws SomeCheckedException {\n",
        "496": "    Sample sample =\n",
        "497": "        new Sample() {\n",
        "498": "          @Override\n",
        "499": "          public void oneDeclared() throws SomeCheckedException {\n",
        "500": "            try {\n",
        "501": "              methodThatThrowsUnchecked();\n",
        "502": "            } catch (Throwable t) {\n",
        "503": "              Throwables.propagateIfInstanceOf(t, SomeCheckedException.class);\n",
        "504": "              throw Throwables.propagate(t);\n",
        "505": "            }\n",
        "506": "          }\n",
        "507": "        };\n",
        "518": "  public void testPropagateIfInstanceOf_UndeclaredThrown() throws SomeCheckedException {\n",
        "519": "    Sample sample =\n",
        "520": "        new Sample() {\n",
        "521": "          @Override\n",
        "522": "          public void oneDeclared() throws SomeCheckedException {\n",
        "523": "            try {\n",
        "524": "              methodThatThrowsOtherChecked();\n",
        "525": "            } catch (Throwable t) {\n",
        "526": "              Throwables.propagateIfInstanceOf(t, SomeCheckedException.class);\n",
        "527": "              throw Throwables.propagate(t);\n",
        "528": "            }\n",
        "529": "          }\n",
        "530": "        };\n",
        "568": "    SomeChainingException exception = new SomeChainingException(new SomeChainingException(cause));\n",
        "625": "\n",
        "626": "  static void methodThatThrowsUndeclaredChecked() throws SomeUndeclaredCheckedException {\n"
    },
    "removed": {
        "69": "    Sample sample = new Sample() {\n",
        "70": "      @Override public void noneDeclared() {\n",
        "71": "        try {\n",
        "72": "          methodThatDoesntThrowAnything();\n",
        "73": "        } catch (Throwable t) {\n",
        "74": "          Throwables.propagateIfPossible(t);\n",
        "75": "          throw new SomeChainingException(t);\n",
        "76": "        }\n",
        "77": "      }\n",
        "78": "    };\n",
        "86": "    Sample sample = new Sample() {\n",
        "87": "      @Override public void noneDeclared() {\n",
        "88": "        try {\n",
        "89": "          methodThatThrowsUnchecked();\n",
        "90": "        } catch (Throwable t) {\n",
        "91": "          Throwables.propagateIfPossible(t);\n",
        "92": "          throw new SomeChainingException(t);\n",
        "93": "        }\n",
        "94": "      }\n",
        "95": "    };\n",
        "107": "    Sample sample = new Sample() {\n",
        "108": "      @Override public void noneDeclared() {\n",
        "109": "        try {\n",
        "110": "          methodThatThrowsUndeclaredChecked();\n",
        "111": "        } catch (Throwable t) {\n",
        "112": "          Throwables.propagateIfPossible(t);\n",
        "113": "          throw new SomeChainingException(t);\n",
        "114": "        }\n",
        "115": "      }\n",
        "116": "    };\n",
        "127": "  public void testPropagateIfPossible_OneDeclared_NoneThrown()\n",
        "128": "      throws SomeCheckedException {\n",
        "129": "    Sample sample = new Sample() {\n",
        "130": "      @Override public void oneDeclared() throws SomeCheckedException {\n",
        "131": "        try {\n",
        "132": "          methodThatDoesntThrowAnything();\n",
        "133": "        } catch (Throwable t) {\n",
        "134": "          // yes, this block is never reached, but for purposes of illustration\n",
        "135": "          // we're keeping it the same in each test\n",
        "136": "          Throwables.propagateIfPossible(t, SomeCheckedException.class);\n",
        "137": "          throw new SomeChainingException(t);\n",
        "138": "        }\n",
        "139": "      }\n",
        "140": "    };\n",
        "147": "  public void testPropagateIfPossible_OneDeclared_UncheckedThrown()\n",
        "148": "      throws SomeCheckedException {\n",
        "149": "    Sample sample = new Sample() {\n",
        "150": "      @Override public void oneDeclared() throws SomeCheckedException {\n",
        "151": "        try {\n",
        "152": "          methodThatThrowsUnchecked();\n",
        "153": "        } catch (Throwable t) {\n",
        "154": "          Throwables.propagateIfPossible(t, SomeCheckedException.class);\n",
        "155": "          throw new SomeChainingException(t);\n",
        "156": "        }\n",
        "157": "      }\n",
        "158": "    };\n",
        "170": "    Sample sample = new Sample() {\n",
        "171": "      @Override public void oneDeclared() throws SomeCheckedException {\n",
        "172": "        try {\n",
        "173": "          methodThatThrowsChecked();\n",
        "174": "        } catch (Throwable t) {\n",
        "175": "          Throwables.propagateIfPossible(t, SomeCheckedException.class);\n",
        "176": "          throw new SomeChainingException(t);\n",
        "177": "        }\n",
        "178": "      }\n",
        "179": "    };\n",
        "190": "  public void testPropagateIfPossible_OneDeclared_UndeclaredThrown()\n",
        "191": "      throws SomeCheckedException {\n",
        "192": "    Sample sample = new Sample() {\n",
        "193": "      @Override public void oneDeclared() throws SomeCheckedException {\n",
        "194": "        try {\n",
        "195": "          methodThatThrowsUndeclaredChecked();\n",
        "196": "        } catch (Throwable t) {\n",
        "197": "          Throwables.propagateIfPossible(t, SomeCheckedException.class);\n",
        "198": "          throw new SomeChainingException(t);\n",
        "199": "        }\n",
        "200": "      }\n",
        "201": "    };\n",
        "214": "    Sample sample = new Sample() {\n",
        "215": "      @Override public void twoDeclared() throws SomeCheckedException,\n",
        "216": "          SomeOtherCheckedException {\n",
        "217": "        try {\n",
        "218": "          methodThatDoesntThrowAnything();\n",
        "219": "        } catch (Throwable t) {\n",
        "220": "          Throwables.propagateIfPossible(t, SomeCheckedException.class,\n",
        "221": "              SomeOtherCheckedException.class);\n",
        "222": "          throw new SomeChainingException(t);\n",
        "223": "        }\n",
        "224": "      }\n",
        "225": "    };\n",
        "234": "    Sample sample = new Sample() {\n",
        "235": "      @Override public void twoDeclared() throws SomeCheckedException,\n",
        "236": "          SomeOtherCheckedException {\n",
        "237": "        try {\n",
        "238": "          methodThatThrowsUnchecked();\n",
        "239": "        } catch (Throwable t) {\n",
        "240": "          Throwables.propagateIfPossible(t, SomeCheckedException.class,\n",
        "241": "              SomeOtherCheckedException.class);\n",
        "242": "          throw new SomeChainingException(t);\n",
        "243": "        }\n",
        "244": "      }\n",
        "245": "    };\n",
        "256": "  public void testPropagateIfPossible_TwoDeclared_CheckedThrown()\n",
        "257": "      throws SomeOtherCheckedException {\n",
        "258": "    Sample sample = new Sample() {\n",
        "259": "      @Override public void twoDeclared() throws SomeCheckedException,\n",
        "260": "          SomeOtherCheckedException {\n",
        "261": "        try {\n",
        "262": "          methodThatThrowsChecked();\n",
        "263": "        } catch (Throwable t) {\n",
        "264": "          Throwables.propagateIfPossible(t, SomeCheckedException.class,\n",
        "265": "              SomeOtherCheckedException.class);\n",
        "266": "          throw new SomeChainingException(t);\n",
        "267": "        }\n",
        "268": "      }\n",
        "269": "    };\n",
        "280": "  public void testPropagateIfPossible_TwoDeclared_OtherCheckedThrown()\n",
        "281": "      throws SomeCheckedException {\n",
        "282": "    Sample sample = new Sample() {\n",
        "283": "      @Override public void twoDeclared() throws SomeCheckedException,\n",
        "284": "          SomeOtherCheckedException {\n",
        "285": "        try {\n",
        "286": "          methodThatThrowsOtherChecked();\n",
        "287": "        } catch (Throwable t) {\n",
        "288": "          Throwables.propagateIfPossible(t, SomeCheckedException.class,\n",
        "289": "              SomeOtherCheckedException.class);\n",
        "290": "          throw new SomeChainingException(t);\n",
        "291": "        }\n",
        "292": "      }\n",
        "293": "    };\n",
        "323": "    Throwables.propagateIfPossible(null, SomeCheckedException.class,\n",
        "324": "        SomeUncheckedException.class);\n",
        "329": "    Sample sample = new Sample() {\n",
        "330": "      @Override public void noneDeclared() {\n",
        "331": "        try {\n",
        "332": "          methodThatDoesntThrowAnything();\n",
        "333": "        } catch (Throwable t) {\n",
        "334": "          throw Throwables.propagate(t);\n",
        "335": "        }\n",
        "336": "      }\n",
        "337": "    };\n",
        "345": "    Sample sample = new Sample() {\n",
        "346": "      @Override public void noneDeclared() {\n",
        "347": "        try {\n",
        "348": "          methodThatThrowsUnchecked();\n",
        "349": "        } catch (Throwable t) {\n",
        "350": "          throw Throwables.propagate(t);\n",
        "351": "        }\n",
        "352": "      }\n",
        "353": "    };\n",
        "365": "    Sample sample = new Sample() {\n",
        "366": "      @Override public void noneDeclared() {\n",
        "367": "        try {\n",
        "368": "          methodThatThrowsError();\n",
        "369": "        } catch (Throwable t) {\n",
        "370": "          throw Throwables.propagate(t);\n",
        "371": "        }\n",
        "372": "      }\n",
        "373": "    };\n",
        "385": "    Sample sample = new Sample() {\n",
        "386": "      @Override public void noneDeclared() {\n",
        "387": "        try {\n",
        "388": "          methodThatThrowsChecked();\n",
        "389": "        } catch (Throwable t) {\n",
        "390": "          throw Throwables.propagate(t);\n",
        "391": "        }\n",
        "392": "      }\n",
        "393": "    };\n",
        "433": "  public void testPropagateIfInstanceOf_NoneThrown()\n",
        "434": "      throws SomeCheckedException {\n",
        "435": "    Sample sample = new Sample() {\n",
        "436": "      @Override public void oneDeclared() throws SomeCheckedException {\n",
        "437": "        try {\n",
        "438": "          methodThatDoesntThrowAnything();\n",
        "439": "        } catch (Throwable t) {\n",
        "440": "          Throwables.propagateIfInstanceOf(t, SomeCheckedException.class);\n",
        "441": "          throw Throwables.propagate(t);\n",
        "442": "        }\n",
        "443": "      }\n",
        "444": "    };\n",
        "452": "    Sample sample = new Sample() {\n",
        "453": "      @Override public void oneDeclared() throws SomeCheckedException {\n",
        "454": "        try {\n",
        "455": "          methodThatThrowsChecked();\n",
        "456": "        } catch (Throwable t) {\n",
        "457": "          Throwables.propagateIfInstanceOf(t, SomeCheckedException.class);\n",
        "458": "          throw Throwables.propagate(t);\n",
        "459": "        }\n",
        "460": "      }\n",
        "461": "    };\n",
        "472": "  public void testPropagateIfInstanceOf_UncheckedThrown()\n",
        "473": "      throws SomeCheckedException {\n",
        "474": "    Sample sample = new Sample() {\n",
        "475": "      @Override public void oneDeclared() throws SomeCheckedException {\n",
        "476": "        try {\n",
        "477": "          methodThatThrowsUnchecked();\n",
        "478": "        } catch (Throwable t) {\n",
        "479": "          Throwables.propagateIfInstanceOf(t, SomeCheckedException.class);\n",
        "480": "          throw Throwables.propagate(t);\n",
        "481": "        }\n",
        "482": "      }\n",
        "483": "    };\n",
        "494": "  public void testPropagateIfInstanceOf_UndeclaredThrown()\n",
        "495": "      throws SomeCheckedException {\n",
        "496": "    Sample sample = new Sample() {\n",
        "497": "      @Override public void oneDeclared() throws SomeCheckedException {\n",
        "498": "        try {\n",
        "499": "          methodThatThrowsOtherChecked();\n",
        "500": "        } catch (Throwable t) {\n",
        "501": "          Throwables.propagateIfInstanceOf(t, SomeCheckedException.class);\n",
        "502": "          throw Throwables.propagate(t);\n",
        "503": "        }\n",
        "504": "      }\n",
        "505": "    };\n",
        "543": "    SomeChainingException exception =\n",
        "544": "        new SomeChainingException(new SomeChainingException(cause));\n",
        "590": "  static void methodThatThrowsUndeclaredChecked()\n",
        "591": "      throws SomeUndeclaredCheckedException {\n"
    }
}