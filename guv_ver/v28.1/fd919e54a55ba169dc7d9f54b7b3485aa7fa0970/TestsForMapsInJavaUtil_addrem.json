{
    "addition": {
        "45": " * Generates a test suite covering the {@link Map} implementations in the {@link java.util} package.\n",
        "46": " * Can be subclassed to specify tests that should be suppressed.\n",
        "135": "            new TestStringMapGenerator() {\n",
        "136": "              @Override\n",
        "137": "              protected Map<String, String> create(Entry<String, String>[] entries) {\n",
        "138": "                Map<String, String> map = populate(new HashMap<String, String>(), entries);\n",
        "139": "                return Collections.checkedMap(map, String.class, String.class);\n",
        "140": "              }\n",
        "141": "            })\n",
        "160": "            new TestStringSortedMapGenerator() {\n",
        "161": "              @Override\n",
        "162": "              protected SortedMap<String, String> create(Entry<String, String>[] entries) {\n",
        "163": "                SortedMap<String, String> map = populate(new TreeMap<String, String>(), entries);\n",
        "164": "                return Collections.checkedSortedMap(map, String.class, String.class);\n",
        "165": "              }\n",
        "166": "            })\n",
        "238": "    return MapTestSuiteBuilder.using(\n",
        "239": "            new TestStringMapGenerator() {\n",
        "240": "              @Override\n",
        "241": "              protected Map<String, String> create(Entry<String, String>[] entries) {\n",
        "242": "                return populate(new Hashtable<String, String>(), entries);\n",
        "243": "              }\n",
        "244": "            })\n",
        "245": "        .withFeatures(\n",
        "246": "            MapFeature.GENERAL_PURPOSE,\n",
        "247": "            MapFeature.FAILS_FAST_ON_CONCURRENT_MODIFICATION,\n",
        "248": "            MapFeature.RESTRICTS_KEYS,\n",
        "249": "            MapFeature.SUPPORTS_REMOVE,\n",
        "250": "            CollectionFeature.FAILS_FAST_ON_CONCURRENT_MODIFICATION,\n",
        "251": "            CollectionFeature.SERIALIZABLE,\n",
        "252": "            CollectionFeature.SUPPORTS_ITERATOR_REMOVE,\n",
        "253": "            CollectionFeature.SUPPORTS_REMOVE,\n",
        "254": "            CollectionSize.ANY)\n",
        "255": "        .named(\"Hashtable\")\n",
        "256": "        .suppressing(suppressForHashtable())\n",
        "257": "        .createTestSuite();\n",
        "334": "            new TestStringMapGenerator() {\n",
        "335": "              @Override\n",
        "336": "              protected Map<String, String> create(Entry<String, String>[] entries) {\n",
        "337": "                return Collections.unmodifiableMap(toHashMap(entries));\n",
        "338": "              }\n",
        "339": "            })\n",
        "353": "            new TestStringSortedMapGenerator() {\n",
        "354": "              @Override\n",
        "355": "              protected SortedMap<String, String> create(Entry<String, String>[] entries) {\n",
        "356": "                SortedMap<String, String> map = populate(new TreeMap<String, String>(), entries);\n",
        "357": "                return Collections.unmodifiableSortedMap(map);\n",
        "358": "              }\n",
        "359": "            })\n"
    },
    "removed": {
        "45": " * Generates a test suite covering the {@link Map} implementations in the\n",
        "46": " * {@link java.util} package. Can be subclassed to specify tests that should\n",
        "47": " * be suppressed.\n",
        "136": "        new TestStringMapGenerator() {\n",
        "137": "          @Override\n",
        "138": "          protected Map<String, String> create(Entry<String, String>[] entries) {\n",
        "139": "            Map<String, String> map = populate(new HashMap<String, String>(), entries);\n",
        "140": "            return Collections.checkedMap(map, String.class, String.class);\n",
        "141": "          }\n",
        "142": "        })\n",
        "161": "        new TestStringSortedMapGenerator() {\n",
        "162": "          @Override\n",
        "163": "          protected SortedMap<String, String> create(Entry<String, String>[] entries) {\n",
        "164": "            SortedMap<String, String> map = populate(new TreeMap<String, String>(), entries);\n",
        "165": "            return Collections.checkedSortedMap(map, String.class, String.class);\n",
        "166": "          }\n",
        "167": "        })\n",
        "239": "      return MapTestSuiteBuilder.using(\n",
        "240": "          new TestStringMapGenerator() {\n",
        "241": "            @Override\n",
        "242": "            protected Map<String, String> create(Entry<String, String>[] entries) {\n",
        "243": "              return populate(new Hashtable<String, String>(), entries);\n",
        "244": "            }\n",
        "245": "          })\n",
        "246": "          .withFeatures(\n",
        "247": "              MapFeature.GENERAL_PURPOSE,\n",
        "248": "              MapFeature.FAILS_FAST_ON_CONCURRENT_MODIFICATION,\n",
        "249": "              MapFeature.RESTRICTS_KEYS,\n",
        "250": "              MapFeature.SUPPORTS_REMOVE,\n",
        "251": "              CollectionFeature.FAILS_FAST_ON_CONCURRENT_MODIFICATION,\n",
        "252": "              CollectionFeature.SERIALIZABLE,\n",
        "253": "              CollectionFeature.SUPPORTS_ITERATOR_REMOVE,\n",
        "254": "              CollectionFeature.SUPPORTS_REMOVE,\n",
        "255": "              CollectionSize.ANY\n",
        "256": "          )\n",
        "257": "          .named(\"Hashtable\")\n",
        "258": "          .suppressing(suppressForHashtable())\n",
        "259": "          .createTestSuite();\n",
        "336": "        new TestStringMapGenerator() {\n",
        "337": "          @Override\n",
        "338": "          protected Map<String, String> create(Entry<String, String>[] entries) {\n",
        "339": "            return Collections.unmodifiableMap(toHashMap(entries));\n",
        "340": "          }\n",
        "341": "        })\n",
        "355": "        new TestStringSortedMapGenerator() {\n",
        "356": "          @Override\n",
        "357": "          protected SortedMap<String, String> create(Entry<String, String>[] entries) {\n",
        "358": "            SortedMap<String, String> map = populate(new TreeMap<String, String>(), entries);\n",
        "359": "            return Collections.unmodifiableSortedMap(map);\n",
        "360": "          }\n",
        "361": "        })\n"
    }
}