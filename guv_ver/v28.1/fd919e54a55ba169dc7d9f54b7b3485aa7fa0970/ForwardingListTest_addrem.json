{
    "addition": {
        "49": "    @Override\n",
        "50": "    protected List<T> delegate() {\n",
        "54": "    @Override\n",
        "55": "    public boolean add(T element) {\n",
        "59": "    @Override\n",
        "60": "    public boolean addAll(Collection<? extends T> collection) {\n",
        "64": "    @Override\n",
        "65": "    public void clear() {\n",
        "69": "    @Override\n",
        "70": "    public boolean contains(Object object) {\n",
        "74": "    @Override\n",
        "75": "    public boolean containsAll(Collection<?> collection) {\n",
        "79": "    @Override\n",
        "80": "    public boolean remove(Object object) {\n",
        "84": "    @Override\n",
        "85": "    public boolean removeAll(Collection<?> collection) {\n",
        "89": "    @Override\n",
        "90": "    public boolean retainAll(Collection<?> collection) {\n",
        "94": "    @Override\n",
        "95": "    public Object[] toArray() {\n",
        "99": "    @Override\n",
        "100": "    public <T> T[] toArray(T[] array) {\n",
        "104": "    @Override\n",
        "105": "    public String toString() {\n",
        "109": "    @Override\n",
        "110": "    public boolean addAll(int index, Collection<? extends T> elements) {\n",
        "114": "    @Override\n",
        "115": "    public boolean equals(Object object) {\n",
        "119": "    @Override\n",
        "120": "    public int hashCode() {\n",
        "124": "    @Override\n",
        "125": "    public int indexOf(Object element) {\n",
        "129": "    @Override\n",
        "130": "    public int lastIndexOf(Object element) {\n",
        "134": "    @Override\n",
        "135": "    public Iterator<T> iterator() {\n",
        "139": "    @Override\n",
        "140": "    public ListIterator<T> listIterator() {\n",
        "144": "    @Override\n",
        "145": "    public ListIterator<T> listIterator(int index) {\n",
        "149": "    @Override\n",
        "150": "    public List<T> subList(int fromIndex, int toIndex) {\n",
        "193": "        .testForwarding(\n",
        "194": "            List.class,\n",
        "195": "            new Function<List, List>() {\n",
        "196": "              @Override\n",
        "197": "              public List apply(List delegate) {\n",
        "198": "                return wrap(delegate);\n",
        "199": "              }\n",
        "200": "            });\n",
        "214": "      @Override\n",
        "215": "      protected List<T> delegate() {\n"
    },
    "removed": {
        "49": "    @Override protected List<T> delegate() {\n",
        "53": "    @Override public boolean add(T element) {\n",
        "57": "    @Override public boolean addAll(Collection<? extends T> collection) {\n",
        "61": "    @Override public void clear() {\n",
        "65": "    @Override public boolean contains(Object object) {\n",
        "69": "    @Override public boolean containsAll(Collection<?> collection) {\n",
        "73": "    @Override public boolean remove(Object object) {\n",
        "77": "    @Override public boolean removeAll(Collection<?> collection) {\n",
        "81": "    @Override public boolean retainAll(Collection<?> collection) {\n",
        "85": "    @Override public Object[] toArray() {\n",
        "89": "    @Override public <T> T[] toArray(T[] array) {\n",
        "93": "    @Override public String toString() {\n",
        "97": "    @Override public boolean addAll(\n",
        "98": "        int index, Collection<? extends T> elements) {\n",
        "102": "    @Override public boolean equals(Object object) {\n",
        "106": "    @Override public int hashCode() {\n",
        "110": "    @Override public int indexOf(Object element) {\n",
        "114": "    @Override public int lastIndexOf(Object element) {\n",
        "118": "    @Override public Iterator<T> iterator() {\n",
        "122": "    @Override public ListIterator<T> listIterator() {\n",
        "126": "    @Override public ListIterator<T> listIterator(int index) {\n",
        "130": "    @Override public List<T> subList(int fromIndex, int toIndex) {\n",
        "173": "        .testForwarding(List.class, new Function<List, List>() {\n",
        "174": "          @Override public List apply(List delegate) {\n",
        "175": "            return wrap(delegate);\n",
        "176": "          }\n",
        "177": "        });\n",
        "191": "      @Override protected List<T> delegate() {\n"
    }
}