{
    "addition": {
        "108": "  public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3) {\n",
        "109": "    return new RegularImmutableMap<K, V>(entryOf(k1, v1), entryOf(k2, v2), entryOf(k3, v3));\n",
        "112": "  public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4) {\n",
        "119": "    return new RegularImmutableMap<K, V>(\n",
        "120": "        entryOf(k1, v1), entryOf(k2, v2), entryOf(k3, v3), entryOf(k4, v4), entryOf(k5, v5));\n",
        "194": "            entries, Ordering.from(valueComparator).onResultOf(Maps.<V>valueFunction()));\n",
        "211": "        Entry<K, V>[] entryArray = entries.toArray(new Entry[entries.size()]);\n",
        "216": "  public static <K, V> ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map) {\n",
        "238": "        Entry<? extends K, ? extends V> entry = getOnlyElement(map.entrySet());\n",
        "243": "          orderPreservingCopy.put(checkNotNull(e.getKey()), checkNotNull(e.getValue()));\n",
        "252": "      return fromEntryList((Collection<? extends Entry<? extends K, ? extends V>>) entries);\n",
        "318": "      @Override\n",
        "319": "      public boolean hasNext() {\n",
        "323": "      @Override\n",
        "324": "      public K next() {\n",
        "349": "        ? (multimapView =\n",
        "350": "            new ImmutableSetMultimap<K, V>(new MapViewOfValuesAsSingletonSets(), size(), null))\n",
        "354": "  final class MapViewOfValuesAsSingletonSets extends IteratorBasedImmutableMap<K, ImmutableSet<V>> {\n",
        "356": "    @Override\n",
        "357": "    public int size() {\n",
        "361": "    @Override\n",
        "362": "    public ImmutableSet<K> keySet() {\n",
        "366": "    @Override\n",
        "367": "    public boolean containsKey(@Nullable Object key) {\n",
        "371": "    @Override\n",
        "372": "    public ImmutableSet<V> get(@Nullable Object key) {\n",
        "377": "    @Override\n",
        "378": "    boolean isPartialView() {\n",
        "382": "    @Override\n",
        "383": "    public int hashCode() {\n",
        "392": "        @Override\n",
        "393": "        public boolean hasNext() {\n",
        "397": "        @Override\n",
        "398": "        public Entry<K, ImmutableSet<V>> next() {\n",
        "401": "            @Override\n",
        "402": "            public K getKey() {\n",
        "406": "            @Override\n",
        "407": "            public ImmutableSet<V> getValue() {\n",
        "420": "  @Override\n",
        "421": "  public boolean equals(@Nullable Object object) {\n",
        "425": "  @Override\n",
        "426": "  public int hashCode() {\n",
        "432": "  @Override\n",
        "433": "  public String toString() {\n"
    },
    "removed": {
        "108": "  public static <K, V> ImmutableMap<K, V> of(\n",
        "109": "      K k1, V v1, K k2, V v2, K k3, V v3) {\n",
        "110": "    return new RegularImmutableMap<K, V>(\n",
        "111": "        entryOf(k1, v1), entryOf(k2, v2), entryOf(k3, v3));\n",
        "114": "  public static <K, V> ImmutableMap<K, V> of(\n",
        "115": "      K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4) {\n",
        "122": "    return new RegularImmutableMap<K, V>(entryOf(k1, v1),\n",
        "123": "        entryOf(k2, v2), entryOf(k3, v3), entryOf(k4, v4), entryOf(k5, v5));\n",
        "197": "            entries,\n",
        "198": "            Ordering.from(valueComparator).onResultOf(Maps.<V>valueFunction()));\n",
        "215": "        Entry<K, V>[] entryArray\n",
        "216": "            = entries.toArray(new Entry[entries.size()]);\n",
        "221": "  public static <K, V> ImmutableMap<K, V> copyOf(\n",
        "222": "      Map<? extends K, ? extends V> map) {\n",
        "244": "        Entry<? extends K, ? extends V> entry\n",
        "245": "            = getOnlyElement(map.entrySet());\n",
        "250": "          orderPreservingCopy.put(\n",
        "251": "              checkNotNull(e.getKey()), checkNotNull(e.getValue()));\n",
        "260": "      return fromEntryList(\n",
        "261": "          (Collection<? extends Entry<? extends K, ? extends V>>) entries);\n",
        "327": "      @Override public boolean hasNext() {\n",
        "331": "      @Override public K next() {\n",
        "356": "        ? (multimapView = new ImmutableSetMultimap<K, V>(\n",
        "357": "            new MapViewOfValuesAsSingletonSets(), size(), null))\n",
        "361": "  final class MapViewOfValuesAsSingletonSets\n",
        "362": "      extends IteratorBasedImmutableMap<K, ImmutableSet<V>> {\n",
        "364": "    @Override public int size() {\n",
        "368": "    @Override public ImmutableSet<K> keySet() {\n",
        "372": "    @Override public boolean containsKey(@Nullable Object key) {\n",
        "376": "    @Override public ImmutableSet<V> get(@Nullable Object key) {\n",
        "381": "    @Override boolean isPartialView() {\n",
        "385": "    @Override public int hashCode() {\n",
        "394": "        @Override public boolean hasNext() {\n",
        "398": "        @Override public Entry<K, ImmutableSet<V>> next() {\n",
        "401": "            @Override public K getKey() {\n",
        "405": "            @Override public ImmutableSet<V> getValue() {\n",
        "418": "  @Override public boolean equals(@Nullable Object object) {\n",
        "422": "  @Override public int hashCode() {\n",
        "428": "  @Override public String toString() {\n"
    }
}