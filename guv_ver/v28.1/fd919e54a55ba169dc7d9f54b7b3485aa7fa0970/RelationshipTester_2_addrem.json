{
    "addition": {
        "57": "  RelationshipTester(\n",
        "58": "      Equivalence<? super T> equivalence,\n",
        "59": "      String relationshipName,\n",
        "60": "      String hashName,\n",
        "85": "        for (int unrelatedGroupNumber = 0;\n",
        "86": "            unrelatedGroupNumber < groups.size();\n",
        "90": "            for (int unrelatedItemNumber = 0;\n",
        "91": "                unrelatedItemNumber < unrelatedGroup.size();\n",
        "107": "    assertWithTemplate(\n",
        "108": "        \"$ITEM must be $RELATIONSHIP to $OTHER\",\n",
        "109": "        itemInfo,\n",
        "110": "        relatedInfo,\n",
        "115": "    assertWithTemplate(\n",
        "116": "        \"the $HASH (\"\n",
        "117": "            + itemHash\n",
        "118": "            + \") of $ITEM must be equal to the $HASH (\"\n",
        "119": "            + relatedHash\n",
        "120": "            + \") of $OTHER\",\n",
        "121": "        itemInfo,\n",
        "122": "        relatedInfo,\n",
        "123": "        itemHash == relatedHash);\n",
        "126": "  private void assertUnrelated(\n",
        "127": "      int groupNumber, int itemNumber, int unrelatedGroupNumber, int unrelatedItemNumber) {\n",
        "131": "    assertWithTemplate(\n",
        "132": "        \"$ITEM must not be $RELATIONSHIP to $OTHER\",\n",
        "133": "        itemInfo,\n",
        "134": "        unrelatedInfo,\n",
        "140": "      throw new AssertionFailedError(\n",
        "141": "          template\n",
        "142": "              .replace(\"$RELATIONSHIP\", relationshipName)\n",
        "143": "              .replace(\"$HASH\", hashName)\n",
        "144": "              .replace(\"$ITEM\", itemReporter.reportItem(item))\n",
        "145": "              .replace(\"$OTHER\", itemReporter.reportItem(other)));\n",
        "164": "    @Override\n",
        "165": "    public String toString() {\n"
    },
    "removed": {
        "56": "  RelationshipTester(Equivalence<? super T> equivalence, String relationshipName, String hashName,\n",
        "81": "        for (int unrelatedGroupNumber = 0; unrelatedGroupNumber < groups.size();\n",
        "85": "            for (int unrelatedItemNumber = 0; unrelatedItemNumber < unrelatedGroup.size();\n",
        "101": "    assertWithTemplate(\"$ITEM must be $RELATIONSHIP to $OTHER\", itemInfo, relatedInfo,\n",
        "106": "    assertWithTemplate(\"the $HASH (\" + itemHash + \") of $ITEM must be equal to the $HASH (\"\n",
        "107": "        + relatedHash + \") of $OTHER\", itemInfo, relatedInfo, itemHash == relatedHash);\n",
        "110": "  private void assertUnrelated(int groupNumber, int itemNumber, int unrelatedGroupNumber,\n",
        "111": "      int unrelatedItemNumber) {\n",
        "115": "    assertWithTemplate(\"$ITEM must not be $RELATIONSHIP to $OTHER\", itemInfo, unrelatedInfo,\n",
        "121": "      throw new AssertionFailedError(template\n",
        "122": "          .replace(\"$RELATIONSHIP\", relationshipName)\n",
        "123": "          .replace(\"$HASH\", hashName)\n",
        "124": "          .replace(\"$ITEM\", itemReporter.reportItem(item))\n",
        "125": "          .replace(\"$OTHER\", itemReporter.reportItem(other)));\n",
        "144": "    @Override public String toString() {\n"
    }
}