{"id": "1f40cf6380357340b2fd786ff79debf42555676a", "code": [{"0": "android/guava-tests/test/com/google/common/collect/ArrayTableTest.java", "added": {"1": ["  public void testCreateEmptyRowsXColumns() {\n", "    ArrayTable<String, String, Character> table =\n", "        ArrayTable.create(Arrays.<String>asList(), Arrays.<String>asList());\n", "    assertThat(table).isEmpty();\n", "    assertThat(table).hasSize(0);\n", "    assertThat(table.columnKeyList()).isEmpty();\n", "    assertThat(table.rowKeyList()).isEmpty();\n", "    assertThat(table.columnKeySet()).isEmpty();\n", "    assertThat(table.rowKeySet()).isEmpty();\n", "    try {\n", "      table.at(0, 0);\n", "      fail();\n", "    } catch (IndexOutOfBoundsException expected) {}\n", "  }\n", "\n", "  @GwtIncompatible // toArray\n", "  public void testEmptyToArry() {\n", "    ArrayTable<String, String, Character> table =\n", "        ArrayTable.create(Arrays.<String>asList(), Arrays.<String>asList());\n", "    assertThat(table.toArray(Character.class)).asList().isEmpty();\n", "  }\n", "\n"], "2": ["    ArrayTable<String, Integer, Character> copy = ArrayTable.create(original);\n", "    assertThat(copy).isEqualTo(original);\n", "    assertThat(copy)\n", "        .isEqualTo(ArrayTable.create(Arrays.<String>asList(), Arrays.<Integer>asList()));\n", "    assertThat(copy).isEmpty();\n", "  }\n", "\n", "  public void testCreateCopyEmptyArrayTable() {\n", "    Table<String, Integer, Character> original =\n", "        ArrayTable.create(Arrays.<String>asList(), Arrays.<Integer>asList());\n", "    ArrayTable<String, Integer, Character> copy = ArrayTable.create(original);\n", "    assertThat(copy).isEqualTo(original);\n", "    assertThat(copy).isEmpty();\n"]}, "removed": {"2": ["    try {\n", "      ArrayTable.create(original);\n", "      fail();\n", "    } catch (IllegalArgumentException expected) {}\n"]}, "added_lines": {"1": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "2": [255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267]}, "removed_lines": {"2": [233, 234, 235, 236]}}, {"1": "android/guava/src/com/google/common/collect/ArrayTable.java", "added": {"1": ["   * Creates an {@code ArrayTable} filled with {@code null}.\n", "   *     contains duplicates or if exactly one of {@code rowKeys} or {@code\n", "   *     columnKeys} is empty.\n"], "3": ["    checkArgument(rowList.isEmpty() == columnList.isEmpty());\n", "     * TODO(jlevy): Support only one of rowKey / columnKey being empty? If we\n", "     * do, when columnKeys is empty but rowKeys isn't, rowKeyList() can contain\n", "     * elements but rowKeySet() will be empty and containsRow() won't\n", "     * acknolwedge them.\n"], "5": ["   *     rowIndex} is greater than or equal to the number of allowed row keys,\n", "   *     or {@code columnIndex} is greater than or equal to the number of\n"], "6": ["   *     rowIndex} is greater than or equal to the number of allowed row keys,\n", "   *     or {@code columnIndex} is greater than or equal to the number of\n"], "7": ["   * Returns {@code true} if the provided keys are among the keys provided\n", "   * when the table was constructed.\n"], "8": ["   * Returns {@code true} if {@code rowKeyList().size == 0} or {@code\n", "   * columnKeyList().size() == 0}.\n", "    return rowList.isEmpty() || columnList.isEmpty();\n"]}, "removed": {"1": ["   * Creates an empty {@code ArrayTable}.\n", "   *     contains duplicates or is empty\n"], "2": ["   * @throws IllegalArgumentException if the provided table is empty\n"], "3": ["    checkArgument(!rowList.isEmpty());\n", "    checkArgument(!columnList.isEmpty());\n", "     * TODO(jlevy): Support empty rowKeys or columnKeys? If we do, when\n", "     * columnKeys is empty but rowKeys isn't, the table is empty but\n", "     * containsRow() can return true and rowKeySet() isn't empty.\n"], "4": ["    // Necessary because in GWT the arrays are initialized with \"undefined\" instead of null.\n", "    eraseAll();\n"], "5": ["   *     rowIndex} is greater then or equal to the number of allowed row keys,\n", "   *     or {@code columnIndex} is greater then or equal to the number of\n"], "6": ["   *     rowIndex} is greater then or equal to the number of allowed row keys,\n", "   *     or {@code columnIndex} is greater then or equal to the number of\n"], "7": ["   * Returns {@code true} if the provided keys are among the keys provided when\n", "   * the table was constructed.\n"], "8": ["   * Always returns {@code false}.\n", "    return false;\n"]}, "added_lines": {"1": [90, 96, 97], "3": [148, 151, 152, 153, 154], "5": [312, 313], "6": [334, 335], "7": [391, 392], "8": [437, 438, 442]}, "removed_lines": {"1": [90, 96], "2": [129], "3": [148, 149, 152, 153, 154], "4": [179, 180], "5": [314, 315], "6": [336, 337], "7": [393, 394], "8": [439, 443]}}, {"2": "guava-gwt/test/com/google/common/collect/ArrayTableTest_gwt.java", "added": {"1": ["public void testCreateCopyEmptyArrayTable() throws Exception {\n", "  com.google.common.collect.ArrayTableTest testCase = new com.google.common.collect.ArrayTableTest();\n", "  testCase.setUp();\n", "  testCase.testCreateCopyEmptyArrayTable();\n", "}\n", "\n"], "2": ["public void testCreateEmptyRowsXColumns() throws Exception {\n", "  com.google.common.collect.ArrayTableTest testCase = new com.google.common.collect.ArrayTableTest();\n", "  testCase.setUp();\n", "  testCase.testCreateEmptyRowsXColumns();\n", "}\n", "\n"]}, "removed": {}, "added_lines": {"1": [117, 118, 119, 120, 121, 122], "2": [159, 160, 161, 162, 163, 164]}, "removed_lines": {}}, {"3": "guava-tests/test/com/google/common/collect/ArrayTableTest.java", "added": {"1": ["  public void testCreateEmptyRowsXColumns() {\n", "    ArrayTable<String, String, Character> table =\n", "        ArrayTable.create(Arrays.<String>asList(), Arrays.<String>asList());\n", "    assertThat(table).isEmpty();\n", "    assertThat(table).hasSize(0);\n", "    assertThat(table.columnKeyList()).isEmpty();\n", "    assertThat(table.rowKeyList()).isEmpty();\n", "    assertThat(table.columnKeySet()).isEmpty();\n", "    assertThat(table.rowKeySet()).isEmpty();\n", "    try {\n", "      table.at(0, 0);\n", "      fail();\n", "    } catch (IndexOutOfBoundsException expected) {}\n", "  }\n", "\n", "  @GwtIncompatible // toArray\n", "  public void testEmptyToArry() {\n", "    ArrayTable<String, String, Character> table =\n", "        ArrayTable.create(Arrays.<String>asList(), Arrays.<String>asList());\n", "    assertThat(table.toArray(Character.class)).asList().isEmpty();\n", "  }\n", "\n"], "2": ["    ArrayTable<String, Integer, Character> copy = ArrayTable.create(original);\n", "    assertThat(copy).isEqualTo(original);\n", "    assertThat(copy)\n", "        .isEqualTo(ArrayTable.create(Arrays.<String>asList(), Arrays.<Integer>asList()));\n", "    assertThat(copy).isEmpty();\n", "  }\n", "\n", "  public void testCreateCopyEmptyArrayTable() {\n", "    Table<String, Integer, Character> original =\n", "        ArrayTable.create(Arrays.<String>asList(), Arrays.<Integer>asList());\n", "    ArrayTable<String, Integer, Character> copy = ArrayTable.create(original);\n", "    assertThat(copy).isEqualTo(original);\n", "    assertThat(copy).isEmpty();\n"]}, "removed": {"2": ["    try {\n", "      ArrayTable.create(original);\n", "      fail();\n", "    } catch (IllegalArgumentException expected) {}\n"]}, "added_lines": {"1": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "2": [255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267]}, "removed_lines": {"2": [233, 234, 235, 236]}}, {"4": "guava/src/com/google/common/collect/ArrayTable.java", "added": {"1": ["   * Creates an {@code ArrayTable} filled with {@code null}.\n", "   *     contains duplicates or if exactly one of {@code rowKeys} or {@code\n", "   *     columnKeys} is empty.\n"], "3": ["    checkArgument(rowList.isEmpty() == columnList.isEmpty());\n", "     * TODO(jlevy): Support only one of rowKey / columnKey being empty? If we\n", "     * do, when columnKeys is empty but rowKeys isn't, rowKeyList() can contain\n", "     * elements but rowKeySet() will be empty and containsRow() won't\n", "     * acknolwedge them.\n"], "5": ["   *     rowIndex} is greater than or equal to the number of allowed row keys,\n", "   *     or {@code columnIndex} is greater than or equal to the number of\n"], "6": ["   *     rowIndex} is greater than or equal to the number of allowed row keys,\n", "   *     or {@code columnIndex} is greater than or equal to the number of\n"], "7": ["   * Returns {@code true} if the provided keys are among the keys provided\n", "   * when the table was constructed.\n"], "8": ["   * Returns {@code true} if {@code rowKeyList().size == 0} or {@code\n", "   * columnKeyList().size() == 0}.\n", "    return rowList.isEmpty() || columnList.isEmpty();\n"]}, "removed": {"1": ["   * Creates an empty {@code ArrayTable}.\n", "   *     contains duplicates or is empty\n"], "2": ["   * @throws IllegalArgumentException if the provided table is empty\n"], "3": ["    checkArgument(!rowList.isEmpty());\n", "    checkArgument(!columnList.isEmpty());\n", "     * TODO(jlevy): Support empty rowKeys or columnKeys? If we do, when\n", "     * columnKeys is empty but rowKeys isn't, the table is empty but\n", "     * containsRow() can return true and rowKeySet() isn't empty.\n"], "4": ["    // Necessary because in GWT the arrays are initialized with \"undefined\" instead of null.\n", "    eraseAll();\n"], "5": ["   *     rowIndex} is greater then or equal to the number of allowed row keys,\n", "   *     or {@code columnIndex} is greater then or equal to the number of\n"], "6": ["   *     rowIndex} is greater then or equal to the number of allowed row keys,\n", "   *     or {@code columnIndex} is greater then or equal to the number of\n"], "7": ["   * Returns {@code true} if the provided keys are among the keys provided when\n", "   * the table was constructed.\n"], "8": ["   * Always returns {@code false}.\n", "    return false;\n"]}, "added_lines": {"1": [90, 96, 97], "3": [148, 151, 152, 153, 154], "5": [317, 318], "6": [339, 340], "7": [396, 397], "8": [442, 443, 447]}, "removed_lines": {"1": [90, 96], "2": [129], "3": [148, 149, 152, 153, 154], "4": [179, 180], "5": [319, 320], "6": [341, 342], "7": [398, 399], "8": [444, 448]}}]}
