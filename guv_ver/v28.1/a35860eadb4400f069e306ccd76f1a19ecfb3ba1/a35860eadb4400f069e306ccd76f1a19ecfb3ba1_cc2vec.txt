{"id": "a35860eadb4400f069e306ccd76f1a19ecfb3ba1", "code": [{"0": "android/guava/src/com/google/common/graph/AbstractDirectedNetworkConnections.java", "added": {"1": ["  public N adjacentNode(E edge) {\n", "  public N removeInEdge(E edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(E edge) {\n"]}, "removed": {"1": ["  public N oppositeNode(Object edge) {\n", "  public N removeInEdge(Object edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(Object edge) {\n"]}, "added_lines": {"1": [99, 106], "2": [115]}, "removed_lines": {"1": [99, 106], "2": [115]}}, {"1": "android/guava/src/com/google/common/graph/AbstractUndirectedNetworkConnections.java", "added": {"1": ["  public N adjacentNode(E edge) {\n", "  public N removeInEdge(E edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(E edge) {\n"]}, "removed": {"1": ["  public N oppositeNode(Object edge) {\n", "  public N removeInEdge(Object edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(Object edge) {\n"]}, "added_lines": {"1": [67, 72], "2": [80]}, "removed_lines": {"1": [67, 72], "2": [80]}}, {"2": "android/guava/src/com/google/common/graph/ConfigurableMutableNetwork.java", "added": {"1": ["    N nodeV = connectionsU.adjacentNode(edge);\n"]}, "removed": {"1": ["    N nodeV = connectionsU.oppositeNode(edge);\n"]}, "added_lines": {"1": [149]}, "removed_lines": {"1": [149]}}, {"3": "android/guava/src/com/google/common/graph/ConfigurableNetwork.java", "added": {"1": ["    N nodeV = nodeConnections.get(nodeU).adjacentNode(edge);\n"]}, "removed": {"1": ["    N nodeV = nodeConnections.get(nodeU).oppositeNode(edge);\n"]}, "added_lines": {"1": [138]}, "removed_lines": {"1": [138]}}, {"4": "android/guava/src/com/google/common/graph/DirectedGraphConnections.java", "added": {"1": ["  public V value(N node) {\n"], "2": ["  public void removePredecessor(N node) {\n"]}, "removed": {"1": ["  public V value(Object node) {\n"], "2": ["  public void removePredecessor(Object node) {\n"]}, "added_lines": {"1": [169], "2": [182]}, "removed_lines": {"1": [169], "2": [182]}}, {"5": "android/guava/src/com/google/common/graph/DirectedMultiNetworkConnections.java", "added": {"1": ["  public N removeInEdge(E edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(E edge) {\n"]}, "removed": {"1": ["  public N removeInEdge(Object edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(Object edge) {\n"]}, "added_lines": {"1": [107], "2": [117]}, "removed_lines": {"1": [107], "2": [117]}}, {"6": "android/guava/src/com/google/common/graph/GraphConnections.java", "added": {"1": ["  V value(N node);\n", "  void removePredecessor(N node);\n", "  V removeSuccessor(N node);\n"]}, "removed": {"1": ["  V value(Object node);\n", "  void removePredecessor(Object node);\n", "  V removeSuccessor(Object node);\n"]}, "added_lines": {"1": [44, 47, 54]}, "removed_lines": {"1": [44, 47, 54]}}, {"7": "android/guava/src/com/google/common/graph/MutableGraph.java", "added": {"1": ["   * implementation-dependent. Suggested behaviors include (a) silently {@link #addNode(N)\n"]}, "removed": {"1": ["   * implementation-dependent. Suggested behaviors include (a) silently {@link #addNode(Object)\n"]}, "added_lines": {"1": [49]}, "removed_lines": {"1": [49]}}, {"8": "android/guava/src/com/google/common/graph/NetworkConnections.java", "added": {"1": ["   * Returns the node that is adjacent to the origin node along {@code edge}.\n", "  N adjacentNode(E edge);\n"], "2": ["  N removeInEdge(E edge, boolean isSelfLoop);\n", "  N removeOutEdge(E edge);\n"]}, "removed": {"1": ["   * Returns the node that is opposite the origin node along {@code edge}.\n", "  N oppositeNode(Object edge);\n"], "2": ["  N removeInEdge(Object edge, boolean isSelfLoop);\n", "  N removeOutEdge(Object edge);\n"]}, "added_lines": {"1": [51, 55], "2": [63, 67]}, "removed_lines": {"1": [51, 55], "2": [63, 67]}}, {"9": "android/guava/src/com/google/common/graph/UndirectedGraphConnections.java", "added": {"1": ["  public V value(N node) {\n", "  public void removePredecessor(N node) {\n", "  public V removeSuccessor(N node) {\n"]}, "removed": {"1": ["  public V value(Object node) {\n", "  public void removePredecessor(Object node) {\n", "  public V removeSuccessor(Object node) {\n"]}, "added_lines": {"1": [68, 73, 79]}, "removed_lines": {"1": [68, 73, 79]}}, {"10": "android/guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java", "added": {"1": ["  public N removeInEdge(E edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(E edge) {\n"]}, "removed": {"1": ["  public N removeInEdge(Object edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(Object edge) {\n"]}, "added_lines": {"1": [86], "2": [94]}, "removed_lines": {"1": [86], "2": [94]}}, {"11": "android/guava/src/com/google/common/graph/ValueGraph.java", "added": {"1": ["   * <li>The {@link #edgeValue(Object, Object) value} of a given edge is the same in both A and B.\n"]}, "removed": {"1": ["   * <li>Every edge in A and B are associated with equal {@link #edgeValue(Object, Object) values}.\n"]}, "added_lines": {"1": [206]}, "removed_lines": {"1": [206]}}, {"12": "guava/src/com/google/common/graph/AbstractDirectedNetworkConnections.java", "added": {"1": ["  public N adjacentNode(E edge) {\n", "  public N removeInEdge(E edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(E edge) {\n"]}, "removed": {"1": ["  public N oppositeNode(Object edge) {\n", "  public N removeInEdge(Object edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(Object edge) {\n"]}, "added_lines": {"1": [99, 106], "2": [115]}, "removed_lines": {"1": [99, 106], "2": [115]}}, {"13": "guava/src/com/google/common/graph/AbstractUndirectedNetworkConnections.java", "added": {"1": ["  public N adjacentNode(E edge) {\n", "  public N removeInEdge(E edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(E edge) {\n"]}, "removed": {"1": ["  public N oppositeNode(Object edge) {\n", "  public N removeInEdge(Object edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(Object edge) {\n"]}, "added_lines": {"1": [67, 72], "2": [80]}, "removed_lines": {"1": [67, 72], "2": [80]}}, {"14": "guava/src/com/google/common/graph/ConfigurableMutableNetwork.java", "added": {"1": ["    N nodeV = connectionsU.adjacentNode(edge);\n"]}, "removed": {"1": ["    N nodeV = connectionsU.oppositeNode(edge);\n"]}, "added_lines": {"1": [149]}, "removed_lines": {"1": [149]}}, {"15": "guava/src/com/google/common/graph/ConfigurableNetwork.java", "added": {"1": ["    N nodeV = nodeConnections.get(nodeU).adjacentNode(edge);\n"]}, "removed": {"1": ["    N nodeV = nodeConnections.get(nodeU).oppositeNode(edge);\n"]}, "added_lines": {"1": [138]}, "removed_lines": {"1": [138]}}, {"16": "guava/src/com/google/common/graph/DirectedGraphConnections.java", "added": {"1": ["  public V value(N node) {\n"], "2": ["  public void removePredecessor(N node) {\n"]}, "removed": {"1": ["  public V value(Object node) {\n"], "2": ["  public void removePredecessor(Object node) {\n"]}, "added_lines": {"1": [169], "2": [182]}, "removed_lines": {"1": [169], "2": [182]}}, {"17": "guava/src/com/google/common/graph/DirectedMultiNetworkConnections.java", "added": {"1": ["  public N removeInEdge(E edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(E edge) {\n"]}, "removed": {"1": ["  public N removeInEdge(Object edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(Object edge) {\n"]}, "added_lines": {"1": [107], "2": [117]}, "removed_lines": {"1": [107], "2": [117]}}, {"18": "guava/src/com/google/common/graph/GraphConnections.java", "added": {"1": ["  V value(N node);\n", "  void removePredecessor(N node);\n", "  V removeSuccessor(N node);\n"]}, "removed": {"1": ["  V value(Object node);\n", "  void removePredecessor(Object node);\n", "  V removeSuccessor(Object node);\n"]}, "added_lines": {"1": [44, 47, 54]}, "removed_lines": {"1": [44, 47, 54]}}, {"19": "guava/src/com/google/common/graph/MutableGraph.java", "added": {"1": ["   * implementation-dependent. Suggested behaviors include (a) silently {@link #addNode(N)\n"]}, "removed": {"1": ["   * implementation-dependent. Suggested behaviors include (a) silently {@link #addNode(Object)\n"]}, "added_lines": {"1": [49]}, "removed_lines": {"1": [49]}}, {"20": "guava/src/com/google/common/graph/NetworkConnections.java", "added": {"1": ["   * Returns the node that is adjacent to the origin node along {@code edge}.\n", "  N adjacentNode(E edge);\n"], "2": ["  N removeInEdge(E edge, boolean isSelfLoop);\n", "  N removeOutEdge(E edge);\n"]}, "removed": {"1": ["   * Returns the node that is opposite the origin node along {@code edge}.\n", "  N oppositeNode(Object edge);\n"], "2": ["  N removeInEdge(Object edge, boolean isSelfLoop);\n", "  N removeOutEdge(Object edge);\n"]}, "added_lines": {"1": [51, 55], "2": [63, 67]}, "removed_lines": {"1": [51, 55], "2": [63, 67]}}, {"21": "guava/src/com/google/common/graph/UndirectedGraphConnections.java", "added": {"1": ["  public V value(N node) {\n", "  public void removePredecessor(N node) {\n", "  public V removeSuccessor(N node) {\n"]}, "removed": {"1": ["  public V value(Object node) {\n", "  public void removePredecessor(Object node) {\n", "  public V removeSuccessor(Object node) {\n"]}, "added_lines": {"1": [68, 73, 79]}, "removed_lines": {"1": [68, 73, 79]}}, {"22": "guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java", "added": {"1": ["  public N removeInEdge(E edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(E edge) {\n"]}, "removed": {"1": ["  public N removeInEdge(Object edge, boolean isSelfLoop) {\n"], "2": ["  public N removeOutEdge(Object edge) {\n"]}, "added_lines": {"1": [86], "2": [94]}, "removed_lines": {"1": [86], "2": [94]}}, {"23": "guava/src/com/google/common/graph/ValueGraph.java", "added": {"1": ["   * <li>The {@link #edgeValue(Object, Object) value} of a given edge is the same in both A and B.\n"]}, "removed": {"1": ["   * <li>Every edge in A and B are associated with equal {@link #edgeValue(Object, Object) values}.\n"]}, "added_lines": {"1": [206]}, "removed_lines": {"1": [206]}}]}
