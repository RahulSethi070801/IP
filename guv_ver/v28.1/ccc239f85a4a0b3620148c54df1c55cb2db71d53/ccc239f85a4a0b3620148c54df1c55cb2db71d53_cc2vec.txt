{"id": "ccc239f85a4a0b3620148c54df1c55cb2db71d53", "code": [{"0": "android/guava-tests/test/com/google/common/collect/MultimapsTest.java", "added": {}, "removed": {"1": ["    assertEquals(multimap.toString(), multimapView.toString());\n"]}, "added_lines": {}, "removed_lines": {"1": [401]}}, {"1": "android/guava/src/com/google/common/collect/ArrayListMultimap.java", "added": {"1": ["    this(12, DEFAULT_VALUES_PER_KEY);\n", "    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));\n"], "2": ["    Map<K, Collection<V>> map = CompactHashMap.create();\n"]}, "removed": {"1": ["    super(new HashMap<K, Collection<V>>());\n", "    expectedValuesPerKey = DEFAULT_VALUES_PER_KEY;\n", "    super(Maps.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));\n"], "2": ["    Map<K, Collection<V>> map = Maps.newHashMap();\n"]}, "added_lines": {"1": [108, 112], "2": [164]}, "removed_lines": {"1": [108, 109, 113], "2": [165]}}, {"2": "android/guava/src/com/google/common/collect/HashMultimap.java", "added": {"2": ["    this(12, DEFAULT_VALUES_PER_KEY);\n", "    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));\n", "    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(multimap.keySet().size()));\n"], "3": ["    return Platform.<V>newHashSetWithExpectedSize(expectedValuesPerKey);\n"], "4": ["    Map<K, Collection<V>> map = Platform.newHashMapWithExpectedSize(12);\n"]}, "removed": {"1": ["import java.util.HashMap;\n"], "2": ["    super(new HashMap<K, Collection<V>>());\n", "    super(Maps.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));\n", "    super(Maps.<K, Collection<V>>newHashMapWithExpectedSize(multimap.keySet().size()));\n"], "3": ["    return Sets.<V>newHashSetWithExpectedSize(expectedValuesPerKey);\n"], "4": ["    Map<K, Collection<V>> map = Maps.newHashMap();\n"]}, "added_lines": {"2": [93, 97, 103], "3": [116], "4": [134]}, "removed_lines": {"1": [27], "2": [94, 98, 104], "3": [117], "4": [135]}}, {"3": "android/guava/src/com/google/common/collect/LinkedHashMultimap.java", "added": {"1": ["    super(Platform.<K, Collection<V>>newLinkedHashMapWithExpectedSize(keyCapacity));\n"], "2": ["    return Platform.newLinkedHashSetWithExpectedSize(valueSetCapacity);\n"], "3": ["    Map<K, Collection<V>> map = Platform.newLinkedHashMapWithExpectedSize(12);\n"]}, "removed": {"1": ["    super(new LinkedHashMap<K, Collection<V>>(keyCapacity));\n"], "2": ["    return new LinkedHashSet<V>(valueSetCapacity);\n"], "3": ["    Map<K, Collection<V>> map = new LinkedHashMap<>();\n"]}, "added_lines": {"1": [221], "2": [238], "3": [573]}, "removed_lines": {"1": [221], "2": [238], "3": [573]}}, {"4": "android/guava/src/com/google/common/collect/LinkedListMultimap.java", "added": {"1": ["    this(12);\n", "    keyToKeyList = Platform.newHashMapWithExpectedSize(expectedKeys);\n"], "2": ["    keyToKeyList = CompactLinkedHashMap.create();\n"]}, "removed": {"1": ["    keyToKeyList = Maps.newHashMap();\n", "    keyToKeyList = new HashMap<>(expectedKeys);\n"], "2": ["    keyToKeyList = Maps.newLinkedHashMap();\n"]}, "added_lines": {"1": [193, 197], "2": [833]}, "removed_lines": {"1": [193, 197], "2": [833]}}, {"5": "android/guava/src/com/google/common/collect/MultimapBuilder.java", "added": {"3": ["  /** Uses a hash table to map keys to value collections. */\n", "   * Uses a hash table to map keys to value collections, initialized to expect the specified\n"], "4": ["        return Platform.newHashMapWithExpectedSize(expectedKeys);\n", "   * Uses a hash table to map keys to value collections.\n"], "5": ["   * Uses an hash table to map keys to value collections, initialized to expect the\n"], "6": ["        return Platform.newLinkedHashMapWithExpectedSize(expectedKeys);\n"], "7": ["      return Platform.newHashSetWithExpectedSize(expectedValuesPerKey);\n"], "8": ["      return Platform.newLinkedHashSetWithExpectedSize(expectedValuesPerKey);\n"], "9": ["    /** Uses a hash-based {@code Set} to store value collections. */\n", "     * Uses a hash-based {@code Set} to store value collections, initialized to expect the specified number\n"], "10": ["    /** Uses an insertion-ordered hash-based {@code Set} to store value collections. */\n", "     * Uses an insertion-ordered hash-based {@code Set} to store value collections, initialized to expect the specified\n"]}, "removed": {"1": ["import static com.google.common.collect.Maps.newLinkedHashMapWithExpectedSize;\n"], "2": ["import java.util.HashMap;\n", "import java.util.HashSet;\n", "import java.util.LinkedHashMap;\n", "import java.util.LinkedHashSet;\n"], "3": ["  /** Uses a {@link HashMap} to map keys to value collections. */\n", "   * Uses a {@link HashMap} to map keys to value collections, initialized to expect the specified\n"], "4": ["        return Maps.newHashMapWithExpectedSize(expectedKeys);\n", "   * Uses a {@link LinkedHashMap} to map keys to value collections.\n"], "5": ["   * Uses a {@link LinkedHashMap} to map keys to value collections, initialized to expect the\n"], "6": ["        return newLinkedHashMapWithExpectedSize(expectedKeys);\n"], "7": ["      return Sets.newHashSetWithExpectedSize(expectedValuesPerKey);\n"], "8": ["      return Sets.newLinkedHashSetWithExpectedSize(expectedValuesPerKey);\n"], "9": ["    /** Uses a {@link HashSet} to store value collections. */\n", "     * Uses a {@link HashSet} to store value collections, initialized to expect the specified number\n"], "10": ["    /** Uses a {@link LinkedHashSet} to store value collections. */\n", "     * Uses a {@link LinkedHashSet} to store value collections, initialized to expect the specified\n"]}, "added_lines": {"3": [76, 82], "4": [92, 98], "5": [110], "6": [123], "7": [223], "8": [236], "9": [316, 322], "10": [339, 345]}, "removed_lines": {"1": [21], "2": [32, 33, 34, 35], "3": [81, 87], "4": [97, 103], "5": [115], "6": [128], "7": [228], "8": [241], "9": [321, 327], "10": [344, 350]}}, {"6": "android/guava/src/com/google/common/collect/Platform.java", "added": {"1": ["import java.util.Map;\n", "import java.util.Set;\n"], "2": ["  /** Returns the platform preferred implementation of a map based on a hash table. */\n", "  static <K, V> Map<K, V> newHashMapWithExpectedSize(int expectedSize) {\n", "    return CompactHashMap.createWithExpectedSize(expectedSize);\n", "  }\n", "\n", "  /**\n", "   * Returns the platform preferred implementation of an insertion ordered map based on a hash\n", "   * table.\n", "   */\n", "  static <K, V> Map<K, V> newLinkedHashMapWithExpectedSize(int expectedSize) {\n", "    return CompactLinkedHashMap.createWithExpectedSize(expectedSize);\n", "  }\n", "\n", "  /** Returns the platform preferred implementation of a set based on a hash table. */\n", "  static <E> Set<E> newHashSetWithExpectedSize(int expectedSize) {\n", "    return CompactHashSet.createWithExpectedSize(expectedSize);\n", "  }\n", "\n", "  /**\n", "   * Returns the platform preferred implementation of an insertion ordered set based on a hash\n", "   * table.\n", "   */\n", "  static <E> Set<E> newLinkedHashSetWithExpectedSize(int expectedSize) {\n", "    return CompactLinkedHashSet.createWithExpectedSize(expectedSize);\n", "  }\n", "\n"]}, "removed": {}, "added_lines": {"1": [21, 22], "2": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56]}, "removed_lines": {}}, {"7": "guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Platform.java", "added": {"1": ["import java.util.Map;\n", "import java.util.Set;\n"], "2": ["  static <K, V> Map<K, V> newHashMapWithExpectedSize(int expectedSize) {\n", "    return Maps.newHashMapWithExpectedSize(expectedSize);\n", "  }\n", "\n", "  static <K, V> Map<K, V> newLinkedHashMapWithExpectedSize(int expectedSize) {\n", "    return Maps.newLinkedHashMapWithExpectedSize(expectedSize);\n", "  }\n", "\n", "  static <E> Set<E> newHashSetWithExpectedSize(int expectedSize) {\n", "    return Sets.newHashSetWithExpectedSize(expectedSize);\n", "  }\n", "\n", "  static <E> Set<E> newLinkedHashSetWithExpectedSize(int expectedSize) {\n", "    return Sets.newLinkedHashSetWithExpectedSize(expectedSize);\n", "  }\n"]}, "removed": {}, "added_lines": {"1": [20, 21], "2": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48]}, "removed_lines": {}}, {"8": "guava-tests/test/com/google/common/collect/MultimapsTest.java", "added": {}, "removed": {"1": ["    assertEquals(multimap.toString(), multimapView.toString());\n"]}, "added_lines": {}, "removed_lines": {"1": [458]}}, {"9": "guava/src/com/google/common/collect/ArrayListMultimap.java", "added": {"1": ["    this(12, DEFAULT_VALUES_PER_KEY);\n", "    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));\n"]}, "removed": {"1": ["    super(new HashMap<K, Collection<V>>());\n", "    expectedValuesPerKey = DEFAULT_VALUES_PER_KEY;\n", "    super(Maps.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));\n"]}, "added_lines": {"1": [108, 112]}, "removed_lines": {"1": [108, 109, 113]}}, {"10": "guava/src/com/google/common/collect/HashMultimap.java", "added": {"2": ["    this(12, DEFAULT_VALUES_PER_KEY);\n", "    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));\n", "    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(multimap.keySet().size()));\n"], "3": ["    return Platform.<V>newHashSetWithExpectedSize(expectedValuesPerKey);\n"], "4": ["    Map<K, Collection<V>> map = Platform.newHashMapWithExpectedSize(12);\n"]}, "removed": {"1": ["import java.util.HashMap;\n"], "2": ["    super(new HashMap<K, Collection<V>>());\n", "    super(Maps.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));\n", "    super(Maps.<K, Collection<V>>newHashMapWithExpectedSize(multimap.keySet().size()));\n"], "3": ["    return Sets.<V>newHashSetWithExpectedSize(expectedValuesPerKey);\n"], "4": ["    Map<K, Collection<V>> map = Maps.newHashMap();\n"]}, "added_lines": {"2": [93, 97, 103], "3": [116], "4": [134]}, "removed_lines": {"1": [27], "2": [94, 98, 104], "3": [117], "4": [135]}}, {"11": "guava/src/com/google/common/collect/LinkedHashMultimap.java", "added": {"1": ["    super(Platform.<K, Collection<V>>newLinkedHashMapWithExpectedSize(keyCapacity));\n"], "2": ["    return Platform.newLinkedHashSetWithExpectedSize(valueSetCapacity);\n"], "3": ["    Map<K, Collection<V>> map = Platform.newLinkedHashMapWithExpectedSize(12);\n"]}, "removed": {"1": ["    super(new LinkedHashMap<K, Collection<V>>(keyCapacity));\n"], "2": ["    return new LinkedHashSet<V>(valueSetCapacity);\n"], "3": ["    Map<K, Collection<V>> map = new LinkedHashMap<>();\n"]}, "added_lines": {"1": [225], "2": [242], "3": [597]}, "removed_lines": {"1": [225], "2": [242], "3": [597]}}, {"12": "guava/src/com/google/common/collect/LinkedListMultimap.java", "added": {"1": ["    this(12);\n", "    keyToKeyList = Platform.newHashMapWithExpectedSize(expectedKeys);\n"]}, "removed": {"1": ["    keyToKeyList = Maps.newHashMap();\n", "    keyToKeyList = new HashMap<>(expectedKeys);\n"]}, "added_lines": {"1": [195, 199]}, "removed_lines": {"1": [195, 199]}}, {"13": "guava/src/com/google/common/collect/MultimapBuilder.java", "added": {"3": ["  /** Uses a hash table to map keys to value collections. */\n", "   * Uses a hash table to map keys to value collections, initialized to expect the specified\n"], "4": ["        return Platform.newHashMapWithExpectedSize(expectedKeys);\n", "   * Uses a hash table to map keys to value collections.\n"], "5": ["   * Uses an hash table to map keys to value collections, initialized to expect the\n"], "6": ["        return Platform.newLinkedHashMapWithExpectedSize(expectedKeys);\n"], "7": ["      return Platform.newHashSetWithExpectedSize(expectedValuesPerKey);\n"], "8": ["      return Platform.newLinkedHashSetWithExpectedSize(expectedValuesPerKey);\n"], "9": ["    /** Uses a hash-based {@code Set} to store value collections. */\n", "     * Uses a hash-based {@code Set} to store value collections, initialized to expect the specified number\n"], "10": ["    /** Uses an insertion-ordered hash-based {@code Set} to store value collections. */\n", "     * Uses an insertion-ordered hash-based {@code Set} to store value collections, initialized to expect the specified\n"]}, "removed": {"1": ["import static com.google.common.collect.Maps.newLinkedHashMapWithExpectedSize;\n"], "2": ["import java.util.HashMap;\n", "import java.util.HashSet;\n", "import java.util.LinkedHashMap;\n", "import java.util.LinkedHashSet;\n"], "3": ["  /** Uses a {@link HashMap} to map keys to value collections. */\n", "   * Uses a {@link HashMap} to map keys to value collections, initialized to expect the specified\n"], "4": ["        return Maps.newHashMapWithExpectedSize(expectedKeys);\n", "   * Uses a {@link LinkedHashMap} to map keys to value collections.\n"], "5": ["   * Uses a {@link LinkedHashMap} to map keys to value collections, initialized to expect the\n"], "6": ["        return newLinkedHashMapWithExpectedSize(expectedKeys);\n"], "7": ["      return Sets.newHashSetWithExpectedSize(expectedValuesPerKey);\n"], "8": ["      return Sets.newLinkedHashSetWithExpectedSize(expectedValuesPerKey);\n"], "9": ["    /** Uses a {@link HashSet} to store value collections. */\n", "     * Uses a {@link HashSet} to store value collections, initialized to expect the specified number\n"], "10": ["    /** Uses a {@link LinkedHashSet} to store value collections. */\n", "     * Uses a {@link LinkedHashSet} to store value collections, initialized to expect the specified\n"]}, "added_lines": {"3": [76, 82], "4": [92, 98], "5": [110], "6": [123], "7": [223], "8": [236], "9": [316, 322], "10": [339, 345]}, "removed_lines": {"1": [21], "2": [32, 33, 34, 35], "3": [81, 87], "4": [97, 103], "5": [115], "6": [128], "7": [228], "8": [241], "9": [321, 327], "10": [344, 350]}}, {"14": "guava/src/com/google/common/collect/Platform.java", "added": {"1": ["import java.util.Map;\n", "import java.util.Set;\n"], "2": ["  /** Returns the platform preferred implementation of a map based on a hash table. */\n", "  static <K, V> Map<K, V> newHashMapWithExpectedSize(int expectedSize) {\n", "    return Maps.newHashMapWithExpectedSize(expectedSize);\n", "  }\n", "\n", "  /**\n", "   * Returns the platform preferred implementation of an insertion ordered map based on a hash\n", "   * table.\n", "   */\n", "  static <K, V> Map<K, V> newLinkedHashMapWithExpectedSize(int expectedSize) {\n", "    return Maps.newLinkedHashMapWithExpectedSize(expectedSize);\n", "  }\n", "\n", "  /** Returns the platform preferred implementation of a set based on a hash table. */\n", "  static <E> Set<E> newHashSetWithExpectedSize(int expectedSize) {\n", "    return Sets.newHashSetWithExpectedSize(expectedSize);\n", "  }\n", "\n", "  /**\n", "   * Returns the platform preferred implementation of an insertion ordered set based on a hash\n", "   * table.\n", "   */\n", "  static <E> Set<E> newLinkedHashSetWithExpectedSize(int expectedSize) {\n", "    return Sets.newLinkedHashSetWithExpectedSize(expectedSize);\n", "  }\n", "\n"]}, "removed": {}, "added_lines": {"1": [21, 22], "2": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56]}, "removed_lines": {}}]}
