{
    "addition": {
        "119": "    return hasEdgeConnecting_internal(checkNotNull(nodeU), checkNotNull(nodeV));\n",
        "120": "  }\n",
        "121": "\n",
        "122": "  @Override\n",
        "123": "  public boolean hasEdgeConnecting(EndpointPair<N> endpoints) {\n",
        "124": "    checkNotNull(endpoints);\n",
        "125": "    return isOrderingCompatible(endpoints)\n",
        "126": "        && hasEdgeConnecting_internal(endpoints.nodeU(), endpoints.nodeV());\n",
        "132": "    return edgeValueOrDefault_internal(checkNotNull(nodeU), checkNotNull(nodeV), defaultValue);\n",
        "133": "  }\n",
        "134": "\n",
        "135": "  @Override\n",
        "136": "  @NullableDecl\n",
        "137": "  public V edgeValueOrDefault(EndpointPair<N> endpoints, @NullableDecl V defaultValue) {\n",
        "138": "    validateEndpoints(endpoints);\n",
        "139": "    return edgeValueOrDefault_internal(endpoints.nodeU(), endpoints.nodeV(), defaultValue);\n",
        "159": "\n",
        "160": "  protected final boolean hasEdgeConnecting_internal(N nodeU, N nodeV) {\n",
        "161": "    GraphConnections<N, V> connectionsU = nodeConnections.get(nodeU);\n",
        "162": "    return (connectionsU != null) && connectionsU.successors().contains(nodeV);\n",
        "163": "  }\n",
        "164": "\n",
        "165": "  protected final V edgeValueOrDefault_internal(N nodeU, N nodeV, V defaultValue) {\n",
        "166": "    GraphConnections<N, V> connectionsU = nodeConnections.get(nodeU);\n",
        "167": "    V value = (connectionsU == null) ? null : connectionsU.value(nodeV);\n",
        "168": "    return value == null ? defaultValue : value;\n",
        "169": "  }\n"
    },
    "removed": {
        "119": "    checkNotNull(nodeU);\n",
        "120": "    checkNotNull(nodeV);\n",
        "121": "    GraphConnections<N, V> connectionsU = nodeConnections.get(nodeU);\n",
        "122": "    return (connectionsU != null) && connectionsU.successors().contains(nodeV);\n",
        "128": "    checkNotNull(nodeU);\n",
        "129": "    checkNotNull(nodeV);\n",
        "130": "    GraphConnections<N, V> connectionsU = nodeConnections.get(nodeU);\n",
        "131": "    V value = (connectionsU == null) ? null : connectionsU.value(nodeV);\n",
        "132": "    return value == null ? defaultValue : value;\n"
    }
}