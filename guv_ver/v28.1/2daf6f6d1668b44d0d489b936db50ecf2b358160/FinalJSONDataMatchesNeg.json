[{"func":{"oldfunccode":"","newfunccode":"2daf6f6d1668b44d0d489b936db50ecf2b358160/Codes_neg/Match_newfunccode_2daf6f6d1668b44d0d489b936db50ecf2b358160_1.txt","newdoc":"","newJdoc":"2daf6f6d1668b44d0d489b936db50ecf2b358160/Codes_neg/Match_newfuncnewJdoc_2daf6f6d1668b44d0d489b936db50ecf2b358160_1.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/2daf6f6d1668b44d0d489b936db50ecf2b358160/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[316,317,318,319],"dellines":[],"addcode":["  public static <T> Collector<T, ?, BloomFilter<T>> toBloomFilter(\n","      Funnel<? super T> funnel, long expectedInsertions) {\n","    return toBloomFilter(funnel, expectedInsertions, 0.03);\n","  }\n"],"delcode":[],"methodSig":"public static Collector<T, ?, BloomFilter<T>> toBloomFilter(Funnel<? super T> funnel, long expectedInsertions)"},"doc":{"oldfunccode":"2daf6f6d1668b44d0d489b936db50ecf2b358160/Codes_neg/Match_olddocfunccode_2daf6f6d1668b44d0d489b936db50ecf2b358160_1.txt","newfunccode":"2daf6f6d1668b44d0d489b936db50ecf2b358160/Codes_neg/Match_newdocfunccode_2daf6f6d1668b44d0d489b936db50ecf2b358160_1.txt","newdoc":" FYI, for 3%, we always get 5 hash functions\n","newJdoc":"2daf6f6d1668b44d0d489b936db50ecf2b358160/Codes_neg/Match_newdocnewJdoc_2daf6f6d1668b44d0d489b936db50ecf2b358160_1.txt","olddoc":" FYI, for 3%, we always get 5 hash functions\n","oldJdoc":"2daf6f6d1668b44d0d489b936db50ecf2b358160/Codes_neg/Match_olddocJdoc_2daf6f6d1668b44d0d489b936db50ecf2b358160_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/2daf6f6d1668b44d0d489b936db50ecf2b358160/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[469,476,478,463],"dellines":[402,409,411,396],"addcode":["   * Creates a {@link BloomFilter} with the expected number of insertions and a\n","   * <p>The constructed {@code BloomFilter} will be serializable if the provided\n","   * @param funnel the funnel of T's that the constructed {@code BloomFilter} will use\n","   *     {@code BloomFilter}; must be positive\n"],"delcode":["   * Creates a {@link BloomFilter}{@code <T>} with the expected number of insertions and a\n","   * <p>The constructed {@code BloomFilter<T>} will be serializable if the provided\n","   * @param funnel the funnel of T's that the constructed {@code BloomFilter<T>} will use\n","   *     {@code BloomFilter<T>}; must be positive\n"],"methodSig":"public static BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions)"},"id":1,"flag":1,"commit":"2daf6f6d1668b44d0d489b936db50ecf2b358160"},{"func":{"oldfunccode":"","newfunccode":"2daf6f6d1668b44d0d489b936db50ecf2b358160/Codes_neg/Match_newfunccode_2daf6f6d1668b44d0d489b936db50ecf2b358160_2.txt","newdoc":"","newJdoc":"2daf6f6d1668b44d0d489b936db50ecf2b358160/Codes_neg/Match_newfuncnewJdoc_2daf6f6d1668b44d0d489b936db50ecf2b358160_2.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/2daf6f6d1668b44d0d489b936db50ecf2b358160/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[352,353,354,355,356,357,358,359,343,344,345,346,347,348,349,350,351],"dellines":[],"addcode":["  public static <T> Collector<T, ?, BloomFilter<T>> toBloomFilter(\n","      Funnel<? super T> funnel, long expectedInsertions, double fpp) {\n","    checkNotNull(funnel);\n","    checkArgument(\n","        expectedInsertions >= 0, \"Expected insertions (%s) must be >= 0\", expectedInsertions);\n","    checkArgument(fpp > 0.0, \"False positive probability (%s) must be > 0.0\", fpp);\n","    checkArgument(fpp < 1.0, \"False positive probability (%s) must be < 1.0\", fpp);\n","    return Collector.of(\n","        () -> BloomFilter.create(funnel, expectedInsertions, fpp),\n","        BloomFilter::put,\n","        (bf1, bf2) -> {\n","          bf1.putAll(bf2);\n","          return bf1;\n","        },\n","        Collector.Characteristics.UNORDERED,\n","        Collector.Characteristics.CONCURRENT);\n","  }\n"],"delcode":[],"methodSig":"public static Collector<T, ?, BloomFilter<T>> toBloomFilter(Funnel<? super T> funnel, long expectedInsertions, double fpp)"},"doc":{"oldfunccode":"2daf6f6d1668b44d0d489b936db50ecf2b358160/Codes_neg/Match_olddocfunccode_2daf6f6d1668b44d0d489b936db50ecf2b358160_2.txt","newfunccode":"2daf6f6d1668b44d0d489b936db50ecf2b358160/Codes_neg/Match_newdocfunccode_2daf6f6d1668b44d0d489b936db50ecf2b358160_2.txt","newdoc":" FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n","newJdoc":"2daf6f6d1668b44d0d489b936db50ecf2b358160/Codes_neg/Match_newdocnewJdoc_2daf6f6d1668b44d0d489b936db50ecf2b358160_2.txt","olddoc":" FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n","oldJdoc":"2daf6f6d1668b44d0d489b936db50ecf2b358160/Codes_neg/Match_olddocJdoc_2daf6f6d1668b44d0d489b936db50ecf2b358160_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v28.1/2daf6f6d1668b44d0d489b936db50ecf2b358160/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[469,476,478,463],"dellines":[402,409,411,396],"addcode":["   * Creates a {@link BloomFilter} with the expected number of insertions and a\n","   * <p>The constructed {@code BloomFilter} will be serializable if the provided\n","   * @param funnel the funnel of T's that the constructed {@code BloomFilter} will use\n","   *     {@code BloomFilter}; must be positive\n"],"delcode":["   * Creates a {@link BloomFilter}{@code <T>} with the expected number of insertions and a\n","   * <p>The constructed {@code BloomFilter<T>} will be serializable if the provided\n","   * @param funnel the funnel of T's that the constructed {@code BloomFilter<T>} will use\n","   *     {@code BloomFilter<T>}; must be positive\n"],"methodSig":"public static BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions)"},"id":1,"flag":1,"commit":"2daf6f6d1668b44d0d489b936db50ecf2b358160"}]