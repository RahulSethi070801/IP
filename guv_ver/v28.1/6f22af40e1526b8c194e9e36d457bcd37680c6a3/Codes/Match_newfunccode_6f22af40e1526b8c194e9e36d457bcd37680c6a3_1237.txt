@Override
public Set<EndpointPair<N>> edges() {
    return new AbstractSet<EndpointPair<N>>() {

        @Override
        public UnmodifiableIterator<EndpointPair<N>> iterator() {
            return EndpointPairIterator.of(AbstractBaseGraph.this);
        }

        @Override
        public int size() {
            return Ints.saturatedCast(edgeCount());
        }

        @SuppressWarnings("unchecked")
        @Override
        public boolean contains(@NullableDecl Object obj) {
            if (!(obj instanceof EndpointPair)) {
                return false;
            }
            EndpointPair<?> endpointPair = (EndpointPair<?>) obj;
            return isDirected() == endpointPair.isOrdered() && nodes().contains(endpointPair.nodeU()) && successors((N) endpointPair.nodeU()).contains(endpointPair.nodeV());
        }
    };
}