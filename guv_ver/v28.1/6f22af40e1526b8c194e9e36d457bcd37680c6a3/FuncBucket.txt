com.google.common.collect.Iterables
frequency
public static int frequency(Iterable<?> iterable, @NullableDecl Object element)
Iterable,Object
int
com.google.common.collect.Lists
lastIndexOfRandomAccess
private static int lastIndexOfRandomAccess(List<?> list, @NullableDecl Object element)
List,Object
int
com.google.common.reflect.TypeToken
getComponentType
public final TypeToken<?> getComponentType()
empty
TypeToken
com.google.common.collect.Sets
combinations
public static Set<Set<E>> combinations(Set<E> set, final int size)
Set,int
Set
com.google.common.collect.Iterables
getOnlyElement
public static T getOnlyElement(Iterable<? extends T> iterable, @NullableDecl T defaultValue)
Iterable,T
T
com.google.common.collect.Maps
valueOrNull
static V valueOrNull(@Nullable Entry<?, V> entry)
Entry
V
com.google.common.collect.TreeMultiset$Reference
checkAndSet
public void checkAndSet(@Nullable T expected, T newValue)
T,T
void
com.google.common.collect.Iterators
singletonIterator
public static UnmodifiableIterator<T> singletonIterator(@NullableDecl final T value)
T
UnmodifiableIterator
com.google.common.base.FinalizableReferenceQueue$FinalizerLoader
loadFinalizer
Class<?> loadFinalizer()
empty
Class
com.google.common.util.concurrent.UncheckedTimeoutException
UncheckedTimeoutException
public UncheckedTimeoutException(@Nullable Throwable cause)
Throwable
constructor
com.google.common.collect.ConcurrentHashMultiset
removeExactly
public boolean removeExactly(@Nullable Object element, int occurrences)
Object,int
boolean
com.google.common.collect.Synchronized
deque
static Deque<E> deque(Deque<E> deque, @Nullable Object mutex)
Deque,Object
Deque
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection
WrappedCollection
WrappedCollection(@NullableDecl K key, Collection<V> delegate, @NullableDecl WrappedCollection ancestor)
K,Collection,WrappedCollection
constructor
com.google.common.collect.ArrayTable
set
public V set(int rowIndex, int columnIndex, @Nullable V value)
int,int,V
V
com.google.common.collect.ImmutableEntry
ImmutableEntry
ImmutableEntry(@Nullable K key, @Nullable V value)
K,V
constructor
com.google.common.collect.Collections2$FilteredCollection
contains
public boolean contains(@Nullable Object element)
Object
boolean
com.google.common.base.Functions
apply
public Object apply(@NullableDecl Object o)
Object
Object
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, char p1, int p2)
boolean,String,char,int
void
com.google.common.io.BaseEncoding$Base64Encoding
Base64Encoding
Base64Encoding(String name, String alphabetChars, @Nullable Character paddingChar)
String,String,Character
constructor
com.google.common.collect.Multiset
equals
boolean equals(@Nullable Object object)
Object
boolean
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, char p1, long p2)
boolean,String,char,long
void
com.google.common.collect.ForwardingMultiset
standardCount
protected int standardCount(@Nullable Object object)
Object
int
com.google.common.util.concurrent.ExecutionError
ExecutionError
public ExecutionError(@Nullable Error cause)
Error
constructor
com.google.common.collect.SortedSetMultimap
removeAll
SortedSet<V> removeAll(@NullableDecl Object key)
Object
SortedSet
com.google.common.base.Throwables
getJlaMethod
private static Method getJlaMethod(String name, Class<?>... parameterTypes) throws ThreadDeath
String,Class...
Method
com.google.common.collect.super.com.google.common.collect.ImmutableCollection
contains
public boolean contains(@NullableDecl Object object)
Object
boolean
com.google.common.collect.TreeMultiset$AvlNode
remove
AvlNode<E> remove(Comparator<? super E> comparator, @Nullable E e, int count, int[] result)
Comparator,E,int,int[]
AvlNode
com.google.common.graph.Graphs
subgraphHasCycle
private static boolean subgraphHasCycle(Graph<N> graph, Map<Object, NodeVisitState> visitedNodes, N node, @NullableDecl N previousNode)
Graph,Map,N,N
boolean
com.google.common.collect.Multimap
replaceValues
Collection<V> replaceValues(@NullableDecl K key, Iterable<? extends V> values)
K,Iterable
Collection
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, @Nullable Object p1, @Nullable Object p2)
boolean,String,Object,Object
void
com.google.common.cache.CacheBuilderSpec$KeyStrengthParser
parse
public void parse(CacheBuilderSpec spec, String key, @Nullable String value)
CacheBuilderSpec,String,String
void
com.google.common.collect.Synchronized$SynchronizedTable
put
public V put(@Nullable R rowKey, @Nullable C columnKey, @Nullable V value)
R,C,V
V
com.google.common.base.AbstractIterator
endOfData
protected final T endOfData()
empty
T
com.google.common.collect.super.com.google.common.collect.ForwardingImmutableMap
containsKey
public final boolean containsKey(@NullableDecl Object key)
Object
boolean
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, long p1, char p2)
boolean,String,long,char
void
com.google.common.collect.TreeBasedTable$TreeRow
TreeRow
TreeRow(R rowKey, @NullableDecl C lowerBound, @NullableDecl C upperBound)
R,C,C
constructor
com.google.common.io.BaseEncoding$StandardBaseEncoding
StandardBaseEncoding
StandardBaseEncoding(String name, String alphabetChars, @Nullable Character paddingChar)
String,String,Character
constructor
com.google.common.collect.Lists
equalsImpl
static boolean equalsImpl(List<?> thisList, @NullableDecl Object other)
List,Object
boolean
com.google.common.collect.AbstractMultimap
putAll
public boolean putAll(@NullableDecl K key, Iterable<? extends V> values)
K,Iterable
boolean
com.google.common.collect.GeneralRange
from
static GeneralRange<T> from(Range<T> range)
Range
GeneralRange
com.google.common.reflect.AbstractInvocationHandler
invoke
public final Object invoke(Object proxy, Method method, @Nullable Object[] args) throws Throwable
Object,Method,Object[]
Object
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, int p1, char p2)
boolean,String,int,char
void
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound
get
public Range<C> get(Object key)
Object
Range
com.google.common.collect.Synchronized$SynchronizedRandomAccessList
SynchronizedRandomAccessList
SynchronizedRandomAccessList(List<E> list, @Nullable Object mutex)
List,Object
constructor
com.google.common.graph.MapIteratorCache
unmodifiableKeySet
public final Set<K> unmodifiableKeySet()
empty
Set
com.google.common.util.concurrent.Platform
isInstanceOfThrowableClass
static boolean isInstanceOfThrowableClass(@NullableDecl Throwable t, Class<? extends Throwable> expectedClass)
Throwable,Class
boolean
com.google.common.collect.LinkedListMultimap$Node
Node
Node(@NullableDecl K key, @NullableDecl V value)
K,V
constructor
com.google.common.collect.MapMakerInternalMap$Helper
newEntry
public StrongKeyWeakValueEntry<K, V> newEntry(StrongKeyWeakValueSegment<K, V> segment, K key, int hash, @Nullable StrongKeyWeakValueEntry<K, V> next)
StrongKeyWeakValueSegment,K,int,StrongKeyWeakValueEntry
StrongKeyWeakValueEntry
com.google.common.collect.ComparisonChain
compare
public abstract ComparisonChain compare(@NullableDecl T left, @NullableDecl T right, Comparator<T> comparator)
T,T,Comparator
ComparisonChain
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, @NullableDecl Object p2, @NullableDecl Object p3)
T,String,Object,Object,Object
T
com.google.common.collect.AbstractTable
get
public V get(@Nullable Object rowKey, @Nullable Object columnKey)
Object,Object
V
com.google.common.graph.AbstractDirectedNetworkConnections
contains
public boolean contains(@NullableDecl Object obj)
Object
boolean
com.google.common.collect.HashBiMap$Inverse
put
public K put(@Nullable V value, @Nullable K key)
V,K
K
com.google.common.collect.ForwardingMap
standardContainsValue
protected boolean standardContainsValue(@Nullable Object value)
Object
boolean
com.google.common.collect.Multiset
add
int add(@NullableDecl E element, int occurrences)
E,int
int
com.google.common.collect.Synchronized$SynchronizedQueue
SynchronizedQueue
SynchronizedQueue(Queue<E> delegate, @Nullable Object mutex)
Queue,Object
constructor
com.google.common.base.MoreObjects$ToStringHelper
addValue
public ToStringHelper addValue(@Nullable Object value)
Object
ToStringHelper
com.google.common.util.concurrent.UncheckedExecutionException
UncheckedExecutionException
public UncheckedExecutionException(@NullableDecl String message, @NullableDecl Throwable cause)
String,Throwable
constructor
com.google.common.collect.Synchronized
queue
static Queue<E> queue(Queue<E> queue, @NullableDecl Object mutex)
Queue,Object
Queue
com.google.common.collect.RangeMap
equals
boolean equals(@Nullable Object o)
Object
boolean
com.google.common.collect.Tables
immutableCell
public static Cell<R, C, V> immutableCell(@NullableDecl R rowKey, @NullableDecl C columnKey, @NullableDecl V value)
R,C,V
Cell
com.google.common.collect.Multiset
count
int count(@NullableDecl @CompatibleWith("E") Object element)
Object
int
com.google.common.graph.MapRetrievalCache
getIfCached
protected V getIfCached(@NullableDecl Object key)
Object
V
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection
WrappedCollection
WrappedCollection(@Nullable K key, Collection<V> delegate, @Nullable WrappedCollection ancestor)
K,Collection,WrappedCollection
constructor
com.google.common.base.Converter
correctedDoBackward
A correctedDoBackward(@Nullable B b)
B
A
com.google.common.collect.Iterables
getLast
public static T getLast(Iterable<? extends T> iterable, @Nullable T defaultValue)
Iterable,T
T
com.google.common.collect.MapMakerInternalMap$Helper
newEntry
public WeakKeyWeakValueEntry<K, V> newEntry(WeakKeyWeakValueSegment<K, V> segment, K key, int hash, @NullableDecl WeakKeyWeakValueEntry<K, V> next)
WeakKeyWeakValueSegment,K,int,WeakKeyWeakValueEntry
WeakKeyWeakValueEntry
com.google.common.util.concurrent.FuturesGetChecked
newWithCause
private static X newWithCause(Class<X> exceptionClass, Throwable cause)
Class,Throwable
X
com.google.common.cache.RemovalNotification
create
public static RemovalNotification<K, V> create(@NullableDecl K key, @NullableDecl V value, RemovalCause cause)
K,V,RemovalCause
RemovalNotification
com.google.common.collect.AbstractBiMap
remove
public V remove(@NullableDecl Object key)
Object
V
com.google.common.collect.TreeMultiset$AvlNode
AvlNode
AvlNode(@Nullable E elem, int elemCount)
E,int
constructor
com.google.common.collect.Iterators
find
public static T find(Iterator<? extends T> iterator, Predicate<? super T> predicate, @Nullable T defaultValue)
Iterator,Predicate,T
T
com.google.common.collect.TreeMultiset
create
public static TreeMultiset<E> create(@NullableDecl Comparator<? super E> comparator)
Comparator
TreeMultiset
com.google.common.util.concurrent.SettableFuture
set
public boolean set(@NullableDecl V value)
V
boolean
com.google.common.collect.Multisets$ImmutableEntry
ImmutableEntry
ImmutableEntry(@Nullable E element, int count)
E,int
constructor
com.google.common.collect.MapMakerInternalMap$Helper
newEntry
public StrongKeyWeakValueEntry<K, V> newEntry(StrongKeyWeakValueSegment<K, V> segment, K key, int hash, @NullableDecl StrongKeyWeakValueEntry<K, V> next)
StrongKeyWeakValueSegment,K,int,StrongKeyWeakValueEntry
StrongKeyWeakValueEntry
com.google.common.collect.TreeMultiset$AvlNode
setCount
AvlNode<E> setCount(Comparator<? super E> comparator, @Nullable E e, int expectedCount, int newCount, int[] result)
Comparator,E,int,int,int[]
AvlNode
com.google.common.collect.FilteredMultimapValues
contains
public boolean contains(@NullableDecl Object o)
Object
boolean
com.google.common.collect.ArrayTable
erase
public V erase(@Nullable Object rowKey, @Nullable Object columnKey)
Object,Object
V
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry
WeakKeyWeakValueEntry
WeakKeyWeakValueEntry(ReferenceQueue<K> queue, K key, int hash, @Nullable WeakKeyWeakValueEntry<K, V> next)
ReferenceQueue,K,int,WeakKeyWeakValueEntry
constructor
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, int p1, long p2)
boolean,String,int,long
void
com.google.common.collect.GeneralRange
downTo
static GeneralRange<T> downTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)
Comparator,T,BoundType
GeneralRange
com.google.common.net.InetAddresses
convertDottedQuadToHex
private static String convertDottedQuadToHex(String ipString)
String
String
com.google.common.reflect.AbstractInvocationHandler
invoke
public final Object invoke(Object proxy, Method method, @NullableDecl Object[] args) throws Throwable
Object,Method,Object[]
Object
com.google.common.base.Equivalence$Wrapper
Wrapper
private Wrapper(Equivalence<? super T> equivalence, @Nullable T reference)
Equivalence,T
constructor
com.google.common.util.concurrent.AsyncFunction
apply
ListenableFuture<O> apply(@Nullable I input) throws Exception
I
ListenableFuture
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, char p1, @Nullable Object p2)
T,String,char,Object
T
com.google.common.collect.TreeMultiset$AvlNode
totalCount
private static long totalCount(@NullableDecl AvlNode<?> node)
AvlNode
long
com.google.common.collect.Table
containsColumn
boolean containsColumn(@Nullable @CompatibleWith("C") Object columnKey)
Object
boolean
com.google.common.collect.ImmutableSetMultimap
ImmutableSetMultimap
ImmutableSetMultimap(ImmutableMap<K, ImmutableSet<V>> map, int size, @NullableDecl Comparator<? super V> valueComparator)
ImmutableMap,int,Comparator
constructor
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, int p1, long p2)
T,String,int,long
T
com.google.common.collect.AbstractBiMap
put
public V put(@NullableDecl K key, @NullableDecl V value)
K,V
V
com.google.common.collect.TreeRangeMap
getEntry
public Entry<Range, Object> getEntry(Comparable key)
Comparable
Entry
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, char p1, char p2)
boolean,String,char,char
void
com.google.common.collect.TreeMultiset
headMultiset
public SortedMultiset<E> headMultiset(@Nullable E upperBound, BoundType boundType)
E,BoundType
SortedMultiset
com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture
doFallback
V doFallback(Function<? super X, ? extends V> fallback, X cause) throws Exception
Function,X
V
com.google.common.collect.LinkedListMultimap$Node
setValue
public V setValue(@Nullable V newValue)
V
V
com.google.common.io.Closeables
close
public static void close(@Nullable Closeable closeable, boolean swallowIOException) throws IOException
Closeable,boolean
void
com.google.common.collect.TreeMultiset$AvlNode
remove
AvlNode<E> remove(Comparator<? super E> comparator, @NullableDecl E e, int count, int[] result)
Comparator,E,int,int[]
AvlNode
com.google.common.reflect.TypeToInstanceMap
getInstance
T getInstance(Class<T> type)
Class
T
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, long p1)
T,String,long
T
com.google.common.collect.TreeMultimap
get
public NavigableSet<V> get(@Nullable K key)
K
NavigableSet
com.google.common.collect.LinkedListMultimap
checkElement
private static void checkElement(@Nullable Object node)
Object
void
com.google.common.cache.RemovalNotification
RemovalNotification
private RemovalNotification(@NullableDecl K key, @NullableDecl V value, RemovalCause cause)
K,V,RemovalCause
constructor
com.google.common.reflect.ClassPath$Scanner
getClassPathFromManifest
static ImmutableSet<File> getClassPathFromManifest(File jarFile, @Nullable Manifest manifest)
File,Manifest
ImmutableSet
com.google.common.net.InetAddresses$TeredoInfo
TeredoInfo
public TeredoInfo(@NullableDecl Inet4Address server, @NullableDecl Inet4Address client, int port, int flags)
Inet4Address,Inet4Address,int,int
constructor
com.google.common.collect.HashBiMap
seekByValue
private BiEntry<K, V> seekByValue(@Nullable Object value, int valueHash)
Object,int
BiEntry
com.google.common.collect.Maps
unmodifiableOrNull
private static Entry<K, V> unmodifiableOrNull(@Nullable Entry<K, ? extends V> entry)
Entry
Entry
com.google.common.collect.ImmutableRangeMap
getEntry
public Entry<Range<K>, V> getEntry(K key)
K
Entry
com.google.common.collect.Synchronized$SynchronizedCollection
SynchronizedCollection
private SynchronizedCollection(Collection<E> delegate, @NullableDecl Object mutex)
Collection,Object
constructor
com.google.common.cache.LocalCache$Segment
removeValueFromChain
ReferenceEntry<K, V> removeValueFromChain(ReferenceEntry<K, V> first, ReferenceEntry<K, V> entry, @NullableDecl K key, int hash, V value, ValueReference<K, V> valueReference, RemovalCause cause)
ReferenceEntry,ReferenceEntry,K,int,V,ValueReference,RemovalCause
ReferenceEntry
com.google.common.collect.AbstractMultiset
remove
public boolean remove(@Nullable Object element)
Object
boolean
com.google.common.cache.LocalCache$WeakEntry
WeakEntry
WeakEntry(ReferenceQueue<K> queue, K key, int hash, @NullableDecl ReferenceEntry<K, V> next)
ReferenceQueue,K,int,ReferenceEntry
constructor
com.google.common.base.Converter
correctedDoBackward
A correctedDoBackward(@NullableDecl B b)
B
A
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, @Nullable Object p1, @Nullable Object p2, @Nullable Object p3)
boolean,String,Object,Object,Object
void
com.google.common.collect.Iterators
contains
public static boolean contains(Iterator<?> iterator, @Nullable Object element)
Iterator,Object
boolean
com.google.common.graph.AbstractDirectedNetworkConnections
contains
public boolean contains(@Nullable Object obj)
Object
boolean
com.google.common.collect.CollectSpliterators
flatMap
static Spliterator<T> flatMap(Spliterator<F> fromSpliterator, Function<? super F, Spliterator<T>> function, int topCharacteristics, long topSize)
Spliterator,Function,int,long
Spliterator
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, long p1, long p2)
T,String,long,long
T
com.google.common.collect.GeneralRange
tooHigh
boolean tooHigh(@NullableDecl T t)
T
boolean
com.google.common.base.Functions$PredicateFunction
apply
public Boolean apply(@Nullable T t)
T
Boolean
com.google.common.collect.MapMakerInternalMap$Helper
copy
public StrongKeyWeakValueEntry<K, V> copy(StrongKeyWeakValueSegment<K, V> segment, StrongKeyWeakValueEntry<K, V> entry, @Nullable StrongKeyWeakValueEntry<K, V> newNext)
StrongKeyWeakValueSegment,StrongKeyWeakValueEntry,StrongKeyWeakValueEntry
StrongKeyWeakValueEntry
com.google.common.collect.MapMakerInternalMap$Helper
newEntry
public WeakKeyDummyValueEntry<K> newEntry(WeakKeyDummyValueSegment<K> segment, K key, int hash, @NullableDecl WeakKeyDummyValueEntry<K> next)
WeakKeyDummyValueSegment,K,int,WeakKeyDummyValueEntry
WeakKeyDummyValueEntry
com.google.common.collect.AbstractMultiset
setCount
public boolean setCount(@NullableDecl E element, int oldCount, int newCount)
E,int,int
boolean
com.google.common.collect.TreeRangeSet$RangesByUpperBound
get
public Range<C> get(@NullableDecl Object key)
Object
Range
com.google.common.escape.Escapers$Builder
setUnsafeReplacement
public Builder setUnsafeReplacement(@NullableDecl String unsafeReplacement)
String
Builder
com.google.common.collect.Iterators
find
public static T find(Iterator<? extends T> iterator, Predicate<? super T> predicate, @NullableDecl T defaultValue)
Iterator,Predicate,T
T
com.google.common.collect.Lists
indexOfImpl
static int indexOfImpl(List<?> list, @Nullable Object element)
List,Object
int
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, @NullableDecl Object p2)
boolean,String,Object,Object
void
com.google.common.collect.Multimap
removeAll
Collection<V> removeAll(@CompatibleWith("K") @Nullable Object key)
Object
Collection
com.google.common.collect.AbstractMultiset
setCount
public int setCount(@NullableDecl E element, int count)
E,int
int
com.google.common.collect.Synchronized$SynchronizedMap
SynchronizedMap
SynchronizedMap(Map<K, V> delegate, @Nullable Object mutex)
Map,Object
constructor
com.google.common.collect.LinkedListMultimap
put
public boolean put(@NullableDecl K key, @NullableDecl V value)
K,V
boolean
com.google.common.cache.LocalCache
getLiveValue
V getLiveValue(ReferenceEntry<K, V> entry, long now)
ReferenceEntry,long
V
com.google.common.cache.LocalCache
newEntry
abstract ReferenceEntry<K, V> newEntry(Segment<K, V> segment, K key, int hash, @NullableDecl ReferenceEntry<K, V> next)
Segment,K,int,ReferenceEntry
ReferenceEntry
com.google.common.base.Converter$ReverseConverter
correctedDoBackward
B correctedDoBackward(@Nullable A a)
A
B
com.google.common.cache.LocalCache$Segment
insertLoadingValueReference
LoadingValueReference<K, V> insertLoadingValueReference(final K key, final int hash, boolean checkTime)
K,int,boolean
LoadingValueReference
com.google.common.io.BaseEncoding$StandardBaseEncoding
newInstance
BaseEncoding newInstance(Alphabet alphabet, @Nullable Character paddingChar)
Alphabet,Character
BaseEncoding
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry
WeakKeyStrongValueEntry
WeakKeyStrongValueEntry(ReferenceQueue<K> queue, K key, int hash, @NullableDecl WeakKeyStrongValueEntry<K, V> next)
ReferenceQueue,K,int,WeakKeyStrongValueEntry
constructor
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, long p1, char p2)
boolean,String,long,char
void
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry
WeakKeyWeakValueEntry
WeakKeyWeakValueEntry(ReferenceQueue<K> queue, K key, int hash, @NullableDecl WeakKeyWeakValueEntry<K, V> next)
ReferenceQueue,K,int,WeakKeyWeakValueEntry
constructor
com.google.common.graph.Network
edgeConnectingOrNull
E edgeConnectingOrNull(N nodeU, N nodeV)
N,N
E
com.google.common.base.StandardSystemProperty
value
public String value()
empty
String
com.google.common.collect.FilteredEntryMultimap$AsMap
get
public Collection<V> get(@Nullable Object key)
Object
Collection
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, char p1, @Nullable Object p2)
boolean,String,char,Object
void
com.google.common.collect.Table
containsValue
boolean containsValue(@Nullable @CompatibleWith("V") Object value)
Object
boolean
com.google.common.collect.TreeMultiset$AvlNode
height
private static int height(@NullableDecl AvlNode<?> node)
AvlNode
int
com.google.common.cache.LocalCache$ValueReference
copyFor
ValueReference<K, V> copyFor(ReferenceQueue<V> queue, @Nullable V value, ReferenceEntry<K, V> entry)
ReferenceQueue,V,ReferenceEntry
ValueReference
com.google.common.math.MathPreconditions
checkPositive
static long checkPositive(@NullableDecl String role, long x)
String,long
long
com.google.common.collect.Multimap
putAll
boolean putAll(@Nullable K key, Iterable<? extends V> values)
K,Iterable
boolean
com.google.common.collect.TreeMultiset
treeAggregate
long treeAggregate(@NullableDecl AvlNode<?> root)
AvlNode
long
com.google.common.collect.ForwardingList
standardEquals
protected boolean standardEquals(@Nullable Object object)
Object
boolean
com.google.common.collect.Maps
immutableEntry
public static Entry<K, V> immutableEntry(@NullableDecl K key, @NullableDecl V value)
K,V
Entry
com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture
doTransform
ListenableFuture<? extends O> doTransform(AsyncFunction<? super I, ? extends O> function, @Nullable I input) throws Exception
AsyncFunction,I
ListenableFuture
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, int p1, int p2)
T,String,int,int
T
com.google.common.collect.Maps
valueOrNull
static V valueOrNull(@NullableDecl Entry<?, V> entry)
Entry
V
com.google.common.util.concurrent.Futures
immediateFuture
public static ListenableFuture<V> immediateFuture(@Nullable V value)
V
ListenableFuture
com.google.common.reflect.Invokable
invokeInternal
abstract Object invokeInternal(@NullableDecl Object receiver, Object[] args) throws InvocationTargetException, IllegalAccessException
Object,Object[]
Object
com.google.common.escape.ArrayBasedUnicodeEscaper
ArrayBasedUnicodeEscaper
protected ArrayBasedUnicodeEscaper(Map<Character, String> replacementMap, int safeMin, int safeMax, @Nullable String unsafeReplacement)
Map,int,int,String
constructor
com.google.common.io.BaseEncoding$StandardBaseEncoding
StandardBaseEncoding
StandardBaseEncoding(String name, String alphabetChars, @NullableDecl Character paddingChar)
String,String,Character
constructor
com.google.common.collect.TreeMultiset$AvlNode
add
AvlNode<E> add(Comparator<? super E> comparator, @Nullable E e, int count, int[] result)
Comparator,E,int,int[]
AvlNode
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, char p1, long p2)
boolean,String,char,long
void
com.google.common.collect.ImmutableCollection
contains
public abstract boolean contains(@NullableDecl Object object)
Object
boolean
com.google.common.collect.FilteredEntryMultimap$AsMap
remove
public Collection<V> remove(@Nullable Object key)
Object
Collection
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, @NullableDecl Object p2, @NullableDecl Object p3)
boolean,String,Object,Object,Object
void
com.google.common.cache.LocalCache$LoadingValueReference
notifyNewValue
public void notifyNewValue(@Nullable V newValue)
V
void
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, char p1)
T,String,char
T
com.google.common.io.BaseEncoding$Base64Encoding
Base64Encoding
private Base64Encoding(Alphabet alphabet, @Nullable Character paddingChar)
Alphabet,Character
constructor
com.google.common.collect.HashBiMap$Inverse
forcePut
public K forcePut(@NullableDecl V value, @NullableDecl K key)
V,K
K
com.google.common.collect.ComparisonChain$InactiveComparisonChain
compare
public ComparisonChain compare(@NullableDecl T left, @NullableDecl T right, @NullableDecl Comparator<T> comparator)
T,T,Comparator
ComparisonChain
com.google.common.collect.TreeMultiset
treeAggregate
abstract long treeAggregate(@Nullable AvlNode<?> root)
AvlNode
long
com.google.common.collect.Lists
indexOfRandomAccess
private static int indexOfRandomAccess(List<?> list, @Nullable Object element)
List,Object
int
com.google.common.collect.ForwardingMultimap
containsEntry
public boolean containsEntry(@Nullable Object key, @Nullable Object value)
Object,Object
boolean
com.google.common.collect.ListMultimap
removeAll
List<V> removeAll(@NullableDecl Object key)
Object
List
com.google.common.reflect.Types$ParameterizedTypeImpl
ParameterizedTypeImpl
ParameterizedTypeImpl(@NullableDecl Type ownerType, Class<?> rawType, Type[] typeArguments)
Type,Class,Type[]
constructor
com.google.common.collect.Lists
indexOfImpl
static int indexOfImpl(List<?> list, @NullableDecl Object element)
List,Object
int
com.google.common.collect.TreeRangeSet$RangesByUpperBound
get
public Range<C> get(@Nullable Object key)
Object
Range
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, @Nullable Object p1, int p2)
boolean,String,Object,int
void
com.google.common.collect.AbstractListMultimap
get
public List<V> get(@Nullable K key)
K
List
com.google.common.collect.AbstractNavigableMap
ceilingEntry
public Entry<K, V> ceilingEntry(K key)
K
Entry
com.google.common.math.MathPreconditions
checkNonNegative
static int checkNonNegative(@Nullable String role, int x)
String,int
int
com.google.common.collect.RegularImmutableMap
fromEntryArray
static RegularImmutableMap<K, V> fromEntryArray(int n, Entry<K, V>[] entryArray)
int,Entry[]
RegularImmutableMap
com.google.common.base.Functions$ConstantFunction
apply
public E apply(@NullableDecl Object from)
Object
E
com.google.common.collect.Ordering
min
public E min(@Nullable E a, @Nullable E b)
E,E
E
com.google.common.cache.LocalCache
newEntry
ReferenceEntry<K, V> newEntry(K key, int hash, @NullableDecl ReferenceEntry<K, V> next)
K,int,ReferenceEntry
ReferenceEntry
com.google.common.collect.Ordering
max
public E max(@NullableDecl E a, @NullableDecl E b)
E,E
E
com.google.common.collect.MapMakerInternalMap$Helper
copy
public WeakKeyDummyValueEntry<K> copy(WeakKeyDummyValueSegment<K> segment, WeakKeyDummyValueEntry<K> entry, @Nullable WeakKeyDummyValueEntry<K> newNext)
WeakKeyDummyValueSegment,WeakKeyDummyValueEntry,WeakKeyDummyValueEntry
WeakKeyDummyValueEntry
com.google.common.collect.ImmutableSetMultimap
valuesBuilder
private static ImmutableSet.Builder<V> valuesBuilder(@Nullable Comparator<? super V> valueComparator)
Comparator
ImmutableSet.Builder
com.google.common.collect.LinkedHashMultimap$ValueEntry
ValueEntry
ValueEntry(@NullableDecl K key, @NullableDecl V value, int smearedValueHash, @NullableDecl ValueEntry<K, V> nextInValueBucket)
K,V,int,ValueEntry
constructor
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, long p1, long p2)
boolean,String,long,long
void
com.google.common.collect.ImmutableSetMultimap
emptySet
private static ImmutableSet<V> emptySet(@Nullable Comparator<? super V> valueComparator)
Comparator
ImmutableSet
com.google.common.collect.TopKSelector
offer
public void offer(@NullableDecl T elem)
T
void
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, char p1, int p2)
boolean,String,char,int
void
com.google.common.base.Preconditions
badElementIndex
private static String badElementIndex(int index, int size, @Nullable String desc)
int,int,String
String
com.google.common.cache.LocalCache$LoadingValueReference
set
public boolean set(@NullableDecl V newValue)
V
boolean
com.google.common.io.AppendableWriter
append
public Writer append(@Nullable CharSequence charSeq, int start, int end) throws IOException
CharSequence,int,int
Writer
com.google.common.collect.RegularImmutableSet
contains
public boolean contains(@Nullable Object target)
Object
boolean
com.google.common.base.FinalizableReferenceQueue$SystemLoader
loadFinalizer
public Class<?> loadFinalizer()
empty
Class
com.google.common.collect.ObjectArrays
concat
public static T[] concat(@NullableDecl T element, T[] array)
T,T[]
T[]
com.google.common.collect.Multimap
containsValue
boolean containsValue(@CompatibleWith("V") @Nullable Object value)
Object
boolean
com.google.common.collect.TreeMultiset$AvlNode
height
private static int height(@Nullable AvlNode<?> node)
AvlNode
int
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, int p1, @Nullable Object p2)
boolean,String,int,Object
void
com.google.common.base.Converter
convert
public final B convert(@NullableDecl A a)
A
B
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, @Nullable Object p1, @Nullable Object p2, @Nullable Object p3, @Nullable Object p4)
boolean,String,Object,Object,Object,Object
void
com.google.common.collect.Maps
keyOrNull
static K keyOrNull(@NullableDecl Entry<K, ?> entry)
Entry
K
com.google.common.collect.MapMakerInternalMap$Helper
copy
public StrongKeyWeakValueEntry<K, V> copy(StrongKeyWeakValueSegment<K, V> segment, StrongKeyWeakValueEntry<K, V> entry, @NullableDecl StrongKeyWeakValueEntry<K, V> newNext)
StrongKeyWeakValueSegment,StrongKeyWeakValueEntry,StrongKeyWeakValueEntry
StrongKeyWeakValueEntry
com.google.common.collect.SortedMultisets
getElementOrNull
private static E getElementOrNull(@NullableDecl Entry<E> entry)
Entry
E
com.google.common.collect.AbstractTable
remove
public V remove(@NullableDecl Object rowKey, @NullableDecl Object columnKey)
Object,Object
V
com.google.common.cache.LocalCache$Segment
get
V get(Object key, int hash)
Object,int
V
com.google.common.collect.MapMakerInternalMap$Helper
copy
public StrongKeyDummyValueEntry<K> copy(StrongKeyDummyValueSegment<K> segment, StrongKeyDummyValueEntry<K> entry, @NullableDecl StrongKeyDummyValueEntry<K> newNext)
StrongKeyDummyValueSegment,StrongKeyDummyValueEntry,StrongKeyDummyValueEntry
StrongKeyDummyValueEntry
com.google.common.base.internal.Finalizer
getBigThreadConstructor
private static Constructor<Thread> getBigThreadConstructor()
empty
Constructor
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, @Nullable Object p1, @Nullable Object p2, @Nullable Object p3, @Nullable Object p4)
T,String,Object,Object,Object,Object
T
com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture
doTransform
ListenableFuture<? extends O> doTransform(AsyncFunction<? super I, ? extends O> function, @NullableDecl I input) throws Exception
AsyncFunction,I
ListenableFuture
com.google.common.collect.Maps$TransformedEntriesMap
getOrDefault
public V2 getOrDefault(@Nullable Object key, @Nullable V2 defaultValue)
Object,V2
V2
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, char p1, @Nullable Object p2)
boolean,String,char,Object
void
com.google.common.collect.Lists
indexOfRandomAccess
private static int indexOfRandomAccess(List<?> list, @NullableDecl Object element)
List,Object
int
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, @Nullable Object p1, @Nullable Object p2)
T,String,Object,Object
T
com.google.common.net.InetAddresses
forUriStringNoThrow
private static InetAddress forUriStringNoThrow(String hostAddr)
String
InetAddress
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, @Nullable Object p1, @Nullable Object p2, @Nullable Object p3)
boolean,String,Object,Object,Object
void
com.google.common.base.Functions$SupplierFunction
apply
public T apply(@NullableDecl Object input)
Object
T
com.google.common.collect.super.com.google.common.collect.ImmutableList
indexOf
public int indexOf(@NullableDecl Object object)
Object
int
com.google.common.cache.Cache
getIfPresent
V getIfPresent(@CompatibleWith("K") Object key)
Object
V
com.google.common.collect.Iterables
frequency
public static int frequency(Iterable<?> iterable, @Nullable Object element)
Iterable,Object
int
com.google.common.collect.Synchronized$SynchronizedDeque
SynchronizedDeque
SynchronizedDeque(Deque<E> delegate, @Nullable Object mutex)
Deque,Object
constructor
com.google.common.collect.GeneralRange
contains
boolean contains(@NullableDecl T t)
T
boolean
com.google.common.graph.Graphs
equivalent
public static boolean equivalent(@NullableDecl Network<?, ?> networkA, @NullableDecl Network<?, ?> networkB)
Network,Network
boolean
com.google.common.io.PatternFilenameFilter
accept
public boolean accept(@NullableDecl File dir, String fileName)
File,String
boolean
com.google.common.collect.Maps
safeGet
static V safeGet(Map<?, V> map, @Nullable Object key)
Map,Object
V
com.google.common.collect.LinkedHashMultimap$ValueSet
add
public boolean add(@Nullable V value)
V
boolean
com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet
WrappedSortedSet
WrappedSortedSet(@Nullable K key, SortedSet<V> delegate, @Nullable WrappedCollection ancestor)
K,SortedSet,WrappedCollection
constructor
com.google.common.collect.ComparisonChain
compare
public abstract ComparisonChain compare(@Nullable T left, @Nullable T right, Comparator<T> comparator)
T,T,Comparator
ComparisonChain
com.google.common.collect.TreeRangeMap
coalesce
private static Range<K> coalesce(Range<K> range, V value, @NullableDecl Entry<Cut<K>, RangeMapEntry<K, V>> entry)
Range,V,Entry
Range
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry
StrongKeyWeakValueEntry
StrongKeyWeakValueEntry(K key, int hash, @NullableDecl StrongKeyWeakValueEntry<K, V> next)
K,int,StrongKeyWeakValueEntry
constructor
com.google.common.collect.Table
contains
boolean contains(@NullableDecl @CompatibleWith("R") Object rowKey, @NullableDecl @CompatibleWith("C") Object columnKey)
Object,Object
boolean
com.google.common.base.Strings
emptyToNull
public static String emptyToNull(@NullableDecl String string)
String
String
com.google.common.collect.Ordering
binarySearch
public int binarySearch(List<? extends T> sortedList, @Nullable T key)
List,T
int
com.google.common.collect.LinkedListMultimap$ValueForKeyIterator
ValueForKeyIterator
public ValueForKeyIterator(@Nullable Object key, int index)
Object,int
constructor
com.google.common.collect.Synchronized
set
static Set<E> set(Set<E> set, @Nullable Object mutex)
Set,Object
Set
com.google.common.collect.SortedLists
binarySearch
public static int binarySearch(List<? extends E> list, @Nullable E key, Comparator<? super E> comparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)
List,E,Comparator,KeyPresentBehavior,KeyAbsentBehavior
int
com.google.common.cache.LocalCache$Segment
enqueueNotification
void enqueueNotification(@NullableDecl K key, int hash, @NullableDecl V value, int weight, RemovalCause cause)
K,int,V,int,RemovalCause
void
com.google.common.cache.CacheBuilderSpec$ValueParser
parse
void parse(CacheBuilderSpec spec, String key, @NullableDecl String value)
CacheBuilderSpec,String,String
void
com.google.common.collect.AbstractNavigableMap
lastEntry
public Entry<K, V> lastEntry()
empty
Entry
com.google.common.collect.ImmutableMap
getOrDefault
public final V getOrDefault(@NullableDecl Object key, @NullableDecl V defaultValue)
Object,V
V
com.google.common.collect.Lists
lastIndexOfRandomAccess
private static int lastIndexOfRandomAccess(List<?> list, @Nullable Object element)
List,Object
int
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, @Nullable Object p1, @Nullable Object p2, @Nullable Object p3, @Nullable Object p4)
boolean,String,Object,Object,Object,Object
void
com.google.common.collect.ImmutableSetMultimap
ImmutableSetMultimap
ImmutableSetMultimap(ImmutableMap<K, ImmutableSet<V>> map, int size, @Nullable Comparator<? super V> valueComparator)
ImmutableMap,int,Comparator
constructor
com.google.common.collect.TreeMultiset$AvlNode
AvlNode
AvlNode(@NullableDecl E elem, int elemCount)
E,int
constructor
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, int p1, char p2)
boolean,String,int,char
void
com.google.common.collect.AbstractSortedSetMultimap
replaceValues
public SortedSet<V> replaceValues(@Nullable K key, Iterable<? extends V> values)
K,Iterable
SortedSet
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, int p2)
boolean,String,Object,int
void
com.google.common.base.VerifyException
VerifyException
public VerifyException(@NullableDecl Throwable cause)
Throwable
constructor
com.google.common.base.Functions$FunctionForMapNoDefault
apply
public V apply(@Nullable K key)
K
V
com.google.common.collect.Synchronized$SynchronizedNavigableSet
SynchronizedNavigableSet
SynchronizedNavigableSet(NavigableSet<E> delegate, @NullableDecl Object mutex)
NavigableSet,Object
constructor
com.google.common.cache.LocalCache$ValueReference
getEntry
ReferenceEntry<K, V> getEntry()
empty
ReferenceEntry
com.google.common.base.Preconditions
checkState
public static void checkState(boolean expression, @NullableDecl Object errorMessage)
boolean,Object
void
com.google.common.collect.ListMultimap
get
List<V> get(@NullableDecl K key)
K
List
com.google.common.base.MoreObjects$ToStringHelper
add
public ToStringHelper add(String name, @NullableDecl Object value)
String,Object
ToStringHelper
com.google.common.graph.ValueGraph
edgeValueOrDefault
V edgeValueOrDefault(N nodeU, N nodeV, @NullableDecl V defaultValue)
N,N,V
V
com.google.common.collect.super.com.google.common.collect.ImmutableMap
containsKey
public boolean containsKey(@NullableDecl Object key)
Object
boolean
com.google.common.collect.Table
contains
boolean contains(@Nullable @CompatibleWith("R") Object rowKey, @Nullable @CompatibleWith("C") Object columnKey)
Object,Object
boolean
com.google.common.base.Throwables
propagateIfInstanceOf
public static void propagateIfInstanceOf(@NullableDecl Throwable throwable, Class<X> declaredType) throws X
Throwable,Class
void
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1)
T,String,Object
T
com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState
collectOneValue
final void collectOneValue(boolean allMustSucceed, int index, @Nullable V returnValue)
boolean,int,V
void
com.google.common.collect.Synchronized
sortedSet
private static SortedSet<E> sortedSet(SortedSet<E> set, @Nullable Object mutex)
SortedSet,Object
SortedSet
com.google.common.collect.ImmutableMapEntry
getNextInKeyBucket
ImmutableMapEntry<K, V> getNextInKeyBucket()
empty
ImmutableMapEntry
com.google.common.base.Throwables
propagateIfPossible
public static void propagateIfPossible(@NullableDecl Throwable throwable, Class<X1> declaredType1, Class<X2> declaredType2) throws X1, X2
Throwable,Class,Class
void
com.google.common.util.concurrent.ExecutionError
ExecutionError
protected ExecutionError(@Nullable String message)
String
constructor
com.google.common.collect.Streams
mapWithIndex
public static Stream<R> mapWithIndex(Stream<T> stream, FunctionWithIndex<? super T, ? extends R> function)
Stream,FunctionWithIndex
Stream
com.google.common.collect.FilteredEntryMultimap$ValuePredicate
apply
public boolean apply(@NullableDecl V value)
V
boolean
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, @Nullable Object p1)
T,String,Object
T
com.google.common.reflect.Types
getComponentType
static Type getComponentType(Type type)
Type
Type
com.google.common.collect.Lists
asList
public static List<E> asList(@NullableDecl E first, E[] rest)
E,E[]
List
com.google.common.collect.ImmutableSetMultimap
valueSet
private static ImmutableSet<V> valueSet(@Nullable Comparator<? super V> valueComparator, Collection<? extends V> values)
Comparator,Collection
ImmutableSet
com.google.common.collect.ForwardingList
standardIndexOf
protected int standardIndexOf(@NullableDecl Object element)
Object
int
com.google.common.util.concurrent.UncheckedExecutionException
UncheckedExecutionException
public UncheckedExecutionException(@Nullable Throwable cause)
Throwable
constructor
com.google.common.io.MoreFiles
addException
private static Collection<IOException> addException(@NullableDecl Collection<IOException> exceptions, IOException e)
Collection,IOException
Collection
com.google.common.collect.FilteredEntryMultimap$AsMap
get
public Collection<V> get(@NullableDecl Object key)
Object
Collection
com.google.common.collect.GeneralRange
contains
boolean contains(@Nullable T t)
T
boolean
com.google.common.collect.ComputationException
ComputationException
public ComputationException(@NullableDecl Throwable cause)
Throwable
constructor
com.google.common.base.Optional
fromNullable
public static Optional<T> fromNullable(@Nullable T nullableReference)
T
Optional
com.google.common.collect.Table$Cell
getColumnKey
C getColumnKey()
empty
C
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)
boolean,String,Object...
void
com.google.common.base.Functions
constant
public static Function<Object, E> constant(@Nullable E value)
E
Function
com.google.common.collect.Iterators
getNext
public static T getNext(Iterator<? extends T> iterator, @Nullable T defaultValue)
Iterator,T
T
com.google.common.collect.AbstractNavigableMap
pollLastEntry
public Entry<K, V> pollLastEntry()
empty
Entry
com.google.common.net.InetAddresses$TeredoInfo
TeredoInfo
public TeredoInfo(@Nullable Inet4Address server, @Nullable Inet4Address client, int port, int flags)
Inet4Address,Inet4Address,int,int
constructor
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, @NullableDecl Object... errorMessageArgs)
boolean,String,Object...
void
com.google.common.cache.RemovalNotification
create
public static RemovalNotification<K, V> create(@Nullable K key, @Nullable V value, RemovalCause cause)
K,V,RemovalCause
RemovalNotification
com.google.common.collect.ForwardingMap
standardRemove
protected V standardRemove(@Nullable Object key)
Object
V
com.google.common.reflect.Invokable
invoke
public final R invoke(@NullableDecl T receiver, Object... args) throws InvocationTargetException, IllegalAccessException
T,Object...
R
com.google.common.collect.ArrayTable
erase
public V erase(@NullableDecl Object rowKey, @NullableDecl Object columnKey)
Object,Object
V
com.google.common.collect.ForwardingSortedSet
standardRemove
protected boolean standardRemove(@NullableDecl Object object)
Object
boolean
com.google.common.collect.AbstractNavigableMap
higherEntry
public Entry<K, V> higherEntry(K key)
K
Entry
com.google.common.escape.ArrayBasedUnicodeEscaper
ArrayBasedUnicodeEscaper
protected ArrayBasedUnicodeEscaper(ArrayBasedEscaperMap escaperMap, int safeMin, int safeMax, @NullableDecl String unsafeReplacement)
ArrayBasedEscaperMap,int,int,String
constructor
com.google.common.collect.ForwardingSortedSet
unsafeCompare
private int unsafeCompare(@NullableDecl Object o1, @NullableDecl Object o2)
Object,Object
int
com.google.common.collect.Synchronized$SynchronizedListMultimap
SynchronizedListMultimap
SynchronizedListMultimap(ListMultimap<K, V> delegate, @NullableDecl Object mutex)
ListMultimap,Object
constructor
com.google.common.base.Suppliers$SupplierOfInstance
SupplierOfInstance
SupplierOfInstance(@Nullable T instance)
T
constructor
com.google.common.cache.LocalCache$StrongEntry
StrongEntry
StrongEntry(K key, int hash, @NullableDecl ReferenceEntry<K, V> next)
K,int,ReferenceEntry
constructor
com.google.common.collect.Multisets$FilteredMultiset
count
public int count(@NullableDecl Object element)
Object
int
com.google.common.collect.GeneralRange
range
static GeneralRange<T> range(Comparator<? super T> comparator, @Nullable T lower, BoundType lowerType, @Nullable T upper, BoundType upperType)
Comparator,T,BoundType,T,BoundType
GeneralRange
com.google.common.collect.MapMakerInternalMap
remove
public boolean remove(@NullableDecl Object key, @NullableDecl Object value)
Object,Object
boolean
com.google.common.collect.Maps
newTreeMap
public static TreeMap<K, V> newTreeMap(@Nullable Comparator<C> comparator)
Comparator
TreeMap
com.google.common.collect.LinkedListMultimap
checkElement
private static void checkElement(@NullableDecl Object node)
Object
void
com.google.common.primitives.Bytes$ByteArrayAsList
equals
public boolean equals(@NullableDecl Object object)
Object
boolean
com.google.common.collect.TreeRangeSet
rangeContaining
public Range<C> rangeContaining(C value)
C
Range
com.google.common.collect.Synchronized$SynchronizedSortedMap
SynchronizedSortedMap
SynchronizedSortedMap(SortedMap<K, V> delegate, @NullableDecl Object mutex)
SortedMap,Object
constructor
com.google.common.base.internal.Finalizer
getInheritableThreadLocalsField
private static Field getInheritableThreadLocalsField()
empty
Field
com.google.common.collect.MapMakerInternalMap$Helper
copy
public WeakKeyStrongValueEntry<K, V> copy(WeakKeyStrongValueSegment<K, V> segment, WeakKeyStrongValueEntry<K, V> entry, @NullableDecl WeakKeyStrongValueEntry<K, V> newNext)
WeakKeyStrongValueSegment,WeakKeyStrongValueEntry,WeakKeyStrongValueEntry
WeakKeyStrongValueEntry
com.google.common.collect.RegularContiguousSet
equalsOrThrow
private static boolean equalsOrThrow(Comparable<?> left, @NullableDecl Comparable<?> right)
Comparable,Comparable
boolean
com.google.common.collect.Collections2
safeRemove
static boolean safeRemove(Collection<?> collection, @NullableDecl Object object)
Collection,Object
boolean
com.google.common.collect.Synchronized$SynchronizedSet
SynchronizedSet
SynchronizedSet(Set<E> delegate, @NullableDecl Object mutex)
Set,Object
constructor
com.google.common.collect.Multimap
put
boolean put(@NullableDecl K key, @NullableDecl V value)
K,V
boolean
com.google.common.collect.LinkedListMultimap
put
public boolean put(@Nullable K key, @Nullable V value)
K,V
boolean
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, char p1, char p2)
boolean,String,char,char
void
com.google.common.collect.Multimap
replaceValues
Collection<V> replaceValues(@Nullable K key, Iterable<? extends V> values)
K,Iterable
Collection
com.google.common.base.Absent
orNull
public T orNull()
empty
T
com.google.common.util.concurrent.ImmediateFuture$ImmediateSuccessfulCheckedFuture
ImmediateSuccessfulCheckedFuture
ImmediateSuccessfulCheckedFuture(@Nullable V value)
V
constructor
com.google.common.collect.BiMap
put
V put(@NullableDecl K key, @NullableDecl V value)
K,V
V
com.google.common.collect.AbstractTable
containsRow
public boolean containsRow(@NullableDecl Object rowKey)
Object
boolean
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, long p1, @Nullable Object p2)
boolean,String,long,Object
void
com.google.common.collect.BiMap
forcePut
V forcePut(@Nullable K key, @Nullable V value)
K,V
V
com.google.common.collect.Ordering
max
public E max(@NullableDecl E a, @NullableDecl E b, @NullableDecl E c, E... rest)
E,E,E,E...
E
com.google.common.cache.LocalCache$Segment
getLiveEntry
ReferenceEntry<K, V> getLiveEntry(Object key, int hash, long now)
Object,int,long
ReferenceEntry
com.google.common.collect.Multisets
sum
public static Multiset<E> sum(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)
Multiset,Multiset
Multiset
com.google.common.collect.TreeMultiset
tailMultiset
public SortedMultiset<E> tailMultiset(@Nullable E lowerBound, BoundType boundType)
E,BoundType
SortedMultiset
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, long p1, long p2)
boolean,String,long,long
void
com.google.common.cache.LocalCache
copyFor
public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @NullableDecl Object value, ReferenceEntry<Object, Object> entry)
ReferenceQueue,Object,ReferenceEntry
ValueReference
com.google.common.collect.Synchronized$SynchronizedAsMap
SynchronizedAsMap
SynchronizedAsMap(Map<K, Collection<V>> delegate, @Nullable Object mutex)
Map,Object
constructor
com.google.common.collect.Iterators
getLast
public static T getLast(Iterator<? extends T> iterator, @Nullable T defaultValue)
Iterator,T
T
com.google.common.base.Predicate
test
boolean test(@Nullable T input)
T
boolean
com.google.common.io.MoreFiles
getParentPath
private static Path getParentPath(Path path)
Path
Path
com.google.common.collect.ImmutableCollection
contains
public abstract boolean contains(@Nullable Object object)
Object
boolean
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry
WeakKeyStrongValueEntry
WeakKeyStrongValueEntry(ReferenceQueue<K> queue, K key, int hash, @Nullable WeakKeyStrongValueEntry<K, V> next)
ReferenceQueue,K,int,WeakKeyStrongValueEntry
constructor
com.google.common.collect.AbstractNavigableMap
pollFirstEntry
public Entry<K, V> pollFirstEntry()
empty
Entry
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, @Nullable Object p1, int p2)
T,String,Object,int
T
com.google.common.collect.AllEqualOrdering
compare
public int compare(@NullableDecl Object left, @NullableDecl Object right)
Object,Object
int
com.google.common.collect.ImmutableSortedSet
indexOf
abstract int indexOf(@NullableDecl Object target)
Object
int
com.google.common.collect.Iterators
get
public static T get(Iterator<? extends T> iterator, int position, @Nullable T defaultValue)
Iterator,int,T
T
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, char p2)
boolean,String,Object,char
void
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, char p1, @NullableDecl Object p2)
boolean,String,char,Object
void
com.google.common.cache.CacheBuilderSpec
durationInNanos
private static Long durationInNanos(long duration, @Nullable TimeUnit unit)
long,TimeUnit
Long
com.google.common.base.Suppliers$SupplierOfInstance
SupplierOfInstance
SupplierOfInstance(@NullableDecl T instance)
T
constructor
com.google.common.collect.AbstractNavigableMap
firstEntry
public Entry<K, V> firstEntry()
empty
Entry
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T reference, @NullableDecl Object errorMessage)
T,Object
T
com.google.common.cache.LocalCache$StrongAccessWriteEntry
StrongAccessWriteEntry
StrongAccessWriteEntry(K key, int hash, @Nullable ReferenceEntry<K, V> next)
K,int,ReferenceEntry
constructor
com.google.common.collect.TreeBasedTable$TreeRow
TreeRow
TreeRow(R rowKey, @Nullable C lowerBound, @Nullable C upperBound)
R,C,C
constructor
com.google.common.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture
ImmediateSuccessfulFuture
ImmediateSuccessfulFuture(@Nullable V value)
V
constructor
com.google.common.base.Optional
equals
public abstract boolean equals(@Nullable Object object)
Object
boolean
com.google.common.collect.Synchronized
setMultimap
static SetMultimap<K, V> setMultimap(SetMultimap<K, V> multimap, @Nullable Object mutex)
SetMultimap,Object
SetMultimap
com.google.common.graph.Graphs
equivalent
public static boolean equivalent(@NullableDecl Graph<?> graphA, @NullableDecl Graph<?> graphB)
Graph,Graph
boolean
com.google.common.collect.Maps$EntryTransformer
transformEntry
V2 transformEntry(@NullableDecl K key, @NullableDecl V1 value)
K,V1
V2
com.google.common.graph.ConfigurableNetwork
containsEdge
protected final boolean containsEdge(@NullableDecl E edge)
E
boolean
com.google.common.collect.RegularImmutableBiMap
checkNoConflictInValueBucket
private static void checkNoConflictInValueBucket(Object value, Entry<?, ?> entry, @NullableDecl ImmutableMapEntry<?, ?> valueBucketHead)
Object,Entry,ImmutableMapEntry
void
com.google.common.collect.Multisets
immutableEntry
public static Multiset.Entry<E> immutableEntry(@Nullable E e, int n)
E,int
Multiset.Entry
com.google.common.collect.FilteredMultimapValues
remove
public boolean remove(@NullableDecl Object o)
Object
boolean
com.google.common.collect.SortedLists
binarySearch
public static int binarySearch(List<? extends E> list, @NullableDecl E key, Comparator<? super E> comparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)
List,E,Comparator,KeyPresentBehavior,KeyAbsentBehavior
int
com.google.common.collect.Multisets$FilteredMultiset
add
public int add(@NullableDecl E element, int occurrences)
E,int
int
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, @NullableDecl Object p2)
T,String,Object,Object
T
com.google.common.collect.MapDifference$ValueDifference
equals
boolean equals(@Nullable Object other)
Object
boolean
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, long p2)
boolean,String,Object,long
void
com.google.common.collect.Maps
immutableEntry
public static Entry<K, V> immutableEntry(@Nullable K key, @Nullable V value)
K,V
Entry
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, char p1, int p2)
boolean,String,char,int
void
com.google.common.base.Preconditions
format
static String format(@NullableDecl String template, @NullableDecl Object... args)
String,Object...
String
com.google.common.collect.FilteredEntryMultimap
removeAll
public Collection<V> removeAll(@NullableDecl Object key)
Object
Collection
com.google.common.base.Function
apply
T apply(@Nullable F input)
F
T
com.google.common.collect.Maps$TransformedEntriesMap
get
public V2 get(@Nullable Object key)
Object
V2
com.google.common.util.concurrent.Futures
immediateCheckedFuture
public static CheckedFuture<V, X> immediateCheckedFuture(@Nullable V value)
V
CheckedFuture
com.google.common.collect.HashBiMap
putInverse
private K putInverse(@Nullable V value, @Nullable K key, boolean force)
V,K,boolean
K
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, int p1, long p2)
boolean,String,int,long
void
com.google.common.collect.AbstractNavigableMap
lowerEntry
public Entry<K, V> lowerEntry(K key)
K
Entry
com.google.common.util.concurrent.TrustedListenableFutureTask
create
static TrustedListenableFutureTask<V> create(Runnable runnable, @Nullable V result)
Runnable,V
TrustedListenableFutureTask
com.google.common.collect.SortedSetMultimap
get
SortedSet<V> get(@Nullable K key)
K
SortedSet
com.google.common.base.Equivalence
hash
public final int hash(@NullableDecl T t)
T
int
com.google.common.base.Strings
nullToEmpty
public static String nullToEmpty(@NullableDecl String string)
String
String
com.google.common.base.Objects
hashCode
public static int hashCode(@Nullable Object... objects)
Object...
int
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, int p1, @Nullable Object p2)
T,String,int,Object
T
com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet
WrappedNavigableSet
WrappedNavigableSet(@Nullable K key, NavigableSet<V> delegate, @Nullable WrappedCollection ancestor)
K,NavigableSet,WrappedCollection
constructor
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, int p1, char p2)
T,String,int,char
T
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, int p1)
boolean,String,int
void
com.google.common.collect.TreeMultiset$AvlNode
floor
private AvlNode<E> floor(Comparator<? super E> comparator, E e)
Comparator,E
AvlNode
com.google.common.collect.ImmutableMap
getOrDefault
public final V getOrDefault(@Nullable Object key, @Nullable V defaultValue)
Object,V
V
com.google.common.graph.DirectedGraphConnections
successors
public Set<N> successors()
empty
Set
com.google.common.collect.Ordering
compare
public abstract int compare(@NullableDecl T left, @NullableDecl T right)
T,T
int
com.google.common.collect.AbstractMultiset
setCount
public boolean setCount(@Nullable E element, int oldCount, int newCount)
E,int,int
boolean
com.google.common.collect.Multisets$FilteredMultiset
remove
public int remove(@Nullable Object element, int occurrences)
Object,int
int
com.google.common.reflect.ClassPath$Scanner
getClassPathFromManifest
static ImmutableSet<File> getClassPathFromManifest(File jarFile, @NullableDecl Manifest manifest)
File,Manifest
ImmutableSet
com.google.common.collect.Lists$ReverseList
set
public T set(int index, @Nullable T element)
int,T
T
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap
getValue
abstract V getValue(int keyIndex)
int
V
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, long p1, @NullableDecl Object p2)
T,String,long,Object
T
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, @NullableDecl Object p2, @NullableDecl Object p3)
boolean,String,Object,Object,Object
void
com.google.common.util.concurrent.AbstractListeningExecutorService
submit
public ListenableFuture<T> submit(Runnable task, @Nullable T result)
Runnable,T
ListenableFuture
com.google.common.base.Preconditions
checkState
public static void checkState(boolean expression, @NullableDecl String errorMessageTemplate, @NullableDecl Object... errorMessageArgs)
boolean,String,Object...
void
com.google.common.util.concurrent.InterruptibleTask
afterRanInterruptibly
abstract void afterRanInterruptibly(@NullableDecl T result, @NullableDecl Throwable error)
T,Throwable
void
com.google.common.reflect.TypeToken$TypeCollector
getSuperclass
abstract K getSuperclass(K type)
K
K
com.google.common.reflect.Types$ParameterizedTypeImpl
ParameterizedTypeImpl
ParameterizedTypeImpl(@Nullable Type ownerType, Class<?> rawType, Type[] typeArguments)
Type,Class,Type[]
constructor
com.google.common.io.PatternFilenameFilter
accept
public boolean accept(@Nullable File dir, String fileName)
File,String
boolean
com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture
doTransform
O doTransform(Function<? super I, ? extends O> function, @NullableDecl I input)
Function,I
O
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, @NullableDecl Object p2, @NullableDecl Object p3, @NullableDecl Object p4)
boolean,String,Object,Object,Object,Object
void
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, char p1, char p2)
boolean,String,char,char
void
com.google.common.reflect.Invokable
invoke
public final R invoke(@Nullable T receiver, Object... args) throws InvocationTargetException, IllegalAccessException
T,Object...
R
com.google.common.base.Joiner
useForNull
public Joiner useForNull(final String nullText)
String
Joiner
com.google.common.collect.Maps
apply
public V2 apply(@Nullable V1 v1)
V1
V2
com.google.common.base.Throwables
propagateIfInstanceOf
public static void propagateIfInstanceOf(@Nullable Throwable throwable, Class<X> declaredType) throws X
Throwable,Class
void
com.google.common.base.Equivalence$EquivalentToPredicate
apply
public boolean apply(@NullableDecl T input)
T
boolean
com.google.common.reflect.TypeToInstanceMap
putInstance
T putInstance(TypeToken<T> type, @NullableDecl T value)
TypeToken,T
T
com.google.common.collect.Synchronized
navigableSet
static NavigableSet<E> navigableSet(NavigableSet<E> navigableSet, @NullableDecl Object mutex)
NavigableSet,Object
NavigableSet
com.google.common.collect.EnumMultiset
isActuallyE
private boolean isActuallyE(@Nullable Object o)
Object
boolean
com.google.common.collect.ImmutableRangeMap
get
public V get(K key)
K
V
com.google.common.collect.TreeMultiset
headMultiset
public SortedMultiset<E> headMultiset(@NullableDecl E upperBound, BoundType boundType)
E,BoundType
SortedMultiset
com.google.common.collect.AbstractMapBasedMultiset
getAndSet
private static int getAndSet(@NullableDecl Count i, int count)
Count,int
int
com.google.common.collect.Synchronized$SynchronizedBiMap
SynchronizedBiMap
private SynchronizedBiMap(BiMap<K, V> delegate, @Nullable Object mutex, @Nullable BiMap<V, K> inverse)
BiMap,Object,BiMap
constructor
com.google.common.collect.TreeMultiset
firstNode
private AvlNode<E> firstNode()
empty
AvlNode
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, char p1, int p2)
boolean,String,char,int
void
com.google.common.reflect.Types
newParameterizedTypeWithOwner
static ParameterizedType newParameterizedTypeWithOwner(@NullableDecl Type ownerType, Class<?> rawType, Type... arguments)
Type,Class,Type...
ParameterizedType
com.google.common.collect.SortedMultisets
getElementOrNull
private static E getElementOrNull(@Nullable Entry<E> entry)
Entry
E
com.google.common.collect.Synchronized$SynchronizedNavigableMap
SynchronizedNavigableMap
SynchronizedNavigableMap(NavigableMap<K, V> delegate, @NullableDecl Object mutex)
NavigableMap,Object
constructor
com.google.common.collect.MapMakerInternalMap
replace
public boolean replace(K key, @Nullable V oldValue, V newValue)
K,V,V
boolean
com.google.common.base.super.com.google.common.base.ExtraObjectsMethodsForWeb
equal
public static boolean equal(@Nullable String a, @Nullable String b)
String,String
boolean
com.google.common.io.Closer
register
public C register(@NullableDecl C closeable)
C
C
com.google.common.collect.AbstractBiMap
forcePut
public V forcePut(@Nullable K key, @Nullable V value)
K,V
V
com.google.common.util.concurrent.AbstractCatchingFuture
setResult
abstract void setResult(@Nullable T result)
T
void
com.google.common.collect.AbstractSetMultimap
removeAll
public Set<V> removeAll(@NullableDecl Object key)
Object
Set
com.google.common.collect.Synchronized$SynchronizedSortedSet
SynchronizedSortedSet
SynchronizedSortedSet(SortedSet<E> delegate, @Nullable Object mutex)
SortedSet,Object
constructor
com.google.common.collect.Ordering
min
public E min(@NullableDecl E a, @NullableDecl E b)
E,E
E
com.google.common.collect.ClassToInstanceMap
putInstance
T putInstance(Class<T> type, @NullableDecl T value)
Class,T
T
com.google.common.collect.Count
equals
public boolean equals(@Nullable Object obj)
Object
boolean
com.google.common.util.concurrent.ExecutionError
ExecutionError
public ExecutionError(@Nullable String message, @Nullable Error cause)
String,Error
constructor
com.google.common.collect.super.com.google.common.collect.AbstractSortedMultiset
subMultiset
public SortedMultiset<E> subMultiset(@NullableDecl E fromElement, BoundType fromBoundType, @NullableDecl E toElement, BoundType toBoundType)
E,BoundType,E,BoundType
SortedMultiset
com.google.common.collect.Multisets
equalsImpl
static boolean equalsImpl(Multiset<?> multiset, @Nullable Object object)
Multiset,Object
boolean
com.google.common.reflect.TypeToken
boundAsSuperclass
private TypeToken<? super T> boundAsSuperclass(Type bound)
Type
TypeToken
com.google.common.util.concurrent.AggregateFuture$RunningState
collectOneValue
abstract void collectOneValue(boolean allMustSucceed, int index, @Nullable InputT returnValue)
boolean,int,InputT
void
com.google.common.collect.Multimaps
equalsImpl
static boolean equalsImpl(Multimap<?, ?> multimap, @Nullable Object object)
Multimap,Object
boolean
com.google.common.base.Predicates$NotPredicate
apply
public boolean apply(@Nullable T t)
T
boolean
com.google.common.collect.AbstractMapBasedMultimap$WrappedList
WrappedList
WrappedList(@Nullable K key, List<V> delegate, @Nullable WrappedCollection ancestor)
K,List,WrappedCollection
constructor
com.google.common.collect.AbstractMapBasedMultimap
wrapList
private List<V> wrapList(@NullableDecl K key, List<V> list, @NullableDecl WrappedCollection ancestor)
K,List,WrappedCollection
List
com.google.common.collect.ListMultimap
removeAll
List<V> removeAll(@Nullable Object key)
Object
List
com.google.common.collect.ClassToInstanceMap
putInstance
T putInstance(Class<T> type, @Nullable T value)
Class,T
T
com.google.common.collect.AbstractTable
contains
public boolean contains(@NullableDecl Object rowKey, @NullableDecl Object columnKey)
Object,Object
boolean
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, char p1)
boolean,String,char
void
com.google.common.collect.LinkedListMultimap
get
public List<V> get(@NullableDecl final K key)
K
List
com.google.common.collect.AbstractBiMap
remove
public V remove(@Nullable Object key)
Object
V
com.google.common.collect.Synchronized$SynchronizedList
SynchronizedList
SynchronizedList(List<E> delegate, @Nullable Object mutex)
List,Object
constructor
com.google.common.base.Preconditions
checkPositionIndex
public static int checkPositionIndex(int index, int size, @NullableDecl String desc)
int,int,String
int
com.google.common.collect.Maps$ValueDifferenceImpl
ValueDifferenceImpl
private ValueDifferenceImpl(@NullableDecl V left, @NullableDecl V right)
V,V
constructor
com.google.common.io.BaseEncoding$Base64Encoding
Base64Encoding
private Base64Encoding(Alphabet alphabet, @NullableDecl Character paddingChar)
Alphabet,Character
constructor
com.google.common.collect.ArrayTable
set
public V set(int rowIndex, int columnIndex, @NullableDecl V value)
int,int,V
V
com.google.common.collect.Multimaps
equalsImpl
static boolean equalsImpl(Multimap<?, ?> multimap, @NullableDecl Object object)
Multimap,Object
boolean
com.google.common.collect.Multiset
remove
boolean remove(@NullableDecl Object element)
Object
boolean
com.google.common.collect.ComparisonChain$InactiveComparisonChain
compare
public ComparisonChain compare(@NullableDecl Comparable left, @NullableDecl Comparable right)
Comparable,Comparable
ComparisonChain
com.google.common.util.concurrent.AbstractCatchingFuture
doFallback
abstract T doFallback(F fallback, X throwable) throws Exception
F,X
T
com.google.common.graph.Graphs
equivalent
public static boolean equivalent(@Nullable Network<?, ?> networkA, @Nullable Network<?, ?> networkB)
Network,Network
boolean
com.google.common.base.Defaults
defaultValue
public static T defaultValue(Class<T> type)
Class
T
com.google.common.collect.Lists$ReverseList
add
public void add(int index, @Nullable T element)
int,T
void
com.google.common.base.Functions$FunctionComposition
apply
public C apply(@NullableDecl A a)
A
C
com.google.common.collect.SortedLists
binarySearch
public static int binarySearch(List<E> list, Function<? super E, K> keyFunction, @NullableDecl K key, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)
List,Function,K,KeyPresentBehavior,KeyAbsentBehavior
int
com.google.common.base.Throwables
getGetMethod
private static Method getGetMethod()
empty
Method
com.google.common.base.Optional
fromJavaUtil
public static Optional<T> fromJavaUtil(@Nullable java.util.Optional<T> javaUtilOptional)
java.util.Optional
Optional
com.google.common.collect.RangeMap
get
V get(K key)
K
V
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, long p1)
boolean,String,long
void
com.google.common.collect.MapMakerInternalMap$InternalEntryHelper
copy
E copy(S segment, E entry, @NullableDecl E newNext)
S,E,E
E
com.google.common.util.concurrent.AbstractService$StateSnapshot
StateSnapshot
StateSnapshot(State internalState, boolean shutdownWhenStartupFinishes, @Nullable Throwable failure)
State,boolean,Throwable
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableMap
containsKey
public boolean containsKey(@Nullable Object key)
Object
boolean
com.google.common.collect.Synchronized
navigableMap
static NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap, @Nullable Object mutex)
NavigableMap,Object
NavigableMap
com.google.common.collect.MapMakerInternalMap$InternalEntryHelper
newEntry
E newEntry(S segment, K key, int hash, @NullableDecl E next)
S,K,int,E
E
com.google.common.collect.MapMakerInternalMap
remove
public boolean remove(@Nullable Object key, @Nullable Object value)
Object,Object
boolean
com.google.common.collect.Synchronized$SynchronizedAsMap
SynchronizedAsMap
SynchronizedAsMap(Map<K, Collection<V>> delegate, @NullableDecl Object mutex)
Map,Object
constructor
com.google.common.reflect.MutableTypeToInstanceMap
trustedPut
private T trustedPut(TypeToken<T> type, @Nullable T value)
TypeToken,T
T
com.google.common.collect.TreeMultiset$Reference
checkAndSet
public void checkAndSet(@NullableDecl T expected, T newValue)
T,T
void
com.google.common.collect.Synchronized$SynchronizedList
SynchronizedList
SynchronizedList(List<E> delegate, @NullableDecl Object mutex)
List,Object
constructor
com.google.common.collect.ImmutableSetMultimap
valuesBuilder
private static ImmutableSet.Builder<V> valuesBuilder(@NullableDecl Comparator<? super V> valueComparator)
Comparator
ImmutableSet.Builder
com.google.common.reflect.TypeToken
getGenericSuperclass
final TypeToken<? super T> getGenericSuperclass()
empty
TypeToken
com.google.common.collect.FluentIterable
contains
public final boolean contains(@NullableDecl Object target)
Object
boolean
com.google.common.collect.Maps$TransformedEntriesNavigableMap
transformEntry
private Entry<K, V2> transformEntry(@NullableDecl Entry<K, V1> entry)
Entry
Entry
com.google.common.collect.FilteredEntryMultimap$AsMap
createKeySet
Set<K> createKeySet()
empty
Set
com.google.common.io.AppendableWriter
append
public Writer append(@NullableDecl CharSequence charSeq, int start, int end) throws IOException
CharSequence,int,int
Writer
com.google.common.base.super.com.google.common.base.ExtraObjectsMethodsForWeb
equal
public static boolean equal(@NullableDecl String a, @NullableDecl String b)
String,String
boolean
com.google.common.base.Throwables
getJLA
private static Object getJLA()
empty
Object
com.google.common.collect.Synchronized$SynchronizedAsMapValues
SynchronizedAsMapValues
SynchronizedAsMapValues(Collection<Collection<V>> delegate, @NullableDecl Object mutex)
Collection,Object
constructor
com.google.common.collect.ComparisonChain
compare
public ComparisonChain compare(@NullableDecl T left, @NullableDecl T right, Comparator<T> comparator)
T,T,Comparator
ComparisonChain
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, int p1)
boolean,String,int
void
com.google.common.collect.Synchronized
listMultimap
static ListMultimap<K, V> listMultimap(ListMultimap<K, V> multimap, @Nullable Object mutex)
ListMultimap,Object
ListMultimap
com.google.common.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture
ImmediateSuccessfulFuture
ImmediateSuccessfulFuture(@NullableDecl V value)
V
constructor
com.google.common.collect.MapMakerInternalMap$Segment
getLiveValue
V getLiveValue(E entry)
E
V
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean expression, @NullableDecl Object errorMessage)
boolean,Object
void
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry
StrongKeyWeakValueEntry
StrongKeyWeakValueEntry(K key, int hash, @Nullable StrongKeyWeakValueEntry<K, V> next)
K,int,StrongKeyWeakValueEntry
constructor
com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry
AbstractStrongKeyEntry
AbstractStrongKeyEntry(K key, int hash, @NullableDecl E next)
K,int,E
constructor
com.google.common.collect.ObjectArrays
concat
public static T[] concat(T[] array, @NullableDecl T element)
T[],T
T[]
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, int p2)
T,String,Object,int
T
com.google.common.collect.RegularImmutableMap
get
public V get(@Nullable Object key)
Object
V
com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture
setResult
void setResult(@NullableDecl V result)
V
void
com.google.common.util.concurrent.AbstractFuture
set
protected boolean set(@Nullable V value)
V
boolean
com.google.common.graph.AbstractNetwork
edgeConnectingOrNull
public E edgeConnectingOrNull(N nodeU, N nodeV)
N,N
E
com.google.common.collect.HashBiMap$Inverse
remove
public K remove(@NullableDecl Object value)
Object
K
com.google.common.base.Predicates
apply
public boolean apply(@Nullable Object o)
Object
boolean
com.google.common.collect.Multimap
removeAll
Collection<V> removeAll(@CompatibleWith("K") @NullableDecl Object key)
Object
Collection
com.google.common.base.Function
apply
T apply(@NullableDecl F input)
F
T
com.google.common.collect.Maps
containsValueImpl
static boolean containsValueImpl(Map<?, ?> map, @NullableDecl Object value)
Map,Object
boolean
com.google.common.math.MathPreconditions
checkNonNegative
static long checkNonNegative(@NullableDecl String role, long x)
String,long
long
com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry
WeakKeyDummyValueEntry
WeakKeyDummyValueEntry(ReferenceQueue<K> queue, K key, int hash, @NullableDecl WeakKeyDummyValueEntry<K> next)
ReferenceQueue,K,int,WeakKeyDummyValueEntry
constructor
com.google.common.collect.RegularImmutableBiMap
checkNoConflictInValueBucket
private static void checkNoConflictInValueBucket(Object value, Entry<?, ?> entry, @Nullable ImmutableMapEntry<?, ?> valueBucketHead)
Object,Entry,ImmutableMapEntry
void
com.google.common.collect.TreeMultiset
tailMultiset
public SortedMultiset<E> tailMultiset(@NullableDecl E lowerBound, BoundType boundType)
E,BoundType
SortedMultiset
com.google.common.graph.ConfigurableValueGraph
edgeValueOrDefault
public V edgeValueOrDefault(N nodeU, N nodeV, @Nullable V defaultValue)
N,N,V
V
com.google.common.collect.Maps
orNaturalOrder
static Comparator<? super E> orNaturalOrder(@NullableDecl Comparator<? super E> comparator)
Comparator
Comparator
com.google.common.cache.LocalCache$ValueReference
notifyNewValue
void notifyNewValue(@Nullable V newValue)
V
void
com.google.common.collect.EnumHashBiMap
forcePut
public V forcePut(K key, @Nullable V value)
K,V
V
com.google.common.hash.Funnels$StringCharsetFunnel
equals
public boolean equals(@Nullable Object o)
Object
boolean
com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture
doTransform
O doTransform(Function<? super I, ? extends O> function, @Nullable I input)
Function,I
O
com.google.common.collect.LinkedListMultimap
getCopy
private List<V> getCopy(@Nullable Object key)
Object
List
com.google.common.graph.ConfigurableValueGraph
edgeValueOrDefault
public V edgeValueOrDefault(N nodeU, N nodeV, @NullableDecl V defaultValue)
N,N,V
V
com.google.common.collect.Synchronized$SynchronizedTable
row
public Map<C, V> row(@NullableDecl R rowKey)
R
Map
com.google.common.util.concurrent.FutureCallback
onSuccess
void onSuccess(@NullableDecl V result)
V
void
com.google.common.cache.LocalCache
newEntry
ReferenceEntry<K, V> newEntry(Segment<K, V> segment, K key, int hash, @NullableDecl ReferenceEntry<K, V> next)
Segment,K,int,ReferenceEntry
ReferenceEntry
com.google.common.collect.GeneralRange
tooHigh
boolean tooHigh(@Nullable T t)
T
boolean
com.google.common.graph.DirectedGraphConnections
predecessors
public Set<N> predecessors()
empty
Set
com.google.common.collect.SetMultimap
removeAll
Set<V> removeAll(@NullableDecl Object key)
Object
Set
com.google.common.hash.Funnels$StringCharsetFunnel
equals
public boolean equals(@NullableDecl Object o)
Object
boolean
com.google.common.collect.Iterators
contains
public static boolean contains(Iterator<?> iterator, @NullableDecl Object element)
Iterator,Object
boolean
com.google.common.collect.Maps$AsMapView
getOrDefault
public V getOrDefault(@NullableDecl Object key, @NullableDecl V defaultValue)
Object,V
V
com.google.common.collect.ImmutableMapEntry
getNextInValueBucket
ImmutableMapEntry<K, V> getNextInValueBucket()
empty
ImmutableMapEntry
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, int p1)
boolean,String,int
void
com.google.common.collect.CollectSpliterators
indexed
static Spliterator<T> indexed(int size, int extraCharacteristics, IntFunction<T> function, Comparator<? super T> comparator)
int,int,IntFunction,Comparator
Spliterator
com.google.common.collect.Streams$Splitr
accept
public void accept(@Nullable T t)
T
void
com.google.common.collect.ArrayTable
put
public V put(R rowKey, C columnKey, @Nullable V value)
R,C,V
V
com.google.common.collect.ImmutableClassToInstanceMap
getInstance
public T getInstance(Class<T> type)
Class
T
com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState
collectOneValue
final void collectOneValue(boolean allMustSucceed, int index, @NullableDecl V returnValue)
boolean,int,V
void
com.google.common.util.concurrent.UncheckedExecutionException
UncheckedExecutionException
protected UncheckedExecutionException(@Nullable String message)
String
constructor
com.google.common.collect.Synchronized
nullableSynchronizedEntry
private static Entry<K, V> nullableSynchronizedEntry(@Nullable Entry<K, V> entry, @Nullable Object mutex)
Entry,Object
Entry
com.google.common.collect.LinkedHashMultimap
replaceValues
public Set<V> replaceValues(@NullableDecl K key, Iterable<? extends V> values)
K,Iterable
Set
com.google.common.collect.Synchronized
queue
static Queue<E> queue(Queue<E> queue, @Nullable Object mutex)
Queue,Object
Queue
com.google.common.collect.Multisets$ImmutableEntry
getElement
public final E getElement()
empty
E
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, int p1, long p2)
boolean,String,int,long
void
com.google.common.util.concurrent.AbstractTransformFuture
doTransform
abstract T doTransform(F function, @NullableDecl I result) throws Exception
F,I
T
com.google.common.base.Functions$SupplierFunction
apply
public T apply(@Nullable Object input)
Object
T
com.google.common.collect.MapMakerInternalMap$Helper
copy
public WeakKeyWeakValueEntry<K, V> copy(WeakKeyWeakValueSegment<K, V> segment, WeakKeyWeakValueEntry<K, V> entry, @NullableDecl WeakKeyWeakValueEntry<K, V> newNext)
WeakKeyWeakValueSegment,WeakKeyWeakValueEntry,WeakKeyWeakValueEntry
WeakKeyWeakValueEntry
com.google.common.collect.ForwardingMultiset
standardCount
protected int standardCount(@NullableDecl Object object)
Object
int
com.google.common.cache.LocalCache$Segment
replace
V replace(K key, int hash, V newValue)
K,int,V
V
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, char p1, char p2)
T,String,char,char
T
com.google.common.collect.Maps
containsKeyImpl
static boolean containsKeyImpl(Map<?, ?> map, @Nullable Object key)
Map,Object
boolean
com.google.common.collect.Maps$AsMapView
getOrDefault
public V getOrDefault(@Nullable Object key, @Nullable V defaultValue)
Object,V
V
com.google.common.collect.Multisets$ImmutableEntry
ImmutableEntry
ImmutableEntry(@NullableDecl E element, int count)
E,int
constructor
com.google.common.base.Objects
equal
public static boolean equal(@NullableDecl Object a, @NullableDecl Object b)
Object,Object
boolean
com.google.common.util.concurrent.Atomics
newReference
public static AtomicReference<V> newReference(@NullableDecl V initialValue)
V
AtomicReference
com.google.common.collect.Synchronized
typePreservingCollection
private static Collection<E> typePreservingCollection(Collection<E> collection, @NullableDecl Object mutex)
Collection,Object
Collection
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, long p1, @Nullable Object p2)
T,String,long,Object
T
com.google.common.collect.Synchronized
collection
private static Collection<E> collection(Collection<E> collection, @NullableDecl Object mutex)
Collection,Object
Collection
com.google.common.base.Strings
isNullOrEmpty
public static boolean isNullOrEmpty(@NullableDecl String string)
String
boolean
com.google.common.collect.MapMakerInternalMap$WeakValueReference
get
V get()
empty
V
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, long p2)
boolean,String,Object,long
void
com.google.common.collect.Multimap
containsEntry
boolean containsEntry(@CompatibleWith("K") @NullableDecl Object key, @CompatibleWith("V") @NullableDecl Object value)
Object,Object
boolean
com.google.common.util.concurrent.UncheckedTimeoutException
UncheckedTimeoutException
public UncheckedTimeoutException(@NullableDecl String message)
String
constructor
com.google.common.collect.TreeMultimap
createCollection
Collection<V> createCollection(@NullableDecl K key)
K
Collection
com.google.common.collect.Tables
equalsImpl
static boolean equalsImpl(Table<?, ?, ?> table, @NullableDecl Object obj)
Table,Object
boolean
com.google.common.collect.HashBiMap
seekByKey
private BiEntry<K, V> seekByKey(@NullableDecl Object key, int keyHash)
Object,int
BiEntry
com.google.common.collect.RegularImmutableSet
contains
public boolean contains(@NullableDecl Object target)
Object
boolean
com.google.common.primitives.Doubles
tryParse
public static Double tryParse(String string)
String
Double
com.google.common.util.concurrent.Futures
immediateFuture
public static ListenableFuture<V> immediateFuture(@NullableDecl V value)
V
ListenableFuture
com.google.common.base.Optional
equals
public abstract boolean equals(@NullableDecl Object object)
Object
boolean
com.google.common.collect.Multiset
add
int add(@Nullable E element, int occurrences)
E,int
int
com.google.common.base.Preconditions
checkElementIndex
public static int checkElementIndex(int index, int size, @Nullable String desc)
int,int,String
int
com.google.common.collect.Maps
containsValueImpl
static boolean containsValueImpl(Map<?, ?> map, @Nullable Object value)
Map,Object
boolean
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, long p1, int p2)
T,String,long,int
T
com.google.common.collect.SortedSetMultimap
removeAll
SortedSet<V> removeAll(@Nullable Object key)
Object
SortedSet
com.google.common.base.Functions
apply
public Object apply(@Nullable Object o)
Object
Object
com.google.common.collect.super.com.google.common.collect.ImmutableList
indexOf
public int indexOf(@Nullable Object object)
Object
int
com.google.common.collect.super.com.google.common.collect.ForwardingImmutableMap
containsValue
public final boolean containsValue(@NullableDecl Object value)
Object
boolean
com.google.common.base.Joiner
appendTo
public final StringBuilder appendTo(StringBuilder builder, @NullableDecl Object first, @NullableDecl Object second, Object... rest)
StringBuilder,Object,Object,Object...
StringBuilder
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, @Nullable Object p1, @Nullable Object p2)
boolean,String,Object,Object
void
com.google.common.base.Preconditions
checkState
public static void checkState(boolean expression, @Nullable Object errorMessage)
boolean,Object
void
com.google.common.collect.Synchronized$SynchronizedAsMapEntries
SynchronizedAsMapEntries
SynchronizedAsMapEntries(Set<Entry<K, Collection<V>>> delegate, @Nullable Object mutex)
Set,Object
constructor
com.google.common.collect.LinkedListMultimap$ValueForKeyIterator
ValueForKeyIterator
ValueForKeyIterator(@Nullable Object key)
Object
constructor
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, @Nullable Object p1, char p2)
boolean,String,Object,char
void
com.google.common.base.Converter$ReverseConverter
correctedDoBackward
B correctedDoBackward(@NullableDecl A a)
A
B
com.google.common.collect.MapMakerInternalMap$Segment
copyForTesting
E copyForTesting(InternalEntry<K, V, ?> entry, @NullableDecl InternalEntry<K, V, ?> newNext)
InternalEntry,InternalEntry
E
com.google.common.util.concurrent.AbstractFuture
cancellationExceptionWithCause
private static CancellationException cancellationExceptionWithCause(@Nullable String message, @Nullable Throwable cause)
String,Throwable
CancellationException
com.google.common.cache.LocalCache
hash
int hash(@Nullable Object key)
Object
int
com.google.common.collect.TreeMultiset$AvlNode
ceiling
private AvlNode<E> ceiling(Comparator<? super E> comparator, E e)
Comparator,E
AvlNode
com.google.common.collect.Multiset
remove
int remove(@NullableDecl @CompatibleWith("E") Object element, int occurrences)
Object,int
int
com.google.common.collect.AbstractMapBasedMultimap
wrapList
private List<V> wrapList(@Nullable K key, List<V> list, @Nullable WrappedCollection ancestor)
K,List,WrappedCollection
List
com.google.common.collect.Synchronized
listMultimap
static ListMultimap<K, V> listMultimap(ListMultimap<K, V> multimap, @NullableDecl Object mutex)
ListMultimap,Object
ListMultimap
com.google.common.base.Equivalence$Wrapper
get
public T get()
empty
T
com.google.common.collect.Synchronized$SynchronizedMultiset
SynchronizedMultiset
SynchronizedMultiset(Multiset<E> delegate, @Nullable Object mutex)
Multiset,Object
constructor
com.google.common.base.Preconditions
format
static String format(@Nullable String template, @Nullable Object... args)
String,Object...
String
com.google.common.collect.MapMakerInternalMap$Helper
newEntry
public StrongKeyDummyValueEntry<K> newEntry(StrongKeyDummyValueSegment<K> segment, K key, int hash, @Nullable StrongKeyDummyValueEntry<K> next)
StrongKeyDummyValueSegment,K,int,StrongKeyDummyValueEntry
StrongKeyDummyValueEntry
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, int p1, char p2)
boolean,String,int,char
void
com.google.common.util.concurrent.super.com.google.common.util.concurrent.AbstractFuture
maybePropagateCancellationTo
final void maybePropagateCancellationTo(@Nullable Future<?> related)
Future
void
com.google.common.collect.Iterables
find
public static T find(Iterable<? extends T> iterable, Predicate<? super T> predicate, @NullableDecl T defaultValue)
Iterable,Predicate,T
T
com.google.common.collect.GeneralRange
intersect
GeneralRange<T> intersect(GeneralRange<T> other)
GeneralRange
GeneralRange
com.google.common.cache.super.com.google.common.cache.LocalCache$CapacityEnforcingLinkedHashMap
CapacityEnforcingLinkedHashMap
public CapacityEnforcingLinkedHashMap(int initialCapacity, float loadFactor, boolean accessOrder, long maximumSize, StatsCounter statsCounter, @NullableDecl RemovalListener removalListener)
int,float,boolean,long,StatsCounter,RemovalListener
constructor
com.google.common.util.concurrent.AbstractFuture
pendingToString
protected String pendingToString()
empty
String
com.google.common.hash.HashCode
equals
public final boolean equals(@Nullable Object object)
Object
boolean
com.google.common.collect.Synchronized
multimap
static Multimap<K, V> multimap(Multimap<K, V> multimap, @NullableDecl Object mutex)
Multimap,Object
Multimap
com.google.common.collect.Synchronized$SynchronizedQueue
SynchronizedQueue
SynchronizedQueue(Queue<E> delegate, @NullableDecl Object mutex)
Queue,Object
constructor
com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture
setResult
void setResult(@Nullable O result)
O
void
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, int p1, int p2)
boolean,String,int,int
void
com.google.common.base.Verify
verifyNotNull
public static T verifyNotNull(@NullableDecl T reference, @NullableDecl String errorMessageTemplate, @NullableDecl Object... errorMessageArgs)
T,String,Object...
T
com.google.common.collect.SortedSetMultimap
get
SortedSet<V> get(@NullableDecl K key)
K
SortedSet
com.google.common.collect.Streams
findLast
public static java.util.Optional<T> findLast(Stream<T> stream)
Stream
java.util.Optional
com.google.common.collect.LinkedHashMultimap$ValueEntry
matchesValue
boolean matchesValue(@Nullable Object v, int smearedVHash)
Object,int
boolean
com.google.common.collect.AbstractBiMap
forcePut
public V forcePut(@NullableDecl K key, @NullableDecl V value)
K,V
V
com.google.common.collect.MapMakerInternalMap$Helper
copy
public WeakKeyWeakValueEntry<K, V> copy(WeakKeyWeakValueSegment<K, V> segment, WeakKeyWeakValueEntry<K, V> entry, @Nullable WeakKeyWeakValueEntry<K, V> newNext)
WeakKeyWeakValueSegment,WeakKeyWeakValueEntry,WeakKeyWeakValueEntry
WeakKeyWeakValueEntry
com.google.common.collect.MapMakerInternalMap$Segment
newEntryForTesting
E newEntryForTesting(K key, int hash, @NullableDecl InternalEntry<K, V, ?> next)
K,int,InternalEntry
E
com.google.common.collect.Ordering
binarySearch
public int binarySearch(List<? extends T> sortedList, @NullableDecl T key)
List,T
int
com.google.common.collect.LinkedListMultimap$Node
setValue
public V setValue(@NullableDecl V newValue)
V
V
com.google.common.io.AppendableWriter
write
public void write(@Nullable String str) throws IOException
String
void
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, long p1, @Nullable Object p2)
boolean,String,long,Object
void
com.google.common.collect.Sets$FilteredNavigableSet
lower
public E lower(E e)
E
E
com.google.common.util.concurrent.Callables
returning
public static Callable<T> returning(@NullableDecl final T value)
T
Callable
com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry
StrongKeyDummyValueEntry
StrongKeyDummyValueEntry(K key, int hash, @Nullable StrongKeyDummyValueEntry<K> next)
K,int,StrongKeyDummyValueEntry
constructor
com.google.common.collect.TreeBasedTable$TreeRow
rangeContains
boolean rangeContains(@NullableDecl Object o)
Object
boolean
com.google.common.collect.Synchronized$SynchronizedSetMultimap
SynchronizedSetMultimap
SynchronizedSetMultimap(SetMultimap<K, V> delegate, @Nullable Object mutex)
SetMultimap,Object
constructor
com.google.common.graph.DirectedGraphConnections
isPredecessor
private static boolean isPredecessor(@Nullable Object value)
Object
boolean
com.google.common.cache.LocalCache
getEntry
ReferenceEntry<K, V> getEntry(@NullableDecl Object key)
Object
ReferenceEntry
com.google.common.reflect.Invokable$MethodInvokable
invokeInternal
final Object invokeInternal(@NullableDecl Object receiver, Object[] args) throws InvocationTargetException, IllegalAccessException
Object,Object[]
Object
com.google.common.collect.Synchronized$SynchronizedAsMapValues
SynchronizedAsMapValues
SynchronizedAsMapValues(Collection<Collection<V>> delegate, @Nullable Object mutex)
Collection,Object
constructor
com.google.common.base.Preconditions
badPositionIndex
private static String badPositionIndex(int index, int size, @NullableDecl String desc)
int,int,String
String
com.google.common.collect.Iterators
getOnlyElement
public static T getOnlyElement(Iterator<? extends T> iterator, @NullableDecl T defaultValue)
Iterator,T
T
com.google.common.collect.ImmutableSortedAsList
lastIndexOf
public int lastIndexOf(@NullableDecl Object target)
Object
int
com.google.common.collect.Maps$ValueDifferenceImpl
create
static ValueDifference<V> create(@Nullable V left, @Nullable V right)
V,V
ValueDifference
com.google.common.net.InetAddresses
textToNumericFormatV4
private static byte[] textToNumericFormatV4(String ipString)
String
byte[]
com.google.common.collect.Multimap
get
Collection<V> get(@Nullable K key)
K
Collection
com.google.common.base.Throwables
getSizeMethod
private static Method getSizeMethod()
empty
Method
com.google.common.cache.CacheBuilderSpec$KeyStrengthParser
parse
public void parse(CacheBuilderSpec spec, String key, @NullableDecl String value)
CacheBuilderSpec,String,String
void
com.google.common.graph.Graphs
equivalent
public static boolean equivalent(@Nullable ValueGraph<?, ?> graphA, @Nullable ValueGraph<?, ?> graphB)
ValueGraph,ValueGraph
boolean
com.google.common.collect.Maps$UnmodifiableBiMap
UnmodifiableBiMap
UnmodifiableBiMap(BiMap<? extends K, ? extends V> delegate, @NullableDecl BiMap<V, K> inverse)
BiMap,BiMap
constructor
com.google.common.collect.ImmutableSortedSet
indexOf
abstract int indexOf(@Nullable Object target)
Object
int
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, char p1, long p2)
T,String,char,long
T
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, int p1)
boolean,String,int
void
com.google.common.collect.Table
containsRow
boolean containsRow(@NullableDecl @CompatibleWith("R") Object rowKey)
Object
boolean
com.google.common.base.Converter$ConverterComposition
correctedDoForward
C correctedDoForward(@NullableDecl A a)
A
C
com.google.common.net.InetAddresses
ipStringToBytes
private static byte[] ipStringToBytes(String ipString)
String
byte[]
com.google.common.collect.Synchronized
biMap
static BiMap<K, V> biMap(BiMap<K, V> bimap, @NullableDecl Object mutex)
BiMap,Object
BiMap
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, long p1)
boolean,String,long
void
com.google.common.util.concurrent.AggregateFuture$RunningState
collectOneValue
abstract void collectOneValue(boolean allMustSucceed, int index, @NullableDecl InputT returnValue)
boolean,int,InputT
void
com.google.common.collect.MapMakerInternalMap$InternalEntryHelper
copy
E copy(S segment, E entry, @Nullable E newNext)
S,E,E
E
com.google.common.collect.TreeMultiset$AvlNode
totalCount
private static long totalCount(@Nullable AvlNode<?> node)
AvlNode
long
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry
StrongKeyStrongValueEntry
StrongKeyStrongValueEntry(K key, int hash, @Nullable StrongKeyStrongValueEntry<K, V> next)
K,int,StrongKeyStrongValueEntry
constructor
com.google.common.base.Throwables
propagateIfPossible
public static void propagateIfPossible(@NullableDecl Throwable throwable, Class<X> declaredType) throws X
Throwable,Class
void
com.google.common.cache.CacheBuilderSpec
durationInNanos
private static Long durationInNanos(long duration, @NullableDecl TimeUnit unit)
long,TimeUnit
Long
com.google.common.collect.Synchronized$SynchronizedRandomAccessList
SynchronizedRandomAccessList
SynchronizedRandomAccessList(List<E> list, @NullableDecl Object mutex)
List,Object
constructor
com.google.common.collect.Synchronized
multiset
static Multiset<E> multiset(Multiset<E> multiset, @NullableDecl Object mutex)
Multiset,Object
Multiset
com.google.common.collect.FilteredEntryMultimap$AsMap
createValues
Collection<Collection<V>> createValues()
empty
Collection
com.google.common.collect.super.com.google.common.collect.ImmutableList
lastIndexOf
public int lastIndexOf(@Nullable Object object)
Object
int
com.google.common.reflect.MutableTypeToInstanceMap
trustedGet
private T trustedGet(TypeToken<T> type)
TypeToken
T
com.google.common.base.Objects
hashCode
public static int hashCode(@NullableDecl Object... objects)
Object...
int
com.google.common.util.concurrent.ListenableFutureTask
ListenableFutureTask
ListenableFutureTask(Runnable runnable, @Nullable V result)
Runnable,V
constructor
com.google.common.collect.Synchronized$SynchronizedMultimap
SynchronizedMultimap
SynchronizedMultimap(Multimap<K, V> delegate, @NullableDecl Object mutex)
Multimap,Object
constructor
com.google.common.collect.AbstractTable
containsColumn
public boolean containsColumn(@NullableDecl Object columnKey)
Object
boolean
com.google.common.graph.ValueGraph
edgeValueOrDefault
V edgeValueOrDefault(N nodeU, N nodeV, @Nullable V defaultValue)
N,N,V
V
com.google.common.util.concurrent.AsyncFunction
apply
ListenableFuture<O> apply(@NullableDecl I input) throws Exception
I
ListenableFuture
com.google.common.collect.Multimap
put
boolean put(@Nullable K key, @Nullable V value)
K,V
boolean
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, int p2)
boolean,String,Object,int
void
com.google.common.reflect.Types
getOwnerType
Class<?> getOwnerType(Class<?> rawType)
Class
Class
com.google.common.collect.Synchronized
typePreservingSet
private static Set<E> typePreservingSet(Set<E> set, @NullableDecl Object mutex)
Set,Object
Set
com.google.common.collect.MapMakerInternalMap$Helper
copy
public WeakKeyStrongValueEntry<K, V> copy(WeakKeyStrongValueSegment<K, V> segment, WeakKeyStrongValueEntry<K, V> entry, @Nullable WeakKeyStrongValueEntry<K, V> newNext)
WeakKeyStrongValueSegment,WeakKeyStrongValueEntry,WeakKeyStrongValueEntry
WeakKeyStrongValueEntry
com.google.common.graph.MapIteratorCache
getWithoutCaching
public final V getWithoutCaching(@Nullable Object key)
Object
V
com.google.common.collect.TreeMultiset
distinctElements
static int distinctElements(@NullableDecl AvlNode<?> node)
AvlNode
int
com.google.common.reflect.TypeToken
getSuperclass
TypeToken<?> getSuperclass(TypeToken<?> type)
TypeToken
TypeToken
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, char p1, @Nullable Object p2)
boolean,String,char,Object
void
com.google.common.cache.super.com.google.common.cache.LocalCache$CapacityEnforcingLinkedHashMap
CapacityEnforcingLinkedHashMap
public CapacityEnforcingLinkedHashMap(int initialCapacity, float loadFactor, boolean accessOrder, long maximumSize, StatsCounter statsCounter, @Nullable RemovalListener removalListener)
int,float,boolean,long,StatsCounter,RemovalListener
constructor
com.google.common.collect.LinkedHashMultimap
replaceValues
public Set<V> replaceValues(@Nullable K key, Iterable<? extends V> values)
K,Iterable
Set
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, long p1, char p2)
T,String,long,char
T
com.google.common.io.Closeables
closeQuietly
public static void closeQuietly(@NullableDecl Reader reader)
Reader
void
com.google.common.collect.TreeMultiset
aggregateBelowRange
private long aggregateBelowRange(Aggregate aggr, @NullableDecl AvlNode<E> node)
Aggregate,AvlNode
long
com.google.common.hash.Striped64
retryUpdate
final void retryUpdate(long x, @Nullable int[] hc, boolean wasUncontended)
long,int[],boolean
void
com.google.common.graph.ConfigurableValueGraph
containsNode
protected final boolean containsNode(@Nullable N node)
N
boolean
com.google.common.collect.Collections2
safeRemove
static boolean safeRemove(Collection<?> collection, @Nullable Object object)
Collection,Object
boolean
com.google.common.collect.FluentIterable
of
public static FluentIterable<E> of(@Nullable E element, E... elements)
E,E...
FluentIterable
com.google.common.collect.FilteredEntryMultimap
removeAll
public Collection<V> removeAll(@Nullable Object key)
Object
Collection
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, @NullableDecl Object p2, @NullableDecl Object p3, @NullableDecl Object p4)
T,String,Object,Object,Object,Object
T
com.google.common.util.concurrent.ExecutionError
ExecutionError
public ExecutionError(@NullableDecl Error cause)
Error
constructor
com.google.common.cache.LocalCache
newEntry
ReferenceEntry<K, V> newEntry(Segment<K, V> segment, K key, int hash, @Nullable ReferenceEntry<K, V> next)
Segment,K,int,ReferenceEntry
ReferenceEntry
com.google.common.base.Predicates
equalTo
public static Predicate<T> equalTo(@NullableDecl T target)
T
Predicate
com.google.common.collect.EnumHashBiMap
put
public V put(K key, @NullableDecl V value)
K,V
V
com.google.common.collect.TreeMultiset
treeAggregate
long treeAggregate(@Nullable AvlNode<?> root)
AvlNode
long
com.google.common.collect.GeneralRange
downTo
static GeneralRange<T> downTo(Comparator<? super T> comparator, @NullableDecl T endpoint, BoundType boundType)
Comparator,T,BoundType
GeneralRange
com.google.common.base.Converter
correctedDoForward
B correctedDoForward(@NullableDecl A a)
A
B
com.google.common.util.concurrent.ListenableFutureTask
create
public static ListenableFutureTask<V> create(Runnable runnable, @NullableDecl V result)
Runnable,V
ListenableFutureTask
com.google.common.io.BaseEncoding$StandardBaseEncoding
StandardBaseEncoding
StandardBaseEncoding(Alphabet alphabet, @NullableDecl Character paddingChar)
Alphabet,Character
constructor
com.google.common.base.Verify
verifyNotNull
public static T verifyNotNull(@Nullable T reference)
T
T
com.google.common.collect.Lists$ReverseList
add
public void add(int index, @NullableDecl T element)
int,T
void
com.google.common.collect.Synchronized$SynchronizedBiMap
SynchronizedBiMap
private SynchronizedBiMap(BiMap<K, V> delegate, @NullableDecl Object mutex, @NullableDecl BiMap<V, K> inverse)
BiMap,Object,BiMap
constructor
com.google.common.collect.Lists
lastIndexOfImpl
static int lastIndexOfImpl(List<?> list, @Nullable Object element)
List,Object
int
com.google.common.base.Joiner
appendTo
public final StringBuilder appendTo(StringBuilder builder, @Nullable Object first, @Nullable Object second, Object... rest)
StringBuilder,Object,Object,Object...
StringBuilder
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, char p1)
boolean,String,char
void
com.google.common.collect.TreeBasedTable$TreeRow
rangeContains
boolean rangeContains(@Nullable Object o)
Object
boolean
com.google.common.io.Closeables
closeQuietly
public static void closeQuietly(@NullableDecl InputStream inputStream)
InputStream
void
com.google.common.cache.CacheBuilderSpec$ValueParser
parse
void parse(CacheBuilderSpec spec, String key, @Nullable String value)
CacheBuilderSpec,String,String
void
com.google.common.collect.Multimap
containsKey
boolean containsKey(@CompatibleWith("K") @NullableDecl Object key)
Object
boolean
com.google.common.collect.Sets$FilteredNavigableSet
floor
public E floor(E e)
E
E
com.google.common.collect.Table
containsRow
boolean containsRow(@Nullable @CompatibleWith("R") Object rowKey)
Object
boolean
com.google.common.collect.Maps
asValueToValueFunction
static Function<V1, V2> asValueToValueFunction(final EntryTransformer<? super K, V1, V2> transformer, final K key)
EntryTransformer,K
Function
com.google.common.base.Functions
forMap
public static Function<K, V> forMap(Map<K, ? extends V> map, @NullableDecl V defaultValue)
Map,V
Function
com.google.common.collect.Iterators
getNext
public static T getNext(Iterator<? extends T> iterator, @NullableDecl T defaultValue)
Iterator,T
T
com.google.common.collect.GeneralRange
GeneralRange
private GeneralRange(Comparator<? super T> comparator, boolean hasLowerBound, @Nullable T lowerEndpoint, BoundType lowerBoundType, boolean hasUpperBound, @Nullable T upperEndpoint, BoundType upperBoundType)
Comparator,boolean,T,BoundType,boolean,T,BoundType
constructor
com.google.common.base.Converter$ConverterComposition
correctedDoBackward
A correctedDoBackward(@NullableDecl C c)
C
A
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, int p1, @NullableDecl Object p2)
boolean,String,int,Object
void
com.google.common.base.Preconditions
checkState
public static void checkState(boolean expression, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)
boolean,String,Object...
void
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, long p1, int p2)
boolean,String,long,int
void
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, long p1, long p2)
boolean,String,long,long
void
com.google.common.collect.Table
get
V get(@NullableDecl @CompatibleWith("R") Object rowKey, @NullableDecl @CompatibleWith("C") Object columnKey)
Object,Object
V
com.google.common.collect.ComparisonChain$InactiveComparisonChain
compare
public ComparisonChain compare(@Nullable T left, @Nullable T right, @Nullable Comparator<T> comparator)
T,T,Comparator
ComparisonChain
com.google.common.collect.LinkedListMultimap
get
public List<V> get(@Nullable final K key)
K
List
com.google.common.collect.LinkedHashMultimap$ValueEntry
ValueEntry
ValueEntry(@Nullable K key, @Nullable V value, int smearedValueHash, @Nullable ValueEntry<K, V> nextInValueBucket)
K,V,int,ValueEntry
constructor
com.google.common.collect.TreeMultiset
distinctElements
static int distinctElements(@Nullable AvlNode<?> node)
AvlNode
int
com.google.common.base.MoreObjects$ToStringHelper
addHolder
private ToStringHelper addHolder(@NullableDecl Object value)
Object
ToStringHelper
com.google.common.collect.Multisets$FilteredMultiset
count
public int count(@Nullable Object element)
Object
int
com.google.common.collect.Iterators
pollNext
static T pollNext(Iterator<T> iterator)
Iterator
T
com.google.common.base.Platform
stringIsNullOrEmpty
static boolean stringIsNullOrEmpty(@NullableDecl String string)
String
boolean
com.google.common.collect.SetMultimap
equals
boolean equals(@NullableDecl Object obj)
Object
boolean
com.google.common.util.concurrent.ExecutionError
ExecutionError
protected ExecutionError(@NullableDecl String message)
String
constructor
com.google.common.collect.Maps$ValueDifferenceImpl
create
static ValueDifference<V> create(@NullableDecl V left, @NullableDecl V right)
V,V
ValueDifference
com.google.common.collect.MapMakerInternalMap$Segment
getLiveValueForTesting
V getLiveValueForTesting(InternalEntry<K, V, ?> entry)
InternalEntry
V
com.google.common.collect.Multiset
remove
int remove(@Nullable @CompatibleWith("E") Object element, int occurrences)
Object,int
int
com.google.common.collect.MapMakerInternalMap$Segment
newEntryForTesting
E newEntryForTesting(K key, int hash, @Nullable InternalEntry<K, V, ?> next)
K,int,InternalEntry
E
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, long p2)
T,String,Object,long
T
com.google.common.collect.NullsFirstOrdering
compare
public int compare(@Nullable T left, @Nullable T right)
T,T
int
com.google.common.collect.MapMakerInternalMap$Helper
newEntry
public StrongKeyDummyValueEntry<K> newEntry(StrongKeyDummyValueSegment<K> segment, K key, int hash, @NullableDecl StrongKeyDummyValueEntry<K> next)
StrongKeyDummyValueSegment,K,int,StrongKeyDummyValueEntry
StrongKeyDummyValueEntry
com.google.common.collect.TreeMultiset$AvlNode
setCount
AvlNode<E> setCount(Comparator<? super E> comparator, @NullableDecl E e, int expectedCount, int newCount, int[] result)
Comparator,E,int,int,int[]
AvlNode
com.google.common.collect.LinkedListMultimap
removeAllNodes
private void removeAllNodes(@Nullable Object key)
Object
void
com.google.common.collect.MapMakerInternalMap$Helper
copy
public WeakKeyDummyValueEntry<K> copy(WeakKeyDummyValueSegment<K> segment, WeakKeyDummyValueEntry<K> entry, @NullableDecl WeakKeyDummyValueEntry<K> newNext)
WeakKeyDummyValueSegment,WeakKeyDummyValueEntry,WeakKeyDummyValueEntry
WeakKeyDummyValueEntry
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, long p1)
boolean,String,long
void
com.google.common.base.Predicates$CompositionPredicate
apply
public boolean apply(@NullableDecl A a)
A
boolean
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, int p1, long p2)
boolean,String,int,long
void
com.google.common.collect.HashBiMap$Inverse
containsKey
public boolean containsKey(@Nullable Object value)
Object
boolean
com.google.common.io.InsecureRecursiveDeleteException
InsecureRecursiveDeleteException
public InsecureRecursiveDeleteException(@Nullable String file)
String
constructor
com.google.common.collect.ImmutableListMultimap
get
public ImmutableList<V> get(@NullableDecl K key)
K
ImmutableList
com.google.common.base.Equivalence$EquivalentToPredicate
EquivalentToPredicate
EquivalentToPredicate(Equivalence<T> equivalence, @Nullable T target)
Equivalence,T
constructor
com.google.common.collect.Lists$OnePlusArrayList
OnePlusArrayList
OnePlusArrayList(@NullableDecl E first, E[] rest)
E,E[]
constructor
com.google.common.collect.AbstractMapBasedMultimap
getOrCreateCollection
private Collection<V> getOrCreateCollection(@NullableDecl K key)
K
Collection
com.google.common.io.BaseEncoding$StandardBaseEncoding
StandardBaseEncoding
StandardBaseEncoding(Alphabet alphabet, @Nullable Character paddingChar)
Alphabet,Character
constructor
com.google.common.base.MoreObjects$ToStringHelper
addHolder
private ToStringHelper addHolder(String name, @Nullable Object value)
String,Object
ToStringHelper
com.google.common.base.Converter
convert
public final B convert(@Nullable A a)
A
B
com.google.common.collect.Iterators
frequency
public static int frequency(Iterator<?> iterator, @Nullable Object element)
Iterator,Object
int
com.google.common.collect.Synchronized$SynchronizedTable
column
public Map<R, V> column(@Nullable C columnKey)
C
Map
com.google.common.base.Strings
emptyToNull
public static String emptyToNull(@Nullable String string)
String
String
com.google.common.collect.ForwardingSortedSetMultimap
removeAll
public SortedSet<V> removeAll(@NullableDecl Object key)
Object
SortedSet
com.google.common.collect.AbstractBiMap
containsValue
public boolean containsValue(@NullableDecl Object value)
Object
boolean
com.google.common.base.Equivalence$Wrapper
Wrapper
private Wrapper(Equivalence<? super T> equivalence, @NullableDecl T reference)
Equivalence,T
constructor
com.google.common.collect.MapMakerInternalMap$Helper
newEntry
public WeakKeyStrongValueEntry<K, V> newEntry(WeakKeyStrongValueSegment<K, V> segment, K key, int hash, @Nullable WeakKeyStrongValueEntry<K, V> next)
WeakKeyStrongValueSegment,K,int,WeakKeyStrongValueEntry
WeakKeyStrongValueEntry
com.google.common.graph.EndpointPair
equals
public abstract boolean equals(@NullableDecl Object obj)
Object
boolean
com.google.common.util.concurrent.AbstractFuture
set
protected boolean set(@NullableDecl V value)
V
boolean
com.google.common.collect.HashBiMap$Inverse
remove
public K remove(@Nullable Object value)
Object
K
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, long p1, int p2)
T,String,long,int
T
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, char p1, int p2)
boolean,String,char,int
void
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, @Nullable Object p1, char p2)
boolean,String,Object,char
void
com.google.common.collect.AbstractMapBasedMultimap
wrapCollection
Collection<V> wrapCollection(@Nullable K key, Collection<V> collection)
K,Collection
Collection
com.google.common.collect.DescendingImmutableSortedSet
indexOf
int indexOf(@NullableDecl Object target)
Object
int
com.google.common.collect.FilteredKeyListMultimap
removeAll
public List<V> removeAll(@Nullable Object key)
Object
List
com.google.common.collect.RangeMap
equals
boolean equals(@NullableDecl Object o)
Object
boolean
com.google.common.cache.LocalCache$Segment
getEntry
ReferenceEntry<K, V> getEntry(Object key, int hash)
Object,int
ReferenceEntry
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, @Nullable Object p1, @Nullable Object p2, @Nullable Object p3, @Nullable Object p4)
boolean,String,Object,Object,Object,Object
void
com.google.common.collect.Synchronized$SynchronizedSortedSet
SynchronizedSortedSet
SynchronizedSortedSet(SortedSet<E> delegate, @NullableDecl Object mutex)
SortedSet,Object
constructor
com.google.common.base.Functions$FunctionComposition
apply
public C apply(@Nullable A a)
A
C
com.google.common.collect.ArrayTable$ArrayMap
getValue
abstract V getValue(int index)
int
V
com.google.common.collect.Iterators
getLast
public static T getLast(Iterator<? extends T> iterator, @NullableDecl T defaultValue)
Iterator,T
T
com.google.common.util.concurrent.AbstractFuture$Cancellation
Cancellation
Cancellation(boolean wasInterrupted, @NullableDecl Throwable cause)
boolean,Throwable
constructor
com.google.common.cache.LocalCache$StrongAccessEntry
StrongAccessEntry
StrongAccessEntry(K key, int hash, @NullableDecl ReferenceEntry<K, V> next)
K,int,ReferenceEntry
constructor
com.google.common.graph.GraphConnections
value
V value(N node)
N
V
com.google.common.cache.LocalCache$LoadingValueReference
set
public boolean set(@Nullable V newValue)
V
boolean
com.google.common.reflect.TypeToken
getOwnerTypeIfPresent
private Type getOwnerTypeIfPresent()
empty
Type
com.google.common.collect.LinkedListMultimap
addNode
private Node<K, V> addNode(@Nullable K key, @Nullable V value, @Nullable Node<K, V> nextSibling)
K,V,Node
Node
com.google.common.collect.Collections2
safeContains
static boolean safeContains(Collection<?> collection, @Nullable Object object)
Collection,Object
boolean
com.google.common.util.concurrent.UncheckedTimeoutException
UncheckedTimeoutException
public UncheckedTimeoutException(@NullableDecl String message, @NullableDecl Throwable cause)
String,Throwable
constructor
com.google.common.collect.Collections2$FilteredCollection
contains
public boolean contains(@NullableDecl Object element)
Object
boolean
com.google.common.collect.Maps
unmodifiableOrNull
private static Entry<K, V> unmodifiableOrNull(@NullableDecl Entry<K, ? extends V> entry)
Entry
Entry
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1)
boolean,String,Object
void
com.google.common.reflect.TypeParameter
equals
public final boolean equals(@Nullable Object o)
Object
boolean
com.google.common.collect.Maps
containsKeyImpl
static boolean containsKeyImpl(Map<?, ?> map, @NullableDecl Object key)
Map,Object
boolean
com.google.common.io.MoreFiles
deleteRecursivelySecure
private static Collection<IOException> deleteRecursivelySecure(SecureDirectoryStream<Path> dir, Path path)
SecureDirectoryStream,Path
Collection
com.google.common.graph.Graphs
subgraphHasCycle
private static boolean subgraphHasCycle(Graph<N> graph, Map<Object, NodeVisitState> visitedNodes, N node, @Nullable N previousNode)
Graph,Map,N,N
boolean
com.google.common.reflect.Types
subtypeOfComponentType
private static Type subtypeOfComponentType(Type[] bounds)
Type[]
Type
com.google.common.collect.Multimap
containsKey
boolean containsKey(@CompatibleWith("K") @Nullable Object key)
Object
boolean
com.google.common.collect.ComparisonChain$InactiveComparisonChain
compare
public ComparisonChain compare(@Nullable Comparable left, @Nullable Comparable right)
Comparable,Comparable
ComparisonChain
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, char p2)
boolean,String,Object,char
void
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, char p1)
boolean,String,char
void
com.google.common.reflect.Invokable$MethodInvokable
invokeInternal
final Object invokeInternal(@Nullable Object receiver, Object[] args) throws InvocationTargetException, IllegalAccessException
Object,Object[]
Object
com.google.common.collect.Synchronized
set
static Set<E> set(Set<E> set, @NullableDecl Object mutex)
Set,Object
Set
com.google.common.collect.Lists$TwoPlusArrayList
TwoPlusArrayList
TwoPlusArrayList(@NullableDecl E first, @NullableDecl E second, E[] rest)
E,E,E[]
constructor
com.google.common.collect.Synchronized
deque
static Deque<E> deque(Deque<E> deque, @NullableDecl Object mutex)
Deque,Object
Deque
com.google.common.collect.RegularImmutableMap
get
static V get(@Nullable Object key, @Nullable ImmutableMapEntry<?, V>[] keyTable, int mask)
Object,ImmutableMapEntry[],int
V
com.google.common.collect.Synchronized
map
static Map<K, V> map(Map<K, V> map, @NullableDecl Object mutex)
Map,Object
Map
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, @NullableDecl Object p2, @NullableDecl Object p3)
boolean,String,Object,Object,Object
void
com.google.common.collect.Synchronized$SynchronizedCollection
SynchronizedCollection
private SynchronizedCollection(Collection<E> delegate, @Nullable Object mutex)
Collection,Object
constructor
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, @Nullable Object p1, int p2)
boolean,String,Object,int
void
com.google.common.io.MoreFiles
deleteDirectoryContentsSecure
private static Collection<IOException> deleteDirectoryContentsSecure(SecureDirectoryStream<Path> dir)
SecureDirectoryStream
Collection
com.google.common.collect.AbstractMapBasedMultiset
getAndSet
private static int getAndSet(@Nullable Count i, int count)
Count,int
int
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, long p1, char p2)
boolean,String,long,char
void
com.google.common.collect.TreeMultiset
aggregateAboveRange
private long aggregateAboveRange(Aggregate aggr, @NullableDecl AvlNode<E> node)
Aggregate,AvlNode
long
com.google.common.collect.Ordering
max
public E max(@Nullable E a, @Nullable E b, @Nullable E c, E... rest)
E,E,E,E...
E
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T reference, @NullableDecl String errorMessageTemplate, @NullableDecl Object... errorMessageArgs)
T,String,Object...
T
com.google.common.collect.Synchronized$SynchronizedEntry
SynchronizedEntry
SynchronizedEntry(Entry<K, V> delegate, @NullableDecl Object mutex)
Entry,Object
constructor
com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture
setResult
void setResult(@Nullable V result)
V
void
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, char p1, @NullableDecl Object p2)
boolean,String,char,Object
void
com.google.common.base.MoreObjects
firstNonNull
public static T firstNonNull(@NullableDecl T first, @NullableDecl T second)
T,T
T
com.google.common.collect.HashBiMap$Inverse
put
public K put(@NullableDecl V value, @NullableDecl K key)
V,K
K
com.google.common.reflect.TypeToken
getSuperclass
Class<?> getSuperclass(Class<?> type)
Class
Class
com.google.common.collect.TreeMultiset
treeAggregate
abstract long treeAggregate(@NullableDecl AvlNode<?> root)
AvlNode
long
com.google.common.reflect.MutableTypeToInstanceMap
putInstance
public T putInstance(TypeToken<T> type, @NullableDecl T value)
TypeToken,T
T
com.google.common.collect.ImmutableSetMultimap
valueSet
private static ImmutableSet<V> valueSet(@NullableDecl Comparator<? super V> valueComparator, Collection<? extends V> values)
Comparator,Collection
ImmutableSet
com.google.common.collect.ArrayTable$ArrayMap
setValue
abstract V setValue(int index, V newValue)
int,V
V
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, int p1, int p2)
boolean,String,int,int
void
com.google.common.cache.LocalCache$LoadingValueReference
copyFor
public ValueReference<K, V> copyFor(ReferenceQueue<V> queue, @NullableDecl V value, ReferenceEntry<K, V> entry)
ReferenceQueue,V,ReferenceEntry
ValueReference
com.google.common.collect.ImmutableSortedAsList
lastIndexOf
public int lastIndexOf(@Nullable Object target)
Object
int
com.google.common.graph.DirectedMultiNetworkConnections
getReference
private static T getReference(@Nullable Reference<T> reference)
Reference
T
com.google.common.collect.Synchronized$SynchronizedTable
row
public Map<C, V> row(@Nullable R rowKey)
R
Map
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, @Nullable Object p1, char p2)
T,String,Object,char
T
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, @NullableDecl Object p2)
boolean,String,Object,Object
void
com.google.common.collect.TreeRangeSet
rangeEnclosing
private Range<C> rangeEnclosing(Range<C> range)
Range
Range
com.google.common.collect.ImmutableListMultimap
get
public ImmutableList<V> get(@Nullable K key)
K
ImmutableList
com.google.common.collect.Ordering
min
public E min(@Nullable E a, @Nullable E b, @Nullable E c, E... rest)
E,E,E,E...
E
com.google.common.collect.LinkedListMultimap
removeAllNodes
private void removeAllNodes(@NullableDecl Object key)
Object
void
com.google.common.collect.ListMultimap
get
List<V> get(@Nullable K key)
K
List
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, long p2)
boolean,String,Object,long
void
com.google.common.cache.LocalCache$Segment
enqueueNotification
void enqueueNotification(@Nullable K key, int hash, @Nullable V value, int weight, RemovalCause cause)
K,int,V,int,RemovalCause
void
com.google.common.collect.Multisets$FilteredMultiset
remove
public int remove(@NullableDecl Object element, int occurrences)
Object,int
int
com.google.common.collect.ImmutableEntry
getValue
public final V getValue()
empty
V
com.google.common.util.concurrent.ExecutionError
ExecutionError
public ExecutionError(@NullableDecl String message, @NullableDecl Error cause)
String,Error
constructor
com.google.common.cache.LocalCache$StrongWriteEntry
StrongWriteEntry
StrongWriteEntry(K key, int hash, @NullableDecl ReferenceEntry<K, V> next)
K,int,ReferenceEntry
constructor
com.google.common.base.Converter$ConverterComposition
correctedDoBackward
A correctedDoBackward(@Nullable C c)
C
A
com.google.common.collect.AbstractNavigableMap
floorEntry
public Entry<K, V> floorEntry(K key)
K
Entry
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, char p1)
boolean,String,char
void
com.google.common.net.InetAddresses
textToNumericFormatV6
private static byte[] textToNumericFormatV6(String ipString)
String
byte[]
com.google.common.math.MathPreconditions
checkNonNegative
static double checkNonNegative(@Nullable String role, double x)
String,double
double
com.google.common.base.Strings
isNullOrEmpty
public static boolean isNullOrEmpty(@Nullable String string)
String
boolean
com.google.common.io.BaseEncoding$Alphabet
equals
public boolean equals(@Nullable Object other)
Object
boolean
com.google.common.collect.LinkedListMultimap
replaceValues
public List<V> replaceValues(@NullableDecl K key, Iterable<? extends V> values)
K,Iterable
List
com.google.common.collect.Iterables
getFirst
public static T getFirst(Iterable<? extends T> iterable, @Nullable T defaultValue)
Iterable,T
T
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, @Nullable Object p1, long p2)
boolean,String,Object,long
void
com.google.common.collect.super.com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets
get
public ImmutableSet<V> get(@Nullable Object key)
Object
ImmutableSet
com.google.common.collect.Ordering
compare
public abstract int compare(@Nullable T left, @Nullable T right)
T,T
int
com.google.common.collect.AbstractMapBasedMultimap
getOrCreateCollection
private Collection<V> getOrCreateCollection(@Nullable K key)
K
Collection
com.google.common.collect.AbstractBiMap
putInBothMaps
private V putInBothMaps(@NullableDecl K key, @NullableDecl V value, boolean force)
K,V,boolean
V
com.google.common.cache.ReferenceEntry
getKey
K getKey()
empty
K
com.google.common.graph.MapIteratorCache
contains
public boolean contains(@NullableDecl Object key)
Object
boolean
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, int p1, @Nullable Object p2)
boolean,String,int,Object
void
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, int p1, @NullableDecl Object p2)
boolean,String,int,Object
void
com.google.common.collect.SetMultimap
equals
boolean equals(@Nullable Object obj)
Object
boolean
com.google.common.base.Functions$ConstantFunction
ConstantFunction
public ConstantFunction(@NullableDecl E value)
E
constructor
com.google.common.collect.RegularImmutableTable
forCellsInternal
private static final RegularImmutableTable<R, C, V> forCellsInternal(Iterable<Cell<R, C, V>> cells, @Nullable Comparator<? super R> rowComparator, @Nullable Comparator<? super C> columnComparator)
Iterable,Comparator,Comparator
RegularImmutableTable
com.google.common.collect.AbstractMapBasedMultimap$WrappedList
WrappedList
WrappedList(@NullableDecl K key, List<V> delegate, @NullableDecl WrappedCollection ancestor)
K,List,WrappedCollection
constructor
com.google.common.primitives.Ints
tryParse
public static Integer tryParse(String string)
String
Integer
com.google.common.util.concurrent.FutureCallback
onSuccess
void onSuccess(@Nullable V result)
V
void
com.google.common.util.concurrent.UncheckedTimeoutException
UncheckedTimeoutException
public UncheckedTimeoutException(@Nullable String message, @Nullable Throwable cause)
String,Throwable
constructor
com.google.common.io.Closer
register
public C register(@Nullable C closeable)
C
C
com.google.common.collect.ForwardingSortedSetMultimap
get
public SortedSet<V> get(@NullableDecl K key)
K
SortedSet
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, int p1, long p2)
boolean,String,int,long
void
com.google.common.collect.HashBiMap
seekByKey
private BiEntry<K, V> seekByKey(@Nullable Object key, int keyHash)
Object,int
BiEntry
com.google.common.base.Predicate
apply
boolean apply(@NullableDecl T input)
T
boolean
com.google.common.collect.Table
containsColumn
boolean containsColumn(@NullableDecl @CompatibleWith("C") Object columnKey)
Object
boolean
com.google.common.cache.LocalCache
LocalCache
LocalCache(CacheBuilder<? super K, ? super V> builder, @NullableDecl CacheLoader<? super K, V> loader)
CacheBuilder,CacheLoader
constructor
com.google.common.base.Preconditions
badElementIndex
private static String badElementIndex(int index, int size, @NullableDecl String desc)
int,int,String
String
com.google.common.base.Functions$PredicateFunction
apply
public Boolean apply(@NullableDecl T t)
T
Boolean
com.google.common.cache.LocalCache$LoadingValueReference
notifyNewValue
public void notifyNewValue(@NullableDecl V newValue)
V
void
com.google.common.collect.Multisets
immutableEntry
public static Multiset.Entry<E> immutableEntry(@NullableDecl E e, int n)
E,int
Multiset.Entry
com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry
AbstractWeakKeyEntry
AbstractWeakKeyEntry(ReferenceQueue<K> queue, K key, int hash, @Nullable E next)
ReferenceQueue,K,int,E
constructor
com.google.common.collect.Maps$EntryTransformer
transformEntry
V2 transformEntry(@Nullable K key, @Nullable V1 value)
K,V1
V2
com.google.common.collect.Multiset
equals
boolean equals(@NullableDecl Object object)
Object
boolean
com.google.common.collect.Multimap
get
Collection<V> get(@NullableDecl K key)
K
Collection
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1)
boolean,String,Object
void
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, char p1, @NullableDecl Object p2)
boolean,String,char,Object
void
com.google.common.collect.Multimap
remove
boolean remove(@CompatibleWith("K") @NullableDecl Object key, @CompatibleWith("V") @NullableDecl Object value)
Object,Object
boolean
com.google.common.graph.Graphs
canTraverseWithoutReusingEdge
private static boolean canTraverseWithoutReusingEdge(Graph<?> graph, Object nextNode, @Nullable Object previousNode)
Graph,Object,Object
boolean
com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry
AbstractWeakKeyEntry
AbstractWeakKeyEntry(ReferenceQueue<K> queue, K key, int hash, @NullableDecl E next)
ReferenceQueue,K,int,E
constructor
com.google.common.collect.Cut
Cut
Cut(@Nullable C endpoint)
C
constructor
com.google.common.collect.AbstractBiMap
checkValue
V checkValue(@NullableDecl V value)
V
V
com.google.common.collect.Multimap
putAll
boolean putAll(@NullableDecl K key, Iterable<? extends V> values)
K,Iterable
boolean
com.google.common.graph.DirectedGraphConnections
isSuccessor
private static boolean isSuccessor(@NullableDecl Object value)
Object
boolean
com.google.common.collect.Iterables
find
public static T find(Iterable<? extends T> iterable, Predicate<? super T> predicate, @Nullable T defaultValue)
Iterable,Predicate,T
T
com.google.common.collect.FilteredMultimapValues
remove
public boolean remove(@Nullable Object o)
Object
boolean
com.google.common.collect.Ordering
max
public E max(@Nullable E a, @Nullable E b)
E,E
E
com.google.common.collect.ArrayTable
put
public V put(R rowKey, C columnKey, @NullableDecl V value)
R,C,V
V
com.google.common.collect.ForwardingSortedMap
standardContainsKey
protected boolean standardContainsKey(@Nullable Object key)
Object
boolean
com.google.common.base.Predicates$CompositionPredicate
apply
public boolean apply(@Nullable A a)
A
boolean
com.google.common.collect.Table$Cell
getRowKey
R getRowKey()
empty
R
com.google.common.collect.Synchronized
list
private static List<E> list(List<E> list, @Nullable Object mutex)
List,Object
List
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, char p1, int p2)
boolean,String,char,int
void
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, int p1, int p2)
boolean,String,int,int
void
com.google.common.collect.MapMakerInternalMap$Helper
newEntry
public WeakKeyWeakValueEntry<K, V> newEntry(WeakKeyWeakValueSegment<K, V> segment, K key, int hash, @Nullable WeakKeyWeakValueEntry<K, V> next)
WeakKeyWeakValueSegment,K,int,WeakKeyWeakValueEntry
WeakKeyWeakValueEntry
com.google.common.collect.SetMultimap
removeAll
Set<V> removeAll(@Nullable Object key)
Object
Set
com.google.common.collect.AbstractMapBasedMultimap
replaceValues
public Collection<V> replaceValues(@NullableDecl K key, Iterable<? extends V> values)
K,Iterable
Collection
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, @Nullable Object p1)
boolean,String,Object
void
com.google.common.util.concurrent.UncheckedTimeoutException
UncheckedTimeoutException
public UncheckedTimeoutException(@NullableDecl Throwable cause)
Throwable
constructor
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, int p1, int p2)
boolean,String,int,int
void
com.google.common.collect.Synchronized
sortedSet
private static SortedSet<E> sortedSet(SortedSet<E> set, @NullableDecl Object mutex)
SortedSet,Object
SortedSet
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, char p1)
boolean,String,char
void
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, int p1, long p2)
boolean,String,int,long
void
com.google.common.reflect.MutableTypeToInstanceMap
putInstance
public T putInstance(TypeToken<T> type, @Nullable T value)
TypeToken,T
T
com.google.common.base.Throwables
propagateIfPossible
public static void propagateIfPossible(@Nullable Throwable throwable, Class<X1> declaredType1, Class<X2> declaredType2) throws X1, X2
Throwable,Class,Class
void
com.google.common.base.Predicates
apply
public boolean apply(@NullableDecl Object o)
Object
boolean
com.google.common.base.Equivalence
equivalent
public final boolean equivalent(@Nullable T a, @Nullable T b)
T,T
boolean
com.google.common.collect.TopKSelector
offer
public void offer(@Nullable T elem)
T
void
com.google.common.base.internal.Finalizer
getFinalizeReferentMethod
private Method getFinalizeReferentMethod()
empty
Method
com.google.common.graph.MapIteratorCache
getWithoutCaching
public final V getWithoutCaching(@NullableDecl Object key)
Object
V
com.google.common.base.Equivalence
wrap
public final Wrapper<S> wrap(@NullableDecl S reference)
S
Wrapper
com.google.common.collect.Synchronized
multiset
static Multiset<E> multiset(Multiset<E> multiset, @Nullable Object mutex)
Multiset,Object
Multiset
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)
T,String,Object...
T
com.google.common.collect.LinkedHashMultimap$ValueSet
add
public boolean add(@NullableDecl V value)
V
boolean
com.google.common.collect.ImmutableEntry
ImmutableEntry
ImmutableEntry(@NullableDecl K key, @NullableDecl V value)
K,V
constructor
com.google.common.collect.Synchronized$SynchronizedMultiset
SynchronizedMultiset
SynchronizedMultiset(Multiset<E> delegate, @NullableDecl Object mutex)
Multiset,Object
constructor
com.google.common.base.MoreObjects$ToStringHelper
addHolder
private ToStringHelper addHolder(String name, @NullableDecl Object value)
String,Object
ToStringHelper
com.google.common.base.Converter
apply
public final B apply(@Nullable A a)
A
B
com.google.common.collect.FilteredEntryMultimap$Keys
remove
public int remove(@Nullable Object key, int occurrences)
Object,int
int
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry
StrongKeyStrongValueEntry
StrongKeyStrongValueEntry(K key, int hash, @NullableDecl StrongKeyStrongValueEntry<K, V> next)
K,int,StrongKeyStrongValueEntry
constructor
com.google.common.graph.MapRetrievalCache
getIfCached
protected V getIfCached(@Nullable Object key)
Object
V
com.google.common.graph.Graphs
canTraverseWithoutReusingEdge
private static boolean canTraverseWithoutReusingEdge(Graph<?> graph, Object nextNode, @NullableDecl Object previousNode)
Graph,Object,Object
boolean
com.google.common.collect.Collections2
safeContains
static boolean safeContains(Collection<?> collection, @NullableDecl Object object)
Collection,Object
boolean
com.google.common.collect.Cut$BelowValue
withLowerBoundType
Cut<C> withLowerBoundType(BoundType boundType, DiscreteDomain<C> domain)
BoundType,DiscreteDomain
Cut
com.google.common.collect.Synchronized$SynchronizedSetMultimap
SynchronizedSetMultimap
SynchronizedSetMultimap(SetMultimap<K, V> delegate, @NullableDecl Object mutex)
SetMultimap,Object
constructor
com.google.common.collect.Lists
equalsImpl
static boolean equalsImpl(List<?> thisList, @Nullable Object other)
List,Object
boolean
com.google.common.util.concurrent.AbstractService$StateSnapshot
StateSnapshot
StateSnapshot(State internalState, boolean shutdownWhenStartupFinishes, @NullableDecl Throwable failure)
State,boolean,Throwable
constructor
com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry
StrongKeyDummyValueEntry
StrongKeyDummyValueEntry(K key, int hash, @NullableDecl StrongKeyDummyValueEntry<K> next)
K,int,StrongKeyDummyValueEntry
constructor
com.google.common.util.concurrent.TrustedListenableFutureTask
create
static TrustedListenableFutureTask<V> create(Runnable runnable, @NullableDecl V result)
Runnable,V
TrustedListenableFutureTask
com.google.common.collect.Maps$TransformedEntriesMap
get
public V2 get(@NullableDecl Object key)
Object
V2
com.google.common.collect.GeneralRange
range
static GeneralRange<T> range(Comparator<? super T> comparator, @NullableDecl T lower, BoundType lowerType, @NullableDecl T upper, BoundType upperType)
Comparator,T,BoundType,T,BoundType
GeneralRange
com.google.common.base.Throwables
propagateIfPossible
public static void propagateIfPossible(@Nullable Throwable throwable, Class<X> declaredType) throws X
Throwable,Class
void
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, char p1, char p2)
boolean,String,char,char
void
com.google.common.collect.Multimap
remove
boolean remove(@CompatibleWith("K") @Nullable Object key, @CompatibleWith("V") @Nullable Object value)
Object,Object
boolean
com.google.common.collect.Lists$TwoPlusArrayList
TwoPlusArrayList
TwoPlusArrayList(@Nullable E first, @Nullable E second, E[] rest)
E,E,E[]
constructor
com.google.common.collect.Lists
lastIndexOfImpl
static int lastIndexOfImpl(List<?> list, @NullableDecl Object element)
List,Object
int
com.google.common.collect.RegularImmutableMap
get
public V get(@NullableDecl Object key)
Object
V
com.google.common.util.concurrent.InterruptibleTask
afterRanInterruptibly
abstract void afterRanInterruptibly(@Nullable T result, @Nullable Throwable error)
T,Throwable
void
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, long p1, @NullableDecl Object p2)
boolean,String,long,Object
void
com.google.common.graph.ElementOrder
ElementOrder
private ElementOrder(Type type, @NullableDecl Comparator<T> comparator)
Type,Comparator
constructor
com.google.common.primitives.Longs
tryParse
public static Long tryParse(String string, int radix)
String,int
Long
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, char p1, int p2)
T,String,char,int
T
com.google.common.util.concurrent.UncheckedTimeoutException
UncheckedTimeoutException
public UncheckedTimeoutException(@Nullable String message)
String
constructor
com.google.common.base.Strings
nullToEmpty
public static String nullToEmpty(@Nullable String string)
String
String
com.google.common.collect.Sets
equalsImpl
static boolean equalsImpl(Set<?> s, @NullableDecl Object object)
Set,Object
boolean
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, char p1, int p2)
T,String,char,int
T
com.google.common.collect.ImmutableEntry
getKey
public final K getKey()
empty
K
com.google.common.cache.LocalCache$Segment
removeValueFromChain
ReferenceEntry<K, V> removeValueFromChain(ReferenceEntry<K, V> first, ReferenceEntry<K, V> entry, @Nullable K key, int hash, V value, ValueReference<K, V> valueReference, RemovalCause cause)
ReferenceEntry,ReferenceEntry,K,int,V,ValueReference,RemovalCause
ReferenceEntry
com.google.common.collect.Maps
keyOrNull
static K keyOrNull(@Nullable Entry<K, ?> entry)
Entry
K
com.google.common.base.Converter
apply
public final B apply(@NullableDecl A a)
A
B
com.google.common.cache.LocalCache$StrongAccessEntry
StrongAccessEntry
StrongAccessEntry(K key, int hash, @Nullable ReferenceEntry<K, V> next)
K,int,ReferenceEntry
constructor
com.google.common.base.Functions$FunctionForMapNoDefault
apply
public V apply(@NullableDecl K key)
K
V
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, char p1, long p2)
boolean,String,char,long
void
com.google.common.base.Suppliers
ofInstance
public static Supplier<T> ofInstance(@NullableDecl T instance)
T
Supplier
com.google.common.io.AppendableWriter
write
public void write(@NullableDecl String str) throws IOException
String
void
com.google.common.base.Equivalence$EquivalentToPredicate
EquivalentToPredicate
EquivalentToPredicate(Equivalence<T> equivalence, @NullableDecl T target)
Equivalence,T
constructor
com.google.common.collect.Maps
safeGet
static V safeGet(Map<?, V> map, @NullableDecl Object key)
Map,Object
V
com.google.common.graph.Graphs
equivalent
public static boolean equivalent(@Nullable Graph<?> graphA, @Nullable Graph<?> graphB)
Graph,Graph
boolean
com.google.common.reflect.MutableTypeToInstanceMap
putInstance
public T putInstance(Class<T> type, @NullableDecl T value)
Class,T
T
com.google.common.primitives.Bytes$ByteArrayAsList
equals
public boolean equals(@Nullable Object object)
Object
boolean
com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry
AbstractStrongKeyEntry
AbstractStrongKeyEntry(K key, int hash, @Nullable E next)
K,int,E
constructor
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, int p1, @NullableDecl Object p2)
boolean,String,int,Object
void
com.google.common.cache.LocalCache$ValueReference
copyFor
ValueReference<K, V> copyFor(ReferenceQueue<V> queue, @NullableDecl V value, ReferenceEntry<K, V> entry)
ReferenceQueue,V,ReferenceEntry
ValueReference
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, char p1, long p2)
boolean,String,char,long
void
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, @NullableDecl Object p2)
boolean,String,Object,Object
void
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, long p1, int p2)
boolean,String,long,int
void
com.google.common.collect.MapMakerInternalMap
getEntry
E getEntry(@NullableDecl Object key)
Object
E
com.google.common.collect.ForwardingList
standardEquals
protected boolean standardEquals(@NullableDecl Object object)
Object
boolean
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, long p1, int p2)
boolean,String,long,int
void
com.google.common.collect.MapMakerInternalMap$Segment
copyForTesting
E copyForTesting(InternalEntry<K, V, ?> entry, @Nullable InternalEntry<K, V, ?> newNext)
InternalEntry,InternalEntry
E
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean expression, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)
boolean,String,Object...
void
com.google.common.collect.TreeRangeMap$SubRangeMapAsMap
keySet
public Set<Range<K>> keySet()
empty
Set
com.google.common.collect.Iterators
frequency
public static int frequency(Iterator<?> iterator, @NullableDecl Object element)
Iterator,Object
int
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T reference, @Nullable Object errorMessage)
T,Object
T
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, char p2)
T,String,Object,char
T
com.google.common.collect.RegularImmutableMap
get
static V get(@NullableDecl Object key, @NullableDecl ImmutableMapEntry<?, V>[] keyTable, int mask)
Object,ImmutableMapEntry[],int
V
com.google.common.base.Predicate
apply
boolean apply(@Nullable T input)
T
boolean
com.google.common.io.MoreFiles
addException
private static Collection<IOException> addException(@Nullable Collection<IOException> exceptions, IOException e)
Collection,IOException
Collection
com.google.common.collect.Iterables
contains
public static boolean contains(Iterable<?> iterable, @Nullable Object element)
Iterable,Object
boolean
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry
getValue
public V getValue()
empty
V
com.google.common.collect.TreeMultimap
get
public NavigableSet<V> get(@NullableDecl K key)
K
NavigableSet
com.google.common.util.concurrent.ListenableFutureTask
create
public static ListenableFutureTask<V> create(Runnable runnable, @Nullable V result)
Runnable,V
ListenableFutureTask
com.google.common.io.MultiReader
read
public int read(@NullableDecl char[] cbuf, int off, int len) throws IOException
char[],int,int
int
com.google.common.collect.GeneralRange
upTo
static GeneralRange<T> upTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)
Comparator,T,BoundType
GeneralRange
com.google.common.collect.Synchronized
list
private static List<E> list(List<E> list, @NullableDecl Object mutex)
List,Object
List
com.google.common.collect.Synchronized
sortedSetMultimap
static SortedSetMultimap<K, V> sortedSetMultimap(SortedSetMultimap<K, V> multimap, @Nullable Object mutex)
SortedSetMultimap,Object
SortedSetMultimap
com.google.common.io.BaseEncoding$Base64Encoding
Base64Encoding
Base64Encoding(String name, String alphabetChars, @NullableDecl Character paddingChar)
String,String,Character
constructor
com.google.common.base.Joiner
appendTo
public final A appendTo(A appendable, @Nullable Object first, @Nullable Object second, Object... rest) throws IOException
A,Object,Object,Object...
A
com.google.common.collect.HashBiMap$Inverse
forcePut
public K forcePut(@Nullable V value, @Nullable K key)
V,K
K
com.google.common.collect.super.com.google.common.collect.AbstractSortedMultiset
subMultiset
public SortedMultiset<E> subMultiset(@Nullable E fromElement, BoundType fromBoundType, @Nullable E toElement, BoundType toBoundType)
E,BoundType,E,BoundType
SortedMultiset
com.google.common.collect.AbstractSortedSetMultimap
replaceValues
public SortedSet<V> replaceValues(@NullableDecl K key, Iterable<? extends V> values)
K,Iterable
SortedSet
com.google.common.base.Equivalence
equivalent
public final boolean equivalent(@NullableDecl T a, @NullableDecl T b)
T,T
boolean
com.google.common.collect.EnumMultiset
isActuallyE
private boolean isActuallyE(@NullableDecl Object o)
Object
boolean
com.google.common.reflect.Parameter
getDeclaredAnnotation
public A getDeclaredAnnotation(Class<A> annotationType)
Class
A
com.google.common.collect.ConcurrentHashMultiset
removeExactly
public boolean removeExactly(@NullableDecl Object element, int occurrences)
Object,int
boolean
com.google.common.collect.Multiset
contains
boolean contains(@Nullable Object element)
Object
boolean
com.google.common.collect.Synchronized$SynchronizedEntry
SynchronizedEntry
SynchronizedEntry(Entry<K, V> delegate, @Nullable Object mutex)
Entry,Object
constructor
com.google.common.collect.Synchronized$SynchronizedSet
SynchronizedSet
SynchronizedSet(Set<E> delegate, @Nullable Object mutex)
Set,Object
constructor
com.google.common.base.MoreObjects$ToStringHelper
addValue
public ToStringHelper addValue(@NullableDecl Object value)
Object
ToStringHelper
com.google.common.collect.super.com.google.common.collect.ImmutableCollection
contains
public boolean contains(@Nullable Object object)
Object
boolean
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, @Nullable Object p1, long p2)
boolean,String,Object,long
void
com.google.common.graph.ConfigurableNetwork
containsEdge
protected final boolean containsEdge(@Nullable E edge)
E
boolean
com.google.common.base.Preconditions
checkElementIndex
public static int checkElementIndex(int index, int size, @NullableDecl String desc)
int,int,String
int
com.google.common.collect.ImmutableSortedAsList
indexOf
public int indexOf(@NullableDecl Object target)
Object
int
com.google.common.graph.AbstractValueGraph
equals
public final boolean equals(@Nullable Object obj)
Object
boolean
com.google.common.collect.ImmutableSetMultimap
get
public ImmutableSet<V> get(@NullableDecl K key)
K
ImmutableSet
com.google.common.collect.Maps$AbstractFilteredMap
apply
boolean apply(@Nullable Object key, @Nullable V value)
Object,V
boolean
com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture
setResult
void setResult(@NullableDecl O result)
O
void
com.google.common.collect.ForwardingSortedSet
standardContains
protected boolean standardContains(@NullableDecl Object object)
Object
boolean
com.google.common.collect.Synchronized$SynchronizedMultimap
SynchronizedMultimap
SynchronizedMultimap(Multimap<K, V> delegate, @Nullable Object mutex)
Multimap,Object
constructor
com.google.common.collect.Iterators
getOnlyElement
public static T getOnlyElement(Iterator<? extends T> iterator, @Nullable T defaultValue)
Iterator,T
T
com.google.common.io.Closeables
close
public static void close(@NullableDecl Closeable closeable, boolean swallowIOException) throws IOException
Closeable,boolean
void
com.google.common.collect.Multimap
containsValue
boolean containsValue(@CompatibleWith("V") @NullableDecl Object value)
Object
boolean
com.google.common.collect.super.com.google.common.collect.ForwardingImmutableMap
containsKey
public final boolean containsKey(@Nullable Object key)
Object
boolean
com.google.common.math.MathPreconditions
checkNonNegative
static double checkNonNegative(@NullableDecl String role, double x)
String,double
double
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, int p1, @NullableDecl Object p2)
T,String,int,Object
T
com.google.common.util.concurrent.AbstractListeningExecutorService
submit
public ListenableFuture<T> submit(Runnable task, @NullableDecl T result)
Runnable,T
ListenableFuture
com.google.common.base.Functions$ConstantFunction
ConstantFunction
public ConstantFunction(@Nullable E value)
E
constructor
com.google.common.base.Functions$ForMapWithDefault
ForMapWithDefault
ForMapWithDefault(Map<K, ? extends V> map, @NullableDecl V defaultValue)
Map,V
constructor
com.google.common.base.MoreObjects$ToStringHelper
add
public ToStringHelper add(String name, @Nullable Object value)
String,Object
ToStringHelper
com.google.common.collect.Table$Cell
getValue
V getValue()
empty
V
com.google.common.collect.Synchronized
map
static Map<K, V> map(Map<K, V> map, @Nullable Object mutex)
Map,Object
Map
com.google.common.collect.Synchronized$SynchronizedListMultimap
SynchronizedListMultimap
SynchronizedListMultimap(ListMultimap<K, V> delegate, @Nullable Object mutex)
ListMultimap,Object
constructor
com.google.common.math.MathPreconditions
checkNonNegative
static int checkNonNegative(@NullableDecl String role, int x)
String,int
int
com.google.common.base.Equivalence
hash
public final int hash(@Nullable T t)
T
int
com.google.common.collect.Synchronized
typePreservingSet
private static Set<E> typePreservingSet(Set<E> set, @Nullable Object mutex)
Set,Object
Set
com.google.common.primitives.Longs
tryParse
public static Long tryParse(String string)
String
Long
com.google.common.collect.SortedLists
binarySearch
public static int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, Comparator<? super K> keyComparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)
List,Function,K,Comparator,KeyPresentBehavior,KeyAbsentBehavior
int
com.google.common.collect.AbstractBiMap
putInBothMaps
private V putInBothMaps(@Nullable K key, @Nullable V value, boolean force)
K,V,boolean
V
com.google.common.collect.TreeMultiset$AvlNode
setCount
AvlNode<E> setCount(Comparator<? super E> comparator, @NullableDecl E e, int count, int[] result)
Comparator,E,int,int[]
AvlNode
com.google.common.collect.Maps
orNaturalOrder
static Comparator<? super E> orNaturalOrder(@Nullable Comparator<? super E> comparator)
Comparator
Comparator
com.google.common.collect.Iterators
get
public static T get(Iterator<? extends T> iterator, int position, @NullableDecl T defaultValue)
Iterator,int,T
T
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, long p1)
boolean,String,long
void
com.google.common.base.Preconditions
badPositionIndex
private static String badPositionIndex(int index, int size, @Nullable String desc)
int,int,String
String
com.google.common.collect.AbstractTable
containsRow
public boolean containsRow(@Nullable Object rowKey)
Object
boolean
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, @Nullable Object p1)
boolean,String,Object
void
com.google.common.base.Equivalence
test
public final boolean test(@NullableDecl T t, @NullableDecl T u)
T,T
boolean
com.google.common.util.concurrent.Platform
isInstanceOfThrowableClass
static boolean isInstanceOfThrowableClass(@Nullable Throwable t, Class<? extends Throwable> expectedClass)
Throwable,Class
boolean
com.google.common.collect.AbstractMultiset
add
public boolean add(@NullableDecl E element)
E
boolean
com.google.common.collect.HashBiMap$Inverse
get
public K get(@NullableDecl Object value)
Object
K
com.google.common.cache.ForwardingCache
getIfPresent
public V getIfPresent(Object key)
Object
V
com.google.common.collect.Synchronized
collection
private static Collection<E> collection(Collection<E> collection, @Nullable Object mutex)
Collection,Object
Collection
com.google.common.collect.ForwardingSortedSet
standardRemove
protected boolean standardRemove(@Nullable Object object)
Object
boolean
com.google.common.collect.GeneralRange
upTo
static GeneralRange<T> upTo(Comparator<? super T> comparator, @NullableDecl T endpoint, BoundType boundType)
Comparator,T,BoundType
GeneralRange
com.google.common.collect.SortedLists
binarySearch
public static int binarySearch(List<E> list, Function<? super E, K> keyFunction, @NullableDecl K key, Comparator<? super K> keyComparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)
List,Function,K,Comparator,KeyPresentBehavior,KeyAbsentBehavior
int
com.google.common.collect.GeneralRange
GeneralRange
private GeneralRange(Comparator<? super T> comparator, boolean hasLowerBound, @NullableDecl T lowerEndpoint, BoundType lowerBoundType, boolean hasUpperBound, @NullableDecl T upperEndpoint, BoundType upperBoundType)
Comparator,boolean,T,BoundType,boolean,T,BoundType
constructor
com.google.common.collect.AbstractMapBasedMultimap$WrappedSet
WrappedSet
WrappedSet(@Nullable K key, Set<V> delegate)
K,Set
constructor
com.google.common.collect.FilteredEntryMultimap$AsMap
remove
public Collection<V> remove(@NullableDecl Object key)
Object
Collection
com.google.common.collect.AbstractTable
remove
public V remove(@Nullable Object rowKey, @Nullable Object columnKey)
Object,Object
V
com.google.common.math.MathPreconditions
checkPositive
static int checkPositive(@NullableDecl String role, int x)
String,int
int
com.google.common.collect.AbstractSetMultimap
removeAll
public Set<V> removeAll(@Nullable Object key)
Object
Set
com.google.common.base.Equivalence
equivalentTo
public final Predicate<T> equivalentTo(@Nullable T target)
T
Predicate
com.google.common.collect.AbstractListMultimap
get
public List<V> get(@NullableDecl K key)
K
List
com.google.common.collect.AbstractSetMultimap
get
public Set<V> get(@NullableDecl K key)
K
Set
com.google.common.collect.ForwardingList
standardLastIndexOf
protected int standardLastIndexOf(@Nullable Object element)
Object
int
com.google.common.io.MultiInputStream
read
public int read(@NullableDecl byte[] b, int off, int len) throws IOException
byte[],int,int
int
com.google.common.base.Optional
toJavaUtil
public static java.util.Optional<T> toJavaUtil(@NullableDecl Optional<T> googleOptional)
Optional
java.util.Optional
com.google.common.collect.FilteredMultimapValues
contains
public boolean contains(@Nullable Object o)
Object
boolean
com.google.common.cache.LocalCache
loadAll
Map<K, V> loadAll(Set<? extends K> keys, CacheLoader<? super K, V> loader) throws ExecutionException
Set,CacheLoader
Map
com.google.common.collect.TreeMultiset
create
public static TreeMultiset<E> create(@Nullable Comparator<? super E> comparator)
Comparator
TreeMultiset
com.google.common.collect.TreeMultiset$AvlNode
setCount
AvlNode<E> setCount(Comparator<? super E> comparator, @Nullable E e, int count, int[] result)
Comparator,E,int,int[]
AvlNode
com.google.common.base.Equivalence
wrap
public final Wrapper<S> wrap(@Nullable S reference)
S
Wrapper
com.google.common.collect.HashBiMap$Inverse
get
public K get(@Nullable Object value)
Object
K
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, @NullableDecl Object p2, @NullableDecl Object p3, @NullableDecl Object p4)
boolean,String,Object,Object,Object,Object
void
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, char p1, char p2)
T,String,char,char
T
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, @Nullable Object p1, int p2)
boolean,String,Object,int
void
com.google.common.collect.AbstractMultiset
setCount
public int setCount(@Nullable E element, int count)
E,int
int
com.google.common.collect.Synchronized
sortedMap
static SortedMap<K, V> sortedMap(SortedMap<K, V> sortedMap, @Nullable Object mutex)
SortedMap,Object
SortedMap
com.google.common.collect.Multisets
union
public static Multiset<E> union(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)
Multiset,Multiset
Multiset
com.google.common.collect.LinkedListMultimap
replaceValues
public List<V> replaceValues(@Nullable K key, Iterable<? extends V> values)
K,Iterable
List
com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry
WeakKeyDummyValueEntry
WeakKeyDummyValueEntry(ReferenceQueue<K> queue, K key, int hash, @Nullable WeakKeyDummyValueEntry<K> next)
ReferenceQueue,K,int,WeakKeyDummyValueEntry
constructor
com.google.common.io.AppendableWriter
append
public Writer append(@NullableDecl CharSequence charSeq) throws IOException
CharSequence
Writer
com.google.common.collect.AbstractMapBasedMultimap
get
public Collection<V> get(@NullableDecl K key)
K
Collection
com.google.common.util.concurrent.super.com.google.common.util.concurrent.AbstractFuture
pendingToString
String pendingToString()
empty
String
com.google.common.collect.ForwardingList
standardIndexOf
protected int standardIndexOf(@Nullable Object element)
Object
int
com.google.common.collect.NullsFirstOrdering
compare
public int compare(@NullableDecl T left, @NullableDecl T right)
T,T
int
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, int p1, @Nullable Object p2)
boolean,String,int,Object
void
com.google.common.collect.FluentIterable
contains
public final boolean contains(@Nullable Object target)
Object
boolean
com.google.common.collect.Maps$TransformedEntriesMap
getOrDefault
public V2 getOrDefault(@NullableDecl Object key, @NullableDecl V2 defaultValue)
Object,V2
V2
com.google.common.base.Predicates
equalTo
public static Predicate<T> equalTo(@Nullable T target)
T
Predicate
com.google.common.cache.LocalCache$WeakWriteEntry
WeakWriteEntry
WeakWriteEntry(ReferenceQueue<K> queue, K key, int hash, @Nullable ReferenceEntry<K, V> next)
ReferenceQueue,K,int,ReferenceEntry
constructor
com.google.common.collect.Multisets$FilteredMultiset
add
public int add(@Nullable E element, int occurrences)
E,int
int
com.google.common.reflect.Types
newParameterizedTypeWithOwner
static ParameterizedType newParameterizedTypeWithOwner(@Nullable Type ownerType, Class<?> rawType, Type... arguments)
Type,Class,Type...
ParameterizedType
com.google.common.collect.AllEqualOrdering
compare
public int compare(@Nullable Object left, @Nullable Object right)
Object,Object
int
com.google.common.graph.ElementOrder
ElementOrder
private ElementOrder(Type type, @Nullable Comparator<T> comparator)
Type,Comparator
constructor
com.google.common.collect.Tables$ImmutableCell
ImmutableCell
ImmutableCell(@NullableDecl R rowKey, @NullableDecl C columnKey, @NullableDecl V value)
R,C,V
constructor
com.google.common.collect.FilteredKeyListMultimap
removeAll
public List<V> removeAll(@NullableDecl Object key)
Object
List
com.google.common.collect.Sets
equalsImpl
static boolean equalsImpl(Set<?> s, @Nullable Object object)
Set,Object
boolean
com.google.common.cache.LocalCache$Segment
refresh
V refresh(K key, int hash, CacheLoader<? super K, V> loader, boolean checkTime)
K,int,CacheLoader,boolean
V
com.google.common.collect.AbstractBiMap
checkKey
K checkKey(@NullableDecl K key)
K
K
com.google.common.util.concurrent.UncheckedExecutionException
UncheckedExecutionException
protected UncheckedExecutionException(@NullableDecl String message)
String
constructor
com.google.common.base.VerifyException
VerifyException
public VerifyException(@Nullable String message)
String
constructor
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, long p1)
boolean,String,long
void
com.google.common.collect.RegularImmutableMap
checkNoConflictInKeyBucket
static void checkNoConflictInKeyBucket(Object key, Entry<?, ?> entry, @Nullable ImmutableMapEntry<?, ?> keyBucketHead)
Object,Entry,ImmutableMapEntry
void
com.google.common.collect.Synchronized
sortedMap
static SortedMap<K, V> sortedMap(SortedMap<K, V> sortedMap, @NullableDecl Object mutex)
SortedMap,Object
SortedMap
com.google.common.collect.EnumHashBiMap
put
public V put(K key, @Nullable V value)
K,V
V
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, int p2)
boolean,String,Object,int
void
com.google.common.io.CharSource
readFirstLine
public String readFirstLine() throws IOException
empty
String
com.google.common.base.Optional
fromNullable
public static Optional<T> fromNullable(@NullableDecl T nullableReference)
T
Optional
com.google.common.base.Optional
fromJavaUtil
public static Optional<T> fromJavaUtil(@NullableDecl java.util.Optional<T> javaUtilOptional)
java.util.Optional
Optional
com.google.common.collect.Iterables
get
public static T get(Iterable<? extends T> iterable, int position, @Nullable T defaultValue)
Iterable,int,T
T
com.google.common.collect.Ordering
min
public E min(@NullableDecl E a, @NullableDecl E b, @NullableDecl E c, E... rest)
E,E,E,E...
E
com.google.common.collect.Maps$TransformedEntriesNavigableMap
transformEntry
private Entry<K, V2> transformEntry(@Nullable Entry<K, V1> entry)
Entry
Entry
com.google.common.base.Equivalence$EquivalentToPredicate
apply
public boolean apply(@Nullable T input)
T
boolean
com.google.common.base.Converter$ReverseConverter
correctedDoForward
A correctedDoForward(@Nullable B b)
B
A
com.google.common.collect.AbstractNavigableMap
get
public abstract V get(@NullableDecl Object key)
Object
V
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, int p1, long p2)
T,String,int,long
T
com.google.common.collect.super.com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets
get
public ImmutableSet<V> get(@NullableDecl Object key)
Object
ImmutableSet
com.google.common.collect.MapMakerInternalMap
replace
public boolean replace(K key, @NullableDecl V oldValue, V newValue)
K,V,V
boolean
com.google.common.cache.LocalCache$LoadingValueReference
copyFor
public ValueReference<K, V> copyFor(ReferenceQueue<V> queue, @Nullable V value, ReferenceEntry<K, V> entry)
ReferenceQueue,V,ReferenceEntry
ValueReference
com.google.common.collect.ForwardingSortedMap
standardContainsKey
protected boolean standardContainsKey(@NullableDecl Object key)
Object
boolean
com.google.common.math.MathPreconditions
checkPositive
static int checkPositive(@Nullable String role, int x)
String,int
int
com.google.common.reflect.MutableTypeToInstanceMap
trustedPut
private T trustedPut(TypeToken<T> type, @NullableDecl T value)
TypeToken,T
T
com.google.common.reflect.Parameter
getAnnotation
public A getAnnotation(Class<A> annotationType)
Class
A
com.google.common.base.Functions$ForMapWithDefault
ForMapWithDefault
ForMapWithDefault(Map<K, ? extends V> map, @Nullable V defaultValue)
Map,V
constructor
com.google.common.collect.Lists$ReverseList
set
public T set(int index, @NullableDecl T element)
int,T
T
com.google.common.collect.AbstractSequentialIterator
AbstractSequentialIterator
protected AbstractSequentialIterator(@Nullable T firstOrNull)
T
constructor
com.google.common.graph.MultiEdgesConnecting
contains
public boolean contains(@NullableDecl Object edge)
Object
boolean
com.google.common.collect.SetMultimap
get
Set<V> get(@NullableDecl K key)
K
Set
com.google.common.collect.EnumHashBiMap
forcePut
public V forcePut(K key, @NullableDecl V value)
K,V
V
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, long p1, char p2)
boolean,String,long,char
void
com.google.common.collect.Multisets
difference
public static Multiset<E> difference(final Multiset<E> multiset1, final Multiset<?> multiset2)
Multiset,Multiset
Multiset
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, @Nullable Object p1, long p2)
boolean,String,Object,long
void
com.google.common.collect.Multiset
count
int count(@Nullable @CompatibleWith("E") Object element)
Object
int
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean expression, @Nullable Object errorMessage)
boolean,Object
void
com.google.common.collect.ComparisonChain
compare
public ComparisonChain compare(@Nullable T left, @Nullable T right, Comparator<T> comparator)
T,T,Comparator
ComparisonChain
com.google.common.collect.ObjectArrays
concat
public static T[] concat(T[] array, @Nullable T element)
T[],T
T[]
com.google.common.cache.LocalCache$StrongEntry
StrongEntry
StrongEntry(K key, int hash, @Nullable ReferenceEntry<K, V> next)
K,int,ReferenceEntry
constructor
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1)
boolean,String,Object
void
com.google.common.math.MathPreconditions
checkNonNegative
static long checkNonNegative(@Nullable String role, long x)
String,long
long
com.google.common.collect.Cut
Cut
Cut(@NullableDecl C endpoint)
C
constructor
com.google.common.util.concurrent.FuturesGetChecked
newFromConstructor
private static X newFromConstructor(Constructor<X> constructor, Throwable cause)
Constructor,Throwable
X
com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode
findPathTo
private ExampleStackTrace findPathTo(LockGraphNode node, Set<LockGraphNode> seen)
LockGraphNode,Set
ExampleStackTrace
com.google.common.io.BaseEncoding$Alphabet
equals
public boolean equals(@NullableDecl Object other)
Object
boolean
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, int p1, char p2)
boolean,String,int,char
void
com.google.common.collect.Synchronized
navigableSet
static NavigableSet<E> navigableSet(NavigableSet<E> navigableSet, @Nullable Object mutex)
NavigableSet,Object
NavigableSet
com.google.common.collect.Synchronized
nullableSynchronizedEntry
private static Entry<K, V> nullableSynchronizedEntry(@NullableDecl Entry<K, V> entry, @NullableDecl Object mutex)
Entry,Object
Entry
com.google.common.collect.MapMakerInternalMap$Helper
copy
public StrongKeyStrongValueEntry<K, V> copy(StrongKeyStrongValueSegment<K, V> segment, StrongKeyStrongValueEntry<K, V> entry, @Nullable StrongKeyStrongValueEntry<K, V> newNext)
StrongKeyStrongValueSegment,StrongKeyStrongValueEntry,StrongKeyStrongValueEntry
StrongKeyStrongValueEntry
com.google.common.collect.FilteredEntryMultimap$ValuePredicate
apply
public boolean apply(@Nullable V value)
V
boolean
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, char p1, char p2)
boolean,String,char,char
void
com.google.common.collect.Multiset
remove
boolean remove(@Nullable Object element)
Object
boolean
com.google.common.collect.RegularContiguousSet
equalsOrThrow
private static boolean equalsOrThrow(Comparable<?> left, @Nullable Comparable<?> right)
Comparable,Comparable
boolean
com.google.common.cache.RemovalNotification
RemovalNotification
private RemovalNotification(@Nullable K key, @Nullable V value, RemovalCause cause)
K,V,RemovalCause
constructor
com.google.common.collect.RegularImmutableTable
forCellsInternal
private static final RegularImmutableTable<R, C, V> forCellsInternal(Iterable<Cell<R, C, V>> cells, @NullableDecl Comparator<? super R> rowComparator, @NullableDecl Comparator<? super C> columnComparator)
Iterable,Comparator,Comparator
RegularImmutableTable
com.google.common.collect.MapMakerInternalMap$InternalEntryHelper
newEntry
E newEntry(S segment, K key, int hash, @Nullable E next)
S,K,int,E
E
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, long p1, @NullableDecl Object p2)
boolean,String,long,Object
void
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, char p1, long p2)
boolean,String,char,long
void
com.google.common.collect.AbstractBiMap
checkKey
K checkKey(@Nullable K key)
K
K
com.google.common.collect.AbstractNavigableMap
get
public abstract V get(@Nullable Object key)
Object
V
com.google.common.reflect.TypeResolver$WildcardCapturer
captureNullable
private Type captureNullable(@Nullable Type type)
Type
Type
com.google.common.reflect.Types
getOwnerType
abstract Class<?> getOwnerType(Class<?> rawType)
Class
Class
com.google.common.cache.LocalCache$WeakAccessWriteEntry
WeakAccessWriteEntry
WeakAccessWriteEntry(ReferenceQueue<K> queue, K key, int hash, @Nullable ReferenceEntry<K, V> next)
ReferenceQueue,K,int,ReferenceEntry
constructor
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, int p1, char p2)
boolean,String,int,char
void
com.google.common.util.concurrent.UncheckedExecutionException
UncheckedExecutionException
public UncheckedExecutionException(@NullableDecl Throwable cause)
Throwable
constructor
com.google.common.collect.AbstractSequentialIterator
AbstractSequentialIterator
protected AbstractSequentialIterator(@NullableDecl T firstOrNull)
T
constructor
com.google.common.collect.AbstractSetMultimap
get
public Set<V> get(@Nullable K key)
K
Set
com.google.common.escape.ArrayBasedUnicodeEscaper
ArrayBasedUnicodeEscaper
protected ArrayBasedUnicodeEscaper(ArrayBasedEscaperMap escaperMap, int safeMin, int safeMax, @Nullable String unsafeReplacement)
ArrayBasedEscaperMap,int,int,String
constructor
com.google.common.collect.HashBiMap$Inverse
containsKey
public boolean containsKey(@NullableDecl Object value)
Object
boolean
com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap
SynchronizedSortedSetMultimap
SynchronizedSortedSetMultimap(SortedSetMultimap<K, V> delegate, @Nullable Object mutex)
SortedSetMultimap,Object
constructor
com.google.common.collect.MapMakerInternalMap$Helper
copy
public StrongKeyStrongValueEntry<K, V> copy(StrongKeyStrongValueSegment<K, V> segment, StrongKeyStrongValueEntry<K, V> entry, @NullableDecl StrongKeyStrongValueEntry<K, V> newNext)
StrongKeyStrongValueSegment,StrongKeyStrongValueEntry,StrongKeyStrongValueEntry
StrongKeyStrongValueEntry
com.google.common.io.MultiInputStream
read
public int read(@Nullable byte[] b, int off, int len) throws IOException
byte[],int,int
int
com.google.common.base.Verify
verifyNotNull
public static T verifyNotNull(@NullableDecl T reference)
T
T
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, @NullableDecl Object p2, @NullableDecl Object p3, @NullableDecl Object p4)
boolean,String,Object,Object,Object,Object
void
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, int p1)
boolean,String,int
void
com.google.common.collect.Multisets
equalsImpl
static boolean equalsImpl(Multiset<?> multiset, @NullableDecl Object object)
Multiset,Object
boolean
com.google.common.util.concurrent.ListenableFutureTask
ListenableFutureTask
ListenableFutureTask(Runnable runnable, @NullableDecl V result)
Runnable,V
constructor
com.google.common.collect.Table
get
V get(@Nullable @CompatibleWith("R") Object rowKey, @Nullable @CompatibleWith("C") Object columnKey)
Object,Object
V
com.google.common.cache.LocalCache$StrongAccessWriteEntry
StrongAccessWriteEntry
StrongAccessWriteEntry(K key, int hash, @NullableDecl ReferenceEntry<K, V> next)
K,int,ReferenceEntry
constructor
com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet
WrappedSortedSet
WrappedSortedSet(@NullableDecl K key, SortedSet<V> delegate, @NullableDecl WrappedCollection ancestor)
K,SortedSet,WrappedCollection
constructor
com.google.common.collect.Synchronized$SynchronizedObject
SynchronizedObject
SynchronizedObject(Object delegate, @NullableDecl Object mutex)
Object,Object
constructor
com.google.common.base.Functions
forMap
public static Function<K, V> forMap(Map<K, ? extends V> map, @Nullable V defaultValue)
Map,V
Function
com.google.common.collect.Tables$ImmutableCell
ImmutableCell
ImmutableCell(@Nullable R rowKey, @Nullable C columnKey, @Nullable V value)
R,C,V
constructor
com.google.common.collect.MapDifference$ValueDifference
equals
boolean equals(@NullableDecl Object other)
Object
boolean
com.google.common.base.Predicates$NotPredicate
apply
public boolean apply(@NullableDecl T t)
T
boolean
com.google.common.collect.ForwardingSortedSetMultimap
removeAll
public SortedSet<V> removeAll(@Nullable Object key)
Object
SortedSet
com.google.common.collect.Multiset
contains
boolean contains(@NullableDecl Object element)
Object
boolean
com.google.common.collect.ForwardingSortedSet
unsafeCompare
private int unsafeCompare(@Nullable Object o1, @Nullable Object o2)
Object,Object
int
com.google.common.collect.MapMakerInternalMap$Helper
newEntry
public StrongKeyStrongValueEntry<K, V> newEntry(StrongKeyStrongValueSegment<K, V> segment, K key, int hash, @NullableDecl StrongKeyStrongValueEntry<K, V> next)
StrongKeyStrongValueSegment,K,int,StrongKeyStrongValueEntry
StrongKeyStrongValueEntry
com.google.common.cache.LocalCache
LocalCache
LocalCache(CacheBuilder<? super K, ? super V> builder, @Nullable CacheLoader<? super K, V> loader)
CacheBuilder,CacheLoader
constructor
com.google.common.collect.Iterables
get
public static T get(Iterable<? extends T> iterable, int position, @NullableDecl T defaultValue)
Iterable,int,T
T
com.google.common.base.Optional
toJavaUtil
public static java.util.Optional<T> toJavaUtil(@Nullable Optional<T> googleOptional)
Optional
java.util.Optional
com.google.common.collect.TreeMultiset
aggregateBelowRange
private long aggregateBelowRange(Aggregate aggr, @Nullable AvlNode<E> node)
Aggregate,AvlNode
long
com.google.common.collect.Synchronized$SynchronizedNavigableSet
SynchronizedNavigableSet
SynchronizedNavigableSet(NavigableSet<E> delegate, @Nullable Object mutex)
NavigableSet,Object
constructor
com.google.common.collect.Synchronized$SynchronizedAsMapEntries
SynchronizedAsMapEntries
SynchronizedAsMapEntries(Set<Entry<K, Collection<V>>> delegate, @NullableDecl Object mutex)
Set,Object
constructor
com.google.common.collect.super.com.google.common.collect.ForwardingImmutableMap
containsValue
public final boolean containsValue(@Nullable Object value)
Object
boolean
com.google.common.io.MoreFiles
deleteRecursivelyInsecure
private static Collection<IOException> deleteRecursivelyInsecure(Path path)
Path
Collection
com.google.common.collect.MapMakerInternalMap
getEntry
E getEntry(@Nullable Object key)
Object
E
com.google.common.graph.DirectedMultiNetworkConnections
getReference
private static T getReference(@NullableDecl Reference<T> reference)
Reference
T
com.google.common.base.Converter
correctedDoForward
B correctedDoForward(@Nullable A a)
A
B
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, long p1, int p2)
boolean,String,long,int
void
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, char p1, @NullableDecl Object p2)
T,String,char,Object
T
com.google.common.cache.LocalCache$ValueReference
notifyNewValue
void notifyNewValue(@NullableDecl V newValue)
V
void
com.google.common.cache.LocalCache
copyFor
public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @Nullable Object value, ReferenceEntry<Object, Object> entry)
ReferenceQueue,Object,ReferenceEntry
ValueReference
com.google.common.collect.Synchronized
setMultimap
static SetMultimap<K, V> setMultimap(SetMultimap<K, V> multimap, @NullableDecl Object mutex)
SetMultimap,Object
SetMultimap
com.google.common.util.concurrent.AbstractTransformFuture
doTransform
abstract T doTransform(F function, @Nullable I result) throws Exception
F,I
T
com.google.common.collect.Tables
immutableCell
public static Cell<R, C, V> immutableCell(@Nullable R rowKey, @Nullable C columnKey, @Nullable V value)
R,C,V
Cell
com.google.common.collect.MapMakerInternalMap$Helper
newEntry
public WeakKeyStrongValueEntry<K, V> newEntry(WeakKeyStrongValueSegment<K, V> segment, K key, int hash, @NullableDecl WeakKeyStrongValueEntry<K, V> next)
WeakKeyStrongValueSegment,K,int,WeakKeyStrongValueEntry
WeakKeyStrongValueEntry
com.google.common.util.concurrent.SettableFuture
set
public boolean set(@Nullable V value)
V
boolean
com.google.common.reflect.Invokable
invokeInternal
abstract Object invokeInternal(@Nullable Object receiver, Object[] args) throws InvocationTargetException, IllegalAccessException
Object,Object[]
Object
com.google.common.collect.Synchronized
navigableMap
static NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap, @NullableDecl Object mutex)
NavigableMap,Object
NavigableMap
com.google.common.collect.Synchronized
sortedSetMultimap
static SortedSetMultimap<K, V> sortedSetMultimap(SortedSetMultimap<K, V> multimap, @NullableDecl Object mutex)
SortedSetMultimap,Object
SortedSetMultimap
com.google.common.collect.LinkedListMultimap$Node
Node
Node(@Nullable K key, @Nullable V value)
K,V
constructor
com.google.common.collect.Lists
asList
public static List<E> asList(@Nullable E first, @Nullable E second, E[] rest)
E,E,E[]
List
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, long p1, int p2)
boolean,String,long,int
void
com.google.common.util.concurrent.AbstractCatchingFuture
setResult
abstract void setResult(@NullableDecl T result)
T
void
com.google.common.collect.Synchronized$SynchronizedNavigableMap
SynchronizedNavigableMap
SynchronizedNavigableMap(NavigableMap<K, V> delegate, @Nullable Object mutex)
NavigableMap,Object
constructor
com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList
RandomAccessWrappedList
RandomAccessWrappedList(@Nullable K key, List<V> delegate, @Nullable WrappedCollection ancestor)
K,List,WrappedCollection
constructor
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, long p1, char p2)
boolean,String,long,char
void
com.google.common.collect.AbstractMultiset
remove
public boolean remove(@NullableDecl Object element)
Object
boolean
com.google.common.collect.LinkedHashMultimap$ValueEntry
matchesValue
boolean matchesValue(@NullableDecl Object v, int smearedVHash)
Object,int
boolean
com.google.common.cache.LocalCache
getEntry
ReferenceEntry<K, V> getEntry(@Nullable Object key)
Object
ReferenceEntry
com.google.common.math.MathPreconditions
checkNonNegative
static BigInteger checkNonNegative(@Nullable String role, BigInteger x)
String,BigInteger
BigInteger
com.google.common.reflect.TypeResolver$WildcardCapturer
captureNullable
private Type captureNullable(@NullableDecl Type type)
Type
Type
com.google.common.collect.Synchronized
typePreservingCollection
private static Collection<E> typePreservingCollection(Collection<E> collection, @Nullable Object mutex)
Collection,Object
Collection
com.google.common.cache.LocalCache
newEntry
ReferenceEntry<K, V> newEntry(K key, int hash, @Nullable ReferenceEntry<K, V> next)
K,int,ReferenceEntry
ReferenceEntry
com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList
RandomAccessWrappedList
RandomAccessWrappedList(@NullableDecl K key, List<V> delegate, @NullableDecl WrappedCollection ancestor)
K,List,WrappedCollection
constructor
com.google.common.collect.ObjectArrays
concat
public static T[] concat(@Nullable T element, T[] array)
T,T[]
T[]
com.google.common.collect.Streams$OptionalState
set
void set(@NullableDecl T value)
T
void
com.google.common.collect.Table
put
V put(R rowKey, C columnKey, V value)
R,C,V
V
com.google.common.collect.AbstractMultiset
add
public boolean add(@Nullable E element)
E
boolean
com.google.common.io.MoreFiles
deleteDirectoryContentsInsecure
private static Collection<IOException> deleteDirectoryContentsInsecure(DirectoryStream<Path> dir)
DirectoryStream
Collection
com.google.common.base.VerifyException
VerifyException
public VerifyException(@NullableDecl String message)
String
constructor
com.google.common.graph.ConfigurableValueGraph
containsNode
protected final boolean containsNode(@NullableDecl N node)
N
boolean
com.google.common.collect.Iterables
removeFirstMatching
static T removeFirstMatching(Iterable<T> removeFrom, Predicate<? super T> predicate)
Iterable,Predicate
T
com.google.common.hash.Striped64
retryUpdate
final void retryUpdate(long x, @NullableDecl int[] hc, boolean wasUncontended)
long,int[],boolean
void
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, int p1)
boolean,String,int
void
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, long p1, char p2)
boolean,String,long,char
void
com.google.common.cache.LocalCache$WeakEntry
WeakEntry
WeakEntry(ReferenceQueue<K> queue, K key, int hash, @Nullable ReferenceEntry<K, V> next)
ReferenceQueue,K,int,ReferenceEntry
constructor
com.google.common.collect.Synchronized$SynchronizedDeque
SynchronizedDeque
SynchronizedDeque(Deque<E> delegate, @NullableDecl Object mutex)
Deque,Object
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableList
lastIndexOf
public int lastIndexOf(@NullableDecl Object object)
Object
int
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, long p1, long p2)
T,String,long,long
T
com.google.common.collect.HashBiMap
put
private V put(@Nullable K key, @Nullable V value, boolean force)
K,V,boolean
V
com.google.common.reflect.TypeToInstanceMap
putInstance
T putInstance(TypeToken<T> type, @Nullable T value)
TypeToken,T
T
com.google.common.util.concurrent.Atomics
newReference
public static AtomicReference<V> newReference(@Nullable V initialValue)
V
AtomicReference
com.google.common.collect.ForwardingMap
standardContainsValue
protected boolean standardContainsValue(@NullableDecl Object value)
Object
boolean
com.google.common.collect.EnumMultiset
checkIsE
void checkIsE(@NullableDecl Object element)
Object
void
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, int p1)
T,String,int
T
com.google.common.collect.Synchronized$SynchronizedMap
SynchronizedMap
SynchronizedMap(Map<K, V> delegate, @NullableDecl Object mutex)
Map,Object
constructor
com.google.common.io.MoreFiles
concat
private static Collection<IOException> concat(@Nullable Collection<IOException> exceptions, @Nullable Collection<IOException> other)
Collection,Collection
Collection
com.google.common.collect.AbstractMapBasedMultimap
replaceValues
public Collection<V> replaceValues(@Nullable K key, Iterable<? extends V> values)
K,Iterable
Collection
com.google.common.base.VerifyException
VerifyException
public VerifyException(@Nullable Throwable cause)
Throwable
constructor
com.google.common.graph.AbstractValueGraph
equals
public final boolean equals(@NullableDecl Object obj)
Object
boolean
com.google.common.graph.Graphs
equivalent
public static boolean equivalent(@NullableDecl ValueGraph<?, ?> graphA, @NullableDecl ValueGraph<?, ?> graphB)
ValueGraph,ValueGraph
boolean
com.google.common.collect.FluentIterable
of
public static FluentIterable<E> of(@NullableDecl E element, E... elements)
E,E...
FluentIterable
com.google.common.collect.HashBiMap
put
private V put(@NullableDecl K key, @NullableDecl V value, boolean force)
K,V,boolean
V
com.google.common.cache.LocalCache$Segment
put
V put(K key, int hash, V value, boolean onlyIfAbsent)
K,int,V,boolean
V
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, long p1, @Nullable Object p2)
boolean,String,long,Object
void
com.google.common.collect.Count
equals
public boolean equals(@NullableDecl Object obj)
Object
boolean
com.google.common.base.Objects
equal
public static boolean equal(@Nullable Object a, @Nullable Object b)
Object,Object
boolean
com.google.common.cache.LocalCache$Segment
removeEntryFromChain
ReferenceEntry<K, V> removeEntryFromChain(ReferenceEntry<K, V> first, ReferenceEntry<K, V> entry)
ReferenceEntry,ReferenceEntry
ReferenceEntry
com.google.common.base.Throwables
propagateIfPossible
public static void propagateIfPossible(@Nullable Throwable throwable)
Throwable
void
com.google.common.collect.BiMap
forcePut
V forcePut(@NullableDecl K key, @NullableDecl V value)
K,V
V
com.google.common.base.Throwables
propagateIfPossible
public static void propagateIfPossible(@NullableDecl Throwable throwable)
Throwable
void
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, char p1, long p2)
boolean,String,char,long
void
com.google.common.collect.RegularImmutableTable
forCells
static RegularImmutableTable<R, C, V> forCells(List<Cell<R, C, V>> cells, @NullableDecl final Comparator<? super R> rowComparator, @NullableDecl final Comparator<? super C> columnComparator)
List,Comparator,Comparator
RegularImmutableTable
com.google.common.base.Joiner
join
public final String join(@Nullable Object first, @Nullable Object second, Object... rest)
Object,Object,Object...
String
com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet
WrappedNavigableSet
WrappedNavigableSet(@NullableDecl K key, NavigableSet<V> delegate, @NullableDecl WrappedCollection ancestor)
K,NavigableSet,WrappedCollection
constructor
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, char p1)
T,String,char
T
com.google.common.collect.Maps$AbstractFilteredMap
apply
boolean apply(@NullableDecl Object key, @NullableDecl V value)
Object,V
boolean
com.google.common.reflect.MutableTypeToInstanceMap
getInstance
public T getInstance(TypeToken<T> type)
TypeToken
T
com.google.common.collect.Tables
equalsImpl
static boolean equalsImpl(Table<?, ?, ?> table, @Nullable Object obj)
Table,Object
boolean
com.google.common.collect.GeneralRange
tooLow
boolean tooLow(@NullableDecl T t)
T
boolean
com.google.common.graph.MultiEdgesConnecting
contains
public boolean contains(@Nullable Object edge)
Object
boolean
com.google.common.cache.LocalCache
newEntry
abstract ReferenceEntry<K, V> newEntry(Segment<K, V> segment, K key, int hash, @Nullable ReferenceEntry<K, V> next)
Segment,K,int,ReferenceEntry
ReferenceEntry
com.google.common.collect.Iterators$ConcatenatedIterator
getTopMetaIterator
private Iterator<? extends Iterator<? extends T>> getTopMetaIterator()
empty
Iterator
com.google.common.collect.ForwardingSortedSet
standardContains
protected boolean standardContains(@Nullable Object object)
Object
boolean
com.google.common.collect.Table
remove
V remove(@NullableDecl @CompatibleWith("R") Object rowKey, @NullableDecl @CompatibleWith("C") Object columnKey)
Object,Object
V
com.google.common.io.InsecureRecursiveDeleteException
InsecureRecursiveDeleteException
public InsecureRecursiveDeleteException(@NullableDecl String file)
String
constructor
com.google.common.collect.Maps$UnmodifiableBiMap
UnmodifiableBiMap
UnmodifiableBiMap(BiMap<? extends K, ? extends V> delegate, @Nullable BiMap<V, K> inverse)
BiMap,BiMap
constructor
com.google.common.graph.AbstractBaseGraph
edges
public Set<EndpointPair<N>> edges()
empty
Set
com.google.common.base.Predicate
test
boolean test(@NullableDecl T input)
T
boolean
com.google.common.collect.TreeRangeMap
get
public Object get(Comparable key)
Comparable
Object
com.google.common.collect.Iterables
getFirst
public static T getFirst(Iterable<? extends T> iterable, @NullableDecl T defaultValue)
Iterable,T
T
com.google.common.io.AppendableWriter
write
public void write(@Nullable String str, int off, int len) throws IOException
String,int,int
void
com.google.common.cache.LocalCache$WeakAccessEntry
WeakAccessEntry
WeakAccessEntry(ReferenceQueue<K> queue, K key, int hash, @NullableDecl ReferenceEntry<K, V> next)
ReferenceQueue,K,int,ReferenceEntry
constructor
com.google.common.util.concurrent.ImmediateFuture$ImmediateSuccessfulCheckedFuture
ImmediateSuccessfulCheckedFuture
ImmediateSuccessfulCheckedFuture(@NullableDecl V value)
V
constructor
com.google.common.collect.TreeMultiset
aggregateAboveRange
private long aggregateAboveRange(Aggregate aggr, @Nullable AvlNode<E> node)
Aggregate,AvlNode
long
com.google.common.collect.ForwardingSortedSetMultimap
get
public SortedSet<V> get(@Nullable K key)
K
SortedSet
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, long p1, long p2)
boolean,String,long,long
void
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, int p1, int p2)
T,String,int,int
T
com.google.common.base.Equivalence
test
public final boolean test(@Nullable T t, @Nullable T u)
T,T
boolean
com.google.common.collect.FilteredEntryMultimap$Keys
remove
public int remove(@NullableDecl Object key, int occurrences)
Object,int
int
com.google.common.math.MathPreconditions
checkPositive
static BigInteger checkPositive(@Nullable String role, BigInteger x)
String,BigInteger
BigInteger
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, @Nullable Object p1, @Nullable Object p2, @Nullable Object p3)
T,String,Object,Object,Object
T
com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry
getNextInKeyBucket
final ImmutableMapEntry<K, V> getNextInKeyBucket()
empty
ImmutableMapEntry
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, @Nullable Object p1, long p2)
T,String,Object,long
T
com.google.common.collect.Iterables
getOnlyElement
public static T getOnlyElement(Iterable<? extends T> iterable, @Nullable T defaultValue)
Iterable,T
T
com.google.common.collect.MapMakerInternalMap$Helper
copy
public StrongKeyDummyValueEntry<K> copy(StrongKeyDummyValueSegment<K> segment, StrongKeyDummyValueEntry<K> entry, @Nullable StrongKeyDummyValueEntry<K> newNext)
StrongKeyDummyValueSegment,StrongKeyDummyValueEntry,StrongKeyDummyValueEntry
StrongKeyDummyValueEntry
com.google.common.collect.HashBiMap
seekByValue
private BiEntry<K, V> seekByValue(@NullableDecl Object value, int valueHash)
Object,int
BiEntry
com.google.common.cache.LocalCache$StrongWriteEntry
StrongWriteEntry
StrongWriteEntry(K key, int hash, @Nullable ReferenceEntry<K, V> next)
K,int,ReferenceEntry
constructor
com.google.common.base.Platform
stringIsNullOrEmpty
static boolean stringIsNullOrEmpty(@Nullable String string)
String
boolean
com.google.common.collect.Maps$ValueDifferenceImpl
ValueDifferenceImpl
private ValueDifferenceImpl(@Nullable V left, @Nullable V right)
V,V
constructor
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, @Nullable Object p1, @Nullable Object p2, @Nullable Object p3)
boolean,String,Object,Object,Object
void
com.google.common.cache.LocalCache$WeakWriteEntry
WeakWriteEntry
WeakWriteEntry(ReferenceQueue<K> queue, K key, int hash, @NullableDecl ReferenceEntry<K, V> next)
ReferenceQueue,K,int,ReferenceEntry
constructor
com.google.common.graph.DirectedGraphConnections
isPredecessor
private static boolean isPredecessor(@NullableDecl Object value)
Object
boolean
com.google.common.collect.RangeMap
getEntry
Entry<Range<K>, V> getEntry(K key)
K
Entry
com.google.common.base.Verify
verify
public static void verify(boolean expression, @NullableDecl String errorMessageTemplate, @NullableDecl Object p1, char p2)
boolean,String,Object,char
void
com.google.common.collect.Sets
iterator
public Iterator<Set<E>> iterator()
empty
Iterator
com.google.common.collect.Synchronized$SynchronizedSortedMap
SynchronizedSortedMap
SynchronizedSortedMap(SortedMap<K, V> delegate, @Nullable Object mutex)
SortedMap,Object
constructor
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @Nullable String errorMessageTemplate, long p1)
boolean,String,long
void
com.google.common.reflect.TypeParameter
equals
public final boolean equals(@NullableDecl Object o)
Object
boolean
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, char p1)
boolean,String,char
void
com.google.common.collect.Synchronized
multimap
static Multimap<K, V> multimap(Multimap<K, V> multimap, @Nullable Object mutex)
Multimap,Object
Multimap
com.google.common.cache.LocalCache$WeakAccessWriteEntry
WeakAccessWriteEntry
WeakAccessWriteEntry(ReferenceQueue<K> queue, K key, int hash, @NullableDecl ReferenceEntry<K, V> next)
ReferenceQueue,K,int,ReferenceEntry
constructor
com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState
collectOneValue
void collectOneValue(boolean allMustSucceed, int index, @Nullable Object returnValue)
boolean,int,Object
void
com.google.common.collect.Synchronized$SynchronizedTable
put
public V put(@NullableDecl R rowKey, @NullableDecl C columnKey, @NullableDecl V value)
R,C,V
V
com.google.common.collect.HashBiMap
putInverse
private K putInverse(@NullableDecl V value, @NullableDecl K key, boolean force)
V,K,boolean
K
com.google.common.collect.AbstractTable
contains
public boolean contains(@Nullable Object rowKey, @Nullable Object columnKey)
Object,Object
boolean
com.google.common.collect.ForwardingMap
standardRemove
protected V standardRemove(@NullableDecl Object key)
Object
V
com.google.common.util.concurrent.CombinedFuture$CombinedFutureRunningState
collectOneValue
void collectOneValue(boolean allMustSucceed, int index, @NullableDecl Object returnValue)
boolean,int,Object
void
com.google.common.collect.ImmutableSetMultimap
valueComparator
Comparator<? super V> valueComparator()
empty
Comparator
com.google.common.util.concurrent.Futures
immediateCheckedFuture
public static CheckedFuture<V, X> immediateCheckedFuture(@NullableDecl V value)
V
CheckedFuture
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, long p1, long p2)
boolean,String,long,long
void
com.google.common.base.Equivalence
equivalentTo
public final Predicate<T> equivalentTo(@NullableDecl T target)
T
Predicate
com.google.common.collect.DescendingImmutableSortedSet
indexOf
int indexOf(@Nullable Object target)
Object
int
com.google.common.reflect.MutableTypeToInstanceMap
putInstance
public T putInstance(Class<T> type, @Nullable T value)
Class,T
T
com.google.common.collect.Lists
asList
public static List<E> asList(@Nullable E first, E[] rest)
E,E[]
List
com.google.common.base.Preconditions
checkPositionIndex
public static int checkPositionIndex(int index, int size, @Nullable String desc)
int,int,String
int
com.google.common.escape.Escapers$Builder
setUnsafeReplacement
public Builder setUnsafeReplacement(@Nullable String unsafeReplacement)
String
Builder
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, int p1, int p2)
boolean,String,int,int
void
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, @Nullable Object p1, @Nullable Object p2)
boolean,String,Object,Object
void
com.google.common.util.concurrent.super.com.google.common.util.concurrent.AbstractFuture
maybePropagateCancellationTo
final void maybePropagateCancellationTo(@NullableDecl Future<?> related)
Future
void
com.google.common.collect.MapMakerInternalMap$Helper
newEntry
public StrongKeyStrongValueEntry<K, V> newEntry(StrongKeyStrongValueSegment<K, V> segment, K key, int hash, @Nullable StrongKeyStrongValueEntry<K, V> next)
StrongKeyStrongValueSegment,K,int,StrongKeyStrongValueEntry
StrongKeyStrongValueEntry
com.google.common.collect.Multimap
containsEntry
boolean containsEntry(@CompatibleWith("K") @Nullable Object key, @CompatibleWith("V") @Nullable Object value)
Object,Object
boolean
com.google.common.cache.LocalCache
hash
int hash(@NullableDecl Object key)
Object
int
com.google.common.base.Joiner
toString
CharSequence toString(@Nullable Object part)
Object
CharSequence
com.google.common.util.concurrent.AbstractFuture$Cancellation
Cancellation
Cancellation(boolean wasInterrupted, @Nullable Throwable cause)
boolean,Throwable
constructor
com.google.common.collect.Table
containsValue
boolean containsValue(@NullableDecl @CompatibleWith("V") Object value)
Object
boolean
com.google.common.collect.Lists$OnePlusArrayList
OnePlusArrayList
OnePlusArrayList(@Nullable E first, E[] rest)
E,E[]
constructor
com.google.common.collect.Synchronized
biMap
static BiMap<K, V> biMap(BiMap<K, V> bimap, @Nullable Object mutex)
BiMap,Object
BiMap
com.google.common.collect.Table
remove
V remove(@Nullable @CompatibleWith("R") Object rowKey, @Nullable @CompatibleWith("C") Object columnKey)
Object,Object
V
com.google.common.graph.EndpointPair
equals
public abstract boolean equals(@Nullable Object obj)
Object
boolean
com.google.common.base.Converter$ConverterComposition
correctedDoForward
C correctedDoForward(@Nullable A a)
A
C
com.google.common.graph.EdgesConnecting
getConnectingEdge
private E getConnectingEdge()
empty
E
com.google.common.base.VerifyException
VerifyException
public VerifyException(@Nullable String message, @Nullable Throwable cause)
String,Throwable
constructor
com.google.common.math.MathPreconditions
checkPositive
static long checkPositive(@Nullable String role, long x)
String,long
long
com.google.common.io.AppendableWriter
append
public Writer append(@Nullable CharSequence charSeq) throws IOException
CharSequence
Writer
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean expression, @NullableDecl String errorMessageTemplate, @NullableDecl Object... errorMessageArgs)
boolean,String,Object...
void
com.google.common.io.BaseEncoding$StandardBaseEncoding
newInstance
BaseEncoding newInstance(Alphabet alphabet, @NullableDecl Character paddingChar)
Alphabet,Character
BaseEncoding
com.google.common.collect.Synchronized$SynchronizedTable
column
public Map<R, V> column(@NullableDecl C columnKey)
C
Map
com.google.common.collect.EnumMultiset
checkIsE
void checkIsE(@Nullable Object element)
Object
void
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, @Nullable Object p1)
boolean,String,Object
void
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, int p1, char p2)
boolean,String,int,char
void
com.google.common.io.Closeables
closeQuietly
public static void closeQuietly(@Nullable InputStream inputStream)
InputStream
void
com.google.common.math.MathPreconditions
checkNonNegative
static BigInteger checkNonNegative(@NullableDecl String role, BigInteger x)
String,BigInteger
BigInteger
com.google.common.collect.RegularImmutableTable
forCells
static RegularImmutableTable<R, C, V> forCells(List<Cell<R, C, V>> cells, @Nullable final Comparator<? super R> rowComparator, @Nullable final Comparator<? super C> columnComparator)
List,Comparator,Comparator
RegularImmutableTable
com.google.common.base.Suppliers
ofInstance
public static Supplier<T> ofInstance(@Nullable T instance)
T
Supplier
com.google.common.base.Functions$ConstantFunction
apply
public E apply(@Nullable Object from)
Object
E
com.google.common.collect.Iterables
contains
public static boolean contains(Iterable<?> iterable, @NullableDecl Object element)
Iterable,Object
boolean
com.google.common.math.MathPreconditions
checkPositive
static BigInteger checkPositive(@NullableDecl String role, BigInteger x)
String,BigInteger
BigInteger
com.google.common.io.AppendableWriter
write
public void write(@NullableDecl String str, int off, int len) throws IOException
String,int,int
void
com.google.common.graph.DirectedGraphConnections
isSuccessor
private static boolean isSuccessor(@Nullable Object value)
Object
boolean
com.google.common.collect.ImmutableSetMultimap
get
public ImmutableSet<V> get(@Nullable K key)
K
ImmutableSet
com.google.common.collect.Lists
asList
public static List<E> asList(@NullableDecl E first, @NullableDecl E second, E[] rest)
E,E,E[]
List
com.google.common.collect.AbstractMapBasedMultimap
get
public Collection<V> get(@Nullable K key)
K
Collection
com.google.common.collect.BiMap
put
V put(@Nullable K key, @Nullable V value)
K,V
V
com.google.common.primitives.Floats
tryParse
public static Float tryParse(String string)
String
Float
com.google.common.base.Optional
orNull
public abstract T orNull()
empty
T
com.google.common.collect.Synchronized$SynchronizedObject
SynchronizedObject
SynchronizedObject(Object delegate, @Nullable Object mutex)
Object,Object
constructor
com.google.common.escape.ArrayBasedUnicodeEscaper
ArrayBasedUnicodeEscaper
protected ArrayBasedUnicodeEscaper(Map<Character, String> replacementMap, int safeMin, int safeMax, @NullableDecl String unsafeReplacement)
Map,int,int,String
constructor
com.google.common.io.MoreFiles
concat
private static Collection<IOException> concat(@NullableDecl Collection<IOException> exceptions, @NullableDecl Collection<IOException> other)
Collection,Collection
Collection
com.google.common.util.concurrent.UncheckedExecutionException
UncheckedExecutionException
public UncheckedExecutionException(@Nullable String message, @Nullable Throwable cause)
String,Throwable
constructor
com.google.common.base.VerifyException
VerifyException
public VerifyException(@NullableDecl String message, @NullableDecl Throwable cause)
String,Throwable
constructor
com.google.common.collect.AbstractBiMap
put
public V put(@Nullable K key, @Nullable V value)
K,V
V
com.google.common.collect.RegularImmutableMap
checkNoConflictInKeyBucket
static void checkNoConflictInKeyBucket(Object key, Entry<?, ?> entry, @NullableDecl ImmutableMapEntry<?, ?> keyBucketHead)
Object,Entry,ImmutableMapEntry
void
com.google.common.reflect.TypeToInstanceMap
getInstance
T getInstance(TypeToken<T> type)
TypeToken
T
com.google.common.base.Verify
verify
public static void verify(boolean expression, @Nullable String errorMessageTemplate, char p1, char p2)
boolean,String,char,char
void
com.google.common.collect.MapMakerInternalMap$Helper
newEntry
public WeakKeyDummyValueEntry<K> newEntry(WeakKeyDummyValueSegment<K> segment, K key, int hash, @Nullable WeakKeyDummyValueEntry<K> next)
WeakKeyDummyValueSegment,K,int,WeakKeyDummyValueEntry
WeakKeyDummyValueEntry
com.google.common.collect.SetMultimap
get
Set<V> get(@Nullable K key)
K
Set
com.google.common.collect.ImmutableSortedAsList
indexOf
public int indexOf(@Nullable Object target)
Object
int
com.google.common.collect.AbstractTable
get
public V get(@NullableDecl Object rowKey, @NullableDecl Object columnKey)
Object,Object
V
com.google.common.collect.AbstractMapBasedMultimap$WrappedSet
WrappedSet
WrappedSet(@NullableDecl K key, Set<V> delegate)
K,Set
constructor
com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap
SynchronizedSortedSetMultimap
SynchronizedSortedSetMultimap(SortedSetMultimap<K, V> delegate, @NullableDecl Object mutex)
SortedSetMultimap,Object
constructor
com.google.common.collect.ForwardingMultimap
containsEntry
public boolean containsEntry(@NullableDecl Object key, @NullableDecl Object value)
Object,Object
boolean
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, int p1, char p2)
T,String,int,char
T
com.google.common.collect.ComputationException
ComputationException
public ComputationException(@Nullable Throwable cause)
Throwable
constructor
com.google.common.collect.TreeMultimap
createCollection
Collection<V> createCollection(@Nullable K key)
K
Collection
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, int p1, int p2)
boolean,String,int,int
void
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, char p1, long p2)
T,String,char,long
T
com.google.common.collect.AbstractTable
containsColumn
public boolean containsColumn(@Nullable Object columnKey)
Object
boolean
com.google.common.collect.Maps
apply
public Object apply(Entry<?, ?> entry)
Entry
Object
com.google.common.collect.Iterators
singletonIterator
public static UnmodifiableIterator<T> singletonIterator(@Nullable final T value)
T
UnmodifiableIterator
com.google.common.util.concurrent.AbstractFuture
cancellationExceptionWithCause
private static CancellationException cancellationExceptionWithCause(@NullableDecl String message, @NullableDecl Throwable cause)
String,Throwable
CancellationException
com.google.common.collect.AbstractBiMap
checkValue
V checkValue(@Nullable V value)
V
V
com.google.common.collect.AbstractMapBasedMultimap
wrapCollection
Collection<V> wrapCollection(@NullableDecl K key, Collection<V> collection)
K,Collection
Collection
com.google.common.primitives.Ints
tryParse
public static Integer tryParse(String string, int radix)
String,int
Integer
com.google.common.base.Converter$ReverseConverter
correctedDoForward
A correctedDoForward(@NullableDecl B b)
B
A
com.google.common.base.Preconditions
checkArgument
public static void checkArgument(boolean b, @NullableDecl String errorMessageTemplate, long p1, int p2)
boolean,String,long,int
void
com.google.common.collect.LinkedListMultimap$ValueForKeyIterator
ValueForKeyIterator
public ValueForKeyIterator(@NullableDecl Object key, int index)
Object,int
constructor
com.google.common.base.Joiner
appendTo
public final A appendTo(A appendable, @NullableDecl Object first, @NullableDecl Object second, Object... rest) throws IOException
A,Object,Object,Object...
A
com.google.common.collect.LinkedListMultimap
getCopy
private List<V> getCopy(@NullableDecl Object key)
Object
List
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, long p1, long p2)
boolean,String,long,long
void
com.google.common.collect.TreeMultiset$AvlNode
add
AvlNode<E> add(Comparator<? super E> comparator, @NullableDecl E e, int count, int[] result)
Comparator,E,int,int[]
AvlNode
com.google.common.collect.TreeMultiset
lastNode
private AvlNode<E> lastNode()
empty
AvlNode
com.google.common.base.Functions
constant
public static Function<Object, E> constant(@NullableDecl E value)
E
Function
com.google.common.io.MultiReader
read
public int read(@Nullable char[] cbuf, int off, int len) throws IOException
char[],int,int
int
com.google.common.base.MoreObjects
firstNonNull
public static T firstNonNull(@Nullable T first, @Nullable T second)
T,T
T
com.google.common.io.Closeables
closeQuietly
public static void closeQuietly(@Nullable Reader reader)
Reader
void
com.google.common.base.Joiner
join
public final String join(@NullableDecl Object first, @NullableDecl Object second, Object... rest)
Object,Object,Object...
String
com.google.common.collect.ImmutableSetMultimap
emptySet
private static ImmutableSet<V> emptySet(@NullableDecl Comparator<? super V> valueComparator)
Comparator
ImmutableSet
com.google.common.collect.Hashing
smearedHash
static int smearedHash(@Nullable Object o)
Object
int
com.google.common.cache.LocalCache$Segment
remove
V remove(Object key, int hash)
Object,int
V
com.google.common.collect.HashBiMap
insert
private void insert(BiEntry<K, V> entry, @NullableDecl BiEntry<K, V> oldEntryForKey)
BiEntry,BiEntry
void
com.google.common.collect.SortedLists
binarySearch
public static int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)
List,Function,K,KeyPresentBehavior,KeyAbsentBehavior
int
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @Nullable String errorMessageTemplate, int p1)
T,String,int
T
com.google.common.collect.Maps
newTreeMap
public static TreeMap<K, V> newTreeMap(@NullableDecl Comparator<C> comparator)
Comparator
TreeMap
com.google.common.base.MoreObjects$ToStringHelper
addHolder
private ToStringHelper addHolder(@Nullable Object value)
Object
ToStringHelper
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @NullableDecl String errorMessageTemplate, long p1, @NullableDecl Object p2)
boolean,String,long,Object
void
com.google.common.util.concurrent.Callables
returning
public static Callable<T> returning(@Nullable final T value)
T
Callable
com.google.common.collect.AbstractMultimap
putAll
public boolean putAll(@Nullable K key, Iterable<? extends V> values)
K,Iterable
boolean
com.google.common.base.Verify
verifyNotNull
public static T verifyNotNull(@Nullable T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)
T,String,Object...
T
com.google.common.collect.ForwardingList
standardLastIndexOf
protected int standardLastIndexOf(@NullableDecl Object element)
Object
int
com.google.common.collect.LinkedListMultimap
addNode
private Node<K, V> addNode(@NullableDecl K key, @NullableDecl V value, @NullableDecl Node<K, V> nextSibling)
K,V,Node
Node
com.google.common.cache.LocalCache$WeakAccessEntry
WeakAccessEntry
WeakAccessEntry(ReferenceQueue<K> queue, K key, int hash, @Nullable ReferenceEntry<K, V> next)
ReferenceQueue,K,int,ReferenceEntry
constructor
com.google.common.base.Preconditions
checkState
public static void checkState(boolean b, @Nullable String errorMessageTemplate, @Nullable Object p1, char p2)
boolean,String,Object,char
void
com.google.common.collect.AbstractBiMap
containsValue
public boolean containsValue(@Nullable Object value)
Object
boolean
com.google.common.collect.LinkedListMultimap$ValueForKeyIterator
ValueForKeyIterator
ValueForKeyIterator(@NullableDecl Object key)
Object
constructor
com.google.common.collect.Hashing
smearedHash
static int smearedHash(@NullableDecl Object o)
Object
int
com.google.common.cache.ReferenceEntry
getNext
ReferenceEntry<K, V> getNext()
empty
ReferenceEntry
com.google.common.collect.HashBiMap
insert
private void insert(BiEntry<K, V> entry, @Nullable BiEntry<K, V> oldEntryForKey)
BiEntry,BiEntry
void
com.google.common.collect.Cut$BelowValue
withUpperBoundType
Cut<C> withUpperBoundType(BoundType boundType, DiscreteDomain<C> domain)
BoundType,DiscreteDomain
Cut
com.google.common.collect.Iterables
getLast
public static T getLast(Iterable<? extends T> iterable, @NullableDecl T defaultValue)
Iterable,T
T
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, long p1, char p2)
T,String,long,char
T
com.google.common.hash.HashCode
equals
public final boolean equals(@NullableDecl Object object)
Object
boolean
com.google.common.collect.TreeRangeMap
coalesce
private static Range<K> coalesce(Range<K> range, V value, @Nullable Entry<Cut<K>, RangeMapEntry<K, V>> entry)
Range,V,Entry
Range
com.google.common.base.Preconditions
checkNotNull
public static T checkNotNull(T obj, @NullableDecl String errorMessageTemplate, long p1)
T,String,long
T
com.google.common.collect.GeneralRange
tooLow
boolean tooLow(@Nullable T t)
T
boolean
