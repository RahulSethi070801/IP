{
    "addition": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n",
        "5": " * in compliance with the License. You may obtain a copy of the License at\n",
        "9": " * Unless required by applicable law or agreed to in writing, software distributed under the License\n",
        "10": " * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n",
        "11": " * or implied. See the License for the specific language governing permissions and limitations under\n",
        "12": " * the License.\n",
        "27": " * Contains static utility methods pertaining to primitive types and their corresponding wrapper\n",
        "28": " * types.\n",
        "74": "   * void}). Note that a simpler way to test whether a {@code Class} instance is a member of this\n",
        "75": "   * set is to call {@link Class#isPrimitive}.\n",
        "84": "   * Returns an immutable set of all nine primitive-wrapper types (including {@link Void}).\n",
        "93": "   * Returns {@code true} if {@code type} is one of the nine primitive-wrapper types, such as\n",
        "94": "   * {@link Integer}.\n",
        "103": "   * Returns the corresponding wrapper type of {@code type} if it is a primitive type; otherwise\n",
        "104": "   * returns {@code type} itself. Idempotent.\n",
        "105": "   *\n",
        "122": "   * Returns the corresponding primitive type of {@code type} if it is a wrapper type; otherwise\n",
        "123": "   * returns {@code type} itself. Idempotent.\n",
        "124": "   *\n"
    },
    "removed": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "29": " * Contains static utility methods pertaining to primitive types and their\n",
        "30": " * corresponding wrapper types.\n",
        "76": "   * void}). Note that a simpler way to test whether a {@code Class} instance\n",
        "77": "   * is a member of this set is to call {@link Class#isPrimitive}.\n",
        "86": "   * Returns an immutable set of all nine primitive-wrapper types (including\n",
        "87": "   * {@link Void}).\n",
        "96": "   * Returns {@code true} if {@code type} is one of the nine\n",
        "97": "   * primitive-wrapper types, such as {@link Integer}.\n",
        "106": "   * Returns the corresponding wrapper type of {@code type} if it is a primitive\n",
        "107": "   * type; otherwise returns {@code type} itself. Idempotent.\n",
        "124": "   * Returns the corresponding primitive type of {@code type} if it is a\n",
        "125": "   * wrapper type; otherwise returns {@code type} itself. Idempotent.\n"
    }
}