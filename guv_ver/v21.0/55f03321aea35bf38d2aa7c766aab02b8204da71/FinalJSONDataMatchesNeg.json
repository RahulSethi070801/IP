[{"func":{"oldfunccode":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_oldfunccode_55f03321aea35bf38d2aa7c766aab02b8204da71_1.txt","newfunccode":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_newfunccode_55f03321aea35bf38d2aa7c766aab02b8204da71_1.txt","newdoc":" that's okay; try reflection instead\n","newJdoc":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_newfuncnewJdoc_55f03321aea35bf38d2aa7c766aab02b8204da71_1.txt","olddoc":" that's okay; try reflection instead\n","oldJdoc":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_oldfuncoldJdoc_55f03321aea35bf38d2aa7c766aab02b8204da71_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/55f03321aea35bf38d2aa7c766aab02b8204da71/UnsignedBytes","pathinproj":"guava/src/com/google/common/primitives/UnsignedBytes.java","addlines":[348],"dellines":[],"addcode":["                @Override\n"],"delcode":[],"methodSig":"private static sun.misc.Unsafe getUnsafe()"},"doc":{"oldfunccode":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_olddocfunccode_55f03321aea35bf38d2aa7c766aab02b8204da71_1.txt","newfunccode":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_newdocfunccode_55f03321aea35bf38d2aa7c766aab02b8204da71_1.txt","newdoc":"","newJdoc":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_newdocnewJdoc_55f03321aea35bf38d2aa7c766aab02b8204da71_1.txt","olddoc":"","oldJdoc":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_olddocJdoc_55f03321aea35bf38d2aa7c766aab02b8204da71_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/55f03321aea35bf38d2aa7c766aab02b8204da71/Shorts","pathinproj":"guava/src/com/google/common/primitives/Shorts.java","addlines":[166,167,168],"dellines":[176,174,175],"addcode":["   * <p>More formally, returns the lowest index {@code i} such that\n","   * {@code Arrays.copyOfRange(array, i, i + target.length)} contains exactly the same elements as\n","   * {@code target}.\n"],"delcode":["   * <p>More formally, returns the lowest index {@code i} such that {@code\n","   * java.util.Arrays.copyOfRange(array, i, i + target.length)} contains exactly\n","   * the same elements as {@code target}.\n"],"methodSig":"public static int indexOf(short[] array, short[] target)"},"id":1,"flag":1,"commit":"55f03321aea35bf38d2aa7c766aab02b8204da71"},{"func":{"oldfunccode":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_oldfunccode_55f03321aea35bf38d2aa7c766aab02b8204da71_2.txt","newfunccode":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_newfunccode_55f03321aea35bf38d2aa7c766aab02b8204da71_2.txt","newdoc":" that's okay; try reflection instead\n that's okay; try reflection instead\n","newJdoc":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_newfuncnewJdoc_55f03321aea35bf38d2aa7c766aab02b8204da71_2.txt","olddoc":" that's okay; try reflection instead\n that's okay; try reflection instead\n","oldJdoc":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_oldfuncoldJdoc_55f03321aea35bf38d2aa7c766aab02b8204da71_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/55f03321aea35bf38d2aa7c766aab02b8204da71/UnsignedBytes","pathinproj":"guava/src/com/google/common/primitives/UnsignedBytes.java","addlines":[348],"dellines":[],"addcode":["                @Override\n"],"delcode":[],"methodSig":"private static sun.misc.Unsafe getUnsafe()"},"doc":{"oldfunccode":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_olddocfunccode_55f03321aea35bf38d2aa7c766aab02b8204da71_2.txt","newfunccode":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_newdocfunccode_55f03321aea35bf38d2aa7c766aab02b8204da71_2.txt","newdoc":"","newJdoc":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_newdocnewJdoc_55f03321aea35bf38d2aa7c766aab02b8204da71_2.txt","olddoc":"","oldJdoc":"55f03321aea35bf38d2aa7c766aab02b8204da71/Codes_neg/Match_olddocJdoc_55f03321aea35bf38d2aa7c766aab02b8204da71_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/55f03321aea35bf38d2aa7c766aab02b8204da71/Bytes","pathinproj":"guava/src/com/google/common/primitives/Bytes.java","addlines":[106,107,108],"dellines":[112,113,114],"addcode":["   * <p>More formally, returns the lowest index {@code i} such that\n","   * {@code Arrays.copyOfRange(array, i, i + target.length)} contains exactly the same elements as\n","   * {@code target}.\n"],"delcode":["   * <p>More formally, returns the lowest index {@code i} such that {@code\n","   * java.util.Arrays.copyOfRange(array, i, i + target.length)} contains exactly\n","   * the same elements as {@code target}.\n"],"methodSig":"public static int indexOf(byte[] array, byte[] target)"},"id":1,"flag":1,"commit":"55f03321aea35bf38d2aa7c766aab02b8204da71"}]