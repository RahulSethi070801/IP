[{"func":{"oldfunccode":"","newfunccode":"3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6/Codes_neg/Match_newfunccode_3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6_1.txt","newdoc":"\n     * Some operating systems may return zero as the length for files denoting system-dependent\n     * entities such as devices or pipes, in which case we must fall back on comparing the bytes\n     * directly.\n     \n","newJdoc":"3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6/Codes_neg/Match_newfuncnewJdoc_3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6_1.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6/MoreFiles","pathinproj":"guava/src/com/google/common/io/MoreFiles.java","addlines":[327,328,329,330,331,332,333,339,340,341,342,343,344,345,346,347],"dellines":[],"addcode":["  public static boolean equal(Path path1, Path path2) throws IOException {\n","    checkNotNull(path1);\n","    checkNotNull(path2);\n","    if (Files.isSameFile(path1, path2)) {\n","      return true;\n","    }\n","\n","    ByteSource source1 = asByteSource(path1);\n","    ByteSource source2 = asByteSource(path2);\n","    long len1 = source1.sizeIfKnown().or(0L);\n","    long len2 = source2.sizeIfKnown().or(0L);\n","    if (len1 != 0 && len2 != 0 && len1 != len2) {\n","      return false;\n","    }\n","    return source1.contentEquals(source2);\n","  }\n"],"delcode":[],"methodSig":"public static boolean equal(Path path1, Path path2) throws IOException"},"doc":{"oldfunccode":"3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6/Codes_neg/Match_olddocfunccode_3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6_1.txt","newfunccode":"3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6/Codes_neg/Match_newdocfunccode_3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6_1.txt","newdoc":"\n     * Some operating systems may return zero as the length for files denoting system-dependent\n     * entities such as devices or pipes, in which case we must fall back on comparing the bytes\n     * directly.\n     \n","newJdoc":"3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6/Codes_neg/Match_newdocnewJdoc_3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6_1.txt","olddoc":"\n     * Some operating systems may return zero as the length for files denoting system-dependent\n     * entities such as devices or pipes, in which case we must fall back on comparing the bytes\n     * directly.\n     \n","oldJdoc":"3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6/Codes_neg/Match_olddocJdoc_3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6/Files","pathinproj":"guava/src/com/google/common/io/Files.java","addlines":[341],"dellines":[341],"addcode":["   * Returns true if the given files exist, are not directories, and contain the same bytes.\n"],"delcode":["   * Returns true if the files contains the same bytes.\n"],"methodSig":"public static boolean equal(File file1, File file2) throws IOException"},"id":1,"flag":1,"commit":"3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6"}]