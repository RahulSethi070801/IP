{
    "addition": {
        "46": "    ExpiringComputingMap(long expirationMillis, int initialCapacity) {\n",
        "47": "      this(expirationMillis, null, initialCapacity);\n",
        "50": "    ExpiringComputingMap(\n",
        "51": "        long expirationMillis, Function<? super K, ? extends V> computer, int initialCapacity) {\n",
        "52": "      super(initialCapacity, /* ignored loadFactor */ 0.75f, true);\n",
        "205": "        ? new ExpiringComputingMap<K, V>(expirationMillis, null, initialCapacity)\n",
        "211": "    return new ExpiringComputingMap<K, V>(expirationMillis, computer, initialCapacity);\n"
    },
    "removed": {
        "26": "import java.util.Map;\n",
        "46": "    private final int maximumSize;\n",
        "48": "    ExpiringComputingMap(\n",
        "49": "        long expirationMillis, int maximumSize, int initialCapacity) {\n",
        "50": "      this(expirationMillis, null, maximumSize, initialCapacity);\n",
        "53": "    ExpiringComputingMap(long expirationMillis, Function<? super K, ? extends V> computer,\n",
        "54": "        int maximumSize, int initialCapacity) {\n",
        "55": "      super(initialCapacity, /* ignored loadFactor */ 0.75f, (maximumSize != -1));\n",
        "58": "      this.maximumSize = maximumSize;\n",
        "70": "    @Override\n",
        "71": "    protected boolean removeEldestEntry(Map.Entry<K, V> ignored) {\n",
        "72": "      return (maximumSize == -1) ? false : size() > maximumSize;\n",
        "73": "    }\n",
        "74": "\n",
        "174": "  private int maximumSize = -1;\n",
        "202": "  @Override\n",
        "203": "  MapMaker maximumSize(int maximumSize) {\n",
        "204": "    if (this.maximumSize != -1) {\n",
        "205": "      throw new IllegalStateException(\"maximum size of \" + maximumSize + \" was already set\");\n",
        "206": "    }\n",
        "207": "    if (maximumSize < 0) {\n",
        "208": "      throw new IllegalArgumentException(\"invalid maximum size: \" + maximumSize);\n",
        "209": "    }\n",
        "210": "    this.maximumSize = maximumSize;\n",
        "211": "    useCustomMap = true;\n",
        "212": "    return this;\n",
        "213": "  }\n",
        "214": "\n",
        "228": "        ? new ExpiringComputingMap<K, V>(expirationMillis, null, maximumSize, initialCapacity)\n",
        "234": "    return new ExpiringComputingMap<K, V>(\n",
        "235": "        expirationMillis, computer, maximumSize, initialCapacity);\n"
    }
}