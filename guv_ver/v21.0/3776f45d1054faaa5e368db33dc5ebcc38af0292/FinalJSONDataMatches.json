[{"func":{"oldfunccode":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_oldfunccode_3776f45d1054faaa5e368db33dc5ebcc38af0292_1.txt","newfunccode":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_newfunccode_3776f45d1054faaa5e368db33dc5ebcc38af0292_1.txt","newdoc":"","newJdoc":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_newfuncnewJdoc_3776f45d1054faaa5e368db33dc5ebcc38af0292_1.txt","olddoc":" TODO(user): Consider dropping this restriction. Would this do what users expect?\n","oldJdoc":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_oldfuncoldJdoc_3776f45d1054faaa5e368db33dc5ebcc38af0292_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/3776f45d1054faaa5e368db33dc5ebcc38af0292/ImmutableGraph","pathinproj":"guava/src/com/google/common/graph/ImmutableGraph.java","addlines":[],"dellines":[51,52],"addcode":[],"delcode":["    checkArgument(!((graph instanceof Network) && ((Network<N, ?>) graph).allowsParallelEdges()),\n","        NETWORK_WITH_PARALLEL_EDGE);\n"],"methodSig":"public static ImmutableGraph<N> copyOf(Graph<N> graph)"},"doc":{"oldfunccode":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_olddocfunccode_3776f45d1054faaa5e368db33dc5ebcc38af0292_1.txt","newfunccode":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_newdocfunccode_3776f45d1054faaa5e368db33dc5ebcc38af0292_1.txt","newdoc":"","newJdoc":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_newdocnewJdoc_3776f45d1054faaa5e368db33dc5ebcc38af0292_1.txt","olddoc":"","oldJdoc":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_olddocJdoc_3776f45d1054faaa5e368db33dc5ebcc38af0292_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/3776f45d1054faaa5e368db33dc5ebcc38af0292/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[],"dellines":[273,274,275,276],"addcode":[],"delcode":["   * <p>A {@link Graph} cannot be equal to an instance of a subinterface of {@link Graph} that\n","   * redefines the definition of equality, such as {@link Network}, even if by this definition they\n","   * would otherwise be equal.\n","   *\n"],"methodSig":" boolean equals(@Nullable Object object)"},"id":5,"flag":1,"commit":"3776f45d1054faaa5e368db33dc5ebcc38af0292"},{"func":{"oldfunccode":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_oldfunccode_3776f45d1054faaa5e368db33dc5ebcc38af0292_2.txt","newfunccode":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_newfunccode_3776f45d1054faaa5e368db33dc5ebcc38af0292_2.txt","newdoc":"","newJdoc":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_newfuncnewJdoc_3776f45d1054faaa5e368db33dc5ebcc38af0292_2.txt","olddoc":" TODO(user): Consider dropping this restriction. Would this do what users expect?\n","oldJdoc":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_oldfuncoldJdoc_3776f45d1054faaa5e368db33dc5ebcc38af0292_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/3776f45d1054faaa5e368db33dc5ebcc38af0292/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[],"dellines":[182],"addcode":[],"delcode":["    checkArgument(!allowsParallelEdges(graph), NETWORK_WITH_PARALLEL_EDGE);\n"],"methodSig":"public static MutableGraph<N> copyOf(Graph<N> graph)"},"doc":{"oldfunccode":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_olddocfunccode_3776f45d1054faaa5e368db33dc5ebcc38af0292_2.txt","newfunccode":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_newdocfunccode_3776f45d1054faaa5e368db33dc5ebcc38af0292_2.txt","newdoc":"","newJdoc":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_newdocnewJdoc_3776f45d1054faaa5e368db33dc5ebcc38af0292_2.txt","olddoc":"","oldJdoc":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_olddocJdoc_3776f45d1054faaa5e368db33dc5ebcc38af0292_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/3776f45d1054faaa5e368db33dc5ebcc38af0292/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[],"dellines":[273,274,275,276],"addcode":[],"delcode":["   * <p>A {@link Graph} cannot be equal to an instance of a subinterface of {@link Graph} that\n","   * redefines the definition of equality, such as {@link Network}, even if by this definition they\n","   * would otherwise be equal.\n","   *\n"],"methodSig":" boolean equals(@Nullable Object object)"},"id":5,"flag":1,"commit":"3776f45d1054faaa5e368db33dc5ebcc38af0292"},{"func":{"oldfunccode":"","newfunccode":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_newfunccode_3776f45d1054faaa5e368db33dc5ebcc38af0292_3.txt","newdoc":"","newJdoc":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_newfuncnewJdoc_3776f45d1054faaa5e368db33dc5ebcc38af0292_3.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/3776f45d1054faaa5e368db33dc5ebcc38af0292/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[61,62,63],"dellines":[],"addcode":["  public static <N> Endpoints<N> of(Network<?, ?> network, N nodeA, N nodeB) {\n","    return network.isDirected() ? ofDirected(nodeA, nodeB) : ofUndirected(nodeA, nodeB);\n","  }\n"],"delcode":[],"methodSig":"public static Endpoints<N> of(Network<?, ?> network, N nodeA, N nodeB)"},"doc":{"oldfunccode":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_olddocfunccode_3776f45d1054faaa5e368db33dc5ebcc38af0292_3.txt","newfunccode":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_newdocfunccode_3776f45d1054faaa5e368db33dc5ebcc38af0292_3.txt","newdoc":"","newJdoc":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_newdocnewJdoc_3776f45d1054faaa5e368db33dc5ebcc38af0292_3.txt","olddoc":"","oldJdoc":"3776f45d1054faaa5e368db33dc5ebcc38af0292/Codes/Match_olddocJdoc_3776f45d1054faaa5e368db33dc5ebcc38af0292_3.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/3776f45d1054faaa5e368db33dc5ebcc38af0292/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[],"dellines":[273,274,275,276],"addcode":[],"delcode":["   * <p>A {@link Graph} cannot be equal to an instance of a subinterface of {@link Graph} that\n","   * redefines the definition of equality, such as {@link Network}, even if by this definition they\n","   * would otherwise be equal.\n","   *\n"],"methodSig":" boolean equals(@Nullable Object object)"},"id":5,"flag":1,"commit":"3776f45d1054faaa5e368db33dc5ebcc38af0292"}]