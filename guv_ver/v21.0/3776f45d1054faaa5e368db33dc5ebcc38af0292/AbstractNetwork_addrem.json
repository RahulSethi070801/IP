{
    "addition": {
        "28": " * This class provides a skeletal implementation of {@link Network}. It is recommended to extend\n",
        "29": " * this class rather than implement {@link Network} directly, to ensure consistent\n",
        "30": " * {@link #equals(Object)} and {@link #hashCode()} results across different graph implementations.\n",
        "40": "  @Override\n",
        "41": "  public Graph<N> asGraph() {\n",
        "42": "    return new AbstractGraph<N>() {\n",
        "43": "      @Override\n",
        "44": "      public Set<N> nodes() {\n",
        "45": "        return AbstractNetwork.this.nodes();\n",
        "46": "      }\n",
        "47": "\n",
        "48": "      @Override\n",
        "49": "      public ElementOrder<? super N> nodeOrder() {\n",
        "50": "        return AbstractNetwork.this.nodeOrder();\n",
        "51": "      }\n",
        "52": "\n",
        "53": "      @Override\n",
        "54": "      public boolean isDirected() {\n",
        "55": "        return AbstractNetwork.this.isDirected();\n",
        "56": "      }\n",
        "57": "\n",
        "58": "      @Override\n",
        "59": "      public boolean allowsSelfLoops() {\n",
        "60": "        return AbstractNetwork.this.allowsSelfLoops();\n",
        "61": "      }\n",
        "62": "\n",
        "63": "      @Override\n",
        "64": "      public Set<N> adjacentNodes(Object node) {\n",
        "65": "        return AbstractNetwork.this.adjacentNodes(node);\n",
        "66": "      }\n",
        "67": "\n",
        "68": "      @Override\n",
        "69": "      public Set<N> predecessors(Object node) {\n",
        "70": "        return AbstractNetwork.this.predecessors(node);\n",
        "71": "      }\n",
        "72": "\n",
        "73": "      @Override\n",
        "74": "      public Set<N> successors(Object node) {\n",
        "75": "        return AbstractNetwork.this.successors(node);\n",
        "76": "      }\n",
        "77": "    };\n",
        "78": "  }\n",
        "79": "\n"
    },
    "removed": {
        "28": " * This class provides a skeletal implementation of {@link Graph}. It is recommended to extend this\n",
        "29": " * class rather than implement {@link Graph} directly, to ensure consistent {@link #equals(Object)}\n",
        "30": " * and {@link #hashCode()} results across different graph implementations.\n"
    }
}