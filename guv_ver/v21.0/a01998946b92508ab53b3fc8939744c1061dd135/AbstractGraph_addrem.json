{
    "addition": {
        "19": "import static com.google.common.graph.GraphConstants.GRAPH_STRING_FORMAT;\n",
        "21": "import com.google.common.annotations.Beta;\n",
        "22": "import com.google.common.base.Function;\n",
        "23": "import com.google.common.base.Joiner;\n",
        "24": "import com.google.common.collect.Maps;\n",
        "25": "import java.util.Set;\n",
        "59": "  public boolean equals(@Nullable Object obj) {\n",
        "60": "    if (obj == this) {\n",
        "61": "      return true;\n",
        "62": "    }\n",
        "63": "    if (!(obj instanceof Graph)) {\n",
        "64": "      return false;\n",
        "65": "    }\n",
        "66": "    Graph<?> other = (Graph<?>) obj;\n",
        "67": "\n",
        "68": "    // Needed to enforce a symmetric equality relationship.\n",
        "69": "    if (other instanceof Network) {\n",
        "72": "\n",
        "73": "    if (isDirected() != other.isDirected()) {\n",
        "74": "      return false;\n",
        "75": "    }\n",
        "76": "\n",
        "77": "    if (!nodes().equals(other.nodes())) {\n",
        "78": "      return false;\n",
        "79": "    }\n",
        "80": "\n",
        "81": "    for (Object node : nodes()) {\n",
        "82": "      if (!successors(node).equals(other.successors(node))) {\n",
        "83": "        return false;\n",
        "84": "      }\n",
        "85": "    }\n",
        "86": "\n",
        "87": "    return true;\n",
        "92": "    return Maps.asMap(nodes(), new Function<N, Set<N>>() {\n",
        "93": "      @Override\n",
        "94": "      public Set<N> apply(N node) {\n",
        "95": "        return successors(node);\n",
        "96": "      }\n",
        "97": "    }).hashCode();\n",
        "100": "  /**\n",
        "101": "   * Returns a string representation of this graph. Encodes edge direction if any.\n",
        "102": "   */\n",
        "105": "    return String.format(GRAPH_STRING_FORMAT,\n",
        "106": "        getPropertiesString(),\n",
        "107": "        nodes(),\n",
        "108": "        endpointsString());\n",
        "109": "  }\n",
        "110": "\n",
        "111": "  // TODO(b/28087289): add allowsParallelEdges() once that's supported\n",
        "112": "  private String getPropertiesString() {\n",
        "113": "    return String.format(\"isDirected: %s, allowsSelfLoops: %s\", isDirected(), allowsSelfLoops());\n",
        "114": "  }\n",
        "115": "\n",
        "116": "  private String endpointsString() {\n",
        "117": "    return String.format(\"{%s}\", Joiner.on(\", \").join(Graphs.endpointsInternal(this)));\n"
    },
    "removed": {
        "19": "import com.google.common.annotations.Beta;\n",
        "54": "  public boolean equals(@Nullable Object object) {\n",
        "55": "    if (!(object instanceof Graph)) {\n",
        "58": "    return Graphs.equal(this, (Graph<?>) object);\n",
        "63": "    return Graphs.hashCode(this);\n",
        "68": "    return Graphs.toString(this);\n"
    }
}