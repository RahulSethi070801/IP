[{"func":{"oldfunccode":"a01998946b92508ab53b3fc8939744c1061dd135/Codes/Match_oldfunccode_a01998946b92508ab53b3fc8939744c1061dd135_1.txt","newfunccode":"a01998946b92508ab53b3fc8939744c1061dd135/Codes/Match_newfunccode_a01998946b92508ab53b3fc8939744c1061dd135_1.txt","newdoc":"","newJdoc":"a01998946b92508ab53b3fc8939744c1061dd135/Codes/Match_newfuncnewJdoc_a01998946b92508ab53b3fc8939744c1061dd135_1.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/a01998946b92508ab53b3fc8939744c1061dd135/AbstractGraph","pathinproj":"guava/src/com/google/common/graph/AbstractGraph.java","addlines":[97,98,99,100,105,106,107,108,109],"dellines":[66,68],"addcode":["    return String.format(GRAPH_STRING_FORMAT,\n","        getPropertiesString(),\n","        nodes(),\n","        endpointsString());\n","  }\n","    return String.format(GRAPH_STRING_FORMAT,\n","        getPropertiesString(),\n","        nodes(),\n","        Maps.asMap(edges(), edgeToEndpointsString()));\n"],"delcode":["    return Graphs.toString(this);\n","    return Graphs.toString(this);\n"],"methodSig":"public String toString()"},"doc":{"oldfunccode":"a01998946b92508ab53b3fc8939744c1061dd135/Codes/Match_olddocfunccode_a01998946b92508ab53b3fc8939744c1061dd135_1.txt","newfunccode":"a01998946b92508ab53b3fc8939744c1061dd135/Codes/Match_newdocfunccode_a01998946b92508ab53b3fc8939744c1061dd135_1.txt","newdoc":"","newJdoc":"a01998946b92508ab53b3fc8939744c1061dd135/Codes/Match_newdocnewJdoc_a01998946b92508ab53b3fc8939744c1061dd135_1.txt","olddoc":"","oldJdoc":"a01998946b92508ab53b3fc8939744c1061dd135/Codes/Match_olddocJdoc_a01998946b92508ab53b3fc8939744c1061dd135_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/a01998946b92508ab53b3fc8939744c1061dd135/Network","pathinproj":"guava/src/com/google/common/graph/Network.java","addlines":[355,286],"dellines":[288,357],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractNetwork#hashCode()}.\n","   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":["   * <p>A reference implementation of this is provided by {@link Graphs#hashCode(Graph)}.\n","   * <p>A reference implementation of this is provided by {@link Graphs#hashCode(Graph)}.\n"],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"a01998946b92508ab53b3fc8939744c1061dd135"}]