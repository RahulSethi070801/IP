{
    "addition": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n",
        "5": " * in compliance with the License. You may obtain a copy of the License at\n",
        "9": " * Unless required by applicable law or agreed to in writing, software distributed under the License\n",
        "10": " * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n",
        "11": " * or implied. See the License for the specific language governing permissions and limitations under\n",
        "12": " * the License.\n",
        "27": " * A semi-persistent mapping from keys to values. Values are automatically loaded by the cache, and\n",
        "28": " * are stored in the cache until either evicted or manually invalidated.\n",
        "56": "   * <p>If the cache loader associated with this cache is known not to throw checked exceptions,\n",
        "57": "   * then prefer {@link #getUnchecked} over this method.\n",
        "60": "   *     ExecutionException} is thrown\n",
        "61": "   *     <a href=\"https://github.com/google/guava/wiki/CachesExplained#interruption\">even if\n",
        "71": "   * necessary. No observable state associated with this cache is modified until loading completes.\n",
        "72": "   * Unlike {@link #get}, this method does not throw a checked exception, and thus should only be\n",
        "73": "   * used in situations where checked exceptions are not thrown by the cache loader.\n",
        "102": "   * entries returned by {@link CacheLoader#loadAll} will be stored in the cache, over-writing any\n",
        "103": "   * previously cached values. This method will throw an exception if {@link CacheLoader#loadAll}\n",
        "104": "   * returns {@code null}, returns a map containing null keys or values, or fails to return an entry\n",
        "105": "   * for each requested key.\n",
        "111": "   *     ExecutionException} is thrown\n",
        "112": "   *     <a href=\"https://github.com/google/guava/wiki/CachesExplained#interruption\">even if\n",
        "139": "   * <p>Caches loaded by a {@link CacheLoader} will call {@link CacheLoader#reload} if the cache\n",
        "140": "   * currently contains a value for {@code key}, and {@link CacheLoader#load} otherwise. Loading is\n",
        "141": "   * asynchronous only if {@link CacheLoader#reload} was overridden with an asynchronous\n",
        "142": "   * implementation.\n"
    },
    "removed": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "29": " * A semi-persistent mapping from keys to values. Values are automatically loaded by the cache,\n",
        "30": " * and are stored in the cache until either evicted or manually invalidated.\n",
        "58": "   * <p>If the cache loader associated with this cache is known not to throw checked\n",
        "59": "   * exceptions, then prefer {@link #getUnchecked} over this method.\n",
        "62": "   *     ExecutionException} is thrown <a\n",
        "63": "   *     href=\"https://github.com/google/guava/wiki/CachesExplained#interruption\">even if\n",
        "73": "   * necessary. No observable state associated with this cache is modified until loading\n",
        "74": "   * completes. Unlike {@link #get}, this method does not throw a checked exception, and thus should\n",
        "75": "   * only be used in situations where checked exceptions are not thrown by the cache loader.\n",
        "104": "   * entries returned by {@link CacheLoader#loadAll} will be stored in the cache, over-writing\n",
        "105": "   * any previously cached values. This method will throw an exception if\n",
        "106": "   * {@link CacheLoader#loadAll} returns {@code null}, returns a map containing null keys or values,\n",
        "107": "   * or fails to return an entry for each requested key.\n",
        "113": "   *     ExecutionException} is thrown <a\n",
        "114": "   *     href=\"https://github.com/google/guava/wiki/CachesExplained#interruption\">even if\n",
        "141": "   * <p>Caches loaded by a {@link CacheLoader} will call {@link CacheLoader#reload} if the\n",
        "142": "   * cache currently contains a value for {@code key}, and {@link CacheLoader#load} otherwise.\n",
        "143": "   * Loading is asynchronous only if {@link CacheLoader#reload} was overridden with an\n",
        "144": "   * asynchronous implementation.\n"
    }
}