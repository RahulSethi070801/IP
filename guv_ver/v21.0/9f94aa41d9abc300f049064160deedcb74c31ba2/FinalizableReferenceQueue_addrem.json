{
    "addition": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n",
        "5": " * in compliance with the License. You may obtain a copy of the License at\n",
        "9": " * Unless required by applicable law or agreed to in writing, software distributed under the License\n",
        "10": " * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n",
        "11": " * or implied. See the License for the specific language governing permissions and limitations under\n",
        "12": " * the License.\n",
        "42": " * <p>As an example of how this is used, imagine you have a class {@code MyServer} that creates a a\n",
        "43": " * {@link java.net.ServerSocket ServerSocket}, and you would like to ensure that the\n",
        "45": " * calling its {@code close} method. You <em>could</em> use a finalizer to accomplish this, but that\n",
        "46": " * has a number of well-known problems. Here is how you might use this class instead:\n",
        "119": "   * System class loader -> Application class loader -> ReferenceMap -> FinalizableReferenceQueue ->\n",
        "120": "   * etc. -> Decoupled class loader -> Finalizer\n",
        "187": "   * Repeatedly dequeues references from the queue and invokes\n",
        "188": "   * {@link FinalizableReference#finalizeReferent()} on them until the queue is empty. This method\n",
        "189": "   * is a no-op if the background thread was created successfully.\n"
    },
    "removed": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "44": " * <p>As an example of how this is used, imagine you have a class {@code MyServer} that creates a\n",
        "45": " * a {@link java.net.ServerSocket ServerSocket}, and you would like to ensure that the\n",
        "47": " * calling its {@code close} method. You <em>could</em> use a finalizer to accomplish this, but\n",
        "48": " * that has a number of well-known problems. Here is how you might use this class instead:\n",
        "121": "   * System class loader -> Application class loader -> ReferenceMap -> FinalizableReferenceQueue\n",
        "122": "   * -> etc. -> Decoupled class loader -> Finalizer\n",
        "189": "   * Repeatedly dequeues references from the queue and invokes {@link\n",
        "190": "   * FinalizableReference#finalizeReferent()} on them until the queue is empty. This method is a\n",
        "191": "   * no-op if the background thread was created successfully.\n"
    }
}