ListenableFuture<V> loadAsync(final K key, final int hash, final LoadingValueReference<K, V> loadingValueReference, CacheLoader<? super K, V> loader) {
    final ListenableFuture<V> loadingFuture = loadingValueReference.loadFuture(key, loader);
    loadingFuture.addListener(new Runnable() {

        @Override
        public void run() {
            try {
                getAndRecordStats(key, hash, loadingValueReference, loadingFuture);
            } catch (Throwable t) {
                logger.log(Level.WARNING, "Exception thrown during refresh", t);
                loadingValueReference.setException(t);
            }
        }
    }, directExecutor());
    return loadingFuture;
}