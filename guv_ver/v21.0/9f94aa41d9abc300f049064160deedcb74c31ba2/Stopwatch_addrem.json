{
    "addition": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n",
        "5": " * in compliance with the License. You may obtain a copy of the License at\n",
        "9": " * Unless required by applicable law or agreed to in writing, software distributed under the License\n",
        "10": " * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n",
        "11": " * or implied. See the License for the specific language governing permissions and limitations under\n",
        "12": " * the License.\n",
        "35": " * An object that measures elapsed time in nanoseconds. It is useful to measure elapsed time using\n",
        "36": " * this class instead of direct calls to {@link System#nanoTime} for a few reasons:\n",
        "39": " * <li>An alternate time source can be substituted, for testing or performance reasons.\n",
        "40": " * <li>As documented by {@code nanoTime}, the value returned has no absolute meaning, and can only\n",
        "41": " * be interpreted as relative to another timestamp returned by {@code nanoTime} at a different time.\n",
        "42": " * {@code Stopwatch} is a more effective abstraction because it exposes only these relative values,\n",
        "43": " * not the absolute ones.\n",
        "47": " *\n",
        "55": " *   log.info(\"time: \" + stopwatch); // formatted string like \"12.3 ms\"\n",
        "56": " * </pre>\n",
        "58": " * <p>Stopwatch methods are not idempotent; it is an error to start or stop a stopwatch that is\n",
        "59": " * already in the desired state.\n",
        "61": " * <p>When testing code that uses this class, use {@link #createUnstarted(Ticker)} or\n",
        "62": " * {@link #createStarted(Ticker)} to supply a fake or mock ticker. <!-- TODO(kevinb): restore the\n",
        "63": " * \"such as\" --> This allows you to simulate any valid behavior of the stopwatch.\n",
        "78": "   * Creates (but does not start) a new stopwatch using {@link System#nanoTime} as its time source.\n",
        "87": "   * Creates (but does not start) a new stopwatch, using the specified time source.\n",
        "96": "   * Creates (and starts) a new stopwatch using {@link System#nanoTime} as its time source.\n",
        "105": "   * Creates (and starts) a new stopwatch, using the specified time source.\n",
        "122": "   * Returns {@code true} if {@link #start()} has been called on this stopwatch, and {@link #stop()}\n",
        "123": "   * has not been called since the last call to {@code\n",
        "145": "   * Stops the stopwatch. Future reads will return the fixed duration that had elapsed up to this\n",
        "146": "   * point.\n",
        "161": "   * Sets the elapsed time for this stopwatch to zero, and places it in a stopped state.\n",
        "177": "   * Returns the current elapsed time shown on this stopwatch, expressed in the desired time unit,\n",
        "178": "   * with any fraction rounded down.\n",
        "180": "   * <p>Note that the overhead of measurement can be more than a microsecond, so it is generally not\n",
        "181": "   * useful to specify {@link TimeUnit#NANOSECONDS} precision here.\n"
    },
    "removed": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "37": " * An object that measures elapsed time in nanoseconds. It is useful to measure\n",
        "38": " * elapsed time using this class instead of direct calls to {@link\n",
        "39": " * System#nanoTime} for a few reasons:\n",
        "42": " * <li>An alternate time source can be substituted, for testing or performance\n",
        "43": " *     reasons.\n",
        "44": " * <li>As documented by {@code nanoTime}, the value returned has no absolute\n",
        "45": " *     meaning, and can only be interpreted as relative to another timestamp\n",
        "46": " *     returned by {@code nanoTime} at a different time. {@code Stopwatch} is a\n",
        "47": " *     more effective abstraction because it exposes only these relative values,\n",
        "48": " *     not the absolute ones.\n",
        "59": " *   log.info(\"time: \" + stopwatch); // formatted string like \"12.3 ms\"</pre>\n",
        "61": " * <p>Stopwatch methods are not idempotent; it is an error to start or stop a\n",
        "62": " * stopwatch that is already in the desired state.\n",
        "64": " * <p>When testing code that uses this class, use\n",
        "65": " * {@link #createUnstarted(Ticker)} or {@link #createStarted(Ticker)} to\n",
        "66": " * supply a fake or mock ticker.\n",
        "67": " * <!-- TODO(kevinb): restore the \"such as\" --> This allows you to\n",
        "68": " * simulate any valid behavior of the stopwatch.\n",
        "83": "   * Creates (but does not start) a new stopwatch using {@link System#nanoTime}\n",
        "84": "   * as its time source.\n",
        "93": "   * Creates (but does not start) a new stopwatch, using the specified time\n",
        "94": "   * source.\n",
        "103": "   * Creates (and starts) a new stopwatch using {@link System#nanoTime}\n",
        "104": "   * as its time source.\n",
        "113": "   * Creates (and starts) a new stopwatch, using the specified time\n",
        "114": "   * source.\n",
        "131": "   * Returns {@code true} if {@link #start()} has been called on this stopwatch,\n",
        "132": "   * and {@link #stop()} has not been called since the last call to {@code\n",
        "154": "   * Stops the stopwatch. Future reads will return the fixed duration that had\n",
        "155": "   * elapsed up to this point.\n",
        "170": "   * Sets the elapsed time for this stopwatch to zero,\n",
        "171": "   * and places it in a stopped state.\n",
        "187": "   * Returns the current elapsed time shown on this stopwatch, expressed\n",
        "188": "   * in the desired time unit, with any fraction rounded down.\n",
        "190": "   * <p>Note that the overhead of measurement can be more than a microsecond, so\n",
        "191": "   * it is generally not useful to specify {@link TimeUnit#NANOSECONDS}\n",
        "192": "   * precision here.\n"
    }
}