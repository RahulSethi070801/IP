{
    "addition": {},
    "removed": {
        "1": "/*\n",
        "2": " * Copyright (C) 2014 The Guava Authors\n",
        "3": " *\n",
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "7": " *\n",
        "8": " * http://www.apache.org/licenses/LICENSE-2.0\n",
        "9": " *\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "15": " */\n",
        "16": "\n",
        "17": "package com.google.common.graph;\n",
        "18": "\n",
        "19": "import static com.google.common.base.Preconditions.checkNotNull;\n",
        "20": "\n",
        "21": "import com.google.common.annotations.Beta;\n",
        "22": "import com.google.common.collect.ImmutableCollection;\n",
        "23": "import com.google.common.graph.BasicGraph.Presence;\n",
        "24": "\n",
        "25": "/**\n",
        "26": " * A {@link BasicGraph} whose elements and structural relationships will never change. Instances of\n",
        "27": " * this class may be obtained with {@link #copyOf(BasicGraph)}.\n",
        "28": " *\n",
        "29": " * <p>This class generally provides all of the same guarantees as {@link ImmutableCollection}\n",
        "30": " * (despite not extending {@link ImmutableCollection} itself), including guaranteed thread-safety.\n",
        "31": " *\n",
        "32": " * @author James Sexton\n",
        "33": " * @author Joshua O'Madadhain\n",
        "34": " * @author Omar Darwish\n",
        "35": " * @param <N> Node parameter type\n",
        "36": " * @since 20.0\n",
        "37": " */\n",
        "38": "@Beta\n",
        "39": "public class ImmutableBasicGraph<N> extends ImmutableGraph<N, Presence> implements BasicGraph<N> {\n",
        "40": "\n",
        "41": "  /** To ensure the immutability contract is maintained, there must be no public constructors. */\n",
        "42": "  private ImmutableBasicGraph(BasicGraph<N> graph) {\n",
        "43": "    super(graph);\n",
        "44": "  }\n",
        "45": "\n",
        "46": "  /** Returns an immutable copy of {@code graph}. */\n",
        "47": "  public static <N> ImmutableBasicGraph<N> copyOf(BasicGraph<N> graph) {\n",
        "48": "    return (graph instanceof ImmutableBasicGraph)\n",
        "49": "        ? (ImmutableBasicGraph<N>) graph\n",
        "50": "        : new ImmutableBasicGraph<N>(graph);\n",
        "51": "  }\n",
        "52": "\n",
        "53": "  /**\n",
        "54": "   * Simply returns its argument.\n",
        "55": "   *\n",
        "56": "   * @deprecated no need to use this\n",
        "57": "   */\n",
        "58": "  @Deprecated\n",
        "59": "  public static <N> ImmutableBasicGraph<N> copyOf(ImmutableBasicGraph<N> graph) {\n",
        "60": "    return checkNotNull(graph);\n",
        "61": "  }\n",
        "62": "}\n"
    }
}