{
    "addition": {
        "1": "/*\n",
        "2": " * Copyright (C) 2014 The Guava Authors\n",
        "3": " *\n",
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "7": " *\n",
        "8": " * http://www.apache.org/licenses/LICENSE-2.0\n",
        "9": " *\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "15": " */\n",
        "16": "\n",
        "17": "package com.google.common.graph;\n",
        "18": "\n",
        "19": "import static com.google.common.base.Preconditions.checkNotNull;\n",
        "20": "\n",
        "21": "import com.google.common.annotations.Beta;\n",
        "22": "import com.google.common.graph.BasicGraph.Presence;\n",
        "23": "\n",
        "24": "/**\n",
        "25": " * A {@link BasicGraph} whose relationships are constant. Instances of this class may be obtained\n",
        "26": " * with {@link #copyOf(BasicGraph)}.\n",
        "27": " *\n",
        "28": " * @author James Sexton\n",
        "29": " * @author Joshua O'Madadhain\n",
        "30": " * @author Omar Darwish\n",
        "31": " * @param <N> Node parameter type\n",
        "32": " * @since 20.0\n",
        "33": " */\n",
        "34": "@Beta\n",
        "35": "public class ImmutableBasicGraph<N>\n",
        "36": "    extends ImmutableValueGraph<N, Presence> implements BasicGraph<N> {\n",
        "37": "\n",
        "38": "  private ImmutableBasicGraph(BasicGraph<N> graph) {\n",
        "39": "    super(graph);\n",
        "40": "  }\n",
        "41": "\n",
        "42": "  /**\n",
        "43": "   * Returns an immutable copy of {@code graph}.\n",
        "44": "   */\n",
        "45": "  @SuppressWarnings(\"unchecked\")\n",
        "46": "  public static <N> ImmutableBasicGraph<N> copyOf(BasicGraph<N> graph) {\n",
        "47": "    return (graph instanceof ImmutableBasicGraph)\n",
        "48": "        ? (ImmutableBasicGraph<N>) graph\n",
        "49": "        : new ImmutableBasicGraph<N>(graph);\n",
        "50": "  }\n",
        "51": "\n",
        "52": "  /**\n",
        "53": "   * Simply returns its argument.\n",
        "54": "   *\n",
        "55": "   * @deprecated no need to use this\n",
        "56": "   */\n",
        "57": "  @Deprecated\n",
        "58": "  public static <N> ImmutableBasicGraph<N> copyOf(ImmutableBasicGraph<N> graph) {\n",
        "59": "    return checkNotNull(graph);\n",
        "60": "  }\n",
        "61": "}\n"
    },
    "removed": {}
}