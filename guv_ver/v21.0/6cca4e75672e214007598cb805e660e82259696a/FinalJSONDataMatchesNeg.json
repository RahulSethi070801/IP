[{"func":{"oldfunccode":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_oldfunccode_6cca4e75672e214007598cb805e660e82259696a_1.txt","newfunccode":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_newfunccode_6cca4e75672e214007598cb805e660e82259696a_1.txt","newdoc":" Read all of the characters for this node.\n '!' represents an interior node that represents an ICANN entry in the map.\n '?' represents a leaf node, which represents an ICANN entry in map.\n ':' represents an interior node that represents a private entry in the map\n ',' represents a leaf node, which represents a private entry in the map.\n Read all the children\n An extra '?' or ',' after a child node indicates the end of all children of this node.\n","newJdoc":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_newfuncnewJdoc_6cca4e75672e214007598cb805e660e82259696a_1.txt","olddoc":" Read all of the characters for this node.\n '!' represents an interior node that represents an ICANN entry in the map.\n '?' represents a leaf node, which represents an ICANN entry in map.\n ':' represents an interior node that represents a private entry in the map\n ',' represents a leaf node, which represents a private entry in the map.\n Read all the children\n An extra '?' or ',' after a child node indicates the end of all children of this node.\n","oldJdoc":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_oldfuncoldJdoc_6cca4e75672e214007598cb805e660e82259696a_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/6cca4e75672e214007598cb805e660e82259696a/TrieParser","pathinproj":"guava/src/com/google/thirdparty/publicsuffix/TrieParser.java","addlines":[67],"dellines":[70],"addcode":["    for (; idx < encodedLen; idx++) {\n"],"delcode":["    for ( ; idx < encodedLen; idx++) {\n"],"methodSig":"private static int doParseTrieToBuilder(List<CharSequence> stack, CharSequence encoded, ImmutableMap.Builder<String, PublicSuffixType> builder)"},"doc":{"oldfunccode":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_olddocfunccode_6cca4e75672e214007598cb805e660e82259696a_1.txt","newfunccode":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_newdocfunccode_6cca4e75672e214007598cb805e660e82259696a_1.txt","newdoc":"","newJdoc":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_newdocnewJdoc_6cca4e75672e214007598cb805e660e82259696a_1.txt","olddoc":"","oldJdoc":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_olddocJdoc_6cca4e75672e214007598cb805e660e82259696a_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/6cca4e75672e214007598cb805e660e82259696a/XmlEscapers","pathinproj":"guava/src/com/google/common/xml/XmlEscapers.java","addlines":[64,65,67,68,69,70,72,73,54,55,56,58,59,60,62,63],"dellines":[65,66,67,68,70,71,72,73,74,76,77,78,79,80,82,83,59,60,61,62,63],"addcode":["   * Returns an {@link Escaper} instance that escapes special characters in a string so it can\n","   * safely be included in an XML document as element content. See section\n","   * <a href=\"http://www.w3.org/TR/2008/REC-xml-20081126/#syntax\">2.4</a> of the XML specification.\n","   * <p><b>Note:</b> Double and single quotes are not escaped, so it is <b>not safe</b> to use this\n","   * escaper to escape attribute values. Use {@link #xmlContentEscaper} if the output can appear in\n","   * element content or {@link #xmlAttributeEscaper} in attribute values.\n","   * <p>This escaper substitutes {@code 0xFFFD} for non-whitespace control characters and the\n","   * character values {@code 0xFFFE} and {@code 0xFFFF} which are not permitted in XML. For more\n","   * detail see section <a href=\"http://www.w3.org/TR/2008/REC-xml-20081126/#charsets\">2.2</a> of\n","   * the XML specification.\n","   * <p>This escaper does not escape non-ASCII characters to their numeric character references\n","   * (NCR). Any non-ASCII characters appearing in the input will be preserved in the output.\n","   * Specifically \"\\r\" (carriage return) is preserved in the output, which may result in it being\n","   * silently converted to \"\\n\" when the XML is parsed.\n","   * <p>This escaper does not treat surrogate pairs specially and does not perform Unicode\n","   * validation on its input.\n"],"delcode":["   * Returns an {@link Escaper} instance that escapes special characters in a\n","   * string so it can safely be included in an XML document as element content.\n","   * See section\n","   * <a href=\"http://www.w3.org/TR/2008/REC-xml-20081126/#syntax\">2.4</a> of the\n","   * XML specification.\n","   * <p><b>Note:</b> Double and single quotes are not escaped, so it is <b>not\n","   * safe</b> to use this escaper to escape attribute values. Use\n","   * {@link #xmlContentEscaper} if the output can appear in element content or\n","   * {@link #xmlAttributeEscaper} in attribute values.\n","   * <p>This escaper substitutes {@code 0xFFFD} for non-whitespace control\n","   * characters and the character values {@code 0xFFFE} and {@code 0xFFFF} which\n","   * are not permitted in XML. For more detail see section <a\n","   * href=\"http://www.w3.org/TR/2008/REC-xml-20081126/#charsets\">2.2</a> of the\n","   * XML specification.\n","   * <p>This escaper does not escape non-ASCII characters to their numeric\n","   * character references (NCR). Any non-ASCII characters appearing in the input\n","   * will be preserved in the output. Specifically \"\\r\" (carriage return) is\n","   * preserved in the output, which may result in it being silently converted to\n","   * \"\\n\" when the XML is parsed.\n","   * <p>This escaper does not treat surrogate pairs specially and does not\n","   * perform Unicode validation on its input.\n"],"methodSig":"public static Escaper xmlContentEscaper()"},"id":1,"flag":1,"commit":"6cca4e75672e214007598cb805e660e82259696a"},{"func":{"oldfunccode":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_oldfunccode_6cca4e75672e214007598cb805e660e82259696a_2.txt","newfunccode":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_newfunccode_6cca4e75672e214007598cb805e660e82259696a_2.txt","newdoc":"","newJdoc":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_newfuncnewJdoc_6cca4e75672e214007598cb805e660e82259696a_2.txt","olddoc":"","oldJdoc":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_oldfuncoldJdoc_6cca4e75672e214007598cb805e660e82259696a_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/6cca4e75672e214007598cb805e660e82259696a/TrieParser","pathinproj":"guava/src/com/google/thirdparty/publicsuffix/TrieParser.java","addlines":[41,42,43],"dellines":[43,44,45,46],"addcode":["      idx +=\n","          doParseTrieToBuilder(\n","              Lists.<CharSequence>newLinkedList(), encoded.subSequence(idx, encodedLen), builder);\n"],"delcode":["      idx += doParseTrieToBuilder(\n","          Lists.<CharSequence>newLinkedList(),\n","          encoded.subSequence(idx, encodedLen),\n","          builder);\n"],"methodSig":" static ImmutableMap<String, PublicSuffixType> parseTrie(CharSequence encoded)"},"doc":{"oldfunccode":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_olddocfunccode_6cca4e75672e214007598cb805e660e82259696a_2.txt","newfunccode":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_newdocfunccode_6cca4e75672e214007598cb805e660e82259696a_2.txt","newdoc":"","newJdoc":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_newdocnewJdoc_6cca4e75672e214007598cb805e660e82259696a_2.txt","olddoc":"","oldJdoc":"6cca4e75672e214007598cb805e660e82259696a/Codes_neg/Match_olddocJdoc_6cca4e75672e214007598cb805e660e82259696a_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/6cca4e75672e214007598cb805e660e82259696a/XmlEscapers","pathinproj":"guava/src/com/google/common/xml/XmlEscapers.java","addlines":[64,65,67,68,69,70,72,73,54,55,56,58,59,60,62,63],"dellines":[65,66,67,68,70,71,72,73,74,76,77,78,79,80,82,83,59,60,61,62,63],"addcode":["   * Returns an {@link Escaper} instance that escapes special characters in a string so it can\n","   * safely be included in an XML document as element content. See section\n","   * <a href=\"http://www.w3.org/TR/2008/REC-xml-20081126/#syntax\">2.4</a> of the XML specification.\n","   * <p><b>Note:</b> Double and single quotes are not escaped, so it is <b>not safe</b> to use this\n","   * escaper to escape attribute values. Use {@link #xmlContentEscaper} if the output can appear in\n","   * element content or {@link #xmlAttributeEscaper} in attribute values.\n","   * <p>This escaper substitutes {@code 0xFFFD} for non-whitespace control characters and the\n","   * character values {@code 0xFFFE} and {@code 0xFFFF} which are not permitted in XML. For more\n","   * detail see section <a href=\"http://www.w3.org/TR/2008/REC-xml-20081126/#charsets\">2.2</a> of\n","   * the XML specification.\n","   * <p>This escaper does not escape non-ASCII characters to their numeric character references\n","   * (NCR). Any non-ASCII characters appearing in the input will be preserved in the output.\n","   * Specifically \"\\r\" (carriage return) is preserved in the output, which may result in it being\n","   * silently converted to \"\\n\" when the XML is parsed.\n","   * <p>This escaper does not treat surrogate pairs specially and does not perform Unicode\n","   * validation on its input.\n"],"delcode":["   * Returns an {@link Escaper} instance that escapes special characters in a\n","   * string so it can safely be included in an XML document as element content.\n","   * See section\n","   * <a href=\"http://www.w3.org/TR/2008/REC-xml-20081126/#syntax\">2.4</a> of the\n","   * XML specification.\n","   * <p><b>Note:</b> Double and single quotes are not escaped, so it is <b>not\n","   * safe</b> to use this escaper to escape attribute values. Use\n","   * {@link #xmlContentEscaper} if the output can appear in element content or\n","   * {@link #xmlAttributeEscaper} in attribute values.\n","   * <p>This escaper substitutes {@code 0xFFFD} for non-whitespace control\n","   * characters and the character values {@code 0xFFFE} and {@code 0xFFFF} which\n","   * are not permitted in XML. For more detail see section <a\n","   * href=\"http://www.w3.org/TR/2008/REC-xml-20081126/#charsets\">2.2</a> of the\n","   * XML specification.\n","   * <p>This escaper does not escape non-ASCII characters to their numeric\n","   * character references (NCR). Any non-ASCII characters appearing in the input\n","   * will be preserved in the output. Specifically \"\\r\" (carriage return) is\n","   * preserved in the output, which may result in it being silently converted to\n","   * \"\\n\" when the XML is parsed.\n","   * <p>This escaper does not treat surrogate pairs specially and does not\n","   * perform Unicode validation on its input.\n"],"methodSig":"public static Escaper xmlContentEscaper()"},"id":1,"flag":1,"commit":"6cca4e75672e214007598cb805e660e82259696a"}]