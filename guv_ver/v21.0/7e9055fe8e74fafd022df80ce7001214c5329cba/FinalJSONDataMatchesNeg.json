[{"func":{"oldfunccode":"7e9055fe8e74fafd022df80ce7001214c5329cba/Codes_neg/Match_oldfunccode_7e9055fe8e74fafd022df80ce7001214c5329cba_1.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"7e9055fe8e74fafd022df80ce7001214c5329cba/Codes_neg/Match_oldfuncoldJdoc_7e9055fe8e74fafd022df80ce7001214c5329cba_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/7e9055fe8e74fafd022df80ce7001214c5329cba/Network","pathinproj":"guava/src/com/google/common/graph/Network.java","addlines":[],"dellines":[266,267],"addcode":[],"delcode":["  @Override\n","  Set<N> adjacentNodes(Object node);\n"],"methodSig":" Set<N> adjacentNodes(Object node)"},"doc":{"oldfunccode":"7e9055fe8e74fafd022df80ce7001214c5329cba/Codes_neg/Match_olddocfunccode_7e9055fe8e74fafd022df80ce7001214c5329cba_1.txt","newfunccode":"7e9055fe8e74fafd022df80ce7001214c5329cba/Codes_neg/Match_newdocfunccode_7e9055fe8e74fafd022df80ce7001214c5329cba_1.txt","newdoc":"","newJdoc":"7e9055fe8e74fafd022df80ce7001214c5329cba/Codes_neg/Match_newdocnewJdoc_7e9055fe8e74fafd022df80ce7001214c5329cba_1.txt","olddoc":"","oldJdoc":"7e9055fe8e74fafd022df80ce7001214c5329cba/Codes_neg/Match_olddocJdoc_7e9055fe8e74fafd022df80ce7001214c5329cba_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/7e9055fe8e74fafd022df80ce7001214c5329cba/Network","pathinproj":"guava/src/com/google/common/graph/Network.java","addlines":[311],"dellines":[320,321,322,325,326],"addcode":["   * {@inheritDoc}\n"],"delcode":["   * Returns the number of {@linkplain #inEdges(Object) incoming edges} in this graph\n","   * of {@code node}.  If this node has more than {@code Integer.MAX_VALUE} incoming edges\n","   * in this graph, returns {@code Integer.MAX_VALUE}.\n","   *\n","   * @throws IllegalArgumentException if {@code node} is not an element of this graph\n"],"methodSig":" int inDegree(Object node)"},"id":1,"flag":1,"commit":"7e9055fe8e74fafd022df80ce7001214c5329cba"}]