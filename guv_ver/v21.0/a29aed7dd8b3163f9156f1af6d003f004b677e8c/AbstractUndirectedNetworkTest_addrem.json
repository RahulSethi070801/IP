{
    "addition": {
        "94": "  @Test\n",
        "95": "  public void inDegree_oneEdge() {\n",
        "96": "    addEdge(E12, N1, N2);\n",
        "97": "    assertThat(network.inDegree(N2)).isEqualTo(1);\n",
        "98": "    assertThat(network.inDegree(N1)).isEqualTo(1);\n",
        "99": "  }\n",
        "100": "\n",
        "101": "  @Test\n",
        "102": "  public void outDegree_oneEdge() {\n",
        "103": "    addEdge(E12, N1, N2);\n",
        "104": "    assertThat(network.outDegree(N1)).isEqualTo(1);\n",
        "105": "    assertThat(network.outDegree(N2)).isEqualTo(1);\n",
        "106": "  }\n",
        "107": "\n",
        "116": "    assertThat(addEdge(E12, N1, N2)).isTrue();\n",
        "126": "    assertThat(addEdge(E12, N1, N2)).isFalse();\n",
        "128": "    assertThat(addEdge(E12, N2, N1)).isFalse();\n"
    },
    "removed": {
        "20": "import static org.junit.Assert.assertFalse;\n",
        "21": "import static org.junit.Assert.assertTrue;\n",
        "104": "    assertTrue(addEdge(E12, N1, N2));\n",
        "114": "    assertFalse(addEdge(E12, N1, N2));\n",
        "116": "    assertFalse(addEdge(E12, N2, N1));\n"
    }
}