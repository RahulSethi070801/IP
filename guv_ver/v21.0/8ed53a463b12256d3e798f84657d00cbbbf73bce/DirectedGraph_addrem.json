{
    "addition": {
        "20": "import com.google.errorprone.annotations.CanIgnoreReturnValue;\n",
        "21": "\n",
        "22": "import java.util.Set;\n",
        "47": "\n",
        "48": "  /**\n",
        "49": "   * {@inheritDoc}\n",
        "50": "   *\n",
        "51": "   * <p>If {@code edge} is not a self-loop, the iteration order will be\n",
        "52": "   * {@code [source(edge), target(edge)]}.\n",
        "53": "   *\n",
        "54": "   */\n",
        "55": "  @Override\n",
        "56": "  Set<N> incidentNodes(Object edge);\n",
        "57": "\n",
        "58": "  /**\n",
        "59": "   * {@inheritDoc}\n",
        "60": "   *\n",
        "61": "   * <p>The {@linkplain #source(Object) source} and {@linkplain #target(Object) target}\n",
        "62": "   * of the edges returned must be {@code source} and {@code target}, respectively.\n",
        "63": "   *\n",
        "64": "   */\n",
        "65": "  @Override\n",
        "66": "  Set<E> edgesConnecting(Object source, Object target);\n",
        "67": "\n",
        "68": "  /**\n",
        "69": "   * {@inheritDoc}\n",
        "70": "   *\n",
        "71": "   * <p>{@code edge} is an outgoing edge of {@code source} and an incoming edge of {@code target}.\n",
        "72": "   */\n",
        "73": "  @Override\n",
        "74": "  @CanIgnoreReturnValue\n",
        "75": "  boolean addEdge(E edge, N source, N target);\n"
    },
    "removed": {}
}