[{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_1.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfuncoldJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[],"dellines":[46],"addcode":[],"delcode":["  public static <N> Endpoints<N> of(ValueGraph<?, ?> graph, N nodeA, N nodeB) {\n"],"methodSig":"public static Endpoints<N> of(ValueGraph<?, ?> graph, N nodeA, N nodeB)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_1.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_1.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_2.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/EndpointsIterator","pathinproj":"guava/src/com/google/common/graph/EndpointsIterator.java","addlines":[],"dellines":[40],"addcode":[],"delcode":["  static <N> EndpointsIterator<N> of(ValueGraph<N, ?> graph) {\n"],"methodSig":" static EndpointsIterator<N> of(ValueGraph<N, ?> graph)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_2.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_2.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_3.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/EndpointsIterator","pathinproj":"guava/src/com/google/common/graph/EndpointsIterator.java","addlines":[40],"dellines":[],"addcode":["  static <N> EndpointsIterator<N> of(Graph<N, ?> graph) {\n"],"delcode":[],"methodSig":" static EndpointsIterator<N> of(Graph<N, ?> graph)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_3.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_3.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_4.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_4.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[46],"dellines":[],"addcode":["  public static <N> Endpoints<N> of(Graph<?, ?> graph, N nodeA, N nodeB) {\n"],"delcode":[],"methodSig":"public static Endpoints<N> of(Graph<?, ?> graph, N nodeA, N nodeB)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_4.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_4.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_5.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfuncoldJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_5.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[],"dellines":[46],"addcode":[],"delcode":["  public static <N> Endpoints<N> of(ValueGraph<?, ?> graph, N nodeA, N nodeB) {\n"],"methodSig":"public static Endpoints<N> of(ValueGraph<?, ?> graph, N nodeA, N nodeB)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_5.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_5.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/AbstractGraph","pathinproj":"guava/src/com/google/common/graph/AbstractGraph.java","addlines":[62],"dellines":[],"addcode":["   * A reasonable default implementation of {@link Graph#edges()} defined in terms of\n"],"delcode":[],"methodSig":"public Set<Endpoints<N>> edges()"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_6.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/EndpointsIterator","pathinproj":"guava/src/com/google/common/graph/EndpointsIterator.java","addlines":[],"dellines":[40],"addcode":[],"delcode":["  static <N> EndpointsIterator<N> of(ValueGraph<N, ?> graph) {\n"],"methodSig":" static EndpointsIterator<N> of(ValueGraph<N, ?> graph)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_6.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_6.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/AbstractGraph","pathinproj":"guava/src/com/google/common/graph/AbstractGraph.java","addlines":[62],"dellines":[],"addcode":["   * A reasonable default implementation of {@link Graph#edges()} defined in terms of\n"],"delcode":[],"methodSig":"public Set<Endpoints<N>> edges()"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_7.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/EndpointsIterator","pathinproj":"guava/src/com/google/common/graph/EndpointsIterator.java","addlines":[40],"dellines":[],"addcode":["  static <N> EndpointsIterator<N> of(Graph<N, ?> graph) {\n"],"delcode":[],"methodSig":" static EndpointsIterator<N> of(Graph<N, ?> graph)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_7.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_7.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/AbstractGraph","pathinproj":"guava/src/com/google/common/graph/AbstractGraph.java","addlines":[62],"dellines":[],"addcode":["   * A reasonable default implementation of {@link Graph#edges()} defined in terms of\n"],"delcode":[],"methodSig":"public Set<Endpoints<N>> edges()"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_8.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_8.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[46],"dellines":[],"addcode":["  public static <N> Endpoints<N> of(Graph<?, ?> graph, N nodeA, N nodeB) {\n"],"delcode":[],"methodSig":"public static Endpoints<N> of(Graph<?, ?> graph, N nodeA, N nodeB)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_8.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_8.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/AbstractGraph","pathinproj":"guava/src/com/google/common/graph/AbstractGraph.java","addlines":[62],"dellines":[],"addcode":["   * A reasonable default implementation of {@link Graph#edges()} defined in terms of\n"],"delcode":[],"methodSig":"public Set<Endpoints<N>> edges()"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_9.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfuncoldJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_9.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[],"dellines":[46],"addcode":[],"delcode":["  public static <N> Endpoints<N> of(ValueGraph<?, ?> graph, N nodeA, N nodeB) {\n"],"methodSig":"public static Endpoints<N> of(ValueGraph<?, ?> graph, N nodeA, N nodeB)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_9.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_9.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[102,103],"dellines":[],"addcode":["   * edges\". For that functionality, see {@link Graphs#reachableNodes(Graph, Object)} and {@link\n","   * Graphs#transitiveClosure(Graph)}.\n"],"delcode":[],"methodSig":" Set<N> successors(Object node)"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_10.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/EndpointsIterator","pathinproj":"guava/src/com/google/common/graph/EndpointsIterator.java","addlines":[],"dellines":[40],"addcode":[],"delcode":["  static <N> EndpointsIterator<N> of(ValueGraph<N, ?> graph) {\n"],"methodSig":" static EndpointsIterator<N> of(ValueGraph<N, ?> graph)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_10.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_10.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[102,103],"dellines":[],"addcode":["   * edges\". For that functionality, see {@link Graphs#reachableNodes(Graph, Object)} and {@link\n","   * Graphs#transitiveClosure(Graph)}.\n"],"delcode":[],"methodSig":" Set<N> successors(Object node)"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_11.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/EndpointsIterator","pathinproj":"guava/src/com/google/common/graph/EndpointsIterator.java","addlines":[40],"dellines":[],"addcode":["  static <N> EndpointsIterator<N> of(Graph<N, ?> graph) {\n"],"delcode":[],"methodSig":" static EndpointsIterator<N> of(Graph<N, ?> graph)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_11.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_11.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[102,103],"dellines":[],"addcode":["   * edges\". For that functionality, see {@link Graphs#reachableNodes(Graph, Object)} and {@link\n","   * Graphs#transitiveClosure(Graph)}.\n"],"delcode":[],"methodSig":" Set<N> successors(Object node)"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_12.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_12.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[46],"dellines":[],"addcode":["  public static <N> Endpoints<N> of(Graph<?, ?> graph, N nodeA, N nodeB) {\n"],"delcode":[],"methodSig":"public static Endpoints<N> of(Graph<?, ?> graph, N nodeA, N nodeB)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_12.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_12.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[102,103],"dellines":[],"addcode":["   * edges\". For that functionality, see {@link Graphs#reachableNodes(Graph, Object)} and {@link\n","   * Graphs#transitiveClosure(Graph)}.\n"],"delcode":[],"methodSig":" Set<N> successors(Object node)"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_13.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfuncoldJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_13.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[],"dellines":[46],"addcode":[],"delcode":["  public static <N> Endpoints<N> of(ValueGraph<?, ?> graph, N nodeA, N nodeB) {\n"],"methodSig":"public static Endpoints<N> of(ValueGraph<?, ?> graph, N nodeA, N nodeB)"},"doc":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_olddocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_13.txt","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_13.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_13.txt","olddoc":"","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_olddocJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_13.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[247],"dellines":[247],"addcode":["   * all of the nodes in {@code nodes}, and all of the {@link Graph#edges() edges} from {@code\n"],"delcode":["   * all of the nodes in {@code nodes}, and all of the {@link ValueGraph#edges() edges} from {@code\n"],"methodSig":"public static MutableBasicGraph<N> inducedSubgraph(BasicGraph<N> graph, Iterable<? extends N> nodes)"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_14.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/EndpointsIterator","pathinproj":"guava/src/com/google/common/graph/EndpointsIterator.java","addlines":[],"dellines":[40],"addcode":[],"delcode":["  static <N> EndpointsIterator<N> of(ValueGraph<N, ?> graph) {\n"],"methodSig":" static EndpointsIterator<N> of(ValueGraph<N, ?> graph)"},"doc":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_olddocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_14.txt","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_14.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_14.txt","olddoc":"","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_olddocJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_14.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[247],"dellines":[247],"addcode":["   * all of the nodes in {@code nodes}, and all of the {@link Graph#edges() edges} from {@code\n"],"delcode":["   * all of the nodes in {@code nodes}, and all of the {@link ValueGraph#edges() edges} from {@code\n"],"methodSig":"public static MutableBasicGraph<N> inducedSubgraph(BasicGraph<N> graph, Iterable<? extends N> nodes)"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_15.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/EndpointsIterator","pathinproj":"guava/src/com/google/common/graph/EndpointsIterator.java","addlines":[40],"dellines":[],"addcode":["  static <N> EndpointsIterator<N> of(Graph<N, ?> graph) {\n"],"delcode":[],"methodSig":" static EndpointsIterator<N> of(Graph<N, ?> graph)"},"doc":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_olddocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_15.txt","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_15.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_15.txt","olddoc":"","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_olddocJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_15.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[247],"dellines":[247],"addcode":["   * all of the nodes in {@code nodes}, and all of the {@link Graph#edges() edges} from {@code\n"],"delcode":["   * all of the nodes in {@code nodes}, and all of the {@link ValueGraph#edges() edges} from {@code\n"],"methodSig":"public static MutableBasicGraph<N> inducedSubgraph(BasicGraph<N> graph, Iterable<? extends N> nodes)"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_16.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_16.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[46],"dellines":[],"addcode":["  public static <N> Endpoints<N> of(Graph<?, ?> graph, N nodeA, N nodeB) {\n"],"delcode":[],"methodSig":"public static Endpoints<N> of(Graph<?, ?> graph, N nodeA, N nodeB)"},"doc":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_olddocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_16.txt","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_16.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_16.txt","olddoc":"","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_olddocJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_16.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[247],"dellines":[247],"addcode":["   * all of the nodes in {@code nodes}, and all of the {@link Graph#edges() edges} from {@code\n"],"delcode":["   * all of the nodes in {@code nodes}, and all of the {@link ValueGraph#edges() edges} from {@code\n"],"methodSig":"public static MutableBasicGraph<N> inducedSubgraph(BasicGraph<N> graph, Iterable<? extends N> nodes)"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_17.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfuncoldJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_17.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[],"dellines":[46],"addcode":[],"delcode":["  public static <N> Endpoints<N> of(ValueGraph<?, ?> graph, N nodeA, N nodeB) {\n"],"methodSig":"public static Endpoints<N> of(ValueGraph<?, ?> graph, N nodeA, N nodeB)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_17.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_17.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[131,147],"dellines":[],"addcode":["   * Returns {@code true} iff {@code object} is a {@link Graph} that has the same structural\n","   * <p>A reference implementation of this is provided by {@link AbstractGraph#equals(Object)}.\n"],"delcode":[],"methodSig":" boolean equals(@Nullable Object object)"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_18.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/EndpointsIterator","pathinproj":"guava/src/com/google/common/graph/EndpointsIterator.java","addlines":[],"dellines":[40],"addcode":[],"delcode":["  static <N> EndpointsIterator<N> of(ValueGraph<N, ?> graph) {\n"],"methodSig":" static EndpointsIterator<N> of(ValueGraph<N, ?> graph)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_18.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_18.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[131,147],"dellines":[],"addcode":["   * Returns {@code true} iff {@code object} is a {@link Graph} that has the same structural\n","   * <p>A reference implementation of this is provided by {@link AbstractGraph#equals(Object)}.\n"],"delcode":[],"methodSig":" boolean equals(@Nullable Object object)"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_19.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/EndpointsIterator","pathinproj":"guava/src/com/google/common/graph/EndpointsIterator.java","addlines":[40],"dellines":[],"addcode":["  static <N> EndpointsIterator<N> of(Graph<N, ?> graph) {\n"],"delcode":[],"methodSig":" static EndpointsIterator<N> of(Graph<N, ?> graph)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_19.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_19.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[131,147],"dellines":[],"addcode":["   * Returns {@code true} iff {@code object} is a {@link Graph} that has the same structural\n","   * <p>A reference implementation of this is provided by {@link AbstractGraph#equals(Object)}.\n"],"delcode":[],"methodSig":" boolean equals(@Nullable Object object)"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_20.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_20.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[46],"dellines":[],"addcode":["  public static <N> Endpoints<N> of(Graph<?, ?> graph, N nodeA, N nodeB) {\n"],"delcode":[],"methodSig":"public static Endpoints<N> of(Graph<?, ?> graph, N nodeA, N nodeB)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_20.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_20.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[131,147],"dellines":[],"addcode":["   * Returns {@code true} iff {@code object} is a {@link Graph} that has the same structural\n","   * <p>A reference implementation of this is provided by {@link AbstractGraph#equals(Object)}.\n"],"delcode":[],"methodSig":" boolean equals(@Nullable Object object)"},"id":5,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_21.txt","newdoc":" Throws an exception if node is not an element of graph.\n Perform a breadth-first traversal rooted at the input node.\n","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_21.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[195],"dellines":[],"addcode":["  public static <N> Set<N> reachableNodes(Graph<N, ?> graph, Object node) {\n"],"delcode":[],"methodSig":"public static Set<N> reachableNodes(Graph<N, ?> graph, Object node)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_21.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_21.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_22.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":" Defer to AbstractGraph implementation.\n Optimized implementation assumes no parallel edges (1:1 edge to Endpoints mapping).\n","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/AbstractNetwork","pathinproj":"guava/src/com/google/common/graph/AbstractNetwork.java","addlines":[],"dellines":[45,46],"addcode":[],"delcode":["  public ValueGraph<N, Set<E>> asGraph() {\n","    return new AbstractValueGraph<N, Set<E>>() {\n"],"methodSig":"public ValueGraph<N, Set<E>> asGraph()"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_22.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_22.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_23.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_23.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/GraphBuilder","pathinproj":"guava/src/com/google/common/graph/GraphBuilder.java","addlines":[85],"dellines":[],"addcode":["  public GraphBuilder<N, V> allowsSelfLoops(boolean allowsSelfLoops) {\n"],"delcode":[],"methodSig":"public GraphBuilder<N, V> allowsSelfLoops(boolean allowsSelfLoops)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_23.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_23.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_24.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_24.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/GraphBuilder","pathinproj":"guava/src/com/google/common/graph/GraphBuilder.java","addlines":[73,75],"dellines":[],"addcode":["  public static <N> GraphBuilder<N, Object> from(Graph<N, ?> graph) {\n","    return new GraphBuilder<N, Object>(graph.isDirected())\n"],"delcode":[],"methodSig":"public static GraphBuilder<N, Object> from(Graph<N, ?> graph)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_24.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_24.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_25.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfuncoldJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_25.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[],"dellines":[276,278],"addcode":[],"delcode":["  public static <N, V> MutableValueGraph<N, V> inducedSubgraph(ValueGraph<N, V> graph,\n","    MutableValueGraph<N, V> subgraph = ValueGraphBuilder.from(graph).build();\n"],"methodSig":"public static MutableValueGraph<N, V> inducedSubgraph(ValueGraph<N, V> graph, Iterable<? extends N> nodes)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_25.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_25.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_26.txt","newdoc":" Defer to AbstractGraph implementation.\n Optimized implementation assumes no parallel edges (1:1 edge to Endpoints mapping).\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/AbstractNetwork","pathinproj":"guava/src/com/google/common/graph/AbstractNetwork.java","addlines":[45,46],"dellines":[],"addcode":["  public Graph<N, Set<E>> asGraph() {\n","    return new AbstractGraph<N, Set<E>>() {\n"],"delcode":[],"methodSig":"public Graph<N, Set<E>> asGraph()"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_26.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_26.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_27.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":" Every node is, at a minimum, reachable from itself. Since the resulting transitive closure\n will have no isolated nodes, we can skip adding nodes explicitly and let putEdge() do it.\n Note: works for both directed and undirected graphs, but we only use in the directed case.\n An optimization for the undirected case: for every node B reachable from node A,\n node A and node B have the same reachability set.\n","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfuncoldJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_27.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[],"dellines":[148],"addcode":[],"delcode":["  public static <N> BasicGraph<N> transitiveClosure(ValueGraph<N, ?> graph) {\n"],"methodSig":"public static BasicGraph<N> transitiveClosure(ValueGraph<N, ?> graph)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_27.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_27.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_28.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":" An edge-free graph is acyclic by definition.\n Optimization for the undirected case: at least one cycle must exist.\n","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfuncoldJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_28.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[],"dellines":[58],"addcode":[],"delcode":["  public static boolean hasCycle(ValueGraph<?, ?> graph) {\n"],"methodSig":"public static boolean hasCycle(ValueGraph<?, ?> graph)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_28.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_28.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_29.txt","newdoc":" This falls into the undirected A->B->A case. The Graph interface does not support parallel\n edges, so this traversal would require reusing the undirected AB edge.\n","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_29.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[130],"dellines":[],"addcode":["      Graph<?, ?> graph, Object nextNode, @Nullable Object previousNode) {\n"],"delcode":[],"methodSig":"private static boolean canTraverseWithoutReusingEdge(Graph<?, ?> graph, Object nextNode, @Nullable Object previousNode)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_29.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_29.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_30.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_30.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/GraphBuilder","pathinproj":"guava/src/com/google/common/graph/GraphBuilder.java","addlines":[61,62],"dellines":[],"addcode":["  public static GraphBuilder<Object, Object> undirected() {\n","    return new GraphBuilder<Object, Object>(false);\n"],"delcode":[],"methodSig":"public static GraphBuilder<Object, Object> undirected()"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_30.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_30.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_31.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":" Throws an exception if node is not an element of graph.\n Perform a breadth-first traversal rooted at the input node.\n","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfuncoldJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_31.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[],"dellines":[195],"addcode":[],"delcode":["  public static <N> Set<N> reachableNodes(ValueGraph<N, ?> graph, Object node) {\n"],"methodSig":"public static Set<N> reachableNodes(ValueGraph<N, ?> graph, Object node)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_31.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_31.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_32.txt","newdoc":" Every node is, at a minimum, reachable from itself. Since the resulting transitive closure\n will have no isolated nodes, we can skip adding nodes explicitly and let putEdge() do it.\n Note: works for both directed and undirected graphs, but we only use in the directed case.\n An optimization for the undirected case: for every node B reachable from node A,\n node A and node B have the same reachability set.\n","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_32.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[148],"dellines":[],"addcode":["  public static <N> BasicGraph<N> transitiveClosure(Graph<N, ?> graph) {\n"],"delcode":[],"methodSig":"public static BasicGraph<N> transitiveClosure(Graph<N, ?> graph)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_32.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_32.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_33.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfuncoldJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_33.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[],"dellines":[100],"addcode":[],"delcode":["      ValueGraph<?, ?> graph,\n"],"methodSig":"private static boolean subgraphHasCycle(ValueGraph<?, ?> graph, Map<Object, NodeVisitState> visitedNodes, Object node, @Nullable Object previousNode)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_33.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_33.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_34.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/GraphBuilder","pathinproj":"guava/src/com/google/common/graph/GraphBuilder.java","addlines":[120,121],"dellines":[],"addcode":["  private <N1 extends N, V1 extends V> GraphBuilder<N1, V1> cast() {\n","    return (GraphBuilder<N1, V1>) this;\n"],"delcode":[],"methodSig":"private GraphBuilder<N1, V1> cast()"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_34.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_34.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_35.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_35.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[276,278],"dellines":[],"addcode":["  public static <N, V> MutableGraph<N, V> inducedSubgraph(Graph<N, V> graph,\n","    MutableGraph<N, V> subgraph = GraphBuilder.from(graph).build();\n"],"delcode":[],"methodSig":"public static MutableGraph<N, V> inducedSubgraph(Graph<N, V> graph, Iterable<? extends N> nodes)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_35.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_35.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_36.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_36.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/GraphBuilder","pathinproj":"guava/src/com/google/common/graph/GraphBuilder.java","addlines":[105,107],"dellines":[],"addcode":["  public <N1 extends N> GraphBuilder<N1, V> nodeOrder(ElementOrder<N1> nodeOrder) {\n","    GraphBuilder<N1, V> newBuilder = cast();\n"],"delcode":[],"methodSig":"public GraphBuilder<N1, V> nodeOrder(ElementOrder<N1> nodeOrder)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_36.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_36.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_37.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_37.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/GraphBuilder","pathinproj":"guava/src/com/google/common/graph/GraphBuilder.java","addlines":[54,55],"dellines":[],"addcode":["  public static GraphBuilder<Object, Object> directed() {\n","    return new GraphBuilder<Object, Object>(true);\n"],"delcode":[],"methodSig":"public static GraphBuilder<Object, Object> directed()"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_37.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_37.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_38.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_38.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/GraphBuilder","pathinproj":"guava/src/com/google/common/graph/GraphBuilder.java","addlines":[95],"dellines":[],"addcode":["  public GraphBuilder<N, V> expectedNodeCount(int expectedNodeCount) {\n"],"delcode":[],"methodSig":"public GraphBuilder<N, V> expectedNodeCount(int expectedNodeCount)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_38.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_38.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_39.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_39.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[100],"dellines":[],"addcode":["      Graph<?, ?> graph,\n"],"delcode":[],"methodSig":"private static boolean subgraphHasCycle(Graph<?, ?> graph, Map<Object, NodeVisitState> visitedNodes, Object node, @Nullable Object previousNode)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_39.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_39.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_40.txt","newdoc":" An edge-free graph is acyclic by definition.\n Optimization for the undirected case: at least one cycle must exist.\n","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_40.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[58],"dellines":[],"addcode":["  public static boolean hasCycle(Graph<?, ?> graph) {\n"],"delcode":[],"methodSig":"public static boolean hasCycle(Graph<?, ?> graph)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_40.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_40.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_41.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfuncoldJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_41.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Network","pathinproj":"guava/src/com/google/common/graph/Network.java","addlines":[],"dellines":[234],"addcode":[],"delcode":["  ValueGraph<N, Set<E>> asGraph();\n"],"methodSig":" ValueGraph<N, Set<E>> asGraph()"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_41.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_41.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_42.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":" This falls into the undirected A->B->A case. The Graph interface does not support parallel\n edges, so this traversal would require reusing the undirected AB edge.\n","oldJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_oldfuncoldJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_42.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graphs","pathinproj":"guava/src/com/google/common/graph/Graphs.java","addlines":[],"dellines":[130],"addcode":[],"delcode":["      ValueGraph<?, ?> graph, Object nextNode, @Nullable Object previousNode) {\n"],"methodSig":"private static boolean canTraverseWithoutReusingEdge(ValueGraph<?, ?> graph, Object nextNode, @Nullable Object previousNode)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_42.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_42.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_43.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_43.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/GraphBuilder","pathinproj":"guava/src/com/google/common/graph/GraphBuilder.java","addlines":[115,116],"dellines":[],"addcode":["  public <N1 extends N, V1 extends V> MutableGraph<N1, V1> build() {\n","    return new ConfigurableMutableGraph<N1, V1>(this);\n"],"delcode":[],"methodSig":"public MutableGraph<N1, V1> build()"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_43.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_43.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_44.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/ImmutableGraph","pathinproj":"guava/src/com/google/common/graph/ImmutableGraph.java","addlines":[74],"dellines":[],"addcode":["  private static <N, V> GraphConnections<N, V> connectionsOf(final Graph<N, V> graph,\n"],"delcode":[],"methodSig":"private static GraphConnections<N, V> connectionsOf(final Graph<N, V> graph, final N node)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_44.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_44.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_45.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_45.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Network","pathinproj":"guava/src/com/google/common/graph/Network.java","addlines":[233],"dellines":[],"addcode":["  Graph<N, Set<E>> asGraph();\n"],"delcode":[],"methodSig":" Graph<N, Set<E>> asGraph()"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_45.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_45.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_46.txt","newdoc":" ImmutableMap.Builder maintains the order of the elements as inserted, so the map will have\n whatever ordering the graph's nodes do, so ImmutableSortedMap is unnecessary even if the\n input nodes are sorted.\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/ImmutableGraph","pathinproj":"guava/src/com/google/common/graph/ImmutableGraph.java","addlines":[63],"dellines":[],"addcode":["      Graph<N, V> graph) {\n"],"delcode":[],"methodSig":"private static ImmutableMap<N, GraphConnections<N, V>> getNodeConnections(Graph<N, V> graph)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_46.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_46.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"},{"func":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_47.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newfuncnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_47.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/AbstractGraph","pathinproj":"guava/src/com/google/common/graph/AbstractGraph.java","addlines":[155],"dellines":[],"addcode":["  private static int degree(Graph<?, ?> graph, Object node) {\n"],"delcode":[],"methodSig":"private static int degree(Graph<?, ?> graph, Object node)"},"doc":{"oldfunccode":"","newfunccode":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocfunccode_41becc60f5e1d8b121846c890478d39e6ec42979_47.txt","newdoc":"","newJdoc":"41becc60f5e1d8b121846c890478d39e6ec42979/Codes/Match_newdocnewJdoc_41becc60f5e1d8b121846c890478d39e6ec42979_47.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/41becc60f5e1d8b121846c890478d39e6ec42979/Graph","pathinproj":"guava/src/com/google/common/graph/Graph.java","addlines":[157],"dellines":[],"addcode":["   * <p>A reference implementation of this is provided by {@link AbstractGraph#hashCode()}.\n"],"delcode":[],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"41becc60f5e1d8b121846c890478d39e6ec42979"}]