{"id": "d0a31db68a8ef6ff2d2e53b694dc77308ce0d77e", "code": [{"0": "guava/src/com/google/common/graph/Graph.java", "added": {"1": [" * <p>If you don't need to associate value objects with edges (e.g. you're modeling a binary\n", " * relation where an edge either exists or doesn't), see the {@link BasicGraph} interface.\n", " * TODO(b/30133524): Rewrite the top-level javadoc from scratch.\n"], "2": ["   * Returns {@code true} iff {@code object} is a {@link Graph} that has the same elements and the\n", "   * same structural relationships as those in this graph.\n"]}, "removed": {"1": [" * TODO(b/30133524): Rewrite the top-level javadoc from scratch.\n", " * TODO(jasexton): Rename interface (and various other classes) to \"Graph\".\n"], "2": ["   * Returns {@code true} iff {@code object} is a {@link Graph} that has the same structural\n", "   * relationships as those in this graph.\n"]}, "added_lines": {"1": [32, 33, 35], "2": [132, 133]}, "removed_lines": {"1": [32, 34], "2": [131, 132]}}, {"1": "guava/src/com/google/common/graph/ImmutableBasicGraph.java", "added": {"1": [" * A {@link BasicGraph} whose elements and structural relationships will never change. Instances of\n", " * this class may be obtained with {@link #copyOf(BasicGraph)}.\n"], "2": ["public class ImmutableBasicGraph<N> extends ImmutableGraph<N, Presence> implements BasicGraph<N> {\n", "  /**\n", "   * To ensure the immutability contract is maintained, there must be no public constructors.\n", "   */\n"]}, "removed": {"1": [" * A {@link BasicGraph} whose relationships are constant. Instances of this class may be obtained\n", " * with {@link #copyOf(BasicGraph)}.\n"], "2": ["public class ImmutableBasicGraph<N>\n", "    extends ImmutableGraph<N, Presence> implements BasicGraph<N> {\n"], "3": ["  @SuppressWarnings(\"unchecked\")\n"]}, "added_lines": {"1": [25, 26], "2": [35, 37, 38, 39]}, "removed_lines": {"1": [25, 26], "2": [35, 36], "3": [45]}}, {"2": "guava/src/com/google/common/graph/ImmutableGraph.java", "added": {"1": [" * A {@link Graph} whose elements and structural relationships will never change. Instances of\n", " * this class may be obtained with {@link #copyOf(Graph)}.\n"], "2": ["  /**\n", "   * To ensure the immutability contract is maintained, there must be no public constructors.\n", "   */\n"]}, "removed": {"1": [" * A {@link Graph} whose relationships and edge values are constant. Instances of this class may be\n", " * obtained with {@link #copyOf(Graph)}.\n"], "3": ["  @SuppressWarnings(\"unchecked\")\n"]}, "added_lines": {"1": [27, 28], "2": [38, 39, 40]}, "removed_lines": {"1": [27, 28], "3": [45]}}, {"3": "guava/src/com/google/common/graph/ImmutableNetwork.java", "added": {"1": [" * A {@link Network} whose elements and structural relationships will never change. Instances of\n", " * this class may be obtained with {@link #copyOf(Network)}.\n"], "2": ["  /**\n", "   * To ensure the immutability contract is maintained, there must be no public constructors.\n", "   */\n"]}, "removed": {"1": [" * A {@link Network} whose relationships are constant. Instances of this class may be obtained\n", " * with {@link #copyOf(Network)}.\n"]}, "added_lines": {"1": [28, 29], "2": [41, 42, 43]}, "removed_lines": {"1": [28, 29]}}, {"4": "guava/src/com/google/common/graph/Network.java", "added": {"1": ["   * Returns {@code true} iff {@code object} is a {@link Network} that has the same elements and the\n", "   * same structural relationships as those in this network.\n"]}, "removed": {"1": ["   * Returns {@code true} iff {@code object} is a {@link Network} that has the same structural\n", "   * relationships as those in this network.\n"]}, "added_lines": {"1": [350, 351]}, "removed_lines": {"1": [350, 351]}}]}
