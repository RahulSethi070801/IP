{"id": "62ab4d2820243c1fac6c232a1cf7b7dc455ca107", "code": [{"0": "guava/src/com/google/common/graph/Endpoints.java", "added": {"1": ["   * Returns the node {@link #adjacentNode(Object) adjacent} to {@link #nodeA()} along the origin\n", "   * edge. If these are the {@link Endpoints} of a directed edge, it is equal to {@link #target()}.\n", "   * Returns the node that is adjacent to {@code node} along the origin edge.\n"], "2": ["  abstract boolean isDirected();\n", "\n"], "3": ["  /**\n", "   * The hashcode of the {@link Endpoints} of a directed edge is equal to\n", "   * {@code Objects.hashCode(source(), target())}. The hashcode of the {@link Endpoints}\n", "   * of an undirected edge is equal to {@code nodeA().hashCode() ^ nodeB().hashCode()}.\n", "   */\n", "   * The {@link Endpoints} of a directed edge.\n", "  private static final class Directed<N> extends Endpoints<N> {\n"], "4": ["    @Override\n", "    boolean isDirected() {\n", "      return true;\n", "    }\n", "\n", "      if (!(obj instanceof Endpoints)) {\n", "        return false;\n", "      }\n", "\n", "      Endpoints<?> other = (Endpoints<?>) obj;\n", "      if (isDirected() != other.isDirected()) {\n"], "5": ["   * The {@link Endpoints} of an undirected edge.\n", "  private static final class Undirected<N> extends Endpoints<N> {\n"], "6": ["    @Override\n", "    boolean isDirected() {\n", "      return false;\n", "    }\n", "\n", "      if (!(obj instanceof Endpoints)) {\n", "        return false;\n", "      }\n", "\n", "      Endpoints<?> other = (Endpoints<?>) obj;\n", "      if (isDirected() != other.isDirected()) {\n"]}, "removed": {"1": ["   * Returns the node that is adjacent to {@link #nodeA()} via the origin edge.\n", "   * If these are the {@link Endpoints} of a directed edge, it is equal to the {@link #target()}.\n", "   * Returns the node that is adjacent to {@code node} via the origin edge.\n"], "3": ["   * The {@link Endpoints} of a directed edge. It is guaranteed that all {@link Endpoints} of\n", "   * directed edges will be an instance of this class.\n", "  static final class Directed<N> extends Endpoints<N> {\n"], "4": ["      if (!(obj instanceof Directed)) {\n", "      Directed<?> other = (Directed<?>) obj;\n"], "5": ["   * The {@link Endpoints} of an undirected edge. It is guaranteed that all {@link Endpoints} of\n", "   * undirected edges will be an instance of this class.\n", "  static final class Undirected<N> extends Endpoints<N> {\n"], "6": ["      if (!(obj instanceof Undirected)) {\n", "      Undirected<?> other = (Undirected<?>) obj;\n"]}, "added_lines": {"1": [104, 105, 112], "2": [163, 164], "3": [174, 175, 176, 177, 178, 183, 185], "4": [200, 201, 202, 203, 204, 210, 211, 212, 213, 214, 215], "5": [234, 236], "6": [251, 252, 253, 254, 255, 261, 262, 263, 264, 265, 266]}, "removed_lines": {"1": [104, 105, 112], "3": [176, 177, 179], "4": [199, 203], "5": [219, 220, 222], "6": [242, 246]}}, {"1": "guava/src/com/google/common/graph/Graphs.java", "added": {"1": ["    return graph.isDirected() == endpoints.isDirected()\n"]}, "removed": {"1": ["    return graph.isDirected() == (endpoints instanceof Endpoints.Directed)\n"]}, "added_lines": {"1": [85]}, "removed_lines": {"1": [85]}}]}
