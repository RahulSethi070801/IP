{
    "addition": {
        "104": "   * Returns the node {@link #adjacentNode(Object) adjacent} to {@link #nodeA()} along the origin\n",
        "105": "   * edge. If these are the {@link Endpoints} of a directed edge, it is equal to {@link #target()}.\n",
        "112": "   * Returns the node that is adjacent to {@code node} along the origin edge.\n",
        "163": "  abstract boolean isDirected();\n",
        "164": "\n",
        "174": "  /**\n",
        "175": "   * The hashcode of the {@link Endpoints} of a directed edge is equal to\n",
        "176": "   * {@code Objects.hashCode(source(), target())}. The hashcode of the {@link Endpoints}\n",
        "177": "   * of an undirected edge is equal to {@code nodeA().hashCode() ^ nodeB().hashCode()}.\n",
        "178": "   */\n",
        "183": "   * The {@link Endpoints} of a directed edge.\n",
        "185": "  private static final class Directed<N> extends Endpoints<N> {\n",
        "200": "    @Override\n",
        "201": "    boolean isDirected() {\n",
        "202": "      return true;\n",
        "203": "    }\n",
        "204": "\n",
        "210": "      if (!(obj instanceof Endpoints)) {\n",
        "211": "        return false;\n",
        "212": "      }\n",
        "213": "\n",
        "214": "      Endpoints<?> other = (Endpoints<?>) obj;\n",
        "215": "      if (isDirected() != other.isDirected()) {\n",
        "234": "   * The {@link Endpoints} of an undirected edge.\n",
        "236": "  private static final class Undirected<N> extends Endpoints<N> {\n",
        "251": "    @Override\n",
        "252": "    boolean isDirected() {\n",
        "253": "      return false;\n",
        "254": "    }\n",
        "255": "\n",
        "261": "      if (!(obj instanceof Endpoints)) {\n",
        "262": "        return false;\n",
        "263": "      }\n",
        "264": "\n",
        "265": "      Endpoints<?> other = (Endpoints<?>) obj;\n",
        "266": "      if (isDirected() != other.isDirected()) {\n"
    },
    "removed": {
        "104": "   * Returns the node that is adjacent to {@link #nodeA()} via the origin edge.\n",
        "105": "   * If these are the {@link Endpoints} of a directed edge, it is equal to the {@link #target()}.\n",
        "112": "   * Returns the node that is adjacent to {@code node} via the origin edge.\n",
        "176": "   * The {@link Endpoints} of a directed edge. It is guaranteed that all {@link Endpoints} of\n",
        "177": "   * directed edges will be an instance of this class.\n",
        "179": "  static final class Directed<N> extends Endpoints<N> {\n",
        "199": "      if (!(obj instanceof Directed)) {\n",
        "203": "      Directed<?> other = (Directed<?>) obj;\n",
        "219": "   * The {@link Endpoints} of an undirected edge. It is guaranteed that all {@link Endpoints} of\n",
        "220": "   * undirected edges will be an instance of this class.\n",
        "222": "  static final class Undirected<N> extends Endpoints<N> {\n",
        "242": "      if (!(obj instanceof Undirected)) {\n",
        "246": "      Undirected<?> other = (Undirected<?>) obj;\n"
    }
}