[{"func":{"oldfunccode":"","newfunccode":"62ab4d2820243c1fac6c232a1cf7b7dc455ca107/Codes_neg/Match_newfunccode_62ab4d2820243c1fac6c232a1cf7b7dc455ca107_1.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/62ab4d2820243c1fac6c232a1cf7b7dc455ca107/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[163],"dellines":[],"addcode":["  abstract boolean isDirected();\n"],"delcode":[],"methodSig":" abstract boolean isDirected()"},"doc":{"oldfunccode":"62ab4d2820243c1fac6c232a1cf7b7dc455ca107/Codes_neg/Match_olddocfunccode_62ab4d2820243c1fac6c232a1cf7b7dc455ca107_1.txt","newfunccode":"62ab4d2820243c1fac6c232a1cf7b7dc455ca107/Codes_neg/Match_newdocfunccode_62ab4d2820243c1fac6c232a1cf7b7dc455ca107_1.txt","newdoc":"","newJdoc":"62ab4d2820243c1fac6c232a1cf7b7dc455ca107/Codes_neg/Match_newdocnewJdoc_62ab4d2820243c1fac6c232a1cf7b7dc455ca107_1.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/62ab4d2820243c1fac6c232a1cf7b7dc455ca107/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[176,177,178,174,175],"dellines":[],"addcode":["  /**\n","   * The hashcode of the {@link Endpoints} of a directed edge is equal to\n","   * {@code Objects.hashCode(source(), target())}. The hashcode of the {@link Endpoints}\n","   * of an undirected edge is equal to {@code nodeA().hashCode() ^ nodeB().hashCode()}.\n","   */\n"],"delcode":[],"methodSig":"public abstract int hashCode()"},"id":1,"flag":1,"commit":"62ab4d2820243c1fac6c232a1cf7b7dc455ca107"},{"func":{"oldfunccode":"62ab4d2820243c1fac6c232a1cf7b7dc455ca107/Codes_neg/Match_oldfunccode_62ab4d2820243c1fac6c232a1cf7b7dc455ca107_2.txt","newfunccode":"62ab4d2820243c1fac6c232a1cf7b7dc455ca107/Codes_neg/Match_newfunccode_62ab4d2820243c1fac6c232a1cf7b7dc455ca107_2.txt","newdoc":" Equivalent to the following simple implementation:\n boolean condition1 = nodeA().equals(other.nodeA()) && nodeB().equals(other.nodeB());\n boolean condition2 = nodeA().equals(other.nodeB()) && nodeB().equals(other.nodeA());\n return condition1 || condition2;\n check condition1\n Here's the tricky bit. We don't have to explicitly check for condition2 in this case.\n Why? The second half of condition2 requires that nodeB equals other.nodeA.\n We already know that nodeA equals other.nodeA. Combined with the earlier statement,\n and the transitive property of equality, this implies that nodeA equals nodeB.\n If nodeA equals nodeB, condition1 == condition2, so checking condition1 is sufficient.\n check condition2\n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/62ab4d2820243c1fac6c232a1cf7b7dc455ca107/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[210,211,212,213,261,214,262,215,263,264,265,266],"dellines":[242,246,199,203],"addcode":["      if (!(obj instanceof Endpoints)) {\n","        return false;\n","      }\n","\n","      Endpoints<?> other = (Endpoints<?>) obj;\n","      if (isDirected() != other.isDirected()) {\n","      if (!(obj instanceof Endpoints)) {\n","        return false;\n","      }\n","\n","      Endpoints<?> other = (Endpoints<?>) obj;\n","      if (isDirected() != other.isDirected()) {\n"],"delcode":["      if (!(obj instanceof Directed)) {\n","      Directed<?> other = (Directed<?>) obj;\n","      if (!(obj instanceof Undirected)) {\n","      Undirected<?> other = (Undirected<?>) obj;\n"],"methodSig":"public boolean equals(Object obj)"},"doc":{"oldfunccode":"62ab4d2820243c1fac6c232a1cf7b7dc455ca107/Codes_neg/Match_olddocfunccode_62ab4d2820243c1fac6c232a1cf7b7dc455ca107_2.txt","newfunccode":"62ab4d2820243c1fac6c232a1cf7b7dc455ca107/Codes_neg/Match_newdocfunccode_62ab4d2820243c1fac6c232a1cf7b7dc455ca107_2.txt","newdoc":"","newJdoc":"62ab4d2820243c1fac6c232a1cf7b7dc455ca107/Codes_neg/Match_newdocnewJdoc_62ab4d2820243c1fac6c232a1cf7b7dc455ca107_2.txt","olddoc":"","oldJdoc":"62ab4d2820243c1fac6c232a1cf7b7dc455ca107/Codes_neg/Match_olddocJdoc_62ab4d2820243c1fac6c232a1cf7b7dc455ca107_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/62ab4d2820243c1fac6c232a1cf7b7dc455ca107/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[104,105],"dellines":[104,105],"addcode":["   * Returns the node {@link #adjacentNode(Object) adjacent} to {@link #nodeA()} along the origin\n","   * edge. If these are the {@link Endpoints} of a directed edge, it is equal to {@link #target()}.\n"],"delcode":["   * Returns the node that is adjacent to {@link #nodeA()} via the origin edge.\n","   * If these are the {@link Endpoints} of a directed edge, it is equal to the {@link #target()}.\n"],"methodSig":" final N nodeB()"},"id":1,"flag":1,"commit":"62ab4d2820243c1fac6c232a1cf7b7dc455ca107"}]