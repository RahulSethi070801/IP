[{"func":{"oldfunccode":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Codes_neg/Match_oldfunccode_6439299ec90bf6af70e7651ca4cc8a5a468edbd2_1.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Codes_neg/Match_oldfuncoldJdoc_6439299ec90bf6af70e7651ca4cc8a5a468edbd2_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[],"dellines":[72],"addcode":[],"delcode":["  public abstract boolean isDirected();\n"],"methodSig":"public abstract boolean isDirected()"},"doc":{"oldfunccode":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Codes_neg/Match_olddocfunccode_6439299ec90bf6af70e7651ca4cc8a5a468edbd2_1.txt","newfunccode":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Codes_neg/Match_newdocfunccode_6439299ec90bf6af70e7651ca4cc8a5a468edbd2_1.txt","newdoc":"","newJdoc":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Codes_neg/Match_newdocnewJdoc_6439299ec90bf6af70e7651ca4cc8a5a468edbd2_1.txt","olddoc":"","oldJdoc":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Codes_neg/Match_olddocJdoc_6439299ec90bf6af70e7651ca4cc8a5a468edbd2_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[74,75,77],"dellines":[74,75,77],"addcode":["   * If these are the {@link Endpoints} of a directed edge, returns the node which is the source of\n","   * that edge.\n","   * @throws UnsupportedOperationException if these are the {@link Endpoints} of a undirected edge\n"],"delcode":["  /**\n","   * If this {@link Endpoints} is directed, returns the node which is the source of the origin edge.\n","   * @throws UnsupportedOperationException if this Endpoints is not directed\n"],"methodSig":"public abstract N source()"},"id":1,"flag":1,"commit":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2"},{"func":{"oldfunccode":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Codes_neg/Match_oldfunccode_6439299ec90bf6af70e7651ca4cc8a5a468edbd2_2.txt","newfunccode":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Codes_neg/Match_newfunccode_6439299ec90bf6af70e7651ca4cc8a5a468edbd2_2.txt","newdoc":"","newJdoc":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Codes_neg/Match_newfuncnewJdoc_6439299ec90bf6af70e7651ca4cc8a5a468edbd2_2.txt","olddoc":"","oldJdoc":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Codes_neg/Match_oldfuncoldJdoc_6439299ec90bf6af70e7651ca4cc8a5a468edbd2_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/6439299ec90bf6af70e7651ca4cc8a5a468edbd2/ConfigurableMutableNetwork","pathinproj":"guava/src/com/google/common/graph/ConfigurableMutableNetwork.java","addlines":[95],"dellines":[95],"addcode":["      Endpoints<N> newEndpoints = Endpoints.of(this, nodeA, nodeB);\n"],"delcode":["      Endpoints<N> newEndpoints = Endpoints.of(nodeA, nodeB, isDirected());\n"],"methodSig":"public boolean addEdge(E edge, N nodeA, N nodeB)"},"doc":{"oldfunccode":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Codes_neg/Match_olddocfunccode_6439299ec90bf6af70e7651ca4cc8a5a468edbd2_2.txt","newfunccode":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Codes_neg/Match_newdocfunccode_6439299ec90bf6af70e7651ca4cc8a5a468edbd2_2.txt","newdoc":"","newJdoc":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Codes_neg/Match_newdocnewJdoc_6439299ec90bf6af70e7651ca4cc8a5a468edbd2_2.txt","olddoc":"","oldJdoc":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Codes_neg/Match_olddocJdoc_6439299ec90bf6af70e7651ca4cc8a5a468edbd2_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/6439299ec90bf6af70e7651ca4cc8a5a468edbd2/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[99],"dellines":[98],"addcode":["   * If these are the {@link Endpoints} of a directed edge, it is equal to the {@link #target()}.\n"],"delcode":["   * If this {@link Endpoints} is directed, this is equal to the {@link #target()}.\n"],"methodSig":" final N nodeB()"},"id":1,"flag":1,"commit":"6439299ec90bf6af70e7651ca4cc8a5a468edbd2"}]