[{"func":{"oldfunccode":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_oldfunccode_267fac11a42ad56158ff9f6158a0a8a36223ed86_1.txt","newfunccode":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_newfunccode_267fac11a42ad56158ff9f6158a0a8a36223ed86_1.txt","newdoc":" TODO(kevinb): remove this\n","newJdoc":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_newfuncnewJdoc_267fac11a42ad56158ff9f6158a0a8a36223ed86_1.txt","olddoc":"","oldJdoc":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_oldfuncoldJdoc_267fac11a42ad56158ff9f6158a0a8a36223ed86_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/267fac11a42ad56158ff9f6158a0a8a36223ed86/Function","pathinproj":"guava/src/com/google/common/base/Function.java","addlines":[],"dellines":[64],"addcode":[],"delcode":["  @CanIgnoreReturnValue\n"],"methodSig":" T apply(@Nullable F input)"},"doc":{"oldfunccode":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_olddocfunccode_267fac11a42ad56158ff9f6158a0a8a36223ed86_1.txt","newfunccode":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_newdocfunccode_267fac11a42ad56158ff9f6158a0a8a36223ed86_1.txt","newdoc":"","newJdoc":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_newdocnewJdoc_267fac11a42ad56158ff9f6158a0a8a36223ed86_1.txt","olddoc":"","oldJdoc":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_olddocJdoc_267fac11a42ad56158ff9f6158a0a8a36223ed86_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/267fac11a42ad56158ff9f6158a0a8a36223ed86/Functions","pathinproj":"guava/src/com/google/common/base/Functions.java","addlines":[164,165,166],"dellines":[],"addcode":["   * <p><b>Java 8 users:</b> you can just write the lambda expression {@code k ->\n","   * map.getWithDefault(k, defaultValue)} instead.\n","   *\n"],"delcode":[],"methodSig":"public static Function<K, V> forMap(Map<K, ? extends V> map, @Nullable V defaultValue)"},"id":1,"flag":1,"commit":"267fac11a42ad56158ff9f6158a0a8a36223ed86"},{"func":{"oldfunccode":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_oldfunccode_267fac11a42ad56158ff9f6158a0a8a36223ed86_2.txt","newfunccode":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_newfunccode_267fac11a42ad56158ff9f6158a0a8a36223ed86_2.txt","newdoc":" TODO(kevinb): remove this\n TODO(kevinb): remove this\n","newJdoc":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_newfuncnewJdoc_267fac11a42ad56158ff9f6158a0a8a36223ed86_2.txt","olddoc":"","oldJdoc":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_oldfuncoldJdoc_267fac11a42ad56158ff9f6158a0a8a36223ed86_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/267fac11a42ad56158ff9f6158a0a8a36223ed86/Function","pathinproj":"guava/src/com/google/common/base/Function.java","addlines":[],"dellines":[64],"addcode":[],"delcode":["  @CanIgnoreReturnValue\n"],"methodSig":" T apply(@Nullable F input)"},"doc":{"oldfunccode":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_olddocfunccode_267fac11a42ad56158ff9f6158a0a8a36223ed86_2.txt","newfunccode":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_newdocfunccode_267fac11a42ad56158ff9f6158a0a8a36223ed86_2.txt","newdoc":"","newJdoc":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_newdocnewJdoc_267fac11a42ad56158ff9f6158a0a8a36223ed86_2.txt","olddoc":"","oldJdoc":"267fac11a42ad56158ff9f6158a0a8a36223ed86/Codes_neg/Match_olddocJdoc_267fac11a42ad56158ff9f6158a0a8a36223ed86_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/267fac11a42ad56158ff9f6158a0a8a36223ed86/Functions","pathinproj":"guava/src/com/google/common/base/Functions.java","addlines":[315,316,317],"dellines":[301],"addcode":["   * Returns a function that ignores its input and always returns {@code value}.\n","   *\n","   * <p><b>Java 8 users:</b> use the lambda expression {@code o -> value} instead.\n"],"delcode":["   * Creates a function that returns {@code value} for any input.\n"],"methodSig":"public static Function<Object, E> constant(@Nullable E value)"},"id":1,"flag":1,"commit":"267fac11a42ad56158ff9f6158a0a8a36223ed86"}]