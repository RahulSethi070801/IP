{
    "addition": {
        "21": "import com.google.common.graph.testing.TestGraphBuilder;\n",
        "34": "  private static final GraphBuilder<?, ?> BUILDER_A =\n",
        "35": "      GraphBuilder.directed().allowsParallelEdges(true).expectedNodeCount(10);\n",
        "36": "  private static final GraphBuilder<?, ?> BUILDER_B =\n",
        "37": "      GraphBuilder.directed().allowsSelfLoops(false).expectedNodeCount(16);\n",
        "39": "  private static final ImmutableGraph<String, String> IMMUTABLE_GRAPH_A =\n",
        "40": "      TestGraphBuilder.<String, String>init(GraphBuilder.directed())\n",
        "41": "          .addNode(\"A\")\n",
        "42": "          .toImmutableGraph();\n",
        "43": "  private static final ImmutableGraph<String, String> IMMUTABLE_GRAPH_B =\n",
        "44": "      TestGraphBuilder.<String, String>init(GraphBuilder.directed())\n",
        "45": "          .addNode(\"B\")\n",
        "46": "          .toImmutableGraph();\n",
        "49": "    setDistinctValues(GraphBuilder.class, BUILDER_A, BUILDER_B);\n",
        "50": "    setDistinctValues(Graph.class, IMMUTABLE_GRAPH_A, IMMUTABLE_GRAPH_B);\n",
        "53": "    // testEquals() methods in ConfigurableUndirectedGraphTest and ConfigurableDirectedGraphTest.\n",
        "55": "    // graphs by passing different instances of GraphBuilder into their constructors. However,\n",
        "56": "    // the GraphBuilder instances are *not* used to determine equality for mutable graphs.\n",
        "57": "    // Therefore, the tool ends up creating 2 equal mutable instances and it causes failures.\n"
    },
    "removed": {
        "33": "  private static final GraphConfig CONFIG_A = Graphs.config().multigraph().expectedNodeCount(10);\n",
        "34": "  private static final GraphConfig CONFIG_B = Graphs.config().noSelfLoops().expectedNodeCount(16);\n",
        "36": "  private static final ImmutableDirectedGraph<String, String> IMMUTABLE_DIRECTED_A =\n",
        "37": "      ImmutableDirectedGraph.<String, String>builder().addNode(\"A\").build();\n",
        "38": "  private static final ImmutableDirectedGraph<String, String> IMMUTABLE_DIRECTED_B =\n",
        "39": "      ImmutableDirectedGraph.<String, String>builder().addNode(\"B\").build();\n",
        "40": "\n",
        "41": "  private static final ImmutableUndirectedGraph<String, String> IMMUTABLE_UNDIRECTED_A =\n",
        "42": "      ImmutableUndirectedGraph.<String, String>builder().addNode(\"A\").build();\n",
        "43": "  private static final ImmutableUndirectedGraph<String, String> IMMUTABLE_UNDIRECTED_B =\n",
        "44": "      ImmutableUndirectedGraph.<String, String>builder().addNode(\"B\").build();\n",
        "47": "    setDistinctValues(GraphConfig.class, CONFIG_A, CONFIG_B);\n",
        "48": "\n",
        "49": "    setDistinctValues(DirectedGraph.class, IMMUTABLE_DIRECTED_A, IMMUTABLE_DIRECTED_B);\n",
        "50": "    setDistinctValues(UndirectedGraph.class, IMMUTABLE_UNDIRECTED_A, IMMUTABLE_UNDIRECTED_B);\n",
        "53": "    // testEquals() methods in IncidenceSetUndirectedGraphTest and IncidenceSetDirectedGraphTest.\n",
        "55": "    // graphs by passing different instances of GraphConfig into their constructors. However,\n",
        "56": "    // the GraphConfig instances are *not* used to determine equality for mutable graphs. Therefore,\n",
        "57": "    // the tool ends up creating 2 equal mutable instances and it causes failures.\n"
    }
}