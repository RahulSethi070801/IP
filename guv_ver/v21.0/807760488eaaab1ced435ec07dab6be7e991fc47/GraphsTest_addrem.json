{
    "addition": {
        "78": "        GraphBuilder.directed().<Integer, String>build(),\n",
        "79": "        GraphBuilder.undirected().<Integer, String>build());\n",
        "90": "        GraphBuilder.directed().allowsParallelEdges(true).<Integer, String>build(),\n",
        "91": "        GraphBuilder.undirected().allowsParallelEdges(true).<Integer, String>build());\n",
        "105": "        GraphBuilder.directed().<Integer, String>build(),\n",
        "106": "        GraphBuilder.undirected().<Integer, String>build());\n",
        "116": "        GraphBuilder.directed().<Integer, String>build(),\n",
        "117": "        GraphBuilder.undirected().<Integer, String>build());\n",
        "131": "    Graph<Integer, String> directedGraph =\n",
        "132": "        GraphBuilder.directed().allowsParallelEdges(true).build();\n",
        "143": "    Graph<Integer, String> directedGraph =\n",
        "144": "        GraphBuilder.directed().allowsParallelEdges(true).build();\n",
        "153": "    Graph<Integer, String> undirectedGraph =\n",
        "154": "        GraphBuilder.undirected().allowsParallelEdges(true).build();\n",
        "165": "    Graph<Integer, String> undirectedGraph =\n",
        "166": "        GraphBuilder.undirected().allowsParallelEdges(true).build();\n",
        "175": "    Graph<Integer, String> undirectedGraph =\n",
        "176": "        GraphBuilder.undirected().allowsParallelEdges(true).build();\n",
        "192": "    Graph<Integer, String> directedGraph = GraphBuilder.directed().build();\n",
        "211": "    Graph<Integer, String> undirectedGraph = GraphBuilder.undirected().build();\n",
        "236": "    Graph<Integer, String> directedMultigraph =\n",
        "237": "        GraphBuilder.directed().allowsParallelEdges(true).build();\n",
        "246": "    Graph<Integer, String> undirectedMultigraph =\n",
        "247": "        GraphBuilder.undirected().allowsParallelEdges(true).build();\n",
        "257": "    Graph<Integer, String> directedGraph = GraphBuilder.directed()\n",
        "258": "        .expectedNodeCount(NODE_COUNT)\n",
        "259": "        .build();\n",
        "267": "    Graph<Integer, String> undirectedGraph = GraphBuilder.undirected()\n",
        "268": "        .expectedNodeCount(NODE_COUNT)\n",
        "269": "        .build();\n",
        "276": "  public void builder_expectedNodeCount_negative() {\n",
        "278": "      GraphBuilder.directed().expectedNodeCount(-1);\n",
        "287": "    Graph<Integer, String> directedGraph = GraphBuilder.directed()\n",
        "288": "        .expectedEdgeCount(EDGE_COUNT)\n",
        "289": "        .build();\n",
        "297": "    Graph<Integer, String> undirectedGraph = GraphBuilder.undirected()\n",
        "298": "        .expectedEdgeCount(EDGE_COUNT)\n",
        "299": "        .build();\n",
        "306": "  public void builder_expectedEdgeCount_negative() {\n",
        "308": "      GraphBuilder.directed().expectedEdgeCount(-1);\n",
        "317": "    Graph<Integer, String> directedGraph = GraphBuilder.directed().allowsSelfLoops(false).build();\n",
        "328": "    Graph<Integer, String> undirectedGraph =\n",
        "329": "        GraphBuilder.undirected().allowsSelfLoops(false).build();\n",
        "350": "      addEdge(GraphBuilder.directed().build(), E11, null);\n",
        "359": "      addEdge(GraphBuilder.directed().<Integer, String>build(), E11, ImmutableSet.of(N1, N2, N3));\n",
        "368": "      addEdge(GraphBuilder.directed().build(), E11, ImmutableSet.of());\n",
        "376": "    Graph<Integer, String> directedGraph = GraphBuilder.directed().build();\n",
        "385": "    Graph<Integer, String> directedGraph = GraphBuilder.directed().build();\n",
        "395": "      copyOf(null);\n",
        "403": "    Graph<Integer, String> directedGraph = buildDirectedTestGraph();\n",
        "405": "    Graph<Integer, String> copy = copyOf(directedGraph);\n",
        "411": "    Graph<Integer, String> undirectedGraph = buildUndirectedTestGraph();\n",
        "413": "    Graph<Integer, String> copy = copyOf(undirectedGraph);\n",
        "421": "    Graph<Integer, String> undirectedGraph = buildUndirectedTestGraph();\n",
        "426": "    Graph<Integer, String> filteredCopy =\n",
        "429": "    Graph<Integer, String> expectedGraph =\n",
        "430": "        GraphBuilder.undirected().allowsParallelEdges(true).build();\n",
        "440": "    Graph<Integer, String> directedGraph = buildDirectedTestGraph();\n",
        "445": "    Graph<Integer, String> filteredCopy =\n",
        "448": "    Graph<Integer, String> expectedGraph =\n",
        "449": "        GraphBuilder.directed().allowsParallelEdges(true).build();\n",
        "459": "    Graph<Integer, String> directedGraph = buildDirectedTestGraph();\n",
        "462": "    Graph<Integer, String> actualGraph = GraphBuilder.directed().build();\n",
        "469": "    Graph<Integer, String> expectedGraph = GraphBuilder.directed().build();\n",
        "480": "    Graph<Integer, String> directedGraph = buildDirectedTestGraph();\n",
        "484": "    Graph<Integer, String> actualGraph = GraphBuilder.directed().build();\n",
        "491": "    Graph<Integer, String> expectedGraph = GraphBuilder.directed().build();\n",
        "502": "    Graph<Integer, String> directedGraph = buildDirectedTestGraph();\n",
        "504": "    Graph<Integer, String> actualGraph = GraphBuilder.directed().allowsParallelEdges(true).build();\n",
        "511": "    Graph<Integer, String> expectedGraph = buildDirectedTestGraph();\n",
        "519": "    Graph<Integer, String> directedGraph = buildDirectedTestGraph();\n",
        "523": "    Graph<Integer, String> actualGraph = GraphBuilder.directed().allowsParallelEdges(true).build();\n",
        "532": "    Graph<Integer, String> expectedGraph =\n",
        "533": "        GraphBuilder.directed().allowsParallelEdges(true).build();\n",
        "548": "    Graph<Integer, String> undirectedGraph = buildUndirectedTestGraph();\n",
        "551": "    Graph<Integer, String> actualGraph = GraphBuilder.undirected().build();\n",
        "558": "    Graph<Integer, String> expectedGraph = GraphBuilder.undirected().build();\n",
        "569": "    Graph<Integer, String> undirectedGraph = buildUndirectedTestGraph();\n",
        "573": "    Graph<Integer, String> actualGraph = GraphBuilder.undirected().build();\n",
        "580": "    Graph<Integer, String> expectedGraph = GraphBuilder.undirected().build();\n",
        "591": "    Graph<Integer, String> undirectedGraph = buildUndirectedTestGraph();\n",
        "593": "    Graph<Integer, String> actualGraph =\n",
        "594": "        GraphBuilder.undirected().allowsParallelEdges(true).build();\n",
        "601": "    Graph<Integer, String> expectedGraph = buildUndirectedTestGraph();\n",
        "609": "    Graph<Integer, String> undirectedGraph = buildUndirectedTestGraph();\n",
        "613": "    Graph<Integer, String> actualGraph =\n",
        "614": "        GraphBuilder.undirected().allowsParallelEdges(true).build();\n",
        "623": "    Graph<Integer, String> expectedGraph =\n",
        "624": "        GraphBuilder.undirected().allowsParallelEdges(true).build();\n",
        "637": "  private static Graph<Integer, String> buildDirectedTestGraph() {\n",
        "638": "    Graph<Integer, String> directedGraph =\n",
        "639": "        GraphBuilder.directed().allowsParallelEdges(true).build();\n",
        "649": "  private static Graph<Integer, String> buildUndirectedTestGraph() {\n",
        "650": "    Graph<Integer, String> undirectedGraph =\n",
        "651": "        GraphBuilder.undirected().allowsParallelEdges(true).build();\n"
    },
    "removed": {
        "20": "import static com.google.common.graph.Graphs.MULTIGRAPH;\n",
        "22": "import static com.google.common.graph.Graphs.config;\n",
        "80": "        Graphs.<Integer, String>createDirected(), Graphs.<Integer, String>createUndirected());\n",
        "91": "        Graphs.<Integer, String>createDirected(MULTIGRAPH),\n",
        "92": "        Graphs.<Integer, String>createUndirected(MULTIGRAPH));\n",
        "106": "        Graphs.<Integer, String>createDirected(), Graphs.<Integer, String>createUndirected());\n",
        "116": "        Graphs.<Integer, String>createDirected(), Graphs.<Integer, String>createUndirected());\n",
        "130": "    DirectedGraph<Integer, String> directedGraph = Graphs.createDirected(MULTIGRAPH);\n",
        "141": "    DirectedGraph<Integer, String> directedGraph = Graphs.createDirected(MULTIGRAPH);\n",
        "150": "    UndirectedGraph<Integer, String> undirectedGraph = Graphs.createUndirected(MULTIGRAPH);\n",
        "161": "    UndirectedGraph<Integer, String> undirectedGraph = Graphs.createUndirected(MULTIGRAPH);\n",
        "170": "    UndirectedGraph<Integer, String> undirectedGraph = Graphs.createUndirected(MULTIGRAPH);\n",
        "186": "    DirectedGraph<Integer, String> directedGraph = Graphs.createDirected();\n",
        "205": "    UndirectedGraph<Integer, String> undirectedGraph = Graphs.createUndirected();\n",
        "230": "    DirectedGraph<Integer, String> directedMultigraph =\n",
        "231": "        Graphs.createDirected(config().multigraph());\n",
        "240": "    UndirectedGraph<Integer, String> undirectedMultigraph =\n",
        "241": "        Graphs.createUndirected(Graphs.MULTIGRAPH);\n",
        "251": "    DirectedGraph<Integer, String> directedGraph =\n",
        "252": "        Graphs.createDirected(config().expectedNodeCount(NODE_COUNT));\n",
        "260": "    UndirectedGraph<Integer, String> undirectedGraph =\n",
        "261": "        Graphs.createUndirected(config().expectedNodeCount(NODE_COUNT));\n",
        "268": "  public void config_expectedNodeCount_negative() {\n",
        "270": "      config().expectedNodeCount(-1);\n",
        "277": "  @Test\n",
        "278": "  public void config_expectedNodeCount_overridden() {\n",
        "279": "    GraphConfig oldConfig = config().expectedNodeCount(NODE_COUNT);\n",
        "280": "    assertThat(oldConfig.getExpectedNodeCount().get()).isEqualTo(NODE_COUNT);\n",
        "281": "    GraphConfig newConfig = oldConfig.expectedNodeCount(NODE_COUNT + 1);\n",
        "282": "    assertThat(oldConfig.getExpectedNodeCount().get()).isEqualTo(NODE_COUNT);\n",
        "283": "    assertThat(newConfig.getExpectedNodeCount().get()).isEqualTo(NODE_COUNT + 1);\n",
        "284": "  }\n",
        "285": "\n",
        "288": "    DirectedGraph<Integer, String> directedGraph =\n",
        "289": "        Graphs.createDirected(config().expectedEdgeCount(EDGE_COUNT));\n",
        "297": "    UndirectedGraph<Integer, String> undirectedGraph =\n",
        "298": "        Graphs.createUndirected(config().expectedEdgeCount(EDGE_COUNT));\n",
        "305": "  public void config_expectedEdgeCount_negative() {\n",
        "307": "      config().expectedEdgeCount(-1);\n",
        "314": "  @Test\n",
        "315": "  public void config_expectedEdgeCount_overridden() {\n",
        "316": "    GraphConfig oldConfig = config().expectedEdgeCount(EDGE_COUNT);\n",
        "317": "    assertThat(oldConfig.getExpectedEdgeCount().get()).isEqualTo(EDGE_COUNT);\n",
        "318": "    GraphConfig newConfig = oldConfig.expectedEdgeCount(EDGE_COUNT + 1);\n",
        "319": "    assertThat(oldConfig.getExpectedEdgeCount().get()).isEqualTo(EDGE_COUNT);\n",
        "320": "    assertThat(newConfig.getExpectedEdgeCount().get()).isEqualTo(EDGE_COUNT + 1);\n",
        "321": "  }\n",
        "322": "\n",
        "325": "    DirectedGraph<Integer, String> directedGraph = Graphs.createDirected(config().noSelfLoops());\n",
        "336": "    UndirectedGraph<Integer, String> undirectedGraph =\n",
        "337": "        Graphs.createUndirected(config().noSelfLoops());\n",
        "346": "  // Note that this test works precisely because config() returns a new object every time.\n",
        "347": "  @Test\n",
        "348": "  public void config_immutability() {\n",
        "349": "    GraphConfig unused = config().multigraph();\n",
        "350": "    assertThat(config().isMultigraph()).isFalse();\n",
        "351": "    unused = config().expectedNodeCount(NODE_COUNT);\n",
        "352": "    assertThat(config().getExpectedNodeCount()).isAbsent();\n",
        "353": "    unused = config().expectedEdgeCount(EDGE_COUNT);\n",
        "354": "    assertThat(config().getExpectedEdgeCount()).isAbsent();\n",
        "355": "    unused = config().noSelfLoops();\n",
        "356": "    assertThat(config().isSelfLoopsAllowed()).isTrue();\n",
        "357": "  }\n",
        "358": "\n",
        "371": "      addEdge(Graphs.createDirected(), E11, null);\n",
        "380": "      addEdge(Graphs.<Integer, String>createDirected(), E11, ImmutableSet.<Integer>of(N1, N2, N3));\n",
        "389": "      addEdge(Graphs.createDirected(), E11, ImmutableSet.of());\n",
        "397": "    DirectedGraph<Integer, String> directedGraph = Graphs.createDirected();\n",
        "406": "    DirectedGraph<Integer, String> directedGraph = Graphs.createDirected();\n",
        "416": "      copyOf((DirectedGraph) null);\n",
        "417": "      fail(\"Should have rejected a null graph\");\n",
        "418": "    } catch (NullPointerException expected) {\n",
        "419": "    }\n",
        "420": "    try {\n",
        "421": "      copyOf((UndirectedGraph) null);\n",
        "429": "    DirectedGraph<Integer, String> directedGraph = buildDirectedTestGraph();\n",
        "431": "    DirectedGraph<Integer, String> copy = copyOf(directedGraph);\n",
        "437": "    UndirectedGraph<Integer, String> undirectedGraph = buildUndirectedTestGraph();\n",
        "439": "    UndirectedGraph<Integer, String> copy = copyOf(undirectedGraph);\n",
        "447": "    UndirectedGraph<Integer, String> undirectedGraph = buildUndirectedTestGraph();\n",
        "452": "    UndirectedGraph<Integer, String> filteredCopy =\n",
        "455": "    UndirectedGraph<Integer, String> expectedGraph = Graphs.createUndirected(MULTIGRAPH);\n",
        "465": "    DirectedGraph<Integer, String> directedGraph = buildDirectedTestGraph();\n",
        "470": "    DirectedGraph<Integer, String> filteredCopy =\n",
        "473": "    DirectedGraph<Integer, String> expectedGraph = Graphs.createDirected(MULTIGRAPH);\n",
        "483": "    DirectedGraph<Integer, String> directedGraph = buildDirectedTestGraph();\n",
        "486": "    DirectedGraph<Integer, String> actualGraph = Graphs.createDirected();\n",
        "493": "    DirectedGraph<Integer, String> expectedGraph = Graphs.createDirected();\n",
        "504": "    DirectedGraph<Integer, String> directedGraph = buildDirectedTestGraph();\n",
        "508": "    DirectedGraph<Integer, String> actualGraph = Graphs.createDirected();\n",
        "515": "    DirectedGraph<Integer, String> expectedGraph = Graphs.createDirected();\n",
        "526": "    DirectedGraph<Integer, String> directedGraph = buildDirectedTestGraph();\n",
        "528": "    DirectedGraph<Integer, String> actualGraph = Graphs.createDirected(MULTIGRAPH);\n",
        "535": "    DirectedGraph<Integer, String> expectedGraph = buildDirectedTestGraph();\n",
        "543": "    DirectedGraph<Integer, String> directedGraph = buildDirectedTestGraph();\n",
        "547": "    DirectedGraph<Integer, String> actualGraph = Graphs.createDirected(MULTIGRAPH);\n",
        "556": "    DirectedGraph<Integer, String> expectedGraph = Graphs.createDirected(MULTIGRAPH);\n",
        "571": "    UndirectedGraph<Integer, String> undirectedGraph = buildUndirectedTestGraph();\n",
        "574": "    UndirectedGraph<Integer, String> actualGraph = Graphs.createUndirected();\n",
        "581": "    UndirectedGraph<Integer, String> expectedGraph = Graphs.createUndirected();\n",
        "592": "    UndirectedGraph<Integer, String> undirectedGraph = buildUndirectedTestGraph();\n",
        "596": "    UndirectedGraph<Integer, String> actualGraph = Graphs.createUndirected();\n",
        "603": "    UndirectedGraph<Integer, String> expectedGraph = Graphs.createUndirected();\n",
        "614": "    UndirectedGraph<Integer, String> undirectedGraph = buildUndirectedTestGraph();\n",
        "616": "    UndirectedGraph<Integer, String> actualGraph = Graphs.createUndirected(MULTIGRAPH);\n",
        "623": "    UndirectedGraph<Integer, String> expectedGraph = buildUndirectedTestGraph();\n",
        "631": "    UndirectedGraph<Integer, String> undirectedGraph = buildUndirectedTestGraph();\n",
        "635": "    UndirectedGraph<Integer, String> actualGraph = Graphs.createUndirected(MULTIGRAPH);\n",
        "644": "    UndirectedGraph<Integer, String> expectedGraph = Graphs.createUndirected(MULTIGRAPH);\n",
        "657": "  private static DirectedGraph<Integer, String> buildDirectedTestGraph() {\n",
        "658": "    DirectedGraph<Integer, String> directedGraph = Graphs.createDirected(MULTIGRAPH);\n",
        "668": "  private static UndirectedGraph<Integer, String> buildUndirectedTestGraph() {\n",
        "669": "    UndirectedGraph<Integer, String> undirectedGraph = Graphs.createUndirected(MULTIGRAPH);\n"
    }
}