[{"func":{"oldfunccode":"f1f4c88f47c7c2a260a0d9410392e233eaada068/Codes_neg/Match_oldfunccode_f1f4c88f47c7c2a260a0d9410392e233eaada068_1.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/f1f4c88f47c7c2a260a0d9410392e233eaada068/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[],"dellines":[128],"addcode":[],"delcode":["  public int size() {\n"],"methodSig":"public int size()"},"doc":{"oldfunccode":"f1f4c88f47c7c2a260a0d9410392e233eaada068/Codes_neg/Match_olddocfunccode_f1f4c88f47c7c2a260a0d9410392e233eaada068_1.txt","newfunccode":"f1f4c88f47c7c2a260a0d9410392e233eaada068/Codes_neg/Match_newdocfunccode_f1f4c88f47c7c2a260a0d9410392e233eaada068_1.txt","newdoc":"","newJdoc":"f1f4c88f47c7c2a260a0d9410392e233eaada068/Codes_neg/Match_newdocnewJdoc_f1f4c88f47c7c2a260a0d9410392e233eaada068_1.txt","olddoc":"","oldJdoc":"f1f4c88f47c7c2a260a0d9410392e233eaada068/Codes_neg/Match_olddocJdoc_f1f4c88f47c7c2a260a0d9410392e233eaada068_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/f1f4c88f47c7c2a260a0d9410392e233eaada068/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[89,90],"dellines":[88,89],"addcode":["   * If this {@link Endpoints} is directed, returns the {@link #source()};\n","   * otherwise, returns an arbitrary (but consistent) endpoint of the origin edge.\n"],"delcode":["   * If this {@link Endpoints} is directed, returns the node which is the source.\n","   * Otherwise, returns an arbitrary (but consistent) endpoint of the edge.\n"],"methodSig":" final N nodeA()"},"id":1,"flag":1,"commit":"f1f4c88f47c7c2a260a0d9410392e233eaada068"},{"func":{"oldfunccode":"","newfunccode":"f1f4c88f47c7c2a260a0d9410392e233eaada068/Codes_neg/Match_newfunccode_f1f4c88f47c7c2a260a0d9410392e233eaada068_2.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/f1f4c88f47c7c2a260a0d9410392e233eaada068/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[147],"dellines":[],"addcode":["  public final int size() {\n"],"delcode":[],"methodSig":"public final int size()"},"doc":{"oldfunccode":"f1f4c88f47c7c2a260a0d9410392e233eaada068/Codes_neg/Match_olddocfunccode_f1f4c88f47c7c2a260a0d9410392e233eaada068_2.txt","newfunccode":"f1f4c88f47c7c2a260a0d9410392e233eaada068/Codes_neg/Match_newdocfunccode_f1f4c88f47c7c2a260a0d9410392e233eaada068_2.txt","newdoc":"","newJdoc":"f1f4c88f47c7c2a260a0d9410392e233eaada068/Codes_neg/Match_newdocnewJdoc_f1f4c88f47c7c2a260a0d9410392e233eaada068_2.txt","olddoc":"","oldJdoc":"f1f4c88f47c7c2a260a0d9410392e233eaada068/Codes_neg/Match_olddocJdoc_f1f4c88f47c7c2a260a0d9410392e233eaada068_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/f1f4c88f47c7c2a260a0d9410392e233eaada068/Endpoints","pathinproj":"guava/src/com/google/common/graph/Endpoints.java","addlines":[97,98],"dellines":[96],"addcode":["   * Returns the node that is adjacent to {@link #nodeA()} via the origin edge.\n","   * If this {@link Endpoints} is directed, this is equal to the {@link #target()}.\n"],"delcode":["   * Returns the node that is opposite {@link #nodeA()}. In the directed case, this is the target.\n"],"methodSig":" final N nodeB()"},"id":1,"flag":1,"commit":"f1f4c88f47c7c2a260a0d9410392e233eaada068"}]