{"id": "d0b8e4a1edf3497aef345e93a170c46f6cbc7036", "code": [{"0": "guava-tests/test/com/google/common/graph/AbstractGraphTest.java", "added": {"1": ["      for (N otherNode : graph.nodes()) {\n", "        if (graph.successors(node).contains(otherNode)) {\n", "          assertThat(graph.edgeValue(node, otherNode)).isNotNull();\n", "        } else {\n", "          assertThat(graph.edgeValueOrDefault(node, otherNode, null)).isNull();\n", "        }\n", "      }\n", "\n"]}, "removed": {}, "added_lines": {"1": [168, 169, 170, 171, 172, 173, 174, 175]}, "removed_lines": {}}, {"1": "guava-tests/test/com/google/common/graph/AbstractNetworkTest.java", "added": {"2": ["        Set<E> edgesConnecting = network.edgesConnecting(node, successor);\n", "        assertThat(edgesConnecting).isNotEmpty();\n", "        assertThat(edgesConnecting).isEqualTo(asGraph.edgeValue(node, successor));\n"]}, "removed": {"1": ["          assertThat(edgesConnecting).isEqualTo(asGraph.edgeValue(node, otherNode));\n"], "2": ["        assertThat(network.edgesConnecting(node, successor)).isNotEmpty();\n"]}, "added_lines": {"2": [281, 283, 284]}, "removed_lines": {"1": [234], "2": [283]}}, {"2": "guava/src/com/google/common/graph/AbstractNetwork.java", "added": {"1": ["import static com.google.common.base.Preconditions.checkArgument;\n", "import static com.google.common.graph.GraphConstants.EDGE_CONNECTING_NOT_IN_GRAPH;\n"], "2": ["        Set<E> edges = edgesConnecting(nodeA, nodeB);\n", "        checkArgument(!edges.isEmpty(), EDGE_CONNECTING_NOT_IN_GRAPH, nodeA, nodeB);\n", "        return edges;\n", "        Set<E> edges = edgesConnecting(nodeA, nodeB);\n", "        return edges.isEmpty() ? defaultValue : edges;\n"]}, "removed": {"1": ["import static com.google.common.base.Preconditions.checkNotNull;\n"], "2": ["        return checkNotNull(edgesConnecting(nodeA, nodeB));\n", "        return checkNotNull(edgesConnecting(nodeA, nodeB));\n"]}, "added_lines": {"1": [19, 20], "2": [124, 125, 126, 131, 132]}, "removed_lines": {"1": [19], "2": [123, 128]}}, {"3": "guava/src/com/google/common/graph/Network.java", "added": {"1": ["   * node B if the set is non-empty, otherwise, it will throw {@link IllegalArgumentException}.\n"]}, "removed": {"1": ["   * node B. It will return the empty set if there are no edges connecting A to B.\n"]}, "added_lines": {"1": [114]}, "removed_lines": {"1": [114]}}]}
