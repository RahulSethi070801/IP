[{"func":{"oldfunccode":"","newfunccode":"f02ea7e285d73bb13fe02a4a05802b4710fa3d44/Codes_neg/Match_newfunccode_f02ea7e285d73bb13fe02a4a05802b4710fa3d44_1.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/f02ea7e285d73bb13fe02a4a05802b4710fa3d44/AbstractValueGraph","pathinproj":"guava/src/com/google/common/graph/AbstractValueGraph.java","addlines":[64,65,57,58,59,60,61,62,63],"dellines":[],"addcode":["  private Map<EndpointPair<N>, V> edgeValueMap() {\n","    Function<EndpointPair<N>, V> edgeToValueFn =\n","        new Function<EndpointPair<N>, V>() {\n","          @Override\n","          public V apply(EndpointPair<N> edge) {\n","            return edgeValue(edge.nodeU(), edge.nodeV());\n","          }\n","        };\n","    return Maps.asMap(edges(), edgeToValueFn);\n"],"delcode":[],"methodSig":"private Map<EndpointPair<N>, V> edgeValueMap()"},"doc":{"oldfunccode":"f02ea7e285d73bb13fe02a4a05802b4710fa3d44/Codes_neg/Match_olddocfunccode_f02ea7e285d73bb13fe02a4a05802b4710fa3d44_1.txt","newfunccode":"f02ea7e285d73bb13fe02a4a05802b4710fa3d44/Codes_neg/Match_newdocfunccode_f02ea7e285d73bb13fe02a4a05802b4710fa3d44_1.txt","newdoc":"","newJdoc":"f02ea7e285d73bb13fe02a4a05802b4710fa3d44/Codes_neg/Match_newdocnewJdoc_f02ea7e285d73bb13fe02a4a05802b4710fa3d44_1.txt","olddoc":"","oldJdoc":"f02ea7e285d73bb13fe02a4a05802b4710fa3d44/Codes_neg/Match_olddocJdoc_f02ea7e285d73bb13fe02a4a05802b4710fa3d44_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/f02ea7e285d73bb13fe02a4a05802b4710fa3d44/ValueGraph","pathinproj":"guava/src/com/google/common/graph/ValueGraph.java","addlines":[116],"dellines":[116,117],"addcode":["   * @throws IllegalArgumentException if there is no edge connecting {@code nodeU} to {@code nodeV}.\n"],"delcode":["   * @throws IllegalArgumentException if there is no edge connecting {@code nodeU} to {@code nodeV},\n","   *     or if {@code nodeU} or {@code nodeV} is not an element of this graph\n"],"methodSig":" V edgeValue(Object nodeU, Object nodeV)"},"id":1,"flag":1,"commit":"f02ea7e285d73bb13fe02a4a05802b4710fa3d44"},{"func":{"oldfunccode":"f02ea7e285d73bb13fe02a4a05802b4710fa3d44/Codes_neg/Match_oldfunccode_f02ea7e285d73bb13fe02a4a05802b4710fa3d44_2.txt","newfunccode":"f02ea7e285d73bb13fe02a4a05802b4710fa3d44/Codes_neg/Match_newfunccode_f02ea7e285d73bb13fe02a4a05802b4710fa3d44_2.txt","newdoc":"","newJdoc":"f02ea7e285d73bb13fe02a4a05802b4710fa3d44/Codes_neg/Match_newfuncnewJdoc_f02ea7e285d73bb13fe02a4a05802b4710fa3d44_2.txt","olddoc":"","oldJdoc":"f02ea7e285d73bb13fe02a4a05802b4710fa3d44/Codes_neg/Match_oldfuncoldJdoc_f02ea7e285d73bb13fe02a4a05802b4710fa3d44_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/f02ea7e285d73bb13fe02a4a05802b4710fa3d44/AbstractValueGraph","pathinproj":"guava/src/com/google/common/graph/AbstractValueGraph.java","addlines":[54,55],"dellines":[61],"addcode":["    return String.format(GRAPH_STRING_FORMAT, propertiesString, nodes(), edgeValueMap());\n","  }\n"],"delcode":["    return String.format(GRAPH_STRING_FORMAT, propertiesString, nodes(), edgeValues());\n"],"methodSig":"public String toString()"},"doc":{"oldfunccode":"f02ea7e285d73bb13fe02a4a05802b4710fa3d44/Codes_neg/Match_olddocfunccode_f02ea7e285d73bb13fe02a4a05802b4710fa3d44_2.txt","newfunccode":"f02ea7e285d73bb13fe02a4a05802b4710fa3d44/Codes_neg/Match_newdocfunccode_f02ea7e285d73bb13fe02a4a05802b4710fa3d44_2.txt","newdoc":"","newJdoc":"f02ea7e285d73bb13fe02a4a05802b4710fa3d44/Codes_neg/Match_newdocnewJdoc_f02ea7e285d73bb13fe02a4a05802b4710fa3d44_2.txt","olddoc":"","oldJdoc":"f02ea7e285d73bb13fe02a4a05802b4710fa3d44/Codes_neg/Match_olddocJdoc_f02ea7e285d73bb13fe02a4a05802b4710fa3d44_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/f02ea7e285d73bb13fe02a4a05802b4710fa3d44/ValueGraph","pathinproj":"guava/src/com/google/common/graph/ValueGraph.java","addlines":[116],"dellines":[116,117],"addcode":["   * @throws IllegalArgumentException if there is no edge connecting {@code nodeU} to {@code nodeV}.\n"],"delcode":["   * @throws IllegalArgumentException if there is no edge connecting {@code nodeU} to {@code nodeV},\n","   *     or if {@code nodeU} or {@code nodeV} is not an element of this graph\n"],"methodSig":" V edgeValue(Object nodeU, Object nodeV)"},"id":1,"flag":1,"commit":"f02ea7e285d73bb13fe02a4a05802b4710fa3d44"}]