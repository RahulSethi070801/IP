[{"func":{"oldfunccode":"","newfunccode":"4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/Codes_neg/Match_newfunccode_4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7_1.txt","newdoc":"","newJdoc":"4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/Codes_neg/Match_newfuncnewJdoc_4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7_1.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/NodeConnections","pathinproj":"guava/src/com/google/common/graph/NodeConnections.java","addlines":[74],"dellines":[],"addcode":["  void addInEdge(E edge, N node, boolean isSelfLoop);\n"],"delcode":[],"methodSig":" void addInEdge(E edge, N node, boolean isSelfLoop)"},"doc":{"oldfunccode":"4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/Codes_neg/Match_olddocfunccode_4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7_1.txt","newfunccode":"4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/Codes_neg/Match_newdocfunccode_4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7_1.txt","newdoc":"","newJdoc":"4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/Codes_neg/Match_newdocnewJdoc_4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7_1.txt","olddoc":"","oldJdoc":"4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/Codes_neg/Match_olddocJdoc_4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/NodeConnections","pathinproj":"guava/src/com/google/common/graph/NodeConnections.java","addlines":[66],"dellines":[64,65],"addcode":["   * Remove {@code edge} from the set of outgoing edges. Returns the former successor node.\n"],"delcode":["   * Remove {@code edge} from the set of outgoing edges. Returns the former successor node,\n","   * or null if the edge did not exist.\n"],"methodSig":" N removeOutEdge(Object edge)"},"id":1,"flag":1,"commit":"4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7"},{"func":{"oldfunccode":"4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/Codes_neg/Match_oldfunccode_4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7_2.txt","newfunccode":"","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/Codes_neg/Match_oldfuncoldJdoc_4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/NodeConnections","pathinproj":"guava/src/com/google/common/graph/NodeConnections.java","addlines":[],"dellines":[74,75],"addcode":[],"delcode":["  @CanIgnoreReturnValue\n","  boolean addInEdge(E edge, N node, boolean isSelfLoop);\n"],"methodSig":" boolean addInEdge(E edge, N node, boolean isSelfLoop)"},"doc":{"oldfunccode":"4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/Codes_neg/Match_olddocfunccode_4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7_2.txt","newfunccode":"4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/Codes_neg/Match_newdocfunccode_4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7_2.txt","newdoc":"","newJdoc":"4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/Codes_neg/Match_newdocnewJdoc_4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7_2.txt","olddoc":"","oldJdoc":"4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/Codes_neg/Match_olddocJdoc_4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7/NodeConnections","pathinproj":"guava/src/com/google/common/graph/NodeConnections.java","addlines":[66],"dellines":[64,65],"addcode":["   * Remove {@code edge} from the set of outgoing edges. Returns the former successor node.\n"],"delcode":["   * Remove {@code edge} from the set of outgoing edges. Returns the former successor node,\n","   * or null if the edge did not exist.\n"],"methodSig":" N removeOutEdge(Object edge)"},"id":1,"flag":1,"commit":"4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7"}]