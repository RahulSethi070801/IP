[{"func":{"oldfunccode":"","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_1.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/ElementOrder","pathinproj":"guava/src/com/google/common/graph/ElementOrder.java","addlines":[96,97,94,95],"dellines":[],"addcode":["  @Override\n","  public int hashCode() {\n","    return Objects.hashCode(this.type, this.comparator);\n","  }\n"],"delcode":[],"methodSig":"public int hashCode()"},"doc":{"oldfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_1.txt","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_1.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_1.txt","olddoc":"","oldJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Network","pathinproj":"guava/src/com/google/common/graph/Network.java","addlines":[288,289,391,392],"dellines":[281,381],"addcode":["   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}).\n","   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}.\n"],"delcode":["   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n","   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n"],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09"},{"func":{"oldfunccode":"","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_2.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfuncnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_2.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/ElementOrder","pathinproj":"guava/src/com/google/common/graph/ElementOrder.java","addlines":[67,68,69],"dellines":[],"addcode":["  public Type type() {\n","    return type;\n","  }\n"],"delcode":[],"methodSig":"public Type type()"},"doc":{"oldfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_2.txt","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_2.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_2.txt","olddoc":"","oldJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Network","pathinproj":"guava/src/com/google/common/graph/Network.java","addlines":[288,289,391,392],"dellines":[281,381],"addcode":["   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}).\n","   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}.\n"],"delcode":["   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n","   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n"],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09"},{"func":{"oldfunccode":"","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_3.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfuncnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_3.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/ElementOrder","pathinproj":"guava/src/com/google/common/graph/ElementOrder.java","addlines":[119,120,121],"dellines":[],"addcode":["  public static final <S> ElementOrder<S> insertion() {\n","    return new ElementOrder<S>(Type.INSERTION, null);\n","  }\n"],"delcode":[],"methodSig":"public static final ElementOrder<S> insertion()"},"doc":{"oldfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_3.txt","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_3.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_3.txt","olddoc":"","oldJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_3.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Network","pathinproj":"guava/src/com/google/common/graph/Network.java","addlines":[288,289,391,392],"dellines":[281,381],"addcode":["   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}).\n","   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}.\n"],"delcode":["   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n","   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n"],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09"},{"func":{"oldfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_oldfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_4.txt","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_4.txt","newdoc":" TODO(b/28087289): add allowsParallelEdges() once we support them\n","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfuncnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_4.txt","olddoc":" TODO(b/28087289): add allowsParallelEdges() once we support them\n","oldJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_oldfuncoldJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_4.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/GraphBuilder","pathinproj":"guava/src/com/google/common/graph/GraphBuilder.java","addlines":[80,81,82,83,78],"dellines":[81,82],"addcode":["    checkNotNull(graph);\n","    return new GraphBuilder<Object>(graph.isDirected())\n","        .allowsSelfLoops(graph.allowsSelfLoops())\n","        .orderNodes(graph.nodeOrder())\n","        .cast();\n"],"delcode":["    return new GraphBuilder<N>(graph.isDirected())\n","        .allowsSelfLoops(graph.allowsSelfLoops());\n"],"methodSig":"public static GraphBuilder<N> from(Graph<N> graph)"},"doc":{"oldfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_4.txt","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_4.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_4.txt","olddoc":"","oldJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_4.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Network","pathinproj":"guava/src/com/google/common/graph/Network.java","addlines":[288,289,391,392],"dellines":[281,381],"addcode":["   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}).\n","   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}.\n"],"delcode":["   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n","   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n"],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09"},{"func":{"oldfunccode":"","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_5.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/ElementOrder","pathinproj":"guava/src/com/google/common/graph/ElementOrder.java","addlines":[83,84,85,86,87,88,89,90,91,92],"dellines":[],"addcode":["  @Override\n","  public boolean equals(Object o) {\n","    if (!(o instanceof ElementOrder)) {\n","      return false;\n","    }\n","\n","    ElementOrder<?> other = (ElementOrder<?>) o;\n","    return other.type == this.type\n","        && Objects.equal(other.comparator, this.comparator);\n","  }\n"],"delcode":[],"methodSig":"public boolean equals(Object o)"},"doc":{"oldfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_5.txt","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_5.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_5.txt","olddoc":"","oldJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_5.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Network","pathinproj":"guava/src/com/google/common/graph/Network.java","addlines":[288,289,391,392],"dellines":[281,381],"addcode":["   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}).\n","   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}.\n"],"delcode":["   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n","   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n"],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09"},{"func":{"oldfunccode":"","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_6.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfuncnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_6.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/ElementOrder","pathinproj":"guava/src/com/google/common/graph/ElementOrder.java","addlines":[134,135,136],"dellines":[],"addcode":["  public static final <S extends Comparable<S>> ElementOrder<S> sorted(Comparator<S> comparator) {\n","    return new ElementOrder<S>(Type.SORTED, comparator);\n","  }\n"],"delcode":[],"methodSig":"public static final ElementOrder<S> sorted(Comparator<S> comparator)"},"doc":{"oldfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_6.txt","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_6.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_6.txt","olddoc":"","oldJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_6.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Network","pathinproj":"guava/src/com/google/common/graph/Network.java","addlines":[288,289,391,392],"dellines":[281,381],"addcode":["   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}).\n","   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}.\n"],"delcode":["   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n","   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n"],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09"},{"func":{"oldfunccode":"","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_7.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfuncnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_7.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/ElementOrder","pathinproj":"guava/src/com/google/common/graph/ElementOrder.java","addlines":[128,126,127],"dellines":[],"addcode":["  public static final <S extends Comparable<S>> ElementOrder<S> natural() {\n","    return new ElementOrder<S>(Type.SORTED, Ordering.<S>natural());\n","  }\n"],"delcode":[],"methodSig":"public static final ElementOrder<S> natural()"},"doc":{"oldfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_7.txt","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_7.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_7.txt","olddoc":"","oldJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_7.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Network","pathinproj":"guava/src/com/google/common/graph/Network.java","addlines":[288,289,391,392],"dellines":[281,381],"addcode":["   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}).\n","   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}.\n"],"delcode":["   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n","   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n"],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09"},{"func":{"oldfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_oldfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_8.txt","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_8.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfuncnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_8.txt","olddoc":"","oldJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_oldfuncoldJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_8.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/NetworkBuilder","pathinproj":"guava/src/com/google/common/graph/NetworkBuilder.java","addlines":[82,83,85,86,87,88],"dellines":[84,86],"addcode":["    checkNotNull(graph);\n","    return new NetworkBuilder<Object, Object>(graph.isDirected())\n","        .allowsSelfLoops(graph.allowsSelfLoops())\n","        .orderNodes(graph.nodeOrder())\n","        .orderEdges(graph.edgeOrder())\n","        .cast();\n"],"delcode":["    return new NetworkBuilder<N, E>(graph.isDirected())\n","        .allowsSelfLoops(graph.allowsSelfLoops());\n"],"methodSig":"public static NetworkBuilder<N, E> from(Network<N, E> graph)"},"doc":{"oldfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_8.txt","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_8.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_8.txt","olddoc":"","oldJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_8.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Network","pathinproj":"guava/src/com/google/common/graph/Network.java","addlines":[288,289,391,392],"dellines":[281,381],"addcode":["   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}).\n","   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}.\n"],"delcode":["   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n","   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n"],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09"},{"func":{"oldfunccode":"","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_9.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfuncnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_9.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/ElementOrder","pathinproj":"guava/src/com/google/common/graph/ElementOrder.java","addlines":[112,113,114],"dellines":[],"addcode":["  public static final <S> ElementOrder<S> unordered() {\n","    return new ElementOrder<S>(Type.UNORDERED, null);\n","  }\n"],"delcode":[],"methodSig":"public static final ElementOrder<S> unordered()"},"doc":{"oldfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_9.txt","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_9.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_9.txt","olddoc":"","oldJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_9.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Network","pathinproj":"guava/src/com/google/common/graph/Network.java","addlines":[288,289,391,392],"dellines":[281,381],"addcode":["   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}).\n","   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}.\n"],"delcode":["   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n","   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n"],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09"},{"func":{"oldfunccode":"","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_10.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/GraphBuilder","pathinproj":"guava/src/com/google/common/graph/GraphBuilder.java","addlines":[128,125,126,127],"dellines":[],"addcode":["  @SuppressWarnings(\"unchecked\")\n","  private <N1 extends N> GraphBuilder<N1> cast() {\n","    return (GraphBuilder<N1>) this;\n","  }\n"],"delcode":[],"methodSig":"private GraphBuilder<N1> cast()"},"doc":{"oldfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_10.txt","newfunccode":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocfunccode_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_10.txt","newdoc":"","newJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_newdocnewJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_10.txt","olddoc":"","oldJdoc":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Codes/Match_olddocJdoc_ce340b320b78e7c3c758ece0a56ae17dd8e09a09_10.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/ce340b320b78e7c3c758ece0a56ae17dd8e09a09/Network","pathinproj":"guava/src/com/google/common/graph/Network.java","addlines":[288,289,391,392],"dellines":[281,381],"addcode":["   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}).\n","   * direction will have the same hash code (but can still be differentiated by\n","   * {@link #equals(Object)}.\n"],"delcode":["   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n","   * direction will have the same hash code (but can still be differentiated by {@link #equals}.\n"],"methodSig":" int hashCode()"},"id":3,"flag":1,"commit":"ce340b320b78e7c3c758ece0a56ae17dd8e09a09"}]