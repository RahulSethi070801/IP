{
    "addition": {
        "124": "   *\n",
        "125": "   * @since 21.0\n",
        "135": "   *\n",
        "136": "   * <p>If {@code googleOptional} is known to be non-null, use {@code googleOptional.toJavaUtil()}\n",
        "137": "   * instead.\n",
        "138": "   *\n",
        "139": "   * <p>Unfortunately, the method reference {@code Optional::toJavaUtil} will not work, because it\n",
        "140": "   * could refer to either the static or instance version of this method. Write out the lambda\n",
        "141": "   * expression {@code o -> Optional.toJavaUtil(o)} instead.\n",
        "142": "   *\n",
        "143": "   * @since 21.0\n",
        "147": "    return googleOptional == null ? null : googleOptional.toJavaUtil();\n",
        "274": "  /**\n",
        "275": "   * Returns the equivalent {@code java.util.Optional} value to this optional.\n",
        "276": "   *\n",
        "277": "   * <p>Unfortunately, the method reference {@code Optional::toJavaUtil} will not work, because it\n",
        "278": "   * could refer to either the static or instance version of this method. Write out the lambda\n",
        "279": "   * expression {@code o -> o.toJavaUtil()} instead.\n",
        "280": "   *\n",
        "281": "   * @since 21.0\n",
        "282": "   */\n",
        "283": "  public java.util.Optional<T> toJavaUtil() {\n",
        "284": "    return java.util.Optional.ofNullable(orNull());\n",
        "285": "  }\n",
        "286": "\n"
    },
    "removed": {
        "136": "    return (googleOptional == null)\n",
        "137": "        ? null\n",
        "138": "        : java.util.Optional.ofNullable(googleOptional.orNull());\n"
    }
}