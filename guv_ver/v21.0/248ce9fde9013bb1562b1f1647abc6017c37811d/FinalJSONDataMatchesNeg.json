[{"func":{"oldfunccode":"248ce9fde9013bb1562b1f1647abc6017c37811d/Codes_neg/Match_oldfunccode_248ce9fde9013bb1562b1f1647abc6017c37811d_1.txt","newfunccode":"248ce9fde9013bb1562b1f1647abc6017c37811d/Codes_neg/Match_newfunccode_248ce9fde9013bb1562b1f1647abc6017c37811d_1.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/248ce9fde9013bb1562b1f1647abc6017c37811d/ImmutableDirectedGraph","pathinproj":"guava/src/com/google/common/graph/ImmutableDirectedGraph.java","addlines":[168,185],"dellines":[192,208,193,194,205,206,191,207],"addcode":["    return checkedConnections(node).inEdges();\n","    return checkedConnections(node).inEdges();\n"],"delcode":["    checkNotNull(node, \"node\");\n","    DirectedIncidentEdges<E> incidentEdges = nodeToIncidentEdges.get(node);\n","    checkArgument(incidentEdges != null, NODE_NOT_IN_GRAPH, node);\n","    return incidentEdges.inEdges();\n","    checkNotNull(node, \"node\");\n","    DirectedIncidentEdges<E> incidentEdges = nodeToIncidentEdges.get(node);\n","    checkArgument(incidentEdges != null, NODE_NOT_IN_GRAPH, node);\n","    return Collections.unmodifiableSet(incidentEdges.inEdges());\n"],"methodSig":"public Set<E> inEdges(Object node)"},"doc":{"oldfunccode":"248ce9fde9013bb1562b1f1647abc6017c37811d/Codes_neg/Match_olddocfunccode_248ce9fde9013bb1562b1f1647abc6017c37811d_1.txt","newfunccode":"248ce9fde9013bb1562b1f1647abc6017c37811d/Codes_neg/Match_newdocfunccode_248ce9fde9013bb1562b1f1647abc6017c37811d_1.txt","newdoc":"","newJdoc":"248ce9fde9013bb1562b1f1647abc6017c37811d/Codes_neg/Match_newdocnewJdoc_248ce9fde9013bb1562b1f1647abc6017c37811d_1.txt","olddoc":"","oldJdoc":"248ce9fde9013bb1562b1f1647abc6017c37811d/Codes_neg/Match_olddocJdoc_248ce9fde9013bb1562b1f1647abc6017c37811d_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/248ce9fde9013bb1562b1f1647abc6017c37811d/ImmutableUndirectedGraph","pathinproj":"guava/src/com/google/common/graph/ImmutableUndirectedGraph.java","addlines":[311],"dellines":[328],"addcode":["     * @see Graph#addEdge\n"],"delcode":["     * @see Graph#addEdge(e, n1, n2)\n"],"methodSig":"public Builder<N, E> addGraph(UndirectedGraph<N, E> graph)"},"id":1,"flag":1,"commit":"248ce9fde9013bb1562b1f1647abc6017c37811d"}]