{
    "addition": {
        "37": "import java.util.ArrayList;\n",
        "433": "\n",
        "434": "  public void testKeysSpliterator() {\n",
        "435": "    List<Entry<String, Integer>> expectedEntries =\n",
        "436": "        asList(\n",
        "437": "            Maps.immutableEntry(\"foo\", 2),\n",
        "438": "            Maps.immutableEntry(\"foo\", 3),\n",
        "439": "            Maps.immutableEntry(\"bar\", 4),\n",
        "440": "            Maps.immutableEntry(\"bar\", 5),\n",
        "441": "            Maps.immutableEntry(\"foo\", 6));\n",
        "442": "    Multimap<String, Integer> multimap = LinkedHashMultimap.create();\n",
        "443": "    for (Entry<String, Integer> entry : expectedEntries) {\n",
        "444": "      multimap.put(entry.getKey(), entry.getValue());\n",
        "445": "    }\n",
        "446": "    List<String> actualKeys = new ArrayList<>();\n",
        "447": "    multimap.keys().spliterator().forEachRemaining(actualKeys::add);\n",
        "448": "    assertThat(actualKeys)\n",
        "449": "        .containsExactlyElementsIn(Lists.transform(expectedEntries, Entry::getKey))\n",
        "450": "        .inOrder();\n",
        "451": "  }\n",
        "452": "\n",
        "453": "  public void testEntriesSpliterator() {\n",
        "454": "    List<Entry<String, Integer>> expectedEntries =\n",
        "455": "        asList(\n",
        "456": "            Maps.immutableEntry(\"foo\", 2),\n",
        "457": "            Maps.immutableEntry(\"foo\", 3),\n",
        "458": "            Maps.immutableEntry(\"bar\", 4),\n",
        "459": "            Maps.immutableEntry(\"bar\", 5),\n",
        "460": "            Maps.immutableEntry(\"foo\", 6));\n",
        "461": "    Multimap<String, Integer> multimap = LinkedHashMultimap.create();\n",
        "462": "    for (Entry<String, Integer> entry : expectedEntries) {\n",
        "463": "      multimap.put(entry.getKey(), entry.getValue());\n",
        "464": "    }\n",
        "465": "    List<Entry<String, Integer>> actualEntries = new ArrayList<>();\n",
        "466": "    multimap.entries().spliterator().forEachRemaining(actualEntries::add);\n",
        "467": "    assertThat(actualEntries).containsExactlyElementsIn(expectedEntries).inOrder();\n",
        "468": "  }\n",
        "469": "\n",
        "470": "  public void testValuesSpliterator() {\n",
        "471": "    List<Entry<String, Integer>> expectedEntries =\n",
        "472": "        asList(\n",
        "473": "            Maps.immutableEntry(\"foo\", 2),\n",
        "474": "            Maps.immutableEntry(\"foo\", 3),\n",
        "475": "            Maps.immutableEntry(\"bar\", 4),\n",
        "476": "            Maps.immutableEntry(\"bar\", 5),\n",
        "477": "            Maps.immutableEntry(\"foo\", 6));\n",
        "478": "    Multimap<String, Integer> multimap = LinkedHashMultimap.create();\n",
        "479": "    for (Entry<String, Integer> entry : expectedEntries) {\n",
        "480": "      multimap.put(entry.getKey(), entry.getValue());\n",
        "481": "    }\n",
        "482": "    List<Integer> actualValues = new ArrayList<>();\n",
        "483": "    multimap.values().spliterator().forEachRemaining(actualValues::add);\n",
        "484": "    assertThat(actualValues)\n",
        "485": "        .containsExactlyElementsIn(Lists.transform(expectedEntries, Entry::getValue))\n",
        "486": "        .inOrder();\n",
        "487": "  }\n"
    },
    "removed": {}
}