{
    "addition": {
        "26": "import com.google.common.annotations.Beta;\n",
        "39": "import java.util.Spliterator;\n",
        "40": "import java.util.function.Consumer;\n",
        "41": "import java.util.function.UnaryOperator;\n",
        "42": "import java.util.stream.Collector;\n",
        "62": "\n",
        "63": "  /**\n",
        "64": "   * Returns a {@code Collector} that accumulates the input elements into a new\n",
        "65": "   * {@code ImmutableList}, in encounter order.\n",
        "66": "   *\n",
        "67": "   * @since 21.0\n",
        "68": "   */\n",
        "69": "  @Beta\n",
        "70": "  public static <E> Collector<E, ?, ImmutableList<E>> toImmutableList() {\n",
        "71": "    return CollectCollectors.toImmutableList();\n",
        "72": "  }\n",
        "73": "\n",
        "404": "  @Override\n",
        "405": "  public void forEach(Consumer<? super E> consumer) {\n",
        "406": "    checkNotNull(consumer);\n",
        "407": "    int n = size();\n",
        "408": "    for (int i = 0; i < n; i++) {\n",
        "409": "      consumer.accept(get(i));\n",
        "410": "    }\n",
        "411": "  }\n",
        "412": "\n",
        "545": "  /**\n",
        "546": "   * Guaranteed to throw an exception and leave the list unmodified.\n",
        "547": "   *\n",
        "548": "   * @throws UnsupportedOperationException always\n",
        "549": "   * @deprecated Unsupported operation.\n",
        "550": "   */\n",
        "551": "  @Deprecated\n",
        "552": "  @Override\n",
        "553": "  public final void replaceAll(UnaryOperator<E> operator) {\n",
        "554": "    throw new UnsupportedOperationException();\n",
        "555": "  }\n",
        "556": "\n",
        "557": "  /**\n",
        "558": "   * Guaranteed to throw an exception and leave the list unmodified.\n",
        "559": "   *\n",
        "560": "   * @throws UnsupportedOperationException always\n",
        "561": "   * @deprecated Unsupported operation.\n",
        "562": "   */\n",
        "563": "  @Deprecated\n",
        "564": "  @Override\n",
        "565": "  public final void sort(Comparator<? super E> c) {\n",
        "566": "    throw new UnsupportedOperationException();\n",
        "567": "  }\n",
        "568": "\n",
        "579": "  @Override\n",
        "580": "  public Spliterator<E> spliterator() {\n",
        "581": "    return CollectSpliterators.indexed(size(), SPLITERATOR_CHARACTERISTICS, this::get);\n",
        "582": "  }\n",
        "583": "\n",
        "808": "    @CanIgnoreReturnValue\n",
        "809": "    @Override\n",
        "810": "    Builder<E> combine(ArrayBasedBuilder<E> builder) {\n",
        "811": "      super.combine(builder);\n",
        "812": "      return this;\n",
        "813": "    }\n",
        "814": "\n"
    },
    "removed": {}
}