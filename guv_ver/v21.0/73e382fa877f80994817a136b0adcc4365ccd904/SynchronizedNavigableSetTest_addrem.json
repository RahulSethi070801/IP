{
    "addition": {
        "45": "    TestSet<E> inner =\n",
        "46": "        new TestSet<E>(new TreeSet<E>((Comparator<E>) Ordering.natural().nullsFirst()), null);\n",
        "47": "    NavigableSet<E> outer = Synchronized.navigableSet(inner, null);\n",
        "48": "    inner.mutex = outer;\n",
        "152": "        NavigableSetTestSuiteBuilder.using(\n",
        "153": "                new TestStringSortedSetGenerator() {\n",
        "154": "\n",
        "155": "                  @Override\n",
        "156": "                  protected NavigableSet<String> create(String[] elements) {\n",
        "157": "                    NavigableSet<String> innermost = new SafeTreeSet<String>();\n",
        "158": "                    Collections.addAll(innermost, elements);\n",
        "159": "                    TestSet<String> inner = new TestSet<String>(innermost, null);\n",
        "160": "                    NavigableSet<String> outer = Synchronized.navigableSet(inner, null);\n",
        "161": "                    inner.mutex = outer;\n",
        "162": "                    return outer;\n",
        "163": "                  }\n",
        "164": "\n",
        "165": "                  @Override\n",
        "166": "                  public List<String> order(List<String> insertionOrder) {\n",
        "167": "                    return Ordering.natural().sortedCopy(insertionOrder);\n",
        "168": "                  }\n",
        "169": "                })\n",
        "170": "            .named(\"Sets.synchronizedNavigableSet[SafeTreeSet]\")\n",
        "171": "            .withFeatures(\n",
        "172": "                CollectionSize.ANY,\n",
        "173": "                CollectionFeature.KNOWN_ORDER,\n",
        "174": "                CollectionFeature.GENERAL_PURPOSE,\n",
        "175": "                CollectionFeature.SERIALIZABLE)\n",
        "182": "    NavigableSet<String> set = create();\n",
        "183": "    NavigableSet<String> descendingSet = set.descendingSet();\n",
        "185": "    assertSame(set, ((SynchronizedNavigableSet<String>) descendingSet).mutex);\n",
        "189": "    NavigableSet<String> set = create();\n",
        "190": "    SortedSet<String> headSet = set.headSet(\"a\");\n",
        "192": "    assertSame(set, ((SynchronizedSortedSet<String>) headSet).mutex);\n",
        "196": "    NavigableSet<String> set = create();\n",
        "197": "    NavigableSet<String> headSet = set.headSet(\"a\", true);\n",
        "199": "    assertSame(set, ((SynchronizedNavigableSet<String>) headSet).mutex);\n",
        "203": "    NavigableSet<String> set = create();\n",
        "204": "    SortedSet<String> subSet = set.subSet(\"a\", \"b\");\n",
        "206": "    assertSame(set, ((SynchronizedSortedSet<String>) subSet).mutex);\n",
        "210": "    NavigableSet<String> set = create();\n",
        "211": "    NavigableSet<String> subSet = set.subSet(\"a\", false, \"b\", true);\n",
        "213": "    assertSame(set, ((SynchronizedNavigableSet<String>) subSet).mutex);\n",
        "217": "    NavigableSet<String> set = create();\n",
        "218": "    SortedSet<String> tailSet = set.tailSet(\"a\");\n",
        "220": "    assertSame(set, ((SynchronizedSortedSet<String>) tailSet).mutex);\n",
        "224": "    NavigableSet<String> set = create();\n",
        "225": "    NavigableSet<String> tailSet = set.tailSet(\"a\", true);\n",
        "227": "    assertSame(set, ((SynchronizedNavigableSet<String>) tailSet).mutex);\n"
    },
    "removed": {
        "42": "  private static final Object MUTEX = new Integer(1); // something Serializable\n",
        "46": "    TestSet<E> inner = new TestSet<E>(\n",
        "47": "        new TreeSet<E>((Comparator<E>) Ordering.natural().nullsFirst()), MUTEX);\n",
        "48": "    NavigableSet<E> outer =\n",
        "49": "        Synchronized.navigableSet(inner, MUTEX);\n",
        "153": "        NavigableSetTestSuiteBuilder.using(new TestStringSortedSetGenerator() {\n",
        "154": "\n",
        "155": "          @Override protected NavigableSet<String> create(String[] elements) {\n",
        "156": "            NavigableSet<String> innermost = new SafeTreeSet<String>();\n",
        "157": "            Collections.addAll(innermost, elements);\n",
        "158": "            TestSet<String> inner = new TestSet<String>(innermost, MUTEX);\n",
        "159": "            NavigableSet<String> outer =\n",
        "160": "                Synchronized.navigableSet(inner, MUTEX);\n",
        "161": "            return outer;\n",
        "162": "          }\n",
        "163": "\n",
        "164": "          @Override public List<String> order(List<String> insertionOrder) {\n",
        "165": "            return Ordering.natural().sortedCopy(insertionOrder);\n",
        "166": "          }\n",
        "167": "        }).named(\"Sets.synchronizedNavigableSet[SafeTreeSet]\")\n",
        "168": "            .withFeatures(CollectionSize.ANY, CollectionFeature.KNOWN_ORDER,\n",
        "169": "                CollectionFeature.GENERAL_PURPOSE, CollectionFeature.SERIALIZABLE)\n",
        "176": "    NavigableSet<String> map = create();\n",
        "177": "    NavigableSet<String> descendingSet = map.descendingSet();\n",
        "179": "    assertSame(MUTEX, ((SynchronizedNavigableSet<String>) descendingSet).mutex);\n",
        "183": "    NavigableSet<String> map = create();\n",
        "184": "    SortedSet<String> headSet = map.headSet(\"a\");\n",
        "186": "    assertSame(MUTEX, ((SynchronizedSortedSet<String>) headSet).mutex);\n",
        "190": "    NavigableSet<String> map = create();\n",
        "191": "    NavigableSet<String> headSet = map.headSet(\"a\", true);\n",
        "193": "    assertSame(MUTEX, ((SynchronizedNavigableSet<String>) headSet).mutex);\n",
        "197": "    NavigableSet<String> map = create();\n",
        "198": "    SortedSet<String> subSet = map.subSet(\"a\", \"b\");\n",
        "200": "    assertSame(MUTEX, ((SynchronizedSortedSet<String>) subSet).mutex);\n",
        "204": "    NavigableSet<String> map = create();\n",
        "205": "    NavigableSet<String> subSet = map.subSet(\"a\", false, \"b\", true);\n",
        "207": "    assertSame(MUTEX, ((SynchronizedNavigableSet<String>) subSet).mutex);\n",
        "211": "    NavigableSet<String> map = create();\n",
        "212": "    SortedSet<String> tailSet = map.tailSet(\"a\");\n",
        "214": "    assertSame(MUTEX, ((SynchronizedSortedSet<String>) tailSet).mutex);\n",
        "218": "    NavigableSet<String> map = create();\n",
        "219": "    NavigableSet<String> tailSet = map.tailSet(\"a\", true);\n",
        "221": "    assertSame(MUTEX, ((SynchronizedNavigableSet<String>) tailSet).mutex);\n"
    }
}