
   * Returns a {@link Collector} that accumulates elements into an {@code ImmutableListMultimap}
   * whose keys and values are the result of applying the provided mapping functions to the input
   * elements.
   *
   * <p>For streams with {@linkplain java.util.stream#Ordering defined encounter order}, that order
   * is preserved, but entries are {@linkplain ImmutableMultimap#iteration grouped by key}.
   *
   * Example:
   * <pre>   {@code
   *
   *   static final Multimap<Character, String> FIRST_LETTER_MULTIMAP =
   *       Stream.of("banana", "apple", "carrot", "asparagus", "cherry")
   *           .collect(toImmutableListMultimap(str -> str.charAt(0), str -> str.substring(1)));
   *
   *   // is equivalent to
   *
   *   static final Multimap<Character, String> FIRST_LETTER_MULTIMAP =
   *       new ImmutableListMultimap.Builder<Character, String>()
   *           .put('b', "anana")
   *           .putAll('a', "pple", "sparagus")
   *           .putAll('c', "arrot", "herry")
   *           .build();}</pre>
   *
   * @since 21.0
   