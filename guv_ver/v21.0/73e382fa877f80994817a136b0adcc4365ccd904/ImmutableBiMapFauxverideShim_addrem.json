{
    "addition": {
        "1": "/*\n",
        "2": " * Copyright (C) 2015 The Guava Authors\n",
        "3": " *\n",
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "7": " *\n",
        "8": " * http://www.apache.org/licenses/LICENSE-2.0\n",
        "9": " *\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "15": " */\n",
        "16": "\n",
        "17": "package com.google.common.collect;\n",
        "18": "\n",
        "19": "import com.google.common.annotations.GwtIncompatible;\n",
        "20": "import java.util.function.BinaryOperator;\n",
        "21": "import java.util.function.Function;\n",
        "22": "import java.util.stream.Collector;\n",
        "23": "\n",
        "24": "/**\n",
        "25": " * \"Overrides\" the {@link ImmutableMap} static methods that lack\n",
        "26": " * {@link ImmutableBiMap} equivalents with deprecated, exception-throwing\n",
        "27": " * versions. See {@link ImmutableSortedSetFauxverideShim} for details.\n",
        "28": " *\n",
        "29": " * @author Louis Wasserman\n",
        "30": " */\n",
        "31": "@GwtIncompatible\n",
        "32": "abstract class ImmutableBiMapFauxverideShim<K, V> extends ImmutableMap<K, V> {\n",
        "33": "  /**\n",
        "34": "   * Not supported. Use {@link ImmutableBiMap#toImmutableBiMap} instead. This method exists only to\n",
        "35": "   * hide {@link ImmutableMap#toImmutableMap(Function, Function)} from consumers of {@code\n",
        "36": "   * ImmutableBiMap}.\n",
        "37": "   *\n",
        "38": "   * @throws UnsupportedOperationException always\n",
        "39": "   * @deprecated Use {@link ImmutableBiMap#toImmutableBiMap}.\n",
        "40": "   */\n",
        "41": "  @Deprecated\n",
        "42": "  public static <T, K, V> Collector<T, ?, ImmutableMap<K, V>> toImmutableMap(\n",
        "43": "      Function<? super T, ? extends K> keyFunction,\n",
        "44": "      Function<? super T, ? extends V> valueFunction) {\n",
        "45": "    throw new UnsupportedOperationException();\n",
        "46": "  }\n",
        "47": "  \n",
        "48": "  /**\n",
        "49": "   * Not supported. This method does not make sense for {@code BiMap}. This method exists only to\n",
        "50": "   * hide {@link ImmutableMap#toImmutableMap(Function, Function, BinaryOperator)} from consumers of\n",
        "51": "   * {@code ImmutableBiMap}.\n",
        "52": "   *\n",
        "53": "   * @throws UnsupportedOperationException always\n",
        "54": "   * @deprecated\n",
        "55": "   */\n",
        "56": "  @Deprecated\n",
        "57": "  public static <T, K, V> Collector<T, ?, ImmutableMap<K, V>> toImmutableMap(\n",
        "58": "      Function<? super T, ? extends K> keyFunction,\n",
        "59": "      Function<? super T, ? extends V> valueFunction,\n",
        "60": "      BinaryOperator<V> mergeFunction) {\n",
        "61": "    throw new UnsupportedOperationException();\n",
        "62": "  }\n",
        "63": "}\n"
    },
    "removed": {}
}