{
    "addition": {
        "53": "import com.google.common.collect.testing.MapTestSuiteBuilder;\n",
        "105": "    suite.addTest(MapTestSuiteBuilder\n",
        "111": "    suite.addTest(MapTestSuiteBuilder\n",
        "118": "    suite.addTest(MapTestSuiteBuilder\n",
        "125": "    suite.addTest(MapTestSuiteBuilder\n",
        "134": "    suite.addTest(MapTestSuiteBuilder\n",
        "141": "    suite.addTest(MapTestSuiteBuilder\n",
        "148": "    suite.addTest(MapTestSuiteBuilder\n",
        "155": "    suite.addTest(MapTestSuiteBuilder\n",
        "162": "    suite.addTest(MapTestSuiteBuilder\n",
        "169": "    suite.addTest(MapTestSuiteBuilder\n",
        "177": "    suite.addTest(MapTestSuiteBuilder\n",
        "1735": "  public void testRemoveIfWithConcurrentModification() {\n",
        "1736": "    LocalCache<Integer, Integer> map =\n",
        "1737": "        makeLocalCache(createCacheBuilder().concurrencyLevel(1).initialCapacity(1));\n",
        "1738": "    map.put(1, 1);\n",
        "1739": "    map.put(2, 1);\n",
        "1740": "    map.put(3, 1);\n",
        "1741": "    map.entrySet()\n",
        "1742": "        .removeIf(\n",
        "1743": "            entry -> {\n",
        "1744": "              if (entry.getValue().equals(1)) {\n",
        "1745": "                map.put(entry.getKey(), 2);\n",
        "1746": "                return true;\n",
        "1747": "              } else {\n",
        "1748": "                return false;\n",
        "1749": "              }\n",
        "1750": "            });\n",
        "1751": "    assertEquals(3, map.size());\n",
        "1752": "    assertFalse(map.containsValue(1));\n",
        "1753": "  }\n",
        "1754": "\n",
        "1755": "  public void testRemoveIfWithConcurrentRemoval() {\n",
        "1756": "    LocalCache<Integer, Integer> map =\n",
        "1757": "        makeLocalCache(createCacheBuilder().concurrencyLevel(1).initialCapacity(1));\n",
        "1758": "    map.put(0, 1);\n",
        "1759": "    map.put(1, 1);\n",
        "1760": "    map.put(2, 1);\n",
        "1761": "    map.entrySet()\n",
        "1762": "        .removeIf(\n",
        "1763": "            entry -> {\n",
        "1764": "              assertThat(entry.getValue()).isNotNull();\n",
        "1765": "              map.remove((entry.getKey() + 1) % 3);\n",
        "1766": "              return false;\n",
        "1767": "            });\n",
        "1768": "    assertEquals(1, map.size());\n",
        "1769": "  }\n",
        "1770": "\n"
    },
    "removed": {
        "53": "import com.google.common.collect.testing.ConcurrentMapTestSuiteBuilder;\n",
        "105": "    suite.addTest(ConcurrentMapTestSuiteBuilder\n",
        "111": "    suite.addTest(ConcurrentMapTestSuiteBuilder\n",
        "118": "    suite.addTest(ConcurrentMapTestSuiteBuilder\n",
        "125": "    suite.addTest(ConcurrentMapTestSuiteBuilder\n",
        "134": "    suite.addTest(ConcurrentMapTestSuiteBuilder\n",
        "141": "    suite.addTest(ConcurrentMapTestSuiteBuilder\n",
        "148": "    suite.addTest(ConcurrentMapTestSuiteBuilder\n",
        "155": "    suite.addTest(ConcurrentMapTestSuiteBuilder\n",
        "162": "    suite.addTest(ConcurrentMapTestSuiteBuilder\n",
        "169": "    suite.addTest(ConcurrentMapTestSuiteBuilder\n",
        "177": "    suite.addTest(ConcurrentMapTestSuiteBuilder\n"
    }
}