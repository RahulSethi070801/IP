{
    "addition": {
        "20": "import static com.google.common.base.Preconditions.checkNotNull;\n",
        "23": "import com.google.common.annotations.Beta;\n",
        "36": "import java.util.Spliterator;\n",
        "37": "import java.util.function.Consumer;\n",
        "38": "import java.util.stream.Collector;\n",
        "50": "  static final int SPLITERATOR_CHARACTERISTICS =\n",
        "51": "      ImmutableCollection.SPLITERATOR_CHARACTERISTICS | Spliterator.DISTINCT;\n",
        "52": "\n",
        "53": "  /**\n",
        "54": "   * Returns a {@code Collector} that accumulates the input elements into a new\n",
        "55": "   * {@code ImmutableSet}.  Elements are added in encounter order; if the\n",
        "56": "   * elements contain duplicates (according to {@link Object#equals(Object)}),\n",
        "57": "   * only the first duplicate in encounter order will appear in the result.\n",
        "58": "   *\n",
        "59": "   * @since 21.0\n",
        "60": "   */\n",
        "61": "  @Beta\n",
        "62": "  public static <E> Collector<E, ?, ImmutableSet<E>> toImmutableSet() {\n",
        "63": "    return CollectCollectors.toImmutableSet();\n",
        "64": "  }\n",
        "65": "\n",
        "380": "    @Override\n",
        "381": "    public Spliterator<E> spliterator() {\n",
        "382": "      return CollectSpliterators.indexed(size(), SPLITERATOR_CHARACTERISTICS, this::get);\n",
        "383": "    }\n",
        "384": "\n",
        "385": "    @Override\n",
        "386": "    public void forEach(Consumer<? super E> consumer) {\n",
        "387": "      checkNotNull(consumer);\n",
        "388": "      int n = size();\n",
        "389": "      for (int i = 0; i < n; i++) {\n",
        "390": "        consumer.accept(get(i));\n",
        "391": "      }\n",
        "392": "    }\n",
        "393": "\n",
        "536": "    @CanIgnoreReturnValue\n",
        "537": "    @Override\n",
        "538": "    Builder<E> combine(ArrayBasedBuilder<E> builder) {\n",
        "539": "      super.combine(builder);\n",
        "540": "      return this;\n",
        "541": "    }\n",
        "542": "\n"
    },
    "removed": {}
}