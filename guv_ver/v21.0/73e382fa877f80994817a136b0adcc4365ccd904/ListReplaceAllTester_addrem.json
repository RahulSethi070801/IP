{
    "addition": {
        "1": "/*\n",
        "2": " * Copyright (C) 2015 The Guava Authors\n",
        "3": " *\n",
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "7": " *\n",
        "8": " * http://www.apache.org/licenses/LICENSE-2.0\n",
        "9": " *\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "15": " */\n",
        "16": "\n",
        "17": "package com.google.common.collect.testing.testers;\n",
        "18": "\n",
        "19": "import static com.google.common.collect.testing.features.CollectionSize.ZERO;\n",
        "20": "import static com.google.common.collect.testing.features.ListFeature.SUPPORTS_SET;\n",
        "21": "\n",
        "22": "import com.google.common.annotations.GwtCompatible;\n",
        "23": "import com.google.common.collect.testing.features.CollectionSize;\n",
        "24": "import com.google.common.collect.testing.features.ListFeature;\n",
        "25": "import java.util.Collections;\n",
        "26": "import java.util.List;\n",
        "27": "\n",
        "28": "/**\n",
        "29": " * A generic JUnit test which tests {@link List#replaceAll}. Can't be\n",
        "30": " * invoked directly; please see\n",
        "31": " * {@link com.google.common.collect.testing.ListTestSuiteBuilder}.\n",
        "32": " *\n",
        "33": " * @author Louis Wasserman\n",
        "34": " */\n",
        "35": "@GwtCompatible\n",
        "36": "public class ListReplaceAllTester<E> extends AbstractListTester<E> {\n",
        "37": "  @ListFeature.Require(SUPPORTS_SET)\n",
        "38": "  public void testReplaceAll() {\n",
        "39": "    getList().replaceAll(e -> samples.e3());\n",
        "40": "    expectContents(Collections.nCopies(getNumElements(), samples.e3()));\n",
        "41": "  }\n",
        "42": "\n",
        "43": "  @ListFeature.Require(SUPPORTS_SET)\n",
        "44": "  public void testReplaceAll_changesSome() {\n",
        "45": "    getList().replaceAll(e -> (e.equals(samples.e0())) ? samples.e3() : e);\n",
        "46": "    E[] expected = createSamplesArray();\n",
        "47": "    for (int i = 0; i < expected.length; i++) {\n",
        "48": "      if (expected[i].equals(samples.e0())) {\n",
        "49": "        expected[i] = samples.e3();\n",
        "50": "      }\n",
        "51": "    }\n",
        "52": "    expectContents(expected);\n",
        "53": "  }\n",
        "54": "\n",
        "55": "  @CollectionSize.Require(absent = ZERO)\n",
        "56": "  @ListFeature.Require(absent = SUPPORTS_SET)\n",
        "57": "  public void testReplaceAll_unsupported() {\n",
        "58": "    try {\n",
        "59": "      getList().replaceAll(e -> e);\n",
        "60": "      fail(\"replaceAll() should throw UnsupportedOperationException\");\n",
        "61": "    } catch (UnsupportedOperationException expected) {\n",
        "62": "    }\n",
        "63": "    expectUnchanged();\n",
        "64": "  }\n",
        "65": "}\n"
    },
    "removed": {}
}