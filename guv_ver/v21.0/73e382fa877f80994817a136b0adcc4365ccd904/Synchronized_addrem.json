{
    "addition": {
        "43": "import java.util.Spliterator;\n",
        "44": "import java.util.function.BiConsumer;\n",
        "45": "import java.util.function.BiFunction;\n",
        "46": "import java.util.function.Consumer;\n",
        "47": "import java.util.function.Function;\n",
        "48": "import java.util.function.Predicate;\n",
        "49": "import java.util.function.UnaryOperator;\n",
        "50": "import java.util.stream.Stream;\n",
        "171": "    @Override\n",
        "172": "    public Spliterator<E> spliterator() {\n",
        "173": "      synchronized (mutex) {\n",
        "174": "        return delegate().spliterator();\n",
        "175": "      }\n",
        "176": "    }\n",
        "177": "\n",
        "178": "    @Override\n",
        "179": "    public Stream<E> stream() {\n",
        "180": "      synchronized (mutex) {\n",
        "181": "        return delegate().stream();\n",
        "182": "      }\n",
        "183": "    }\n",
        "184": "\n",
        "185": "    @Override\n",
        "186": "    public Stream<E> parallelStream() {\n",
        "187": "      synchronized (mutex) {\n",
        "188": "        return delegate().parallelStream();\n",
        "189": "      }\n",
        "190": "    }\n",
        "191": "\n",
        "192": "    @Override\n",
        "193": "    public void forEach(Consumer<? super E> action) {\n",
        "194": "      synchronized (mutex) {\n",
        "195": "        delegate().forEach(action);\n",
        "196": "      }\n",
        "197": "    }\n",
        "198": "\n",
        "220": "    @Override\n",
        "221": "    public boolean removeIf(Predicate<? super E> filter) {\n",
        "222": "      synchronized (mutex) {\n",
        "223": "        return delegate().removeIf(filter);\n",
        "224": "      }\n",
        "225": "    }\n",
        "226": "\n",
        "421": "    @Override\n",
        "422": "    public void replaceAll(UnaryOperator<E> operator) {\n",
        "423": "      synchronized (mutex) {\n",
        "424": "        delegate().replaceAll(operator);\n",
        "425": "      }\n",
        "426": "    }\n",
        "427": "\n",
        "428": "    @Override\n",
        "429": "    public void sort(Comparator<? super E> c) {\n",
        "430": "      synchronized (mutex) {\n",
        "431": "        delegate().sort(c);\n",
        "432": "      }\n",
        "433": "    }\n",
        "434": "\n",
        "713": "    @Override\n",
        "714": "    public void forEach(BiConsumer<? super K, ? super V> action) {\n",
        "715": "      synchronized (mutex) {\n",
        "716": "        delegate().forEach(action);\n",
        "717": "      }\n",
        "718": "    }\n",
        "719": "\n",
        "1072": "    @Override\n",
        "1073": "    public void forEach(BiConsumer<? super K, ? super V> action) {\n",
        "1074": "      synchronized (mutex) {\n",
        "1075": "        delegate().forEach(action);\n",
        "1076": "      }\n",
        "1077": "    }\n",
        "1078": "\n",
        "1086": "    @Override\n",
        "1087": "    public V getOrDefault(Object key, V defaultValue) {\n",
        "1088": "      synchronized (mutex) {\n",
        "1089": "        return delegate().getOrDefault(key, defaultValue);\n",
        "1090": "      }\n",
        "1091": "    }\n",
        "1092": "\n",
        "1117": "    @Override\n",
        "1118": "    public V putIfAbsent(K key, V value) {\n",
        "1119": "      synchronized (mutex) {\n",
        "1120": "        return delegate().putIfAbsent(key, value);\n",
        "1121": "      }\n",
        "1122": "    }\n",
        "1123": "\n",
        "1124": "    @Override\n",
        "1125": "    public boolean replace(K key, V oldValue, V newValue) {\n",
        "1126": "      synchronized (mutex) {\n",
        "1127": "        return delegate().replace(key, oldValue, newValue);\n",
        "1128": "      }\n",
        "1129": "    }\n",
        "1130": "\n",
        "1131": "    @Override\n",
        "1132": "    public V replace(K key, V value) {\n",
        "1133": "      synchronized (mutex) {\n",
        "1134": "        return delegate().replace(key, value);\n",
        "1135": "      }\n",
        "1136": "    }\n",
        "1137": "\n",
        "1138": "    @Override\n",
        "1139": "    public V computeIfAbsent(K key, Function<? super K, ? extends V> mappingFunction) {\n",
        "1140": "      synchronized (mutex) {\n",
        "1141": "        return delegate().computeIfAbsent(key, mappingFunction);\n",
        "1142": "      }\n",
        "1143": "    }\n",
        "1144": "\n",
        "1145": "    @Override\n",
        "1146": "    public V computeIfPresent(\n",
        "1147": "        K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction) {\n",
        "1148": "      synchronized (mutex) {\n",
        "1149": "        return delegate().computeIfPresent(key, remappingFunction);\n",
        "1150": "      }\n",
        "1151": "    }\n",
        "1152": "\n",
        "1153": "    @Override\n",
        "1154": "    public V compute(K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction) {\n",
        "1155": "      synchronized (mutex) {\n",
        "1156": "        return delegate().compute(key, remappingFunction);\n",
        "1157": "      }\n",
        "1158": "    }\n",
        "1159": "\n",
        "1160": "    @Override\n",
        "1161": "    public V merge(\n",
        "1162": "        K key, V value, BiFunction<? super V, ? super V, ? extends V> remappingFunction) {\n",
        "1163": "      synchronized (mutex) {\n",
        "1164": "        return delegate().merge(key, value, remappingFunction);\n",
        "1165": "      }\n",
        "1166": "    }\n",
        "1167": "\n",
        "1175": "    @Override\n",
        "1176": "    public void replaceAll(BiFunction<? super K, ? super V, ? extends V> function) {\n",
        "1177": "      synchronized (mutex) {\n",
        "1178": "        delegate().replaceAll(function);\n",
        "1179": "      }\n",
        "1180": "    }\n",
        "1181": "\n",
        "1189": "    @Override\n",
        "1190": "    public boolean remove(Object key, Object value) {\n",
        "1191": "      synchronized (mutex) {\n",
        "1192": "        return delegate().remove(key, value);\n",
        "1193": "      }\n",
        "1194": "    }\n",
        "1195": "\n"
    },
    "removed": {}
}