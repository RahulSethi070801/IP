[{"func":{"oldfunccode":"517267d764f32383fdac36fcd6eabad855dd2f93/Codes_neg/Match_oldfunccode_517267d764f32383fdac36fcd6eabad855dd2f93_1.txt","newfunccode":"517267d764f32383fdac36fcd6eabad855dd2f93/Codes_neg/Match_newfunccode_517267d764f32383fdac36fcd6eabad855dd2f93_1.txt","newdoc":" SIZE trumps EXPIRED\n","newJdoc":"517267d764f32383fdac36fcd6eabad855dd2f93/Codes_neg/Match_newfuncnewJdoc_517267d764f32383fdac36fcd6eabad855dd2f93_1.txt","olddoc":" SIZE trumps EXPIRED\n","oldJdoc":"517267d764f32383fdac36fcd6eabad855dd2f93/Codes_neg/Match_oldfuncoldJdoc_517267d764f32383fdac36fcd6eabad855dd2f93_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/517267d764f32383fdac36fcd6eabad855dd2f93/MapMaker","pathinproj":"guava/src/com/google/common/collect/MapMaker.java","addlines":[214],"dellines":[215,216,217],"addcode":["        this.maximumSize == UNSET_INT, \"maximum size was already set to %s\", this.maximumSize);\n"],"delcode":["        this.maximumSize == UNSET_INT,\n","        \"maximum size was already set to %s\",\n","        this.maximumSize);\n"],"methodSig":" MapMaker maximumSize(int size)"},"doc":{"oldfunccode":"517267d764f32383fdac36fcd6eabad855dd2f93/Codes_neg/Match_olddocfunccode_517267d764f32383fdac36fcd6eabad855dd2f93_1.txt","newfunccode":"517267d764f32383fdac36fcd6eabad855dd2f93/Codes_neg/Match_newdocfunccode_517267d764f32383fdac36fcd6eabad855dd2f93_1.txt","newdoc":" java.lang.ref.WeakReference\n","newJdoc":"517267d764f32383fdac36fcd6eabad855dd2f93/Codes_neg/Match_newdocnewJdoc_517267d764f32383fdac36fcd6eabad855dd2f93_1.txt","olddoc":" java.lang.ref.WeakReference\n","oldJdoc":"517267d764f32383fdac36fcd6eabad855dd2f93/Codes_neg/Match_olddocJdoc_517267d764f32383fdac36fcd6eabad855dd2f93_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v21.0/517267d764f32383fdac36fcd6eabad855dd2f93/MapMaker","pathinproj":"guava/src/com/google/common/collect/MapMaker.java","addlines":[304,298,301,302,303],"dellines":[304,305,306,307,308,301],"addcode":["   * candidate for caching.\n","   * comparison to determine equality of values. This technically violates the specifications of the\n","   * methods {@link Map#containsValue containsValue}, {@link ConcurrentMap#remove(Object, Object)\n","   * remove(Object, Object)} and {@link ConcurrentMap#replace(Object, Object, Object) replace(K, V,\n","   * V)}, and may not be what you expect.\n"],"delcode":["   * candidate for caching; consider {@link #softValues} instead.\n","   * comparison to determine equality of values. This technically violates the specifications of\n","   * the methods {@link Map#containsValue containsValue},\n","   * {@link ConcurrentMap#remove(Object, Object) remove(Object, Object)} and\n","   * {@link ConcurrentMap#replace(Object, Object, Object) replace(K, V, V)}, and may not be what you\n","   * expect.\n"],"methodSig":"public MapMaker weakValues()"},"id":1,"flag":1,"commit":"517267d764f32383fdac36fcd6eabad855dd2f93"}]