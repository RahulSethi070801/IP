{
    "addition": {
        "98": "final class IncidenceSetUndirectedGraph<N, E> extends AbstractGraph<N, E>\n",
        "99": "    implements UndirectedGraph<N, E> {\n",
        "108": "    super(config);\n"
    },
    "removed": {
        "27": "import com.google.common.base.Objects;\n",
        "39": "import javax.annotation.Nullable;\n",
        "40": "\n",
        "101": "final class IncidenceSetUndirectedGraph<N, E> implements UndirectedGraph<N, E> {\n",
        "108": "  private final GraphConfig config;\n",
        "116": "    this.config = config;\n",
        "129": "  @Override\n",
        "130": "  public GraphConfig config() {\n",
        "131": "    return config;\n",
        "132": "  }\n",
        "133": "\n",
        "204": "  @Override\n",
        "205": "  public long degree(Object node) {\n",
        "206": "    return incidentEdges(node).size();\n",
        "207": "  }\n",
        "208": "\n",
        "209": "  @Override\n",
        "210": "  public long inDegree(Object node) {\n",
        "211": "    return degree(node);\n",
        "212": "  }\n",
        "213": "\n",
        "214": "  @Override\n",
        "215": "  public long outDegree(Object node) {\n",
        "216": "    return degree(node);\n",
        "217": "  }\n",
        "218": "\n",
        "317": "  @Override\n",
        "318": "  public boolean equals(@Nullable Object object) {\n",
        "319": "    return (object instanceof UndirectedGraph)\n",
        "320": "        && Graphs.equal(this, (UndirectedGraph<?, ?>) object);\n",
        "321": "  }\n",
        "322": "\n",
        "323": "  @Override\n",
        "324": "  public int hashCode() {\n",
        "325": "    // The node set is included in the hash to differentiate between graphs with isolated nodes.\n",
        "326": "    return Objects.hashCode(nodes(), edgeToIncidentNodes);\n",
        "327": "  }\n",
        "328": "\n",
        "329": "  @Override\n",
        "330": "  public String toString() {\n",
        "331": "    return Graphs.toString(this);\n",
        "332": "  }\n",
        "333": "\n"
    }
}