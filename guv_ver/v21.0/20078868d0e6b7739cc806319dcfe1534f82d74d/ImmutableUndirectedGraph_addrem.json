{
    "addition": {
        "77": "    super(builder.undirectedGraph.config());\n"
    },
    "removed": {
        "25": "import com.google.common.base.Objects;\n",
        "34": "import javax.annotation.Nullable;\n",
        "35": "\n",
        "77": "  private final GraphConfig config;\n",
        "92": "    this.config = undirectedGraph.config();\n",
        "105": "  @Override\n",
        "106": "  public GraphConfig config() {\n",
        "107": "    return config;\n",
        "108": "  }\n",
        "109": "\n",
        "181": "  @Override\n",
        "182": "  public long degree(Object node) {\n",
        "183": "    return incidentEdges(node).size();\n",
        "184": "  }\n",
        "185": "\n",
        "186": "  @Override\n",
        "187": "  public long inDegree(Object node) {\n",
        "188": "    return degree(node);\n",
        "189": "  }\n",
        "190": "\n",
        "191": "  @Override\n",
        "192": "  public long outDegree(Object node) {\n",
        "193": "    return degree(node);\n",
        "194": "  }\n",
        "195": "\n",
        "196": "  @Override\n",
        "197": "  public boolean equals(@Nullable Object object) {\n",
        "198": "    return (object instanceof UndirectedGraph)\n",
        "199": "        && Graphs.equal(this, (UndirectedGraph<?, ?>) object);\n",
        "200": "  }\n",
        "201": "\n",
        "202": "  @Override\n",
        "203": "  public int hashCode() {\n",
        "204": "    // The node set is included in the hash to differentiate between graphs with isolated nodes.\n",
        "205": "    return Objects.hashCode(nodes(), edgeToIncidentNodes);\n",
        "206": "  }\n",
        "207": "\n",
        "208": "  @Override\n",
        "209": "  public String toString() {\n",
        "210": "    return Graphs.toString(this);\n",
        "211": "  }\n",
        "212": "\n"
    }
}