{"id": "f159e3fc4d9dec1beea0cc39cd887250e6ea36b5", "code": [{"0": "guava/src/com/google/common/graph/Graph.java", "added": {"1": [" * including {@link Network}.\n"]}, "removed": {"1": [" * including {@link Network} and {@link Hypergraph}.\n"], "2": [" * <li>hyperedges (edges which are incident to arbitrary sets of nodes)\n"]}, "added_lines": {"1": [30]}, "removed_lines": {"1": [30], "2": [38]}}, {"1": "guava/src/com/google/common/graph/Hypergraph.java", "added": {}, "removed": {"1": ["/*\n", " * Copyright (C) 2014 The Guava Authors\n", " *\n", " * Licensed under the Apache License, Version 2.0 (the \"License\");\n", " * you may not use this file except in compliance with the License.\n", " * You may obtain a copy of the License at\n", " *\n", " * http://www.apache.org/licenses/LICENSE-2.0\n", " *\n", " * Unless required by applicable law or agreed to in writing, software\n", " * distributed under the License is distributed on an \"AS IS\" BASIS,\n", " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n", " * See the License for the specific language governing permissions and\n", " * limitations under the License.\n", " */\n", "\n", "package com.google.common.graph;\n", "\n", "import com.google.common.annotations.Beta;\n", "import com.google.errorprone.annotations.CanIgnoreReturnValue;\n", "\n", "/**\n", " * A subinterface of {@link Network} which specifies that all edges are hyperedges, that is,\n", " * they connect arbitrary sets of nodes rather than pairs of nodes.\n", " *\n", " * <p>A few notes about how hyperedges and connectivity:\n", " * <ul>\n", " * <li>Hyperedges, like undirected edges, are both incoming and outgoing edges.\n", " * <li>Hyperedges incident to a single node {@code node} connect {@code node} to itself; such edges\n", " *     are analogous to self-loops in graphs.  Hyperedges incident to > 1 nodes do not connect any\n", " *     of their incident nodes to themselves.\n", " * </ul>\n", " *\n", " * @author Joshua O'Madadhain\n", " * @param <N> Node parameter type\n", " * @param <E> Edge parameter type\n", " * @since 20.0\n", " */\n", "@Beta\n", "public interface Hypergraph<N, E> extends Network<N, E> {\n", "  /**\n", "   * Adds {@code edge} to this graph, connecting {@code nodes}.\n", "   *\n", "   * @return {@code true} iff the graph was modified as a result of this call\n", "   * @throws UnsupportedOperationException if the add operation is not supported by this graph\n", "   */\n", "  @CanIgnoreReturnValue\n", "  boolean addEdge(E edge, N... nodes);\n", "\n", "  /**\n", "   * Adds {@code edge} to this graph, connecting {@code nodes}.\n", "   *\n", "   * @return {@code true} iff the graph was modified as a result of this call\n", "   * @throws UnsupportedOperationException if the add operation is not supported by this graph\n", "   */\n", "  @CanIgnoreReturnValue\n", "  boolean addEdge(E edge, Iterable<N> nodes);\n", "}\n"]}, "added_lines": {}, "removed_lines": {"1": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58]}}, {"2": "guava/src/com/google/common/graph/MutableGraph.java", "added": {"1": ["   * All edges incident to {@code node} in this graph will also be removed.\n"]}, "removed": {"1": ["   * In general, all edges incident to {@code node} in this graph will also be removed.\n", "   * (This is not true for hyperedges.)\n"]}, "added_lines": {"1": [66]}, "removed_lines": {"1": [66, 67]}}, {"3": "guava/src/com/google/common/graph/MutableNetwork.java", "added": {"1": ["   * All edges incident to {@code node} in this graph will also be removed.\n"]}, "removed": {"1": ["   * In general, all edges incident to {@code node} in this graph will also be removed.\n", "   * (This is not true for hyperedges.)\n"]}, "added_lines": {"1": [70]}, "removed_lines": {"1": [70, 71]}}, {"4": "guava/src/com/google/common/graph/Network.java", "added": {"2": ["   * generally edges are not considered to be self-adjacent.\n"]}, "removed": {"1": [" * <li>hyperedges (edges which are incident to arbitrary sets of nodes)\n"], "2": ["   * generally for non-hypergraphs, edges are not considered to be self-adjacent.\n"]}, "added_lines": {"2": [274]}, "removed_lines": {"1": [37], "2": [275]}}]}
