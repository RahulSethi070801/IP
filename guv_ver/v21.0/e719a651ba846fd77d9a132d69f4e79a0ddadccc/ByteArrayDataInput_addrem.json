{
    "addition": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n",
        "5": " * in compliance with the License. You may obtain a copy of the License at\n",
        "9": " * Unless required by applicable law or agreed to in writing, software distributed under the License\n",
        "10": " * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n",
        "11": " * or implied. See the License for the specific language governing permissions and limitations under\n",
        "12": " * the License.\n",
        "23": " * An extension of {@code DataInput} for reading from in-memory byte arrays; its methods offer\n",
        "24": " * identical functionality but do not throw {@link IOException}.\n",
        "26": " * <p><b>Warning:</b> The caller is responsible for not attempting to read past the end of the\n",
        "27": " * array. If any method encounters the end of the array prematurely, it throws\n",
        "28": " * {@link IllegalStateException} to signify <i>programmer error</i>. This behavior is a technical\n",
        "29": " * violation of the supertype's contract, which specifies a checked exception.\n",
        "36": "  @Override\n",
        "37": "  void readFully(byte b[]);\n",
        "39": "  @Override\n",
        "40": "  void readFully(byte b[], int off, int len);\n",
        "42": "  @Override\n",
        "43": "  int skipBytes(int n);\n",
        "45": "  @Override\n",
        "46": "  boolean readBoolean();\n",
        "48": "  @Override\n",
        "49": "  byte readByte();\n",
        "51": "  @Override\n",
        "52": "  int readUnsignedByte();\n",
        "54": "  @Override\n",
        "55": "  short readShort();\n",
        "57": "  @Override\n",
        "58": "  int readUnsignedShort();\n",
        "60": "  @Override\n",
        "61": "  char readChar();\n",
        "63": "  @Override\n",
        "64": "  int readInt();\n",
        "66": "  @Override\n",
        "67": "  long readLong();\n",
        "69": "  @Override\n",
        "70": "  float readFloat();\n",
        "72": "  @Override\n",
        "73": "  double readDouble();\n",
        "75": "  @Override\n",
        "76": "  String readLine();\n",
        "78": "  @Override\n",
        "79": "  String readUTF();\n"
    },
    "removed": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "25": " * An extension of {@code DataInput} for reading from in-memory byte arrays; its\n",
        "26": " * methods offer identical functionality but do not throw {@link IOException}.\n",
        "28": " * <p><b>Warning:</b> The caller is responsible for not attempting to read past\n",
        "29": " * the end of the array. If any method encounters the end of the array\n",
        "30": " * prematurely, it throws {@link IllegalStateException} to signify <i>programmer\n",
        "31": " * error</i>. This behavior is a technical violation of the supertype's\n",
        "32": " * contract, which specifies a checked exception.\n",
        "39": "  @Override void readFully(byte b[]);\n",
        "41": "  @Override void readFully(byte b[], int off, int len);\n",
        "43": "  @Override int skipBytes(int n);\n",
        "45": "  @Override boolean readBoolean();\n",
        "47": "  @Override byte readByte();\n",
        "49": "  @Override int readUnsignedByte();\n",
        "51": "  @Override short readShort();\n",
        "53": "  @Override int readUnsignedShort();\n",
        "55": "  @Override char readChar();\n",
        "57": "  @Override int readInt();\n",
        "59": "  @Override long readLong();\n",
        "61": "  @Override float readFloat();\n",
        "63": "  @Override double readDouble();\n",
        "65": "  @Override String readLine();\n",
        "67": "  @Override String readUTF();\n"
    }
}