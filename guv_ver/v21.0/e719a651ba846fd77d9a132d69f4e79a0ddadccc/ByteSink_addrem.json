{
    "addition": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n",
        "5": " * in compliance with the License. You may obtain a copy of the License at\n",
        "9": " * Unless required by applicable law or agreed to in writing, software distributed under the License\n",
        "10": " * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n",
        "11": " * or implied. See the License for the specific language governing permissions and limitations under\n",
        "12": " * the License.\n",
        "36": " * <li><b>Methods that return a stream:</b> These methods should return a <i>new</i>, independent\n",
        "37": " *     instance each time they are called. The caller is responsible for ensuring that the returned\n",
        "38": " *     stream is closed.\n",
        "39": " * <li><b>Convenience methods:</b> These are implementations of common operations that are typically\n",
        "40": " *     implemented by opening a stream using one of the methods in the first category, doing\n",
        "41": " *     something and finally closing the stream or channel that was opened.\n",
        "56": "   * Returns a {@link CharSink} view of this {@code ByteSink} that writes characters to this sink as\n",
        "57": "   * bytes encoded with the given {@link Charset charset}.\n",
        "74": "   * Opens a new buffered {@link OutputStream} for writing to this sink. The returned stream is not\n",
        "75": "   * required to be a {@link BufferedOutputStream} in order to allow implementations to simply\n",
        "76": "   * delegate to {@link #openStream()} when the stream returned by that method does not benefit from\n",
        "77": "   * additional buffering (for example, a {@code ByteArrayOutputStream}). This method should return\n",
        "78": "   * a new, independent stream each time it is called.\n"
    },
    "removed": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "38": " *   <li><b>Methods that return a stream:</b> These methods should return a <i>new</i>, independent\n",
        "39": " *   instance each time they are called. The caller is responsible for ensuring that the returned\n",
        "40": " *   stream is closed.\n",
        "41": " *   <li><b>Convenience methods:</b> These are implementations of common operations that are\n",
        "42": " *   typically implemented by opening a stream using one of the methods in the first category, doing\n",
        "43": " *   something and finally closing the stream or channel that was opened.\n",
        "58": "   * Returns a {@link CharSink} view of this {@code ByteSink} that writes characters to this sink\n",
        "59": "   * as bytes encoded with the given {@link Charset charset}.\n",
        "76": "   * Opens a new buffered {@link OutputStream} for writing to this sink. The returned stream is\n",
        "77": "   * not required to be a {@link BufferedOutputStream} in order to allow implementations to simply\n",
        "78": "   * delegate to {@link #openStream()} when the stream returned by that method does not benefit\n",
        "79": "   * from additional buffering (for example, a {@code ByteArrayOutputStream}). This method should\n",
        "80": "   * return a new, independent stream each time it is called.\n"
    }
}