{
    "addition": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n",
        "5": " * in compliance with the License. You may obtain a copy of the License at\n",
        "9": " * Unless required by applicable law or agreed to in writing, software distributed under the License\n",
        "10": " * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n",
        "11": " * or implied. See the License for the specific language governing permissions and limitations under\n",
        "12": " * the License.\n",
        "30": " * Represents either a {@link Field}, a {@link Method} or a {@link Constructor}. Provides\n",
        "31": " * convenience methods such as {@link #isPublic} and {@link #isPackagePrivate}.\n",
        "50": "  @Override\n",
        "51": "  public final boolean isAnnotationPresent(Class<? extends Annotation> annotationClass) {\n",
        "55": "  @Override\n",
        "56": "  public final <A extends Annotation> A getAnnotation(Class<A> annotationClass) {\n",
        "60": "  @Override\n",
        "61": "  public final Annotation[] getAnnotations() {\n",
        "65": "  @Override\n",
        "66": "  public final Annotation[] getDeclaredAnnotations() {\n",
        "70": "  @Override\n",
        "71": "  public final void setAccessible(boolean flag) throws SecurityException {\n",
        "75": "  @Override\n",
        "76": "  public final boolean isAccessible() {\n",
        "80": "  @Override\n",
        "81": "  public Class<?> getDeclaringClass() {\n",
        "85": "  @Override\n",
        "86": "  public final String getName() {\n",
        "90": "  @Override\n",
        "91": "  public final int getModifiers() {\n",
        "95": "  @Override\n",
        "96": "  public final boolean isSynthetic() {\n",
        "161": "  @Override\n",
        "162": "  public boolean equals(@Nullable Object obj) {\n",
        "170": "  @Override\n",
        "171": "  public int hashCode() {\n",
        "175": "  @Override\n",
        "176": "  public String toString() {\n"
    },
    "removed": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "32": " * Represents either a {@link Field}, a {@link Method} or a {@link Constructor}.\n",
        "33": " * Provides convenience methods such as {@link #isPublic} and {@link #isPackagePrivate}.\n",
        "52": "  @Override public final boolean isAnnotationPresent(Class<? extends Annotation> annotationClass) {\n",
        "56": "  @Override public final <A extends Annotation> A getAnnotation(Class<A> annotationClass) {\n",
        "60": "  @Override public final Annotation[] getAnnotations() {\n",
        "64": "  @Override public final Annotation[] getDeclaredAnnotations() {\n",
        "68": "  @Override public final void setAccessible(boolean flag) throws SecurityException {\n",
        "72": "  @Override public final boolean isAccessible() {\n",
        "76": "  @Override public Class<?> getDeclaringClass() {\n",
        "80": "  @Override public final String getName() {\n",
        "84": "  @Override public final int getModifiers() {\n",
        "88": "  @Override public final boolean isSynthetic() {\n",
        "153": "  @Override public boolean equals(@Nullable Object obj) {\n",
        "161": "  @Override public int hashCode() {\n",
        "165": "  @Override public String toString() {\n"
    }
}