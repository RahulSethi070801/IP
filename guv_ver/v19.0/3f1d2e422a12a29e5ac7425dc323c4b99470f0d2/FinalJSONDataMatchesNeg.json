[{"func":{"oldfunccode":"3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_oldfunccode_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_1.txt","newfunccode":"3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_newfunccode_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_1.txt","newdoc":"","newJdoc":"3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_newfuncnewJdoc_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_1.txt","olddoc":" Force a blocking read to avoid infinite loop\n","oldJdoc":"3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_oldfuncoldJdoc_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/ByteStreams","pathinproj":"guava/src/com/google/common/io/ByteStreams.java","addlines":[707,708,709,710,711,712],"dellines":[707,708,709,710,713,714,715,717,718,719],"addcode":["    long skipped = skipUpTo(in, n);\n","    if (skipped < n) {\n","      throw new EOFException(\"reached end of stream after skipping \"\n","          + skipped + \" bytes; \" + n + \" bytes expected\");\n","    }\n","  }\n"],"delcode":["    long toSkip = n;\n","    while (n > 0) {\n","      long amt = in.skip(n);\n","      if (amt == 0) {\n","          long skipped = toSkip - n;\n","          throw new EOFException(\"reached end of stream after skipping \"\n","              + skipped + \" bytes; \" + toSkip + \" bytes expected\");\n","        n--;\n","      } else {\n","        n -= amt;\n"],"methodSig":"public static void skipFully(InputStream in, long n) throws IOException"},"doc":{"oldfunccode":"3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_olddocfunccode_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_1.txt","newfunccode":"3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_newdocfunccode_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_1.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_olddocJdoc_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[108,109,110,111],"dellines":[108],"addcode":["   * starting at the given {@code offset}. If {@code offset} is greater than the size of this\n","   * source, the returned source will be empty. If {@code offset + length} is greater than the size\n","   * of this source, the returned source will contain the slice starting at {@code offset} and\n","   * ending at the end of this source.\n"],"delcode":["   * starting at the given {@code offset}.\n"],"methodSig":"public ByteSource slice(long offset, long length)"},"id":1,"flag":1,"commit":"3f1d2e422a12a29e5ac7425dc323c4b99470f0d2"},{"func":{"oldfunccode":"","newfunccode":"3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_newfunccode_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_2.txt","newdoc":" Force a blocking read to avoid infinite loop\n Reached EOF\n","newJdoc":"3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_newfuncnewJdoc_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_2.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/ByteStreams","pathinproj":"guava/src/com/google/common/io/ByteStreams.java","addlines":[736,738,739,720,721,722,723,724,725,726,730,731,732,735],"dellines":[],"addcode":["  static long skipUpTo(InputStream in, final long n) throws IOException {\n","    long totalSkipped = 0;\n","\n","    while (totalSkipped < n) {\n","      long skipped = in.skip(n - totalSkipped);\n","\n","      if (skipped == 0) {\n","          break;\n","        } else {\n","          skipped = 1;\n","\n","      totalSkipped += skipped;\n","\n","    return totalSkipped;\n"],"delcode":[],"methodSig":" static long skipUpTo(InputStream in, final long n) throws IOException"},"doc":{"oldfunccode":"3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_olddocfunccode_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_2.txt","newfunccode":"3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_newdocfunccode_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_2.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/Codes_neg/Match_olddocJdoc_3f1d2e422a12a29e5ac7425dc323c4b99470f0d2_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/3f1d2e422a12a29e5ac7425dc323c4b99470f0d2/ByteSource","pathinproj":"guava/src/com/google/common/io/ByteSource.java","addlines":[108,109,110,111],"dellines":[108],"addcode":["   * starting at the given {@code offset}. If {@code offset} is greater than the size of this\n","   * source, the returned source will be empty. If {@code offset + length} is greater than the size\n","   * of this source, the returned source will contain the slice starting at {@code offset} and\n","   * ending at the end of this source.\n"],"delcode":["   * starting at the given {@code offset}.\n"],"methodSig":"public ByteSource slice(long offset, long length)"},"id":1,"flag":1,"commit":"3f1d2e422a12a29e5ac7425dc323c4b99470f0d2"}]