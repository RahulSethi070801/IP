[{"func":{"oldfunccode":"","newfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_1.txt","newdoc":"","newJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newfuncnewJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_1.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[298,299,300,301],"dellines":[],"addcode":["  public static <T> BloomFilter<T> create(\n","      Funnel<? super T> funnel, int expectedInsertions, double fpp) {\n","    return create(funnel, (long) expectedInsertions, fpp);\n","  }\n"],"delcode":[],"methodSig":"public static BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions, double fpp)"},"doc":{"oldfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_olddocfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_1.txt","newfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newdocfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_1.txt","newdoc":" FYI, for 3%, we always get 5 hash functions\n","newJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newdocnewJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_1.txt","olddoc":" FYI, for 3%, we always get 5 hash functions\n","oldJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_olddocJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,403],"dellines":[],"addcode":["  /**\n","   * Creates a {@link BloomFilter BloomFilter<T>} with the expected number of\n","   * insertions and a default expected false positive probability of 3%.\n","   *\n","   * <p>Note that overflowing a {@code BloomFilter} with significantly more elements\n","   * than specified, will result in its saturation, and a sharp deterioration of its\n","   * false positive probability.\n","   *\n","   * <p>The constructed {@code BloomFilter<T>} will be serializable if the provided\n","   * {@code Funnel<T>} is.\n","   *\n","   * <p>It is recommended that the funnel be implemented as a Java enum. This has the\n","   * benefit of ensuring proper serialization and deserialization, which is important\n","   * since {@link #equals} also relies on object identity of funnels.\n","   *\n","   * @since 19.0\n"],"delcode":[],"methodSig":"public static BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions)"},"id":5,"flag":1,"commit":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef"},{"func":{"oldfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_oldfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_2.txt","newfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_2.txt","newdoc":"","newJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newfuncnewJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_2.txt","olddoc":"","oldJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_oldfuncoldJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[325],"dellines":[],"addcode":["  @CheckReturnValue\n"],"delcode":[],"methodSig":"public static BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp)"},"doc":{"oldfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_olddocfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_2.txt","newfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newdocfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_2.txt","newdoc":" FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n","newJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newdocnewJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_2.txt","olddoc":" FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n","oldJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_olddocJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,403],"dellines":[],"addcode":["  /**\n","   * Creates a {@link BloomFilter BloomFilter<T>} with the expected number of\n","   * insertions and a default expected false positive probability of 3%.\n","   *\n","   * <p>Note that overflowing a {@code BloomFilter} with significantly more elements\n","   * than specified, will result in its saturation, and a sharp deterioration of its\n","   * false positive probability.\n","   *\n","   * <p>The constructed {@code BloomFilter<T>} will be serializable if the provided\n","   * {@code Funnel<T>} is.\n","   *\n","   * <p>It is recommended that the funnel be implemented as a Java enum. This has the\n","   * benefit of ensuring proper serialization and deserialization, which is important\n","   * since {@link #equals} also relies on object identity of funnels.\n","   *\n","   * @since 19.0\n"],"delcode":[],"methodSig":"public static BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions)"},"id":5,"flag":1,"commit":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef"},{"func":{"oldfunccode":"","newfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_3.txt","newdoc":"","newJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newfuncnewJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_3.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[379,380,381,382],"dellines":[],"addcode":["  @CheckReturnValue\n","  public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions) {\n","    return create(funnel, (long) expectedInsertions);\n","  }\n"],"delcode":[],"methodSig":"public static BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions)"},"doc":{"oldfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_olddocfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_3.txt","newfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newdocfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_3.txt","newdoc":" FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n","newJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newdocnewJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_3.txt","olddoc":" FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n","oldJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_olddocJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_3.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,403],"dellines":[],"addcode":["  /**\n","   * Creates a {@link BloomFilter BloomFilter<T>} with the expected number of\n","   * insertions and a default expected false positive probability of 3%.\n","   *\n","   * <p>Note that overflowing a {@code BloomFilter} with significantly more elements\n","   * than specified, will result in its saturation, and a sharp deterioration of its\n","   * false positive probability.\n","   *\n","   * <p>The constructed {@code BloomFilter<T>} will be serializable if the provided\n","   * {@code Funnel<T>} is.\n","   *\n","   * <p>It is recommended that the funnel be implemented as a Java enum. This has the\n","   * benefit of ensuring proper serialization and deserialization, which is important\n","   * since {@link #equals} also relies on object identity of funnels.\n","   *\n","   * @since 19.0\n"],"delcode":[],"methodSig":"public static BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions)"},"id":5,"flag":1,"commit":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef"},{"func":{"oldfunccode":"","newfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_4.txt","newdoc":"","newJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newfuncnewJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_4.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[298,299,300,301],"dellines":[],"addcode":["  public static <T> BloomFilter<T> create(\n","      Funnel<? super T> funnel, int expectedInsertions, double fpp) {\n","    return create(funnel, (long) expectedInsertions, fpp);\n","  }\n"],"delcode":[],"methodSig":"public static BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions, double fpp)"},"doc":{"oldfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_olddocfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_4.txt","newfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newdocfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_4.txt","newdoc":" FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n","newJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newdocnewJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_4.txt","olddoc":" FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n","oldJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_olddocJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_4.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,403],"dellines":[],"addcode":["  /**\n","   * Creates a {@link BloomFilter BloomFilter<T>} with the expected number of\n","   * insertions and a default expected false positive probability of 3%.\n","   *\n","   * <p>Note that overflowing a {@code BloomFilter} with significantly more elements\n","   * than specified, will result in its saturation, and a sharp deterioration of its\n","   * false positive probability.\n","   *\n","   * <p>The constructed {@code BloomFilter<T>} will be serializable if the provided\n","   * {@code Funnel<T>} is.\n","   *\n","   * <p>It is recommended that the funnel be implemented as a Java enum. This has the\n","   * benefit of ensuring proper serialization and deserialization, which is important\n","   * since {@link #equals} also relies on object identity of funnels.\n","   *\n","   * @since 19.0\n"],"delcode":[],"methodSig":"public static BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions)"},"id":3,"flag":1,"commit":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef"},{"func":{"oldfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_oldfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_5.txt","newfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_5.txt","newdoc":"","newJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newfuncnewJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_5.txt","olddoc":"","oldJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_oldfuncoldJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_5.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[325],"dellines":[],"addcode":["  @CheckReturnValue\n"],"delcode":[],"methodSig":"public static BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp)"},"doc":{"oldfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_olddocfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_5.txt","newfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newdocfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_5.txt","newdoc":" FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n","newJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newdocnewJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_5.txt","olddoc":" FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n","oldJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_olddocJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_5.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,403],"dellines":[],"addcode":["  /**\n","   * Creates a {@link BloomFilter BloomFilter<T>} with the expected number of\n","   * insertions and a default expected false positive probability of 3%.\n","   *\n","   * <p>Note that overflowing a {@code BloomFilter} with significantly more elements\n","   * than specified, will result in its saturation, and a sharp deterioration of its\n","   * false positive probability.\n","   *\n","   * <p>The constructed {@code BloomFilter<T>} will be serializable if the provided\n","   * {@code Funnel<T>} is.\n","   *\n","   * <p>It is recommended that the funnel be implemented as a Java enum. This has the\n","   * benefit of ensuring proper serialization and deserialization, which is important\n","   * since {@link #equals} also relies on object identity of funnels.\n","   *\n","   * @since 19.0\n"],"delcode":[],"methodSig":"public static BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions)"},"id":3,"flag":1,"commit":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef"},{"func":{"oldfunccode":"","newfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_6.txt","newdoc":"","newJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newfuncnewJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_6.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[379,380,381,382],"dellines":[],"addcode":["  @CheckReturnValue\n","  public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions) {\n","    return create(funnel, (long) expectedInsertions);\n","  }\n"],"delcode":[],"methodSig":"public static BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions)"},"doc":{"oldfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_olddocfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_6.txt","newfunccode":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newdocfunccode_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_6.txt","newdoc":" FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n","newJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_newdocnewJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_6.txt","olddoc":" FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n FYI, for 3%, we always get 5 hash functions\n","oldJdoc":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/Codes/Match_olddocJdoc_76b76a8491d7e1cfe1f69ee00c796d907be3e8ef_6.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/76b76a8491d7e1cfe1f69ee00c796d907be3e8ef/BloomFilter","pathinproj":"guava/src/com/google/common/hash/BloomFilter.java","addlines":[384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,403],"dellines":[],"addcode":["  /**\n","   * Creates a {@link BloomFilter BloomFilter<T>} with the expected number of\n","   * insertions and a default expected false positive probability of 3%.\n","   *\n","   * <p>Note that overflowing a {@code BloomFilter} with significantly more elements\n","   * than specified, will result in its saturation, and a sharp deterioration of its\n","   * false positive probability.\n","   *\n","   * <p>The constructed {@code BloomFilter<T>} will be serializable if the provided\n","   * {@code Funnel<T>} is.\n","   *\n","   * <p>It is recommended that the funnel be implemented as a Java enum. This has the\n","   * benefit of ensuring proper serialization and deserialization, which is important\n","   * since {@link #equals} also relies on object identity of funnels.\n","   *\n","   * @since 19.0\n"],"delcode":[],"methodSig":"public static BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions)"},"id":3,"flag":1,"commit":"76b76a8491d7e1cfe1f69ee00c796d907be3e8ef"}]