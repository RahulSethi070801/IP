{
    "addition": {
        "112": "      helper = UnsafeAtomicHelperFactory.values()[0].tryCreateUnsafeAtomicHelper();\n",
        "849": "  /**\n",
        "850": "   * Temporary hack to hide the reference to {@link UnsafeAtomicHelper} from Android. The caller of\n",
        "851": "   * this code will execute {@link #tryCreateUnsafeAtomicHelper} on the <b>first</b> enum value\n",
        "852": "   * present. On the server, this will try to create {@link UnsafeAtomicHelper}. On Android, it will\n",
        "853": "   * just return {@code null}.\n",
        "854": "   */\n",
        "855": "  private enum UnsafeAtomicHelperFactory {\n",
        "856": "    @SuppressUnderAndroid // temporarily while we make Proguard tolerate Unsafe\n",
        "857": "    REALLY_TRY_TO_CREATE {\n",
        "858": "      @Override\n",
        "859": "      AtomicHelper tryCreateUnsafeAtomicHelper() {\n",
        "860": "        return new UnsafeAtomicHelper();\n",
        "861": "      }\n",
        "862": "    },\n",
        "863": "\n",
        "864": "    DONT_EVEN_TRY_TO_CREATE {\n",
        "865": "      @Override\n",
        "866": "      AtomicHelper tryCreateUnsafeAtomicHelper() {\n",
        "867": "        return null;\n",
        "868": "      }\n",
        "869": "    },\n",
        "870": "\n",
        "871": "  ;\n",
        "872": "\n",
        "873": "    abstract AtomicHelper tryCreateUnsafeAtomicHelper();\n",
        "874": "  }\n",
        "875": "\n",
        "882": "  @SuppressUnderAndroid // temporarily while we make Proguard tolerate Unsafe\n",
        "928": "    @Override\n",
        "929": "    void putThread(Waiter waiter, Thread thread) {\n",
        "933": "    @Override\n",
        "934": "    void putNext(Waiter waiter, Waiter next) {\n",
        "939": "    @Override\n",
        "940": "    boolean casWaiters(AbstractFuture future, Waiter curr, Waiter next) {\n",
        "945": "    @Override\n",
        "946": "    boolean casListeners(AbstractFuture future, Listener curr, Listener next) {\n",
        "951": "    @Override\n",
        "952": "    boolean casValue(AbstractFuture future, Object expected, Object v) {\n"
    },
    "removed": {
        "26": "import com.google.errorprone.annotations.ForOverride;\n",
        "113": "      helper = new UnsafeAtomicHelper();\n",
        "767": "  // TODO(cpovirk): @ForOverride if https://github.com/google/error-prone/issues/342 permits\n",
        "902": "    @Override void putThread(Waiter waiter, Thread thread) {\n",
        "906": "    @Override void putNext(Waiter waiter, Waiter next) {\n",
        "911": "    @Override boolean casWaiters(AbstractFuture future, Waiter curr, Waiter next) {\n",
        "916": "    @Override boolean casListeners(AbstractFuture future, Listener curr, Listener next) {\n",
        "921": "    @Override boolean casValue(AbstractFuture future, Object expected, Object v) {\n"
    }
}