{
    "addition": {
        "20": "import static com.google.common.base.Throwables.lazyStackTrace;\n",
        "21": "import static com.google.common.base.Throwables.lazyStackTraceIsLazy;\n",
        "22": "import static com.google.common.truth.Truth.assertThat;\n",
        "32": "import java.security.Permission;\n",
        "33": "import java.security.Policy;\n",
        "34": "import java.security.ProtectionDomain;\n",
        "381": "    } catch (SomeCheckedException expected) {\n",
        "402": "    } catch (SomeUncheckedException expected) {\n",
        "423": "    } catch (RuntimeException expected) {\n",
        "424": "      assertTrue(expected.getCause() instanceof SomeOtherCheckedException);\n",
        "523": "  public void testLazyStackTrace() {\n",
        "524": "    // Obviously this isn't guaranteed, but it works well enough for now:\n",
        "525": "    assertTrue(lazyStackTraceIsLazy());\n",
        "526": "\n",
        "527": "    Exception e = new Exception();\n",
        "528": "    StackTraceElement[] originalStackTrace = e.getStackTrace();\n",
        "529": "\n",
        "530": "    assertThat(lazyStackTrace(e)).containsExactly(originalStackTrace).inOrder();\n",
        "531": "\n",
        "532": "    try {\n",
        "533": "      lazyStackTrace(e).set(0, null);\n",
        "534": "      fail();\n",
        "535": "    } catch (UnsupportedOperationException expected) {\n",
        "536": "    }\n",
        "537": "\n",
        "538": "    e.setStackTrace(new StackTraceElement[0]);\n",
        "539": "    assertThat(lazyStackTrace(e)).containsExactly(originalStackTrace).inOrder();\n",
        "540": "  }\n",
        "541": "\n",
        "542": "  private void doTestLazyStackTraceFallback() {\n",
        "543": "    assertFalse(lazyStackTraceIsLazy());\n",
        "544": "\n",
        "545": "    Exception e = new Exception();\n",
        "546": "\n",
        "547": "    assertThat(lazyStackTrace(e)).containsExactly(e.getStackTrace()).inOrder();\n",
        "548": "\n",
        "549": "    try {\n",
        "550": "      lazyStackTrace(e).set(0, null);\n",
        "551": "      fail();\n",
        "552": "    } catch (UnsupportedOperationException expected) {\n",
        "553": "    }\n",
        "554": "\n",
        "555": "    e.setStackTrace(new StackTraceElement[0]);\n",
        "556": "    assertThat(lazyStackTrace(e)).isEmpty();\n",
        "557": "  }\n",
        "558": "\n",
        "559": "  private static class AllowSettingSecurityManagerPolicy extends Policy {\n",
        "560": "    @Override\n",
        "561": "    public boolean implies(ProtectionDomain pd, Permission perm) {\n",
        "562": "      return true;\n",
        "563": "    }\n",
        "564": "  }\n",
        "565": "\n"
    },
    "removed": {
        "375": "    } catch (SomeCheckedException e) {\n",
        "396": "    } catch (SomeUncheckedException e) {\n",
        "417": "    } catch (RuntimeException e) {\n",
        "418": "      assertTrue(e.getCause() instanceof SomeOtherCheckedException);\n"
    }
}