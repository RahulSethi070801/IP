[{"func":{"oldfunccode":"","newfunccode":"966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_newfunccode_966f3b23cbf9c8e568f681f62436836530f1453f_1.txt","newdoc":"","newJdoc":"966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_newfuncnewJdoc_966f3b23cbf9c8e568f681f62436836530f1453f_1.txt","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/966f3b23cbf9c8e568f681f62436836530f1453f/Throwables","pathinproj":"guava/src/com/google/common/base/Throwables.java","addlines":[357,358,359,360],"dellines":[],"addcode":["  @Nullable\n","  private static Method getSizeMethod() {\n","    return getJlaMethod(\"getStackTraceDepth\", Throwable.class);\n","  }\n"],"delcode":[],"methodSig":"private static Method getSizeMethod()"},"doc":{"oldfunccode":"966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_olddocfunccode_966f3b23cbf9c8e568f681f62436836530f1453f_1.txt","newfunccode":"966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_newdocfunccode_966f3b23cbf9c8e568f681f62436836530f1453f_1.txt","newdoc":"","newJdoc":"966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_newdocnewJdoc_966f3b23cbf9c8e568f681f62436836530f1453f_1.txt","olddoc":"","oldJdoc":"966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_olddocJdoc_966f3b23cbf9c8e568f681f62436836530f1453f_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/966f3b23cbf9c8e568f681f62436836530f1453f/Throwables","pathinproj":"guava/src/com/google/common/base/Throwables.java","addlines":[135,136,138,154,139,155,140],"dellines":[135,136,137,139,155,140,156,141],"addcode":["   * Propagates {@code throwable} as-is if it is an instance of {@link RuntimeException} or {@link\n","   * Error}, or else as a last resort, wraps it in a {@code RuntimeException} and then propagates.\n","   * This method always throws an exception. The {@code RuntimeException} return type is only for\n","   * client code to make Java type system happy in case a return value is required by the enclosing\n","   * method. Example usage:\n","   * @return nothing will ever be returned; this return type is only for your convenience, as\n","   *     illustrated in the example above\n"],"delcode":["   * Propagates {@code throwable} as-is if it is an instance of\n","   * {@link RuntimeException} or {@link Error}, or else as a last resort, wraps\n","   * it in a {@code RuntimeException} then propagates.\n","   * This method always throws an exception. The {@code RuntimeException} return\n","   * type is only for client code to make Java type system happy in case a\n","   * return value is required by the enclosing method. Example usage:\n","   * @return nothing will ever be returned; this return type is only for your\n","   *     convenience, as illustrated in the example above\n"],"methodSig":"public static RuntimeException propagate(Throwable throwable)"},"id":1,"flag":1,"commit":"966f3b23cbf9c8e568f681f62436836530f1453f"},{"func":{"oldfunccode":"","newfunccode":"966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_newfunccode_966f3b23cbf9c8e568f681f62436836530f1453f_2.txt","newdoc":"\n       * Either the JavaLangAccess class itself is not found, or the method is not supported on the\n       * JVM.\n       \n","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/966f3b23cbf9c8e568f681f62436836530f1453f/Throwables","pathinproj":"guava/src/com/google/common/base/Throwables.java","addlines":[368,373,374,375,362,363,364,365,366,367],"dellines":[],"addcode":["  @Nullable\n","  private static Method getJlaMethod(String name, Class<?>... parameterTypes) throws ThreadDeath {\n","    try {\n","      return Class.forName(JAVA_LANG_ACCESS_CLASSNAME, false, null).getMethod(name, parameterTypes);\n","    } catch (ThreadDeath death) {\n","      throw death;\n","    } catch (Throwable t) {\n","      return null;\n","    }\n","  }\n"],"delcode":[],"methodSig":"private static Method getJlaMethod(String name, Class<?>... parameterTypes) throws ThreadDeath"},"doc":{"oldfunccode":"966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_olddocfunccode_966f3b23cbf9c8e568f681f62436836530f1453f_2.txt","newfunccode":"966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_newdocfunccode_966f3b23cbf9c8e568f681f62436836530f1453f_2.txt","newdoc":"","newJdoc":"966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_newdocnewJdoc_966f3b23cbf9c8e568f681f62436836530f1453f_2.txt","olddoc":"","oldJdoc":"966f3b23cbf9c8e568f681f62436836530f1453f/Codes_neg/Match_olddocJdoc_966f3b23cbf9c8e568f681f62436836530f1453f_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/966f3b23cbf9c8e568f681f62436836530f1453f/Throwables","pathinproj":"guava/src/com/google/common/base/Throwables.java","addlines":[135,136,138,154,139,155,140],"dellines":[135,136,137,139,155,140,156,141],"addcode":["   * Propagates {@code throwable} as-is if it is an instance of {@link RuntimeException} or {@link\n","   * Error}, or else as a last resort, wraps it in a {@code RuntimeException} and then propagates.\n","   * This method always throws an exception. The {@code RuntimeException} return type is only for\n","   * client code to make Java type system happy in case a return value is required by the enclosing\n","   * method. Example usage:\n","   * @return nothing will ever be returned; this return type is only for your convenience, as\n","   *     illustrated in the example above\n"],"delcode":["   * Propagates {@code throwable} as-is if it is an instance of\n","   * {@link RuntimeException} or {@link Error}, or else as a last resort, wraps\n","   * it in a {@code RuntimeException} then propagates.\n","   * This method always throws an exception. The {@code RuntimeException} return\n","   * type is only for client code to make Java type system happy in case a\n","   * return value is required by the enclosing method. Example usage:\n","   * @return nothing will ever be returned; this return type is only for your\n","   *     convenience, as illustrated in the example above\n"],"methodSig":"public static RuntimeException propagate(Throwable throwable)"},"id":1,"flag":1,"commit":"966f3b23cbf9c8e568f681f62436836530f1453f"}]