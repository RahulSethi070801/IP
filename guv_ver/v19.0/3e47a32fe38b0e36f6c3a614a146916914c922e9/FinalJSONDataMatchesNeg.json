[{"func":{"oldfunccode":"","newfunccode":"3e47a32fe38b0e36f6c3a614a146916914c922e9/Codes_neg/Match_newfunccode_3e47a32fe38b0e36f6c3a614a146916914c922e9_1.txt","newdoc":"","newJdoc":"","olddoc":"","oldJdoc":"","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/3e47a32fe38b0e36f6c3a614a146916914c922e9/GwtFuturesCatchingSpecialization","pathinproj":"guava-gwt/src-super/com/google/common/util/concurrent/super/com/google/common/util/concurrent/GwtFuturesCatchingSpecialization.java","addlines":[48,49,50,51,52,46,47],"dellines":[],"addcode":["  public static <V> ListenableFuture<V> catching(\n","      ListenableFuture<? extends V> input,\n","      Class<Throwable> exceptionType,\n","      Function<? super Throwable, ? extends V> fallback,\n","      Executor executor) {\n","    return catchingAsync(input, exceptionType, asAsyncFunction(fallback), executor);\n","  }\n"],"delcode":[],"methodSig":"public static ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<Throwable> exceptionType, Function<? super Throwable, ? extends V> fallback, Executor executor)"},"doc":{"oldfunccode":"3e47a32fe38b0e36f6c3a614a146916914c922e9/Codes_neg/Match_olddocfunccode_3e47a32fe38b0e36f6c3a614a146916914c922e9_1.txt","newfunccode":"3e47a32fe38b0e36f6c3a614a146916914c922e9/Codes_neg/Match_newdocfunccode_3e47a32fe38b0e36f6c3a614a146916914c922e9_1.txt","newdoc":"","newJdoc":"3e47a32fe38b0e36f6c3a614a146916914c922e9/Codes_neg/Match_newdocnewJdoc_3e47a32fe38b0e36f6c3a614a146916914c922e9_1.txt","olddoc":"","oldJdoc":"3e47a32fe38b0e36f6c3a614a146916914c922e9/Codes_neg/Match_olddocJdoc_3e47a32fe38b0e36f6c3a614a146916914c922e9_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/3e47a32fe38b0e36f6c3a614a146916914c922e9/Futures","pathinproj":"guava-gwt/src-super/com/google/common/util/concurrent/super/com/google/common/util/concurrent/Futures.java","addlines":[996,590],"dellines":[562,735],"addcode":["   * <p>Also note that, regardless of which thread executes {@code\n","   * <p>Also note that, regardless of which thread executes {@code\n"],"delcode":["   * <p>Also note that, regardless of which thread executes the {@code\n","   * <p>Also note that, regardless of which thread executes the {@code\n"],"methodSig":"public static ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)"},"id":1,"flag":1,"commit":"3e47a32fe38b0e36f6c3a614a146916914c922e9"}]