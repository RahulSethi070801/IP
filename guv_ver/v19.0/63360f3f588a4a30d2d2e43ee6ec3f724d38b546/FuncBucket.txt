com.google.common.collect.super.com.google.common.collect.AbstractBiMap$KeySet
iterator
public Iterator<K> iterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.TreeMultiset$Reference
checkAndSet
public void checkAndSet(@Nullable T expected, T newValue)
T,T
void
com.google.common.primitives.super.com.google.common.primitives.Ints
compare
public static int compare(int a, int b)
int,int
int
com.google.common.collect.super.com.google.common.collect.Maps
unmodifiableEntryIterator
static UnmodifiableIterator<Entry<K, V>> unmodifiableEntryIterator(final Iterator<Entry<K, V>> entryIterator)
Iterator
UnmodifiableIterator
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedAsMapEntries
SynchronizedAsMapEntries
SynchronizedAsMapEntries(Set<Map.Entry<K, Collection<V>>> delegate, @Nullable Object mutex)
Set,Object
constructor
com.google.common.collect.super.com.google.common.collect.Multimaps$UnmodifiableMultimap
UnmodifiableMultimap
UnmodifiableMultimap(final Multimap<K, V> delegate)
Multimap
constructor
com.google.common.collect.super.com.google.common.collect.Sets
iterator
public Iterator<E> iterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
setDelegates
void setDelegates(Map<K, V> forward, Map<V, K> backward)
Map,Map
void
com.google.common.collect.super.com.google.common.collect.Multimaps$Keys
contains
public boolean contains(@Nullable Object element)
Object
boolean
com.google.common.util.concurrent.super.com.google.common.util.concurrent.MoreExecutors
MoreExecutors
private MoreExecutors()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Maps$FilteredMapValues
removeIf
private boolean removeIf(Predicate<? super V> valuePredicate)
Predicate
boolean
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
remove
AvlNode<E> remove(Comparator<? super E> comparator, @Nullable E e, int count, int[] result)
Comparator,E,int,int[]
AvlNode
com.google.common.collect.super.com.google.common.collect.FluentIterable
toSortedSet
public final ImmutableSortedSet<E> toSortedSet(Comparator<? super E> comparator)
Comparator
ImmutableSortedSet
com.google.common.math.super.com.google.common.math.DoubleMath
mean
public static double mean(long... values)
long...
double
com.google.common.primitives.super.com.google.common.primitives.Doubles
join
public static String join(String separator, double... array)
String,double...
String
com.google.common.collect.super.com.google.common.collect.Iterators
concat
public static Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c)
Iterator,Iterator,Iterator
Iterator
com.google.common.collect.super.com.google.common.collect.ArrayTable$ArrayMap
getKey
K getKey(int index)
int
K
com.google.common.primitives.super.com.google.common.primitives.Shorts
lastIndexOf
private static int lastIndexOf(short[] array, short target, int start, int end)
short[],short,int,int
int
com.google.common.primitives.super.com.google.common.primitives.Ints
lastIndexOf
public static int lastIndexOf(int[] array, int target)
int[],int
int
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap
succeedsInMultimap
private static void succeedsInMultimap(ValueEntry<K, V> pred, ValueEntry<K, V> succ)
ValueEntry,ValueEntry
void
com.google.common.primitives.super.com.google.common.primitives.Doubles
copyOf
private static double[] copyOf(double[] original, int length)
double[],int
double[]
com.google.common.primitives.super.com.google.common.primitives.Doubles
min
public static double min(double... array)
double...
double
com.google.common.collect.super.com.google.common.collect.SortedMultisets
getElementOrThrow
private static E getElementOrThrow(Entry<E> entry)
Entry
E
com.google.common.collect.super.com.google.common.collect.ImmutableMapValues
next
public V next()
empty
V
com.google.common.util.concurrent.super.com.google.common.util.concurrent.ImmediateFuture
addListener
public void addListener(Runnable listener, Executor executor)
Runnable,Executor
void
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedRandomAccessList
SynchronizedRandomAccessList
SynchronizedRandomAccessList(List<E> list, @Nullable Object mutex)
List,Object
constructor
com.google.common.collect.super.com.google.common.collect.Maps
newTreeMap
public static TreeMap<K, V> newTreeMap(SortedMap<K, ? extends V> map)
SortedMap
TreeMap
com.google.common.collect.super.com.google.common.collect.Maps$KeySet
map
Map<K, V> map()
empty
Map
com.google.common.cache.super.com.google.common.cache.CacheBuilder
recordLoadSuccess
public void recordLoadSuccess(long loadTime)
long
void
com.google.common.collect.super.com.google.common.collect.Maps
transformEntriesIgnoreNavigable
static SortedMap<K, V2> transformEntriesIgnoreNavigable(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)
SortedMap,EntryTransformer
SortedMap
com.google.common.collect.super.com.google.common.collect.ArrayTable
get
public V get(@Nullable Object rowKey, @Nullable Object columnKey)
Object,Object
V
com.google.common.io.super.com.google.common.io.BaseEncoding
encode
public final String encode(byte[] bytes, int off, int len)
byte[],int,int
String
com.google.common.collect.super.com.google.common.collect.SortedMultisets$ElementSet
multiset
final SortedMultiset<E> multiset()
empty
SortedMultiset
com.google.common.collect.super.com.google.common.collect.Iterators
cycle
public static Iterator<T> cycle(final Iterable<T> iterable)
Iterable
Iterator
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultiset
remove
public int remove(Object o, int n)
Object,int
int
com.google.common.collect.super.com.google.common.collect.Iterables
removeIfFromRandomAccessList
private static boolean removeIfFromRandomAccessList(List<T> list, Predicate<? super T> predicate)
List,Predicate
boolean
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection
WrappedCollection
WrappedCollection(@Nullable K key, Collection<V> delegate, @Nullable WrappedCollection ancestor)
K,Collection,WrappedCollection
constructor
com.google.common.collect.super.com.google.common.collect.Iterables
getLast
public static T getLast(Iterable<? extends T> iterable, @Nullable T defaultValue)
Iterable,T
T
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
AvlNode
AvlNode(@Nullable E elem, int elemCount)
E,int
constructor
com.google.common.collect.super.com.google.common.collect.Iterators
find
public static T find(Iterator<? extends T> iterator, Predicate<? super T> predicate, @Nullable T defaultValue)
Iterator,Predicate,T
T
com.google.common.math.super.com.google.common.math.BigIntegerMath
factorial
public static BigInteger factorial(int n)
int
BigInteger
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset$Builder
addCopies
public Builder<E> addCopies(E element, int occurrences)
E,int
Builder
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
remove
public void remove()
empty
void
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedListMultimap
get
public List<V> get(K key)
K
List
com.google.common.io.super.com.google.common.io.BaseEncoding
encodeTo
abstract void encodeTo(Appendable target, byte[] bytes, int off, int len) throws IOException
Appendable,byte[],int,int
void
com.google.common.collect.super.com.google.common.collect.Maps
unmodifiableEntrySet
static Set<Entry<K, V>> unmodifiableEntrySet(Set<Entry<K, V>> entrySet)
Set
Set
com.google.common.collect.super.com.google.common.collect.Iterators
unmodifiableIterator
public static UnmodifiableIterator<T> unmodifiableIterator(final Iterator<T> iterator)
Iterator
UnmodifiableIterator
com.google.common.collect.super.com.google.common.collect.Lists$AbstractListWrapper
AbstractListWrapper
AbstractListWrapper(List<E> backingList)
List
constructor
com.google.common.primitives.super.com.google.common.primitives.Ints
hashCode
public static int hashCode(int value)
int
int
com.google.common.collect.super.com.google.common.collect.Maps
filterValues
public static BiMap<K, V> filterValues(BiMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)
BiMap,Predicate
BiMap
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
of
public static ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)
E,E,E,E,E,E,E...
ImmutableMultiset
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
rebalance
private AvlNode<E> rebalance()
empty
AvlNode
com.google.common.collect.super.com.google.common.collect.RegularImmutableAsList
RegularImmutableAsList
RegularImmutableAsList(ImmutableCollection<E> delegate, Object[] array)
ImmutableCollection,Object[]
constructor
com.google.common.collect.super.com.google.common.collect.Sets
contains
public boolean contains(Object element)
Object
boolean
com.google.common.collect.super.com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap
delegate
public SortedSetMultimap<K, V> delegate()
empty
SortedSetMultimap
com.google.common.collect.super.com.google.common.collect.TreeMultiset
headMultiset
public SortedMultiset<E> headMultiset(@Nullable E upperBound, BoundType boundType)
E,BoundType
SortedMultiset
com.google.common.collect.super.com.google.common.collect.Lists
cartesianProduct
public static List<List<B>> cartesianProduct(List<? extends List<? extends B>> lists)
List
List
com.google.common.primitives.super.com.google.common.primitives.Floats
indexOf
private static int indexOf(float[] array, float target, int start, int end)
float[],float,int,int
int
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap$Builder
Builder
public Builder()
empty
constructor
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
checkElement
private static void checkElement(@Nullable Object node)
Object
void
com.google.common.collect.super.com.google.common.collect.Maps$FilteredEntrySortedMap
createKeySet
SortedSet<K> createKeySet()
empty
SortedSet
com.google.common.collect.super.com.google.common.collect.ArrayTable
ArrayTable
private ArrayTable(ArrayTable<R, C, V> table)
ArrayTable
constructor
com.google.common.io.super.com.google.common.io.BaseEncoding
separatingAppendable
static Appendable separatingAppendable(final Appendable delegate, final String separator, final int afterEveryChars)
Appendable,String,int
Appendable
com.google.common.collect.super.com.google.common.collect.FluentIterable
from
public static FluentIterable<E> from(final Iterable<E> iterable)
Iterable
FluentIterable
com.google.common.primitives.super.com.google.common.primitives.Doubles
asList
public static List<Double> asList(double... backingArray)
double...
List
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedListIterator
getDelegateListIterator
private ListIterator<V> getDelegateListIterator()
empty
ListIterator
com.google.common.collect.super.com.google.common.collect.Iterators
contains
public static boolean contains(Iterator<?> iterator, @Nullable Object element)
Iterator,Object
boolean
com.google.common.collect.super.com.google.common.collect.Sets$PowerSet
contains
public boolean contains(@Nullable Object obj)
Object
boolean
com.google.common.io.super.com.google.common.io.BaseEncoding$Alphabet
upperCase
Alphabet upperCase()
empty
Alphabet
com.google.common.base.super.com.google.common.base.Predicates$IsEqualToPredicate
IsEqualToPredicate
private IsEqualToPredicate(T target)
T
constructor
com.google.common.cache.super.com.google.common.cache.CacheBuilder
CacheBuilder
CacheBuilder()
empty
constructor
com.google.common.base.super.com.google.common.base.CharMatcher
javaDigit
public static CharMatcher javaDigit()
empty
CharMatcher
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedList
listIterator
public ListIterator<E> listIterator(int index)
int
ListIterator
com.google.common.collect.super.com.google.common.collect.EmptyContiguousSet
last
public C last()
empty
C
com.google.common.collect.super.com.google.common.collect.ArrayTable$ColumnMap
getKeyRole
String getKeyRole()
empty
String
com.google.common.base.super.com.google.common.base.Splitter
fixedLength
public static Splitter fixedLength(final int length)
int
Splitter
com.google.common.math.super.com.google.common.math.IntMath
divide
public static int divide(int p, int q, RoundingMode mode)
int,int,RoundingMode
int
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMap
SynchronizedMap
SynchronizedMap(Map<K, V> delegate, @Nullable Object mutex)
Map,Object
constructor
com.google.common.collect.super.com.google.common.collect.Iterators
limit
public static Iterator<T> limit(final Iterator<T> iterator, final int limitSize)
Iterator,int
Iterator
com.google.common.primitives.super.com.google.common.primitives.Shorts
indexOf
private static int indexOf(short[] array, short target, int start, int end)
short[],short,int,int
int
com.google.common.collect.super.com.google.common.collect.Sets
newLinkedHashSet
public static LinkedHashSet<E> newLinkedHashSet(Iterable<? extends E> elements)
Iterable
LinkedHashSet
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap
LinkedHashMultimap
private LinkedHashMultimap(int keyCapacity, int valueSetCapacity)
int,int
constructor
com.google.common.io.super.com.google.common.io.BaseEncoding$StandardBaseEncoding
newInstance
BaseEncoding newInstance(Alphabet alphabet, @Nullable Character paddingChar)
Alphabet,Character
BaseEncoding
com.google.common.util.concurrent.super.com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture
ImmediateFailedFuture
ImmediateFailedFuture(Throwable thrown)
Throwable
constructor
com.google.common.collect.super.com.google.common.collect.Iterables
slowRemoveIfForRemainingElements
private static void slowRemoveIfForRemainingElements(List<T> list, Predicate<? super T> predicate, int to, int from)
List,Predicate,int,int
void
com.google.common.collect.super.com.google.common.collect.Maps$AbstractFilteredMap
AbstractFilteredMap
AbstractFilteredMap(Map<K, V> unfiltered, Predicate<? super Entry<K, V>> predicate)
Map,Predicate
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
copyOf
public static ImmutableMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)
Iterable
ImmutableMultimap
com.google.common.primitives.super.com.google.common.primitives.Floats
max
public static float max(float... array)
float...
float
com.google.common.base.super.com.google.common.base.Predicates
alwaysTrue
public static Predicate<T> alwaysTrue()
empty
Predicate
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
replaceValues
public ImmutableCollection<V> replaceValues(K key, Iterable<? extends V> values)
K,Iterable
ImmutableCollection
com.google.common.primitives.super.com.google.common.primitives.Floats$FloatArrayAsList
FloatArrayAsList
FloatArrayAsList(float[] array)
float[]
constructor
com.google.common.collect.super.com.google.common.collect.FluentIterable
get
public final E get(int position)
int
E
com.google.common.collect.super.com.google.common.collect.Maps
removeOnlySortedSet
private static SortedSet<E> removeOnlySortedSet(final SortedSet<E> set)
SortedSet
SortedSet
com.google.common.collect.super.com.google.common.collect.FluentIterable
transformAndConcat
public FluentIterable<T> transformAndConcat(Function<? super E, ? extends Iterable<? extends T>> function)
Function
FluentIterable
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
immediateFuture
public static ListenableFuture<V> immediateFuture(@Nullable V value)
V
ListenableFuture
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap
entries
public Set<Map.Entry<K, V>> entries()
empty
Set
com.google.common.primitives.super.com.google.common.primitives.Ints
compare
public int compare(int[] left, int[] right)
int[],int[]
int
com.google.common.collect.super.com.google.common.collect.Maps
setValue
public V setValue(V newValue)
V
V
com.google.common.primitives.super.com.google.common.primitives.Floats$FloatConverter
readResolve
private Object readResolve()
empty
Object
com.google.common.collect.super.com.google.common.collect.Maps
asMapEntryIterator
static Iterator<Entry<K, V>> asMapEntryIterator(Set<K> set, final Function<? super K, V> function)
Set,Function
Iterator
com.google.common.collect.super.com.google.common.collect.ArrayTable
create
public static ArrayTable<R, C, V> create(Table<R, C, V> table)
Table
ArrayTable
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
getCount
public int getCount()
empty
int
com.google.common.collect.super.com.google.common.collect.Iterables
partition
public static Iterable<List<T>> partition(final Iterable<T> iterable, final int size)
Iterable,int
Iterable
com.google.common.base.super.com.google.common.base.CharMatcher$NegatedFastMatcher
NegatedFastMatcher
NegatedFastMatcher(CharMatcher original)
CharMatcher
constructor
com.google.common.io.super.com.google.common.io.BaseEncoding$Base64Encoding
Base64Encoding
private Base64Encoding(Alphabet alphabet, @Nullable Character paddingChar)
Alphabet,Character
constructor
com.google.common.collect.super.com.google.common.collect.LinkedHashMultiset
create
public static LinkedHashMultiset<E> create(Iterable<? extends E> elements)
Iterable
LinkedHashMultiset
com.google.common.collect.super.com.google.common.collect.TreeMultiset
treeAggregate
abstract long treeAggregate(@Nullable AvlNode<?> root)
AvlNode
long
com.google.common.collect.super.com.google.common.collect.Lists
indexOfRandomAccess
private static int indexOfRandomAccess(List<?> list, @Nullable Object element)
List,Object
int
com.google.common.collect.super.com.google.common.collect.Sets
powerSet
public static Set<Set<E>> powerSet(Set<E> set)
Set
Set
com.google.common.io.super.com.google.common.io.BaseEncoding
BaseEncoding
BaseEncoding()
empty
constructor
com.google.common.primitives.super.com.google.common.primitives.Chars
join
public static String join(String separator, char... array)
String,char...
String
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
of
public static ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2)
K,V,K,V
ImmutableMultimap
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
createCollection
abstract Collection<V> createCollection()
empty
Collection
com.google.common.collect.super.com.google.common.collect.Iterators
forArray
public static UnmodifiableIterator<T> forArray(final T... array)
T...
UnmodifiableIterator
com.google.common.collect.super.com.google.common.collect.Multimaps
asMap
public static Map<K, Collection<V>> asMap(Multimap<K, V> multimap)
Multimap
Map
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
LinkedListMultimap
private LinkedListMultimap(int expectedKeys)
int
constructor
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$NodeIterator
NodeIterator
NodeIterator(int index)
int
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
valuesBuilder
private static ImmutableSet.Builder<V> valuesBuilder(@Nullable Comparator<? super V> valueComparator)
Comparator
ImmutableSet.Builder
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedQueue
poll
public E poll()
empty
E
com.google.common.collect.super.com.google.common.collect.Maps
transformValues
public static Map<K, V2> transformValues(Map<K, V1> fromMap, Function<? super V1, V2> function)
Map,Function
Map
com.google.common.cache.super.com.google.common.cache.CacheBuilder
read
public long read()
empty
long
com.google.common.collect.super.com.google.common.collect.Lists
cartesianProduct
public static List<List<B>> cartesianProduct(List<? extends B>... lists)
List...
List
com.google.common.collect.super.com.google.common.collect.Maps
asMapSortedIgnoreNavigable
static SortedMap<K, V> asMapSortedIgnoreNavigable(SortedSet<K> set, Function<? super K, V> function)
SortedSet,Function
SortedMap
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset$EntrySet
get
Entry<E> get(int index)
int
Entry
com.google.common.cache.super.com.google.common.cache.CacheBuilder
maximumSize
public CacheBuilder<K, V> maximumSize(long size)
long
CacheBuilder
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
of
public static ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)
K,V,K,V,K,V,K,V,K,V
ImmutableMultimap
com.google.common.collect.super.com.google.common.collect.Lists
subListImpl
static List<E> subListImpl(final List<E> list, int fromIndex, int toIndex)
List,int,int
List
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedList
add
public void add(int index, V element)
int,V
void
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
height
private static int height(@Nullable AvlNode<?> node)
AvlNode
int
com.google.common.collect.super.com.google.common.collect.ArrayTable$ColumnMap
setValue
Map<R, V> setValue(int index, Map<R, V> newValue)
int,Map
Map
com.google.common.collect.super.com.google.common.collect.Maps
difference
public static MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right, Equivalence<? super V> valueEquivalence)
Map,Map,Equivalence
MapDifference
com.google.common.collect.super.com.google.common.collect.ContiguousSet
tailSetImpl
abstract ContiguousSet<C> tailSetImpl(C fromElement, boolean inclusive)
C,boolean
ContiguousSet
com.google.common.collect.super.com.google.common.collect.Iterators
getLast
public static T getLast(Iterator<T> iterator)
Iterator
T
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
values
public Set<V> values()
empty
Set
com.google.common.io.super.com.google.common.io.BaseEncoding$StandardBaseEncoding
decodeTo
int decodeTo(byte[] target, CharSequence chars) throws DecodingException
byte[],CharSequence
int
com.google.common.collect.super.com.google.common.collect.Sets
containsAll
public boolean containsAll(Collection<?> collection)
Collection
boolean
com.google.common.collect.super.com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet
iterator
public UnmodifiableIterator<Entry<K, V>> iterator()
empty
UnmodifiableIterator
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
of
public static ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)
K,V,K,V,K,V,K,V
ImmutableMultimap
com.google.common.collect.super.com.google.common.collect.Maps$Values
Values
Values(Map<K, V> map)
Map
constructor
com.google.common.collect.super.com.google.common.collect.Sets
union
public static SetView<E> union(final Set<? extends E> set1, final Set<? extends E> set2)
Set,Set
SetView
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
successfulAsList
public static ListenableFuture<List<V>> successfulAsList(Iterable<? extends ListenableFuture<? extends V>> futures)
Iterable
ListenableFuture
com.google.common.collect.super.com.google.common.collect.Maps$IteratorBasedAbstractMap
size
public abstract int size()
empty
int
com.google.common.collect.super.com.google.common.collect.Maps$BiMapConverter
doForward
protected B doForward(A a)
A
B
com.google.common.collect.super.com.google.common.collect.FluentIterable
last
public final Optional<E> last()
empty
Optional
com.google.common.primitives.super.com.google.common.primitives.Shorts$ShortArrayAsList
toShortArray
short[] toShortArray()
empty
short[]
com.google.common.cache.super.com.google.common.cache.CacheBuilder
weigh
public int weigh(Object key, Object value)
Object,Object
int
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
createValues
ImmutableCollection<V> createValues()
empty
ImmutableCollection
com.google.common.collect.super.com.google.common.collect.ArrayListMultimap
trimToSize
public void trimToSize()
empty
void
com.google.common.collect.super.com.google.common.collect.ImmutableListMultimap
of
public static ImmutableListMultimap<K, V> of(K k1, V v1)
K,V
ImmutableListMultimap
com.google.common.collect.super.com.google.common.collect.Multimaps
transformEntries
public static Multimap<K, V2> transformEntries(Multimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)
Multimap,EntryTransformer
Multimap
com.google.common.collect.super.com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet
map
ImmutableMap<K, V> map()
empty
ImmutableMap
com.google.common.collect.super.com.google.common.collect.Maps$TransformedEntriesMap
entryIterator
Iterator<Entry<K, V2>> entryIterator()
empty
Iterator
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
compareTo
public int compareTo(UnsignedInteger other)
UnsignedInteger
int
com.google.common.collect.super.com.google.common.collect.Synchronized
set
static Set<E> set(Set<E> set, @Nullable Object mutex)
Set,Object
Set
com.google.common.collect.super.com.google.common.collect.Maps
newHashMapWithExpectedSize
public static HashMap<K, V> newHashMapWithExpectedSize(int expectedSize)
int
HashMap
com.google.common.base.super.com.google.common.base.CharMatcher
any
public static CharMatcher any()
empty
CharMatcher
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
ImmutableSetMultimap
ImmutableSetMultimap(ImmutableMap<K, ImmutableSet<V>> map, int size, @Nullable Comparator<? super V> valueComparator)
ImmutableMap,int,Comparator
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
of
public static ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5)
E,E,E,E,E
ImmutableMultiset
com.google.common.base.super.com.google.common.base.Predicates$AndPredicate
AndPredicate
private AndPredicate(List<? extends Predicate<? super T>> components)
List
constructor
com.google.common.collect.super.com.google.common.collect.Lists
newLinkedList
public static LinkedList<E> newLinkedList()
empty
LinkedList
com.google.common.collect.super.com.google.common.collect.HashMultimap
create
public static HashMultimap<K, V> create()
empty
HashMultimap
com.google.common.collect.super.com.google.common.collect.Iterators
paddedPartition
public static UnmodifiableIterator<List<T>> paddedPartition(Iterator<T> iterator, int size)
Iterator,int
UnmodifiableIterator
com.google.common.cache.super.com.google.common.cache.CacheBuilder
onRemoval
public void onRemoval(RemovalNotification<Object, Object> notification)
RemovalNotification
void
com.google.common.collect.super.com.google.common.collect.Multimaps
forMap
public static SetMultimap<K, V> forMap(Map<K, V> map)
Map
SetMultimap
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
create
public static LinkedListMultimap<K, V> create()
empty
LinkedListMultimap
com.google.common.collect.super.com.google.common.collect.Sets
removeAllImpl
static boolean removeAllImpl(Set<?> set, Iterator<?> iterator)
Set,Iterator
boolean
com.google.common.collect.super.com.google.common.collect.Multimaps$UnmodifiableMultimap
delegate
protected Multimap<K, V> delegate()
empty
Multimap
com.google.common.collect.super.com.google.common.collect.Multimaps
transformValues
public static ListMultimap<K, V2> transformValues(ListMultimap<K, V1> fromMultimap, final Function<? super V1, V2> function)
ListMultimap,Function
ListMultimap
com.google.common.collect.super.com.google.common.collect.Maps
filterValues
public static Map<K, V> filterValues(Map<K, V> unfiltered, final Predicate<? super V> valuePredicate)
Map,Predicate
Map
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
bigIntegerValue
public BigInteger bigIntegerValue()
empty
BigInteger
com.google.common.cache.super.com.google.common.cache.CacheBuilder
build
public Cache<K1, V1> build()
empty
Cache
com.google.common.base.super.com.google.common.base.CharMatcher
indexIn
public int indexIn(CharSequence sequence)
CharSequence
int
com.google.common.collect.super.com.google.common.collect.FluentIterable
filter
public final FluentIterable<E> filter(Predicate<? super E> predicate)
Predicate
FluentIterable
com.google.common.primitives.super.com.google.common.primitives.Shorts
saturatedCast
public static short saturatedCast(long value)
long
short
com.google.common.collect.super.com.google.common.collect.ContiguousSet
range
public abstract Range<C> range(BoundType lowerBoundType, BoundType upperBoundType)
BoundType,BoundType
Range
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
asMap
public ImmutableMap<K, Collection<V>> asMap()
empty
ImmutableMap
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap$Builder
put
public Builder<K, V> put(K key, V value)
K,V
Builder
com.google.common.base.super.com.google.common.base.CharMatcher$NamedFastMatcher
NamedFastMatcher
NamedFastMatcher(String description)
String
constructor
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$KeySet
delegate
protected Set<K> delegate()
empty
Set
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
copyOf
public static ImmutableMultiset<E> copyOf(Iterable<? extends E> elements)
Iterable
ImmutableMultiset
com.google.common.collect.super.com.google.common.collect.Iterators
getNext
public static T getNext(Iterator<? extends T> iterator, @Nullable T defaultValue)
Iterator,T
T
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection
getDelegate
Collection<V> getDelegate()
empty
Collection
com.google.common.math.super.com.google.common.math.IntMath
factorial
public static int factorial(int n)
int
int
com.google.common.primitives.super.com.google.common.primitives.Doubles$DoubleConverter
doForward
protected Double doForward(String value)
String
Double
com.google.common.cache.super.com.google.common.cache.CacheBuilder
removalListener
public CacheBuilder<K1, V1> removalListener(RemovalListener<? super K1, ? super V1> listener)
RemovalListener
CacheBuilder
com.google.common.base.super.com.google.common.base.CharMatcher
breakingWhitespace
public static CharMatcher breakingWhitespace()
empty
CharMatcher
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap
removeAll
public SortedSet<V> removeAll(Object key)
Object
SortedSet
com.google.common.math.super.com.google.common.math.LongMath
testWitness
private boolean testWitness(long base, long n)
long,long
boolean
com.google.common.collect.super.com.google.common.collect.Maps
newTreeMap
public static TreeMap<K, V> newTreeMap(@Nullable Comparator<C> comparator)
Comparator
TreeMap
com.google.common.collect.super.com.google.common.collect.Iterables
unmodifiableIterable
public static Iterable<E> unmodifiableIterable(ImmutableCollection<E> iterable)
ImmutableCollection
Iterable
com.google.common.collect.super.com.google.common.collect.Lists$RandomAccessListWrapper
RandomAccessListWrapper
RandomAccessListWrapper(List<E> backingList)
List
constructor
com.google.common.collect.super.com.google.common.collect.Iterators
partition
public static UnmodifiableIterator<List<T>> partition(Iterator<T> iterator, int size)
Iterator,int
UnmodifiableIterator
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap$Keys
getEntry
Multiset.Entry<K> getEntry(int index)
int
Multiset.Entry
com.google.common.collect.super.com.google.common.collect.Iterators
next
public Object next()
empty
Object
com.google.common.collect.super.com.google.common.collect.Sets
Sets
private Sets()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Multimaps$TransformedEntriesListMultimap
get
public List<V2> get(K key)
K
List
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
entrySet
public Set<Entry<K, V>> entrySet()
empty
Set
com.google.common.collect.super.com.google.common.collect.Maps$AsMapView
createKeySet
public Set<K> createKeySet()
empty
Set
com.google.common.collect.super.com.google.common.collect.ArrayTable
putAll
public void putAll(Table<? extends R, ? extends C, ? extends V> table)
Table
void
com.google.common.primitives.super.com.google.common.primitives.Floats$FloatArrayAsList
FloatArrayAsList
FloatArrayAsList(float[] array, int start, int end)
float[],int,int
constructor
com.google.common.collect.super.com.google.common.collect.TreeMultiset
successor
private static void successor(AvlNode<T> a, AvlNode<T> b, AvlNode<T> c)
AvlNode,AvlNode,AvlNode
void
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedAsMap
SynchronizedAsMap
SynchronizedAsMap(Map<K, Collection<V>> delegate, @Nullable Object mutex)
Map,Object
constructor
com.google.common.collect.super.com.google.common.collect.ObjectArrays
checkElementsNotNull
static Object[] checkElementsNotNull(Object[] array, int length)
Object[],int
Object[]
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
AbstractBiMap
private AbstractBiMap(Map<K, V> backward, AbstractBiMap<V, K> forward)
Map,AbstractBiMap
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap$Builder
build
public ImmutableSetMultimap<K, V> build()
empty
ImmutableSetMultimap
com.google.common.base.super.com.google.common.base.Splitter$SplittingIterator
computeNext
protected String computeNext()
empty
String
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultiset
count
public int count(Object o)
Object
int
com.google.common.util.concurrent.super.com.google.common.util.concurrent.ImmediateFuture
isCancelled
public boolean isCancelled()
empty
boolean
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
of
public static ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2)
K,V,K,V
ImmutableSetMultimap
com.google.common.primitives.super.com.google.common.primitives.Shorts
Shorts
private Shorts()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Maps
keyIterator
static Iterator<K> keyIterator(Iterator<Entry<K, V>> entryIterator)
Iterator
Iterator
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultimap
asMap
public Map<K, Collection<V>> asMap()
empty
Map
com.google.common.base.super.com.google.common.base.CharMatcher
noneOf
public static CharMatcher noneOf(CharSequence sequence)
CharSequence
CharMatcher
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
successfulAsList
public static ListenableFuture<List<V>> successfulAsList(ListenableFuture<? extends V>... futures)
ListenableFuture...
ListenableFuture
com.google.common.util.concurrent.super.com.google.common.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture
ImmediateSuccessfulFuture
ImmediateSuccessfulFuture(@Nullable V value)
V
constructor
com.google.common.collect.super.com.google.common.collect.Lists$RandomAccessReverseList
RandomAccessReverseList
RandomAccessReverseList(List<T> forwardList)
List
constructor
com.google.common.base.super.com.google.common.base.Stopwatch
isRunning
public boolean isRunning()
empty
boolean
com.google.common.collect.super.com.google.common.collect.Synchronized
setMultimap
static SetMultimap<K, V> setMultimap(SetMultimap<K, V> multimap, @Nullable Object mutex)
SetMultimap,Object
SetMultimap
com.google.common.math.super.com.google.common.math.IntMath
log2
public static int log2(int x, RoundingMode mode)
int,RoundingMode
int
com.google.common.collect.super.com.google.common.collect.Maps$TransformedEntriesMap
remove
public V2 remove(Object key)
Object
V2
com.google.common.collect.super.com.google.common.collect.FluentIterable
join
public final String join(Joiner joiner)
Joiner
String
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
createEntries
List<Entry<K, V>> createEntries()
empty
List
com.google.common.collect.super.com.google.common.collect.FluentIterable
uniqueIndex
public final ImmutableMap<K, E> uniqueIndex(Function<? super E, K> keyFunction)
Function
ImmutableMap
com.google.common.base.super.com.google.common.base.CharMatcher
matchesAnyOf
public boolean matchesAnyOf(CharSequence sequence)
CharSequence
boolean
com.google.common.primitives.super.com.google.common.primitives.Doubles$DoubleArrayAsList
get
public Double get(int index)
int
Double
com.google.common.collect.super.com.google.common.collect.Iterables
paddedPartition
public static Iterable<List<T>> paddedPartition(final Iterable<T> iterable, final int size)
Iterable,int
Iterable
com.google.common.collect.super.com.google.common.collect.Iterables
transform
public static Iterable<T> transform(final Iterable<F> fromIterable, final Function<? super F, ? extends T> function)
Iterable,Function
Iterable
com.google.common.collect.super.com.google.common.collect.Maps
addAll
public boolean addAll(Collection<? extends E> es)
Collection
boolean
com.google.common.collect.super.com.google.common.collect.ArrayTable
column
public Map<R, V> column(C columnKey)
C
Map
com.google.common.collect.super.com.google.common.collect.RegularContiguousSet
containsAll
public boolean containsAll(Collection<?> targets)
Collection
boolean
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
valueIterator
UnmodifiableIterator<V> valueIterator()
empty
UnmodifiableIterator
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$EntrySet
remove
public boolean remove(Object object)
Object
boolean
com.google.common.collect.super.com.google.common.collect.Lists$ReverseList
subList
public List<T> subList(int fromIndex, int toIndex)
int,int
List
com.google.common.collect.super.com.google.common.collect.Multimaps
transformValues
public static Multimap<K, V2> transformValues(Multimap<K, V1> fromMultimap, final Function<? super V1, V2> function)
Multimap,Function
Multimap
com.google.common.collect.super.com.google.common.collect.Multimaps$TransformedEntriesMultimap
putAll
public boolean putAll(Multimap<? extends K, ? extends V2> multimap)
Multimap
boolean
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
transform
public static ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)
ListenableFuture,AsyncFunction
ListenableFuture
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$AsMap
get
public Collection<V> get(Object key)
Object
Collection
com.google.common.primitives.super.com.google.common.primitives.Shorts$ShortArrayAsList
subList
public List<Short> subList(int fromIndex, int toIndex)
int,int
List
com.google.common.collect.super.com.google.common.collect.FluentIterable
toMultiset
public final ImmutableMultiset<E> toMultiset()
empty
ImmutableMultiset
com.google.common.collect.super.com.google.common.collect.TreeMultiset
setCount
public boolean setCount(@Nullable E element, int oldCount, int newCount)
E,int,int
boolean
com.google.common.collect.super.com.google.common.collect.Lists$ReverseList
set
public T set(int index, @Nullable T element)
int,T
T
com.google.common.collect.super.com.google.common.collect.TreeMultiset
remove
public int remove(@Nullable Object element, int occurrences)
Object,int
int
com.google.common.primitives.super.com.google.common.primitives.Floats
asList
public static List<Float> asList(float... backingArray)
float...
List
com.google.common.base.super.com.google.common.base.Stopwatch
elapsed
public long elapsed(TimeUnit desiredUnit)
TimeUnit
long
com.google.common.base.super.com.google.common.base.Stopwatch
elapsedNanos
private long elapsedNanos()
empty
long
com.google.common.collect.super.com.google.common.collect.ArrayTable
values
public Collection<V> values()
empty
Collection
com.google.common.collect.super.com.google.common.collect.HashMultimap
HashMultimap
private HashMultimap(Multimap<? extends K, ? extends V> multimap)
Multimap
constructor
com.google.common.collect.super.com.google.common.collect.Maps$FilteredEntrySortedMap
FilteredEntrySortedMap
FilteredEntrySortedMap(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)
SortedMap,Predicate
constructor
com.google.common.base.super.com.google.common.base.Splitter
Splitter
private Splitter(Strategy strategy)
Strategy
constructor
com.google.common.collect.super.com.google.common.collect.Multimaps$UnmodifiableMultimap
entries
public Collection<Entry<K, V>> entries()
empty
Collection
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$KeySet
retainAll
public boolean retainAll(Collection<?> keysToRetain)
Collection
boolean
com.google.common.collect.super.com.google.common.collect.Maps
apply
public V2 apply(@Nullable V1 v1)
V1
V2
com.google.common.collect.super.com.google.common.collect.Sets
makeComplementByHand
private static EnumSet<E> makeComplementByHand(Collection<E> collection, Class<E> type)
Collection,Class
EnumSet
com.google.common.collect.super.com.google.common.collect.Iterators
removeIf
public static boolean removeIf(Iterator<T> removeFrom, Predicate<? super T> predicate)
Iterator,Predicate
boolean
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedBiMap
SynchronizedBiMap
private SynchronizedBiMap(BiMap<K, V> delegate, @Nullable Object mutex, @Nullable BiMap<V, K> inverse)
BiMap,Object,BiMap
constructor
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
iteratorOrListIterator
private Iterator<V> iteratorOrListIterator(Collection<V> collection)
Collection
Iterator
com.google.common.collect.super.com.google.common.collect.TreeMultiset
firstNode
private AvlNode<E> firstNode()
empty
AvlNode
com.google.common.collect.super.com.google.common.collect.SortedMultisets
getElementOrNull
private static E getElementOrNull(@Nullable Entry<E> entry)
Entry
E
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet
last
public V last()
empty
V
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap$Builder
put
public Builder<K, V> put(Entry<? extends K, ? extends V> entry)
Entry
Builder
com.google.common.primitives.super.com.google.common.primitives.Floats
contains
public static boolean contains(float[] array, float target)
float[],float
boolean
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
forcePut
public V forcePut(@Nullable K key, @Nullable V value)
K,V
V
com.google.common.collect.super.com.google.common.collect.Sets
newHashSet
public static HashSet<E> newHashSet()
empty
HashSet
com.google.common.collect.super.com.google.common.collect.FluentIterable
cycle
public final FluentIterable<E> cycle()
empty
FluentIterable
com.google.common.collect.super.com.google.common.collect.Iterables
isEmpty
public static boolean isEmpty(Iterable<?> iterable)
Iterable
boolean
com.google.common.collect.super.com.google.common.collect.Multimaps
index
public static ImmutableListMultimap<K, V> index(Iterator<V> values, Function<? super V, K> keyFunction)
Iterator,Function
ImmutableListMultimap
com.google.common.collect.super.com.google.common.collect.TreeMultiset
getElement
public E getElement()
empty
E
com.google.common.cache.super.com.google.common.cache.CacheBuilder
expireAfterWrite
public CacheBuilder<K, V> expireAfterWrite(long duration, TimeUnit unit)
long,TimeUnit
CacheBuilder
com.google.common.collect.super.com.google.common.collect.Multimaps
unmodifiableMultimap
public static Multimap<K, V> unmodifiableMultimap(ImmutableMultimap<K, V> delegate)
ImmutableMultimap
Multimap
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
of
public static ImmutableMultiset<E> of()
empty
ImmutableMultiset
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
floatValue
public float floatValue()
empty
float
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
equals
public boolean equals(@Nullable Object obj)
Object
boolean
com.google.common.collect.super.com.google.common.collect.ImmutableListMultimap
of
public static ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)
K,V,K,V,K,V,K,V,K,V
ImmutableListMultimap
com.google.common.collect.super.com.google.common.collect.Sets
newEnumSet
public static EnumSet<E> newEnumSet(Iterable<E> iterable, Class<E> elementType)
Iterable,Class
EnumSet
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap$EntryCollection
EntryCollection
EntryCollection(ImmutableMultimap<K, V> multimap)
ImmutableMultimap
constructor
com.google.common.collect.super.com.google.common.collect.Maps$MapDifferenceImpl
entriesDiffering
public Map<K, ValueDifference<V>> entriesDiffering()
empty
Map
com.google.common.base.super.com.google.common.base.Predicates$NotPredicate
apply
public boolean apply(@Nullable T t)
T
boolean
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
entryIterator
UnmodifiableIterator<Entry<K, V>> entryIterator()
empty
UnmodifiableIterator
com.google.common.collect.super.com.google.common.collect.Sets
immutableEnumSet
public static ImmutableSet<E> immutableEnumSet(Iterable<E> elements)
Iterable
ImmutableSet
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
remove
public V remove(@Nullable Object key)
Object
V
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedList
SynchronizedList
SynchronizedList(List<E> delegate, @Nullable Object mutex)
List,Object
constructor
com.google.common.collect.super.com.google.common.collect.Multimaps
filterEntries
public static Multimap<K, V> filterEntries(Multimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)
Multimap,Predicate
Multimap
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Callables
Callables
private Callables()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Maps$SortedMapDifferenceImpl
entriesInCommon
public SortedMap<K, V> entriesInCommon()
empty
SortedMap
com.google.common.collect.super.com.google.common.collect.Iterables
limit
public static Iterable<T> limit(final Iterable<T> iterable, final int limitSize)
Iterable,int
Iterable
com.google.common.cache.super.com.google.common.cache.CacheBuilder
getRefreshNanos
long getRefreshNanos()
empty
long
com.google.common.collect.super.com.google.common.collect.Lists$ReverseList
removeRange
protected void removeRange(int fromIndex, int toIndex)
int,int
void
com.google.common.collect.super.com.google.common.collect.Sets
filterSortedIgnoreNavigable
static SortedSet<E> filterSortedIgnoreNavigable(SortedSet<E> unfiltered, Predicate<? super E> predicate)
SortedSet,Predicate
SortedSet
com.google.common.cache.super.com.google.common.cache.CacheBuilder
checkNonLoadingCache
private void checkNonLoadingCache()
empty
void
com.google.common.io.super.com.google.common.io.BaseEncoding$StandardBaseEncoding
omitPadding
public BaseEncoding omitPadding()
empty
BaseEncoding
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
setCount
public final int setCount(E element, int count)
E,int
int
com.google.common.collect.super.com.google.common.collect.Lists
newArrayListWithCapacity
public static ArrayList<E> newArrayListWithCapacity(int initialArraySize)
int
ArrayList
com.google.common.primitives.super.com.google.common.primitives.Chars
copyOf
private static char[] copyOf(char[] original, int length)
char[],int
char[]
com.google.common.collect.super.com.google.common.collect.ImmutableListMultimap
copyOf
public static ImmutableListMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)
Iterable
ImmutableListMultimap
com.google.common.primitives.super.com.google.common.primitives.Chars
lastIndexOf
private static int lastIndexOf(char[] array, char target, int start, int end)
char[],char,int,int
int
com.google.common.io.super.com.google.common.io.BaseEncoding$StandardBaseEncoding
encodeTo
void encodeTo(Appendable target, byte[] bytes, int off, int len) throws IOException
Appendable,byte[],int,int
void
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
invert
private ImmutableSetMultimap<V, K> invert()
empty
ImmutableSetMultimap
com.google.common.collect.super.com.google.common.collect.ImmutableListMultimap
inverse
public ImmutableListMultimap<V, K> inverse()
empty
ImmutableListMultimap
com.google.common.primitives.super.com.google.common.primitives.Ints
lastIndexOf
private static int lastIndexOf(int[] array, int target, int start, int end)
int[],int,int,int
int
com.google.common.collect.super.com.google.common.collect.SortedMultisets
SortedMultisets
private SortedMultisets()
empty
constructor
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
clear
public void clear()
empty
void
com.google.common.base.super.com.google.common.base.CharMatcher
inRange
public static CharMatcher inRange(final char startInclusive, final char endInclusive)
char,char
CharMatcher
com.google.common.collect.super.com.google.common.collect.Multimaps
asMap
public static Map<K, List<V>> asMap(ListMultimap<K, V> multimap)
ListMultimap
Map
com.google.common.collect.super.com.google.common.collect.Multimaps$TransformedEntriesMultimap
replaceValues
public Collection<V2> replaceValues(K key, Iterable<? extends V2> values)
K,Iterable
Collection
com.google.common.io.super.com.google.common.io.BaseEncoding$DecodingException
DecodingException
DecodingException(String message)
String
constructor
com.google.common.collect.super.com.google.common.collect.Iterables
getLast
public static T getLast(Iterable<T> iterable)
Iterable
T
com.google.common.base.super.com.google.common.base.Predicates
or
public static Predicate<T> or(Predicate<? super T>... components)
Predicate...
Predicate
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueEntry
setPredecessorInValueSet
public void setPredecessorInValueSet(ValueSetLink<K, V> entry)
ValueSetLink
void
com.google.common.primitives.super.com.google.common.primitives.Chars
saturatedCast
public static char saturatedCast(long value)
long
char
com.google.common.io.super.com.google.common.io.BaseEncoding
append
public Appendable append(CharSequence chars, int off, int len) throws IOException
CharSequence,int,int
Appendable
com.google.common.primitives.super.com.google.common.primitives.Shorts
min
public static short min(short... array)
short...
short
com.google.common.collect.super.com.google.common.collect.Iterators
get
public static T get(Iterator<T> iterator, int position)
Iterator,int
T
com.google.common.collect.super.com.google.common.collect.ArrayTable$ArrayMap
get
public V get(@Nullable Object key)
Object
V
com.google.common.primitives.super.com.google.common.primitives.Ints
concat
public static int[] concat(int[]... arrays)
int[]...
int[]
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueEntry
getSuccessorInMultimap
public ValueEntry<K, V> getSuccessorInMultimap()
empty
ValueEntry
com.google.common.collect.super.com.google.common.collect.Maps$MapDifferenceImpl
entriesInCommon
public Map<K, V> entriesInCommon()
empty
Map
com.google.common.primitives.super.com.google.common.primitives.Floats$FloatArrayAsList
subList
public List<Float> subList(int fromIndex, int toIndex)
int,int
List
com.google.common.primitives.super.com.google.common.primitives.Doubles$DoubleArrayAsList
subList
public List<Double> subList(int fromIndex, int toIndex)
int,int
List
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
setInverse
void setInverse(AbstractBiMap<V, K> inverse)
AbstractBiMap
void
com.google.common.collect.super.com.google.common.collect.ImmutableMapValues
iterator
public UnmodifiableIterator<V> iterator()
empty
UnmodifiableIterator
com.google.common.base.super.com.google.common.base.Stopwatch
chooseUnit
private static TimeUnit chooseUnit(long nanos)
long
TimeUnit
com.google.common.collect.super.com.google.common.collect.Iterables
mergeSorted
public static Iterable<T> mergeSorted(final Iterable<? extends Iterable<? extends T>> iterables, final Comparator<? super T> comparator)
Iterable,Comparator
Iterable
com.google.common.collect.super.com.google.common.collect.EnumHashBiMap
forcePut
public V forcePut(K key, @Nullable V value)
K,V
V
com.google.common.collect.super.com.google.common.collect.ContiguousSet
subSet
public ContiguousSet<C> subSet(C fromElement, C toElement)
C,C
ContiguousSet
com.google.common.collect.super.com.google.common.collect.Maps$SortedKeySet
map
SortedMap<K, V> map()
empty
SortedMap
com.google.common.collect.super.com.google.common.collect.ArrayTable
columnKeySet
public ImmutableSet<C> columnKeySet()
empty
ImmutableSet
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
createEntries
ImmutableCollection<Entry<K, V>> createEntries()
empty
ImmutableCollection
com.google.common.collect.super.com.google.common.collect.Maps
filterEntries
public static SortedMap<K, V> filterEntries(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)
SortedMap,Predicate
SortedMap
com.google.common.primitives.super.com.google.common.primitives.Doubles
lexicographicalComparator
public static Comparator<double[]> lexicographicalComparator()
empty
Comparator
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
copyOf
public static ImmutableMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)
Multimap
ImmutableMultimap
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap$Builder
putAll
public Builder<K, V> putAll(Iterable<? extends Entry<? extends K, ? extends V>> entries)
Iterable
Builder
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
removeValuesForKey
private int removeValuesForKey(Object key)
Object
int
com.google.common.primitives.super.com.google.common.primitives.Floats
compare
public int compare(float[] left, float[] right)
float[],float[]
int
com.google.common.collect.super.com.google.common.collect.EnumBiMap
EnumBiMap
private EnumBiMap(Class<K> keyType, Class<V> valueType)
Class,Class
constructor
com.google.common.io.super.com.google.common.io.BaseEncoding$StandardBaseEncoding
withSeparator
public BaseEncoding withSeparator(String separator, int afterEveryChars)
String,int
BaseEncoding
com.google.common.base.super.com.google.common.base.Predicates
not
public static Predicate<T> not(Predicate<T> predicate)
Predicate
Predicate
com.google.common.primitives.super.com.google.common.primitives.Floats
stringConverter
public static Converter<String, Float> stringConverter()
empty
Converter
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$NodeIterator
next
public Node<K, V> next()
empty
Node
com.google.common.collect.super.com.google.common.collect.Iterables
concat
public static Iterable<T> concat(Iterable<? extends T>... inputs)
Iterable...
Iterable
com.google.common.collect.super.com.google.common.collect.Synchronized
queue
static Queue<E> queue(Queue<E> queue, @Nullable Object mutex)
Queue,Object
Queue
com.google.common.collect.super.com.google.common.collect.Iterators
cycle
public static Iterator<T> cycle(T... elements)
T...
Iterator
com.google.common.collect.super.com.google.common.collect.Multimaps$UnmodifiableListMultimap
UnmodifiableListMultimap
UnmodifiableListMultimap(ListMultimap<K, V> delegate)
ListMultimap
constructor
com.google.common.collect.super.com.google.common.collect.Maps$TransformedEntriesMap
values
public Collection<V2> values()
empty
Collection
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedBiMap
delegate
BiMap<K, V> delegate()
empty
BiMap
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap
SortedAsMap
SortedAsMap(SortedMap<K, Collection<V>> submap)
SortedMap
constructor
com.google.common.collect.super.com.google.common.collect.Multimaps
Multimaps
private Multimaps()
empty
constructor
com.google.common.collect.super.com.google.common.collect.ArrayTable
ArrayTable
private ArrayTable(Table<R, C, V> table)
Table
constructor
com.google.common.base.super.com.google.common.base.CharMatcher$SingleWidth
SingleWidth
private SingleWidth()
empty
constructor
com.google.common.primitives.super.com.google.common.primitives.Chars$CharArrayAsList
toCharArray
char[] toCharArray()
empty
char[]
com.google.common.collect.super.com.google.common.collect.Iterables
getLastInNonemptyList
private static T getLastInNonemptyList(List<T> list)
List
T
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedCollection
toArray
public T[] toArray(T[] a)
T[]
T[]
com.google.common.collect.super.com.google.common.collect.Maps
containsValueImpl
static boolean containsValueImpl(Map<?, ?> map, @Nullable Object value)
Map,Object
boolean
com.google.common.primitives.super.com.google.common.primitives.Chars
ensureCapacity
public static char[] ensureCapacity(char[] array, int minLength, int padding)
char[],int,int
char[]
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
asAsyncFunction
static AsyncFunction<Throwable, V> asAsyncFunction(final FutureFallback<V> fallback)
FutureFallback
AsyncFunction
com.google.common.collect.super.com.google.common.collect.Maps$AsMapView
createEntrySet
protected Set<Entry<K, V>> createEntrySet()
empty
Set
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet
subSet
public SortedSet<V> subSet(V fromElement, V toElement)
V,V
SortedSet
com.google.common.collect.super.com.google.common.collect.Multimaps$Keys
entryIterator
Iterator<Multiset.Entry<K>> entryIterator()
empty
Iterator
com.google.common.base.super.com.google.common.base.CharMatcher
finishCollapseFrom
private String finishCollapseFrom(CharSequence sequence, int start, int end, char replacement, StringBuilder builder, boolean inMatchingGroup)
CharSequence,int,int,char,StringBuilder,boolean
String
com.google.common.collect.super.com.google.common.collect.Sets
cartesianProduct
public static Set<List<B>> cartesianProduct(Set<? extends B>... sets)
Set...
Set
com.google.common.collect.super.com.google.common.collect.Maps$SortedMapDifferenceImpl
entriesOnlyOnLeft
public SortedMap<K, V> entriesOnlyOnLeft()
empty
SortedMap
com.google.common.collect.super.com.google.common.collect.Maps
asMap
public static Map<K, V> asMap(Set<K> set, Function<? super K, V> function)
Set,Function
Map
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
wrapList
private List<V> wrapList(@Nullable K key, List<V> list, @Nullable WrappedCollection ancestor)
K,List,WrappedCollection
List
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
of
public static ImmutableMultiset<E> of(E e1, E e2)
E,E
ImmutableMultiset
com.google.common.collect.super.com.google.common.collect.Multimaps$TransformedEntriesMultimap
putAll
public boolean putAll(K key, Iterable<? extends V2> values)
K,Iterable
boolean
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
apply
public ListenableFuture<Object> apply(ListenableFuture<Object> input)
ListenableFuture
ListenableFuture
com.google.common.collect.super.com.google.common.collect.Sets
get
protected Set<E> get(final int setBits)
int
Set
com.google.common.primitives.super.com.google.common.primitives.Chars
max
public static char max(char... array)
char...
char
com.google.common.primitives.super.com.google.common.primitives.Ints$IntArrayAsList
IntArrayAsList
IntArrayAsList(int[] array, int start, int end)
int[],int,int
constructor
com.google.common.cache.super.com.google.common.cache.CacheBuilder
getRemovalListener
RemovalListener<K1, V1> getRemovalListener()
empty
RemovalListener
com.google.common.collect.super.com.google.common.collect.Multimaps
unmodifiableListMultimap
public static ListMultimap<K, V> unmodifiableListMultimap(ListMultimap<K, V> delegate)
ListMultimap
ListMultimap
com.google.common.base.super.com.google.common.base.CharMatcher$Digit
zeroes
private static char[] zeroes()
empty
char[]
com.google.common.collect.super.com.google.common.collect.TreeMultiset$Reference
get
public T get()
empty
T
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
of
public static ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)
K,V,K,V,K,V
ImmutableSetMultimap
com.google.common.collect.super.com.google.common.collect.Sets
newTreeSet
public static TreeSet<E> newTreeSet(Comparator<? super E> comparator)
Comparator
TreeSet
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$NodeIterator
checkForConcurrentModification
private void checkForConcurrentModification()
empty
void
com.google.common.collect.super.com.google.common.collect.Maps
newIdentityHashMap
public static IdentityHashMap<K, V> newIdentityHashMap()
empty
IdentityHashMap
com.google.common.base.super.com.google.common.base.CharMatcher
CharMatcher
protected CharMatcher()
empty
constructor
com.google.common.collect.super.com.google.common.collect.HashMultiset
HashMultiset
private HashMultiset()
empty
constructor
com.google.common.primitives.super.com.google.common.primitives.Floats$FloatArrayAsList
lastIndexOf
public int lastIndexOf(Object target)
Object
int
com.google.common.collect.super.com.google.common.collect.Iterables
removeAll
public static boolean removeAll(Iterable<?> removeFrom, Collection<?> elementsToRemove)
Iterable,Collection
boolean
com.google.common.math.super.com.google.common.math.IntMath
isPowerOfTwo
public static boolean isPowerOfTwo(int x)
int
boolean
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueSetLink
setPredecessorInValueSet
void setPredecessorInValueSet(ValueSetLink<K, V> entry)
ValueSetLink
void
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
remove
public boolean remove(Object key, Object value)
Object,Object
boolean
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap$Builder
Builder
Builder(Multimap<K, V> builderMultimap)
Multimap
constructor
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
putAll
public void putAll(Map<? extends K, ? extends V> map)
Map
void
com.google.common.base.super.com.google.common.base.CharMatcher$Ascii
Ascii
Ascii()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Maps$ValueDifferenceImpl
create
static ValueDifference<V> create(@Nullable V left, @Nullable V right)
V,V
ValueDifference
com.google.common.collect.super.com.google.common.collect.Maps
delegate
protected Set<E> delegate()
empty
Set
com.google.common.collect.super.com.google.common.collect.Iterators
transform
public static Iterator<T> transform(final Iterator<F> fromIterator, final Function<? super F, ? extends T> function)
Iterator,Function
Iterator
com.google.common.primitives.super.com.google.common.primitives.Ints$IntArrayAsList
IntArrayAsList
IntArrayAsList(int[] array)
int[]
constructor
com.google.common.math.super.com.google.common.math.IntMath
gcd
public static int gcd(int a, int b)
int,int
int
com.google.common.collect.super.com.google.common.collect.EmptyContiguousSet
asList
public ImmutableList<C> asList()
empty
ImmutableList
com.google.common.collect.super.com.google.common.collect.ImmutableListMultimap
invert
private ImmutableListMultimap<V, K> invert()
empty
ImmutableListMultimap
com.google.common.collect.super.com.google.common.collect.Maps$MapDifferenceImpl
areEqual
public boolean areEqual()
empty
boolean
com.google.common.primitives.super.com.google.common.primitives.Shorts
checkedCast
public static short checkedCast(long value)
long
short
com.google.common.collect.super.com.google.common.collect.Sets
get
public List<E> get(int index)
int
List
com.google.common.primitives.super.com.google.common.primitives.Doubles
Doubles
private Doubles()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Multimaps$TransformedEntriesMultimap
transform
Collection<V2> transform(K key, Collection<V1> values)
K,Collection
Collection
com.google.common.collect.super.com.google.common.collect.GenericMapMaker
concurrencyLevel
public abstract GenericMapMaker<K0, V0> concurrencyLevel(int concurrencyLevel)
int
GenericMapMaker
com.google.common.collect.super.com.google.common.collect.TreeMultiset
wrapEntry
private Entry<E> wrapEntry(final AvlNode<E> baseEntry)
AvlNode
Entry
com.google.common.math.super.com.google.common.math.DoubleMath
factorial
public static double factorial(int n)
int
double
com.google.common.collect.super.com.google.common.collect.Synchronized
delegate
protected Map.Entry<K, Collection<V>> delegate()
empty
Map.Entry
com.google.common.collect.super.com.google.common.collect.Maps$ValueDifferenceImpl
rightValue
public V rightValue()
empty
V
com.google.common.base.super.com.google.common.base.CharMatcher
showCharacter
private static String showCharacter(char c)
char
String
com.google.common.collect.super.com.google.common.collect.Maps$SortedKeySet
headSet
public SortedSet<K> headSet(K toElement)
K
SortedSet
com.google.common.collect.super.com.google.common.collect.Lists$StringAsImmutableList
lastIndexOf
public int lastIndexOf(@Nullable Object object)
Object
int
com.google.common.math.super.com.google.common.math.IntMath
IntMath
private IntMath()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Maps
safeRemove
static V safeRemove(Map<?, V> map, Object key)
Map,Object
V
com.google.common.collect.super.com.google.common.collect.Sets
complementOf
public static EnumSet<E> complementOf(Collection<E> collection, Class<E> type)
Collection,Class
EnumSet
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$EntrySet
contains
public boolean contains(Object o)
Object
boolean
com.google.common.math.super.com.google.common.math.LongMath
LongMath
private LongMath()
empty
constructor
com.google.common.base.super.com.google.common.base.Predicates
Predicates
private Predicates()
empty
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
output
Entry<K, V> output(K key, V value)
K,V
Entry
com.google.common.collect.super.com.google.common.collect.Iterators
previousIndex
public int previousIndex()
empty
int
com.google.common.math.super.com.google.common.math.IntMath
mean
public static int mean(int x, int y)
int,int
int
com.google.common.collect.super.com.google.common.collect.ArrayListMultimap
ArrayListMultimap
private ArrayListMultimap()
empty
constructor
com.google.common.primitives.super.com.google.common.primitives.Shorts
lastIndexOf
public static int lastIndexOf(short[] array, short target)
short[],short
int
com.google.common.collect.super.com.google.common.collect.ObjectArrays
newArray
public static T[] newArray(T[] reference, int length)
T[],int
T[]
com.google.common.primitives.super.com.google.common.primitives.Chars
lexicographicalComparator
public static Comparator<char[]> lexicographicalComparator()
empty
Comparator
com.google.common.primitives.super.com.google.common.primitives.Doubles
stringConverter
public static Converter<String, Double> stringConverter()
empty
Converter
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultiset
entrySet
public Set<Multiset.Entry<E>> entrySet()
empty
Set
com.google.common.collect.super.com.google.common.collect.RegularImmutableAsList
delegateList
ImmutableList<? extends E> delegateList()
empty
ImmutableList
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
LinkedListMultimap
private LinkedListMultimap(Multimap<? extends K, ? extends V> multimap)
Multimap
constructor
com.google.common.collect.super.com.google.common.collect.Maps
synchronizedBiMap
public static BiMap<K, V> synchronizedBiMap(BiMap<K, V> bimap)
BiMap
BiMap
com.google.common.collect.super.com.google.common.collect.Iterators
peekingIterator
public static PeekingIterator<T> peekingIterator(Iterator<? extends T> iterator)
Iterator
PeekingIterator
com.google.common.collect.super.com.google.common.collect.Sets
newTreeSet
public static TreeSet<E> newTreeSet(Iterable<? extends E> elements)
Iterable
TreeSet
com.google.common.collect.super.com.google.common.collect.Maps
delegate
protected SortedSet<E> delegate()
empty
SortedSet
com.google.common.cache.super.com.google.common.cache.CacheBuilder
isRecordingStats
boolean isRecordingStats()
empty
boolean
com.google.common.collect.super.com.google.common.collect.Multimaps
unmodifiableValueCollection
private static Collection<V> unmodifiableValueCollection(Collection<V> collection)
Collection
Collection
com.google.common.io.super.com.google.common.io.BaseEncoding$Alphabet
decode
int decode(char ch) throws DecodingException
char
int
com.google.common.collect.super.com.google.common.collect.Maps
apply
public V2 apply(Entry<K, V1> entry)
Entry
V2
com.google.common.math.super.com.google.common.math.LongMath
squareMod
abstract long squareMod(long a, long m)
long,long
long
com.google.common.util.concurrent.super.com.google.common.util.concurrent.ImmediateFuture
isDone
public boolean isDone()
empty
boolean
com.google.common.collect.super.com.google.common.collect.ImmutableAsList
size
public int size()
empty
int
com.google.common.collect.super.com.google.common.collect.ImmutableListMultimap
replaceValues
public ImmutableList<V> replaceValues(K key, Iterable<? extends V> values)
K,Iterable
ImmutableList
com.google.common.collect.super.com.google.common.collect.Maps
asValueToValueFunction
static Function<V1, V2> asValueToValueFunction(final EntryTransformer<? super K, V1, V2> transformer, final K key)
EntryTransformer,K
Function
com.google.common.collect.super.com.google.common.collect.Multimaps
synchronizedListMultimap
public static ListMultimap<K, V> synchronizedListMultimap(ListMultimap<K, V> multimap)
ListMultimap
ListMultimap
com.google.common.collect.super.com.google.common.collect.Multimaps$CustomSortedSetMultimap
CustomSortedSetMultimap
CustomSortedSetMultimap(Map<K, Collection<V>> map, Supplier<? extends SortedSet<V>> factory)
Map,Supplier
constructor
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedIterator
validateIterator
void validateIterator()
empty
void
com.google.common.base.super.com.google.common.base.Enums$StringConverter
doForward
protected T doForward(String value)
String
T
com.google.common.collect.super.com.google.common.collect.Lists
Lists
private Lists()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Maps
capacity
static int capacity(int expectedSize)
int
int
com.google.common.collect.super.com.google.common.collect.Iterators$PeekingImpl
peek
public E peek()
empty
E
com.google.common.collect.super.com.google.common.collect.TreeMultiset
distinctElements
static int distinctElements(@Nullable AvlNode<?> node)
AvlNode
int
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
get
public List<V> get(@Nullable final K key)
K
List
com.google.common.base.super.com.google.common.base.CharMatcher$RangesMatcher
RangesMatcher
RangesMatcher(String description, char[] rangeStarts, char[] rangeEnds)
String,char[],char[]
constructor
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection
addToMap
void addToMap()
empty
void
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
mod
public UnsignedInteger mod(UnsignedInteger val)
UnsignedInteger
UnsignedInteger
com.google.common.collect.super.com.google.common.collect.Maps
newEnumMap
public static EnumMap<K, V> newEnumMap(Map<K, ? extends V> map)
Map
EnumMap
com.google.common.collect.super.com.google.common.collect.Maps$BiMapConverter
convert
private static Y convert(BiMap<X, Y> bimap, X input)
BiMap,X
Y
com.google.common.collect.super.com.google.common.collect.TreeMultiset
count
public int count(@Nullable Object element)
Object
int
com.google.common.collect.super.com.google.common.collect.Lists$Partition
Partition
Partition(List<T> list, int size)
List,int
constructor
com.google.common.collect.super.com.google.common.collect.ObjectArrays
checkElementsNotNull
static Object[] checkElementsNotNull(Object... array)
Object...
Object[]
com.google.common.collect.super.com.google.common.collect.Iterators
pollNext
static T pollNext(Iterator<T> iterator)
Iterator
T
com.google.common.collect.super.com.google.common.collect.HashMultimap
HashMultimap
private HashMultimap(int expectedKeys, int expectedValuesPerKey)
int,int
constructor
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedListIterator
WrappedListIterator
public WrappedListIterator(int index)
int
constructor
com.google.common.collect.super.com.google.common.collect.Iterables
tryFind
public static Optional<T> tryFind(Iterable<T> iterable, Predicate<? super T> predicate)
Iterable,Predicate
Optional
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
inverse
public BiMap<V, K> inverse()
empty
BiMap
com.google.common.primitives.super.com.google.common.primitives.Doubles
lastIndexOf
private static int lastIndexOf(double[] array, double target, int start, int end)
double[],double,int,int
int
com.google.common.collect.super.com.google.common.collect.Maps
difference
public static MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right)
Map,Map
MapDifference
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection
add
public boolean add(V value)
V
boolean
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
plus
public UnsignedInteger plus(UnsignedInteger val)
UnsignedInteger
UnsignedInteger
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet
comparator
public Comparator<? super V> comparator()
empty
Comparator
com.google.common.io.super.com.google.common.io.BaseEncoding$StandardBaseEncoding
StandardBaseEncoding
StandardBaseEncoding(Alphabet alphabet, @Nullable Character paddingChar)
Alphabet,Character
constructor
com.google.common.collect.super.com.google.common.collect.Iterators
frequency
public static int frequency(Iterator<?> iterator, @Nullable Object element)
Iterator,Object
int
com.google.common.collect.super.com.google.common.collect.FluentIterable
toList
public final ImmutableList<E> toList()
empty
ImmutableList
com.google.common.collect.super.com.google.common.collect.Maps
putAllImpl
static void putAllImpl(Map<K, V> self, Map<? extends K, ? extends V> map)
Map,Map
void
com.google.common.cache.super.com.google.common.cache.CacheLoader
loadAll
public Map<K, V> loadAll(Iterable<? extends K> keys) throws Exception
Iterable
Map
com.google.common.collect.super.com.google.common.collect.Maps
newTreeMap
public static TreeMap<K, V> newTreeMap()
empty
TreeMap
com.google.common.collect.super.com.google.common.collect.ArrayTable$Column
Column
Column(int columnIndex)
int
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableMapEntrySet
map
abstract ImmutableMap<K, V> map()
empty
ImmutableMap
com.google.common.collect.super.com.google.common.collect.Lists
partition
public static List<List<T>> partition(List<T> list, int size)
List,int
List
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
wrapCollection
Collection<V> wrapCollection(@Nullable K key, Collection<V> collection)
K,Collection
Collection
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
minus
public UnsignedInteger minus(UnsignedInteger val)
UnsignedInteger
UnsignedInteger
com.google.common.collect.super.com.google.common.collect.Sets
hashCodeImpl
static int hashCodeImpl(Set<?> s)
Set
int
com.google.common.collect.super.com.google.common.collect.ArrayTable$ArrayMap
getValue
abstract V getValue(int index)
int
V
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$AsMapEntries
iterator
public Iterator<Map.Entry<K, Collection<V>>> iterator()
empty
Iterator
com.google.common.cache.super.com.google.common.cache.CacheBuilder
getConcurrencyLevel
int getConcurrencyLevel()
empty
int
com.google.common.base.super.com.google.common.base.CharMatcher
matchesNoneOf
public boolean matchesNoneOf(CharSequence sequence)
CharSequence
boolean
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap$Builder
putAll
public Builder<K, V> putAll(K key, V... values)
K,V...
Builder
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
addNode
private Node<K, V> addNode(@Nullable K key, @Nullable V value, @Nullable Node<K, V> nextSibling)
K,V,Node
Node
com.google.common.collect.super.com.google.common.collect.Maps
transformEntry
public V2 transformEntry(K key, V1 value)
K,V1
V2
com.google.common.collect.super.com.google.common.collect.Maps$FilteredEntryBiMap
unfiltered
BiMap<K, V> unfiltered()
empty
BiMap
com.google.common.collect.super.com.google.common.collect.ContiguousSet
create
public static ContiguousSet<C> create(Range<C> range, DiscreteDomain<C> domain)
Range,DiscreteDomain
ContiguousSet
com.google.common.collect.super.com.google.common.collect.Maps
newEnumMap
public static EnumMap<K, V> newEnumMap(Class<K> type)
Class
EnumMap
com.google.common.cache.super.com.google.common.cache.CacheBuilder
getStatsCounterSupplier
Supplier<? extends StatsCounter> getStatsCounterSupplier()
empty
Supplier
com.google.common.collect.super.com.google.common.collect.RegularImmutableAsList
delegateCollection
ImmutableCollection<E> delegateCollection()
empty
ImmutableCollection
com.google.common.base.super.com.google.common.base.Splitter
splittingIterator
private Iterator<String> splittingIterator(CharSequence sequence)
CharSequence
Iterator
com.google.common.primitives.super.com.google.common.primitives.Chars
indexOf
private static int indexOf(char[] array, char target, int start, int end)
char[],char,int,int
int
com.google.common.primitives.super.com.google.common.primitives.Doubles
isFinite
public static boolean isFinite(double value)
double
boolean
com.google.common.collect.super.com.google.common.collect.Maps
newHashMap
public static HashMap<K, V> newHashMap()
empty
HashMap
com.google.common.collect.super.com.google.common.collect.Maps$KeySet
KeySet
KeySet(Map<K, V> map)
Map
constructor
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedAsMap
values
public Collection<Collection<V>> values()
empty
Collection
com.google.common.io.super.com.google.common.io.BaseEncoding$Base16Encoding
Base16Encoding
private Base16Encoding(Alphabet alphabet)
Alphabet
constructor
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedObject
delegate
Object delegate()
empty
Object
com.google.common.collect.super.com.google.common.collect.Multimaps$UnmodifiableSetMultimap
delegate
public SetMultimap<K, V> delegate()
empty
SetMultimap
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedCollection
SynchronizedCollection
private SynchronizedCollection(Collection<E> delegate, @Nullable Object mutex)
Collection,Object
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
putAll
public boolean putAll(K key, Iterable<? extends V> values)
K,Iterable
boolean
com.google.common.collect.super.com.google.common.collect.ObjectArrays
toArrayImpl
static Object[] toArrayImpl(Collection<?> c)
Collection
Object[]
com.google.common.collect.super.com.google.common.collect.Lists$TransformingRandomAccessList
listIterator
public ListIterator<T> listIterator(int index)
int
ListIterator
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
copyOf
private static ImmutableSetMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap, Comparator<? super V> valueComparator)
Multimap,Comparator
ImmutableSetMultimap
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset$Builder
build
public ImmutableMultiset<E> build()
empty
ImmutableMultiset
com.google.common.math.super.com.google.common.math.IntMath
checkedAdd
public static int checkedAdd(int a, int b)
int,int
int
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultimap
containsValue
public boolean containsValue(Object value)
Object
boolean
com.google.common.collect.super.com.google.common.collect.ArrayTable$ArrayMap
setValue
abstract V setValue(int index, V newValue)
int,V
V
com.google.common.collect.super.com.google.common.collect.HashMultiset
create
public static HashMultiset<E> create(Iterable<? extends E> elements)
Iterable
HashMultiset
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
copyOf
public static ImmutableSetMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)
Iterable
ImmutableSetMultimap
com.google.common.collect.super.com.google.common.collect.ImmutableListMultimap
get
public ImmutableList<V> get(@Nullable K key)
K
ImmutableList
com.google.common.base.super.com.google.common.base.CharMatcher
digit
public static CharMatcher digit()
empty
CharMatcher
com.google.common.collect.super.com.google.common.collect.ImmutableAsList
isPartialView
boolean isPartialView()
empty
boolean
com.google.common.collect.super.com.google.common.collect.Iterables
concat
public static Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c)
Iterable,Iterable,Iterable
Iterable
com.google.common.collect.super.com.google.common.collect.Iterables
consumingIterable
public static Iterable<T> consumingIterable(final Iterable<T> iterable)
Iterable
Iterable
com.google.common.base.super.com.google.common.base.Splitter$MapSplitter
MapSplitter
private MapSplitter(Splitter outerSplitter, Splitter entrySplitter)
Splitter,Splitter
constructor
com.google.common.base.super.com.google.common.base.Splitter$SplittingIterator
SplittingIterator
protected SplittingIterator(Splitter splitter, CharSequence toSplit)
Splitter,CharSequence
constructor
com.google.common.collect.super.com.google.common.collect.Sets
newConcurrentHashSet
public static Set<E> newConcurrentHashSet(Iterable<? extends E> elements)
Iterable
Set
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$ValueForKeyIterator
previous
public V previous()
empty
V
com.google.common.util.concurrent.super.com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState
combine
abstract C combine(List<Optional<V>> values)
List
C
com.google.common.primitives.super.com.google.common.primitives.Floats
toArray
public static float[] toArray(Collection<? extends Number> collection)
Collection
float[]
com.google.common.primitives.super.com.google.common.primitives.Floats
compare
public static int compare(float a, float b)
float,float
int
com.google.common.collect.super.com.google.common.collect.Multimaps$CustomMultimap
createCollection
protected Collection<V> createCollection()
empty
Collection
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
of
public static ImmutableSetMultimap<K, V> of(K k1, V v1)
K,V
ImmutableSetMultimap
com.google.common.base.super.com.google.common.base.Splitter$SplittingIterator
separatorEnd
abstract int separatorEnd(int separatorPosition)
int
int
com.google.common.collect.super.com.google.common.collect.ObjectArrays
toArrayImpl
static T[] toArrayImpl(Object[] src, int offset, int len, T[] dst)
Object[],int,int,T[]
T[]
com.google.common.collect.super.com.google.common.collect.Iterators
clear
static void clear(Iterator<?> iterator)
Iterator
void
com.google.common.collect.super.com.google.common.collect.Sets
newHashSet
public static HashSet<E> newHashSet(Iterable<? extends E> elements)
Iterable
HashSet
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
transformAsync
public static ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)
ListenableFuture,AsyncFunction
ListenableFuture
com.google.common.collect.super.com.google.common.collect.Maps$UnmodifiableEntries
UnmodifiableEntries
UnmodifiableEntries(Collection<Entry<K, V>> entries)
Collection
constructor
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet
tailSet
public SortedSet<V> tailSet(V fromElement)
V
SortedSet
com.google.common.collect.super.com.google.common.collect.Iterables
filter
public static Iterable<T> filter(final Iterable<T> unfiltered, final Predicate<? super T> retainIfTrue)
Iterable,Predicate
Iterable
com.google.common.collect.super.com.google.common.collect.Maps$FilteredEntryBiMap
FilteredEntryBiMap
private FilteredEntryBiMap(BiMap<K, V> delegate, Predicate<? super Entry<K, V>> predicate, BiMap<V, K> inverse)
BiMap,Predicate,BiMap
constructor
com.google.common.primitives.super.com.google.common.primitives.Chars
indexOf
public static int indexOf(char[] array, char[] target)
char[],char[]
int
com.google.common.collect.super.com.google.common.collect.Sets
symmetricDifference
public static SetView<E> symmetricDifference(final Set<? extends E> set1, final Set<? extends E> set2)
Set,Set
SetView
com.google.common.io.super.com.google.common.io.BaseEncoding
extract
private static byte[] extract(byte[] result, int length)
byte[],int
byte[]
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueSet
remove
public boolean remove(@Nullable Object o)
Object
boolean
com.google.common.base.super.com.google.common.base.Predicates$CompositionPredicate
apply
public boolean apply(@Nullable A a)
A
boolean
com.google.common.collect.super.com.google.common.collect.Synchronized
list
private static List<E> list(List<E> list, @Nullable Object mutex)
List,Object
List
com.google.common.collect.super.com.google.common.collect.Maps
transformEntries
public static Map<K, V2> transformEntries(Map<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)
Map,EntryTransformer
Map
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$AsMap
wrapEntry
Entry<K, Collection<V>> wrapEntry(Entry<K, Collection<V>> entry)
Entry
Entry
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
put
public boolean put(K key, V value)
K,V
boolean
com.google.common.collect.super.com.google.common.collect.Sets
filter
public static SortedSet<E> filter(SortedSet<E> unfiltered, Predicate<? super E> predicate)
SortedSet,Predicate
SortedSet
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
allAsList
public static ListenableFuture<List<V>> allAsList(ListenableFuture<? extends V>... futures)
ListenableFuture...
ListenableFuture
com.google.common.collect.super.com.google.common.collect.ArrayTable$RowMap
getValue
Map<C, V> getValue(int index)
int
Map
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection
addAll
public boolean addAll(Collection<? extends V> collection)
Collection
boolean
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
addLeftChild
private AvlNode<E> addLeftChild(E e, int count)
E,int
AvlNode
com.google.common.collect.super.com.google.common.collect.Maps$TransformedEntriesSortedMap
fromMap
protected SortedMap<K, V1> fromMap()
empty
SortedMap
com.google.common.collect.super.com.google.common.collect.Multimaps
unmodifiableMultimap
public static Multimap<K, V> unmodifiableMultimap(Multimap<K, V> delegate)
Multimap
Multimap
com.google.common.collect.super.com.google.common.collect.Synchronized
multiset
static Multiset<E> multiset(Multiset<E> multiset, @Nullable Object mutex)
Multiset,Object
Multiset
com.google.common.collect.super.com.google.common.collect.Maps
immutableEnumMap
public static ImmutableMap<K, V> immutableEnumMap(Map<K, ? extends V> map)
Map
ImmutableMap
com.google.common.collect.super.com.google.common.collect.Maps$FilteredMapValues
retainAll
public boolean retainAll(Collection<?> collection)
Collection
boolean
com.google.common.base.super.com.google.common.base.Enums
getIfPresent
public static Optional<T> getIfPresent(Class<T> enumClass, String value)
Class,String
Optional
com.google.common.base.super.com.google.common.base.Predicates
and
public static Predicate<T> and(Predicate<? super T> first, Predicate<? super T> second)
Predicate,Predicate
Predicate
com.google.common.collect.super.com.google.common.collect.Lists
equalsImpl
static boolean equalsImpl(List<?> thisList, @Nullable Object other)
List,Object
boolean
com.google.common.collect.super.com.google.common.collect.EnumMultiset
create
public static EnumMultiset<E> create(Class<E> type)
Class
EnumMultiset
com.google.common.collect.super.com.google.common.collect.Multimaps
asMap
public static Map<K, SortedSet<V>> asMap(SortedSetMultimap<K, V> multimap)
SortedSetMultimap
Map
com.google.common.collect.super.com.google.common.collect.HashMultimap
HashMultimap
private HashMultimap()
empty
constructor
com.google.common.base.super.com.google.common.base.Splitter
trimResults
public Splitter trimResults()
empty
Splitter
com.google.common.collect.super.com.google.common.collect.ArrayTable$RowMap
setValue
Map<C, V> setValue(int index, Map<C, V> newValue)
int,Map
Map
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMap
entrySet
public Set<Map.Entry<K, V>> entrySet()
empty
Set
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueSetLink
setSuccessorInValueSet
void setSuccessorInValueSet(ValueSetLink<K, V> entry)
ValueSetLink
void
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedIterator
getDelegateIterator
Iterator<V> getDelegateIterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.ImmutableListMultimap$Builder
build
public ImmutableListMultimap<K, V> build()
empty
ImmutableListMultimap
com.google.common.primitives.super.com.google.common.primitives.Chars
Chars
private Chars()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Maps$SortedAsMapView
backingSet
SortedSet<K> backingSet()
empty
SortedSet
com.google.common.collect.super.com.google.common.collect.SortedMultisets$ElementSet
first
public E first()
empty
E
com.google.common.primitives.super.com.google.common.primitives.Floats
hashCode
public static int hashCode(float value)
float
int
com.google.common.cache.super.com.google.common.cache.CacheBuilder
setKeyStrength
CacheBuilder<K, V> setKeyStrength(Strength strength)
Strength
CacheBuilder
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
dereference
public static ListenableFuture<V> dereference(ListenableFuture<? extends ListenableFuture<? extends V>> nested)
ListenableFuture
ListenableFuture
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet
headSet
public SortedSet<V> headSet(V toElement)
V
SortedSet
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection
removeIfEmpty
void removeIfEmpty()
empty
void
com.google.common.primitives.super.com.google.common.primitives.Floats$FloatArrayAsList
equals
public boolean equals(@Nullable Object object)
Object
boolean
com.google.common.base.super.com.google.common.base.Stopwatch
createStarted
public static Stopwatch createStarted(Ticker ticker)
Ticker
Stopwatch
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap
deleteFromValueSet
private static void deleteFromValueSet(ValueSetLink<K, V> entry)
ValueSetLink
void
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
recomputeMultiset
private void recomputeMultiset()
empty
void
com.google.common.base.super.com.google.common.base.CharMatcher
javaLetterOrDigit
public static CharMatcher javaLetterOrDigit()
empty
CharMatcher
com.google.common.base.super.com.google.common.base.Enums
Enums
private Enums()
empty
constructor
com.google.common.collect.super.com.google.common.collect.ContiguousSet
headSetImpl
abstract ContiguousSet<C> headSetImpl(C toElement, boolean inclusive)
C,boolean
ContiguousSet
com.google.common.collect.super.com.google.common.collect.Maps$KeySet
removeIf
private boolean removeIf(Predicate<? super K> keyPredicate)
Predicate
boolean
com.google.common.collect.super.com.google.common.collect.ObjectArrays
arraysCopyOf
static T[] arraysCopyOf(T[] original, int newLength)
T[],int
T[]
com.google.common.collect.super.com.google.common.collect.Lists$ReverseList
reversePosition
private int reversePosition(int index)
int
int
com.google.common.collect.super.com.google.common.collect.Iterables
all
public static boolean all(Iterable<T> iterable, Predicate<? super T> predicate)
Iterable,Predicate
boolean
com.google.common.base.super.com.google.common.base.CharMatcher
retainFrom
public String retainFrom(CharSequence sequence)
CharSequence
String
com.google.common.collect.super.com.google.common.collect.Multimaps$TransformedEntriesListMultimap
transform
List<V2> transform(K key, Collection<V1> values)
K,Collection
List
com.google.common.collect.super.com.google.common.collect.EnumMultiset
create
public static EnumMultiset<E> create(Iterable<E> elements)
Iterable
EnumMultiset
com.google.common.base.super.com.google.common.base.Predicates
defensiveCopy
static List<T> defensiveCopy(Iterable<T> iterable)
Iterable
List
com.google.common.base.super.com.google.common.base.Stopwatch
stop
public Stopwatch stop()
empty
Stopwatch
com.google.common.collect.super.com.google.common.collect.Iterators
emptyListIterator
static UnmodifiableListIterator<T> emptyListIterator()
empty
UnmodifiableListIterator
com.google.common.base.super.com.google.common.base.CharMatcher
is
public static CharMatcher is(final char match)
char
CharMatcher
com.google.common.collect.super.com.google.common.collect.Synchronized
sortedSetMultimap
static SortedSetMultimap<K, V> sortedSetMultimap(SortedSetMultimap<K, V> multimap, @Nullable Object mutex)
SortedSetMultimap,Object
SortedSetMultimap
com.google.common.base.super.com.google.common.base.Predicates
notNull
public static Predicate<T> notNull()
empty
Predicate
com.google.common.collect.super.com.google.common.collect.Maps
asConverter
public static Converter<A, B> asConverter(final BiMap<A, B> bimap)
BiMap
Converter
com.google.common.collect.super.com.google.common.collect.Multimaps
filterKeys
public static Multimap<K, V> filterKeys(Multimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)
Multimap,Predicate
Multimap
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSet
SynchronizedSet
SynchronizedSet(Set<E> delegate, @Nullable Object mutex)
Set,Object
constructor
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSetMultimap
removeAll
public Set<V> removeAll(Object key)
Object
Set
com.google.common.base.super.com.google.common.base.CharMatcher$Any
Any
private Any()
empty
constructor
com.google.common.collect.super.com.google.common.collect.ContiguousSet
range
public abstract Range<C> range()
empty
Range
com.google.common.cache.super.com.google.common.cache.CacheBuilder
newBuilder
public static CacheBuilder<Object, Object> newBuilder()
empty
CacheBuilder
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedCollection
add
public boolean add(E e)
E
boolean
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSetMultimap
replaceValues
public Set<V> replaceValues(K key, Iterable<? extends V> values)
K,Iterable
Set
com.google.common.collect.super.com.google.common.collect.Maps$SortedKeySet
first
public K first()
empty
K
com.google.common.collect.super.com.google.common.collect.Maps$AbstractFilteredMap
apply
boolean apply(@Nullable Object key, @Nullable V value)
Object,V
boolean
com.google.common.primitives.super.com.google.common.primitives.Ints
min
public static int min(int... array)
int...
int
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultimap
SynchronizedMultimap
SynchronizedMultimap(Multimap<K, V> delegate, @Nullable Object mutex)
Multimap,Object
constructor
com.google.common.collect.super.com.google.common.collect.TreeMultiset
create
public static TreeMultiset<E> create()
empty
TreeMultiset
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedList
getListDelegate
List<V> getListDelegate()
empty
List
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
rotateLeft
private AvlNode<E> rotateLeft()
empty
AvlNode
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset$EntrySet
writeReplace
Object writeReplace()
empty
Object
com.google.common.primitives.super.com.google.common.primitives.Ints$IntConverter
doForward
protected Integer doForward(String value)
String
Integer
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedListMultimap
SynchronizedListMultimap
SynchronizedListMultimap(ListMultimap<K, V> delegate, @Nullable Object mutex)
ListMultimap,Object
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
builder
public static Builder<E> builder()
empty
Builder
com.google.common.collect.super.com.google.common.collect.Synchronized
typePreservingSet
private static Set<E> typePreservingSet(Set<E> set, @Nullable Object mutex)
Set,Object
Set
com.google.common.collect.super.com.google.common.collect.Iterables
elementsEqual
public static boolean elementsEqual(Iterable<?> iterable1, Iterable<?> iterable2)
Iterable,Iterable
boolean
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
putInBothMaps
private V putInBothMaps(@Nullable K key, @Nullable V value, boolean force)
K,V,boolean
V
com.google.common.collect.super.com.google.common.collect.ImmutableMapEntrySet
ImmutableMapEntrySet
ImmutableMapEntrySet()
empty
constructor
com.google.common.collect.super.com.google.common.collect.ArrayTable
columnMap
public Map<C, Map<R, V>> columnMap()
empty
Map
com.google.common.collect.super.com.google.common.collect.ImmutableMapValues
createAsList
ImmutableList<V> createAsList()
empty
ImmutableList
com.google.common.base.super.com.google.common.base.CharMatcher
trimTrailingFrom
public String trimTrailingFrom(CharSequence sequence)
CharSequence
String
com.google.common.collect.super.com.google.common.collect.Multimaps$MapMultimap
entries
public Set<Entry<K, V>> entries()
empty
Set
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset$Builder
setCount
public Builder<E> setCount(E element, int count)
E,int
Builder
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueEntry
getPredecessorInMultimap
public ValueEntry<K, V> getPredecessorInMultimap()
empty
ValueEntry
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedAsMap
containsValue
public boolean containsValue(Object o)
Object
boolean
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedSet
WrappedSet
WrappedSet(@Nullable K key, Set<V> delegate)
K,Set
constructor
com.google.common.collect.super.com.google.common.collect.ArrayTable$ColumnMap
ColumnMap
private ColumnMap()
empty
constructor
com.google.common.collect.super.com.google.common.collect.ContiguousSet
tailSet
public ContiguousSet<C> tailSet(C fromElement)
C
ContiguousSet
com.google.common.cache.super.com.google.common.cache.CacheLoader
load
public abstract V load(K key) throws Exception
K
V
com.google.common.primitives.super.com.google.common.primitives.Chars
lastIndexOf
public static int lastIndexOf(char[] array, char target)
char[],char
int
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedCollection
delegate
Collection<E> delegate()
empty
Collection
com.google.common.base.super.com.google.common.base.Splitter
separatorStart
public int separatorStart(int start)
int
int
com.google.common.collect.super.com.google.common.collect.Iterables
skip
public static Iterable<T> skip(final Iterable<T> iterable, final int numberToSkip)
Iterable,int
Iterable
com.google.common.collect.super.com.google.common.collect.TreeMultiset
create
public static TreeMultiset<E> create(@Nullable Comparator<? super E> comparator)
Comparator
TreeMultiset
com.google.common.collect.super.com.google.common.collect.Multimaps$MapMultimap
get
public Set<V> get(final K key)
K
Set
com.google.common.collect.super.com.google.common.collect.Iterables
get
public static T get(Iterable<T> iterable, int position)
Iterable,int
T
com.google.common.collect.super.com.google.common.collect.ArrayTable
rowMap
public Map<R, Map<C, V>> rowMap()
empty
Map
com.google.common.collect.super.com.google.common.collect.Iterables
toArray
static T[] toArray(Iterable<? extends T> iterable, T[] array)
Iterable,T[]
T[]
com.google.common.collect.super.com.google.common.collect.Iterators
forEnumeration
public static UnmodifiableIterator<T> forEnumeration(final Enumeration<T> enumeration)
Enumeration
UnmodifiableIterator
com.google.common.collect.super.com.google.common.collect.Multimaps$AsMap
AsMap
AsMap(Multimap<K, V> multimap)
Multimap
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
createEntrySet
private final ImmutableSet<Entry<E>> createEntrySet()
empty
ImmutableSet
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
copyOf
public static ImmutableMultiset<E> copyOf(E[] elements)
E[]
ImmutableMultiset
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
withFallback
public static ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback)
ListenableFuture,FutureFallback
ListenableFuture
com.google.common.collect.super.com.google.common.collect.ArrayTable
cellSet
public Set<Cell<R, C, V>> cellSet()
empty
Set
com.google.common.collect.super.com.google.common.collect.Maps
containsEntryImpl
static boolean containsEntryImpl(Collection<Entry<K, V>> c, Object o)
Collection,Object
boolean
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultimap
delegate
Multimap<K, V> delegate()
empty
Multimap
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$NodeIterator
setValue
void setValue(V value)
V
void
com.google.common.collect.super.com.google.common.collect.Sets
newLinkedHashSetWithExpectedSize
public static LinkedHashSet<E> newLinkedHashSetWithExpectedSize(int expectedSize)
int
LinkedHashSet
com.google.common.collect.super.com.google.common.collect.Sets
equalsImpl
static boolean equalsImpl(Set<?> s, @Nullable Object object)
Set,Object
boolean
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedQueue
delegate
Queue<E> delegate()
empty
Queue
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedIterator
WrappedIterator
WrappedIterator(Iterator<V> delegateIterator)
Iterator
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
setCount
public final boolean setCount(E element, int oldCount, int newCount)
E,int,int
boolean
com.google.common.base.super.com.google.common.base.Predicates
withNarrowedType
Predicate<T> withNarrowedType()
empty
Predicate
com.google.common.util.concurrent.super.com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture
get
public V get() throws ExecutionException
empty
V
com.google.common.collect.super.com.google.common.collect.Maps
Maps
private Maps()
empty
constructor
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
doubleValue
public double doubleValue()
empty
double
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
iterator
public UnmodifiableIterator<E> iterator()
empty
UnmodifiableIterator
com.google.common.collect.super.com.google.common.collect.ImmutableAsList
isEmpty
public boolean isEmpty()
empty
boolean
com.google.common.collect.super.com.google.common.collect.Iterators$MergingIterator
MergingIterator
public MergingIterator(Iterable<? extends Iterator<? extends T>> iterators, final Comparator<? super T> itemComparator)
Iterable,Comparator
constructor
com.google.common.primitives.super.com.google.common.primitives.Shorts
hashCode
public static int hashCode(short value)
short
int
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap
create
public static LinkedHashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)
int,int
LinkedHashMultimap
com.google.common.primitives.super.com.google.common.primitives.Chars$CharArrayAsList
subList
public List<Character> subList(int fromIndex, int toIndex)
int,int
List
com.google.common.collect.super.com.google.common.collect.Multimaps$Entries
multimap
abstract Multimap<K, V> multimap()
empty
Multimap
com.google.common.collect.super.com.google.common.collect.GenericMapMaker
initialCapacity
public abstract GenericMapMaker<K0, V0> initialCapacity(int initialCapacity)
int
GenericMapMaker
com.google.common.collect.super.com.google.common.collect.ArrayTable
ArrayTable
private ArrayTable(Iterable<? extends R> rowKeys, Iterable<? extends C> columnKeys)
Iterable,Iterable
constructor
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$AsMapEntries
map
Map<K, Collection<V>> map()
empty
Map
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultiset
AbstractMapBasedMultiset
protected AbstractMapBasedMultiset(Map<E, Count> backingMap)
Map
constructor
com.google.common.collect.super.com.google.common.collect.ObjectArrays
concat
public static T[] concat(T[] array, @Nullable T element)
T[],T
T[]
com.google.common.collect.super.com.google.common.collect.Iterators
forArray
static UnmodifiableListIterator<T> forArray(final T[] array, final int offset, int length, int index)
T[],int,int,int
UnmodifiableListIterator
com.google.common.base.super.com.google.common.base.CharMatcher
matchesAllOf
public boolean matchesAllOf(CharSequence sequence)
CharSequence
boolean
com.google.common.collect.super.com.google.common.collect.Maps
removeEntryImpl
static boolean removeEntryImpl(Collection<Entry<K, V>> c, Object o)
Collection,Object
boolean
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$Node
getKey
public K getKey()
empty
K
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultimap
removeAll
public Collection<V> removeAll(Object key)
Object
Collection
com.google.common.collect.super.com.google.common.collect.Lists$AbstractListWrapper
remove
public E remove(int index)
int
E
com.google.common.primitives.super.com.google.common.primitives.Doubles$DoubleConverter
doBackward
protected String doBackward(Double value)
Double
String
com.google.common.primitives.super.com.google.common.primitives.Ints$IntArrayAsList
toIntArray
int[] toIntArray()
empty
int[]
com.google.common.collect.super.com.google.common.collect.ArrayTable$RowMap
put
public Map<C, V> put(R key, Map<C, V> value)
R,Map
Map
com.google.common.collect.super.com.google.common.collect.Maps$AsMapView
AsMapView
AsMapView(Set<K> set, Function<? super K, V> function)
Set,Function
constructor
com.google.common.collect.super.com.google.common.collect.Multimaps$TransformedEntriesMultimap
removeAll
public Collection<V2> removeAll(Object key)
Object
Collection
com.google.common.collect.super.com.google.common.collect.Maps
newHashMap
public static HashMap<K, V> newHashMap(Map<? extends K, ? extends V> map)
Map
HashMap
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
checkKey
K checkKey(@Nullable K key)
K
K
com.google.common.collect.super.com.google.common.collect.Maps$SortedKeySet
SortedKeySet
SortedKeySet(SortedMap<K, V> map)
SortedMap
constructor
com.google.common.cache.super.com.google.common.cache.CacheBuilder
ticker
public CacheBuilder<K, V> ticker(Ticker ticker)
Ticker
CacheBuilder
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap
subMap
public SortedMap<K, Collection<V>> subMap(K fromKey, K toKey)
K,K
SortedMap
com.google.common.collect.super.com.google.common.collect.Maps
removeOnlySet
private static Set<E> removeOnlySet(final Set<E> set)
Set
Set
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap
SynchronizedSortedSetMultimap
SynchronizedSortedSetMultimap(SortedSetMultimap<K, V> delegate, @Nullable Object mutex)
SortedSetMultimap,Object
constructor
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedListIterator
WrappedListIterator
WrappedListIterator()
empty
constructor
com.google.common.collect.super.com.google.common.collect.ArrayTable
get
protected Entry<K, V> get(final int index)
int
Entry
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset$Builder
addAll
public Builder<E> addAll(Iterable<? extends E> elements)
Iterable
Builder
com.google.common.collect.super.com.google.common.collect.Multimaps$Keys
Keys
Keys(Multimap<K, V> multimap)
Multimap
constructor
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$ValueForKeyIterator
set
public void set(V value)
V
void
com.google.common.collect.super.com.google.common.collect.Maps$IteratorBasedAbstractMap
entryIterator
abstract Iterator<Entry<K, V>> entryIterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
putAll
public boolean putAll(Multimap<? extends K, ? extends V> multimap)
Multimap
boolean
com.google.common.io.super.com.google.common.io.BaseEncoding$StandardBaseEncoding
encodeChunkTo
void encodeChunkTo(Appendable target, byte[] bytes, int off, int len) throws IOException
Appendable,byte[],int,int
void
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap$Builder
putAll
public Builder<K, V> putAll(K key, Iterable<? extends V> values)
K,Iterable
Builder
com.google.common.collect.super.com.google.common.collect.GenericMapMaker
makeMap
public abstract ConcurrentMap<K, V> makeMap()
empty
ConcurrentMap
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
removeMax
private AvlNode<E> removeMax(AvlNode<E> node)
AvlNode
AvlNode
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset$Builder
add
public Builder<E> add(E element)
E
Builder
com.google.common.collect.super.com.google.common.collect.Multimaps
invertFrom
public static M invertFrom(Multimap<? extends V, ? extends K> source, M dest)
Multimap,M
M
com.google.common.base.super.com.google.common.base.Predicates
defensiveCopy
private static List<T> defensiveCopy(T... array)
T...
List
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
addCallback
public static void addCallback(ListenableFuture<V> future, FutureCallback<? super V> callback)
ListenableFuture,FutureCallback
void
com.google.common.collect.super.com.google.common.collect.Multimaps$TransformedEntriesMultimap
put
public boolean put(K key, V2 value)
K,V2
boolean
com.google.common.cache.super.com.google.common.cache.CacheBuilder
checkWeightWithWeigher
private void checkWeightWithWeigher()
empty
void
com.google.common.base.super.com.google.common.base.CharMatcher
none
public static CharMatcher none()
empty
CharMatcher
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultiset
setBackingMap
void setBackingMap(Map<E, Count> backingMap)
Map
void
com.google.common.collect.super.com.google.common.collect.Lists$TransformingRandomAccessList
TransformingRandomAccessList
TransformingRandomAccessList(List<F> fromList, Function<? super F, ? extends T> function)
List,Function
constructor
com.google.common.collect.super.com.google.common.collect.Iterators
indexOf
public static int indexOf(Iterator<T> iterator, Predicate<? super T> predicate)
Iterator,Predicate
int
com.google.common.collect.super.com.google.common.collect.ObjectArrays
checkElementNotNull
static Object checkElementNotNull(Object element, int index)
Object,int
Object
com.google.common.base.super.com.google.common.base.Predicates
or
public static Predicate<T> or(Predicate<? super T> first, Predicate<? super T> second)
Predicate,Predicate
Predicate
com.google.common.base.super.com.google.common.base.Predicates$OrPredicate
OrPredicate
private OrPredicate(List<? extends Predicate<? super T>> components)
List
constructor
com.google.common.cache.super.com.google.common.cache.CacheBuilder
build
public LoadingCache<K1, V1> build(CacheLoader<? super K1, V1> loader)
CacheLoader
LoadingCache
com.google.common.base.super.com.google.common.base.CharMatcher
indexIn
public int indexIn(CharSequence sequence, int start)
CharSequence,int
int
com.google.common.collect.super.com.google.common.collect.Synchronized
typePreservingCollection
private static Collection<E> typePreservingCollection(Collection<E> collection, @Nullable Object mutex)
Collection,Object
Collection
com.google.common.collect.super.com.google.common.collect.Iterables
removeFirstMatching
static T removeFirstMatching(Iterable<T> removeFrom, Predicate<? super T> predicate)
Iterable,Predicate
T
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap
get
public SortedSet<V> get(K key)
K
SortedSet
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap$Builder
putAll
public Builder<K, V> putAll(Multimap<? extends K, ? extends V> multimap)
Multimap
Builder
com.google.common.math.super.com.google.common.math.BigIntegerMath
log2
public static int log2(BigInteger x, RoundingMode mode)
BigInteger,RoundingMode
int
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap
replaceValues
public SortedSet<V> replaceValues(K key, Iterable<? extends V> values)
K,Iterable
SortedSet
com.google.common.io.super.com.google.common.io.BaseEncoding$Alphabet
encode
char encode(int bits)
int
char
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
create
public static LinkedListMultimap<K, V> create(int expectedKeys)
int
LinkedListMultimap
com.google.common.util.concurrent.super.com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState
CollectionFutureRunningState
CollectionFutureRunningState(ImmutableCollection<? extends ListenableFuture<? extends V>> futures, boolean allMustSucceed)
ImmutableCollection,boolean
constructor
com.google.common.collect.super.com.google.common.collect.Sets
difference
public static SetView<E> difference(final Set<E> set1, final Set<?> set2)
Set,Set
SetView
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap$Builder
orderKeysBy
public Builder<K, V> orderKeysBy(Comparator<? super K> keyComparator)
Comparator
Builder
com.google.common.collect.super.com.google.common.collect.Maps$EntrySet
map
abstract Map<K, V> map()
empty
Map
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
addRightChild
private AvlNode<E> addRightChild(E e, int count)
E,int
AvlNode
com.google.common.collect.super.com.google.common.collect.FluentIterable$FromIterableFunction
apply
public FluentIterable<E> apply(Iterable<E> fromObject)
Iterable
FluentIterable
com.google.common.collect.super.com.google.common.collect.EmptyContiguousSet
tailSetImpl
ContiguousSet<C> tailSetImpl(C fromElement, boolean fromInclusive)
C,boolean
ContiguousSet
com.google.common.base.super.com.google.common.base.Predicates
isNull
public static Predicate<T> isNull()
empty
Predicate
com.google.common.collect.super.com.google.common.collect.Maps$FilteredMapValues
FilteredMapValues
FilteredMapValues(Map<K, V> filteredMap, Map<K, V> unfiltered, Predicate<? super Entry<K, V>> predicate)
Map,Map,Predicate
constructor
com.google.common.collect.super.com.google.common.collect.Maps
uniqueIndex
public static ImmutableMap<K, V> uniqueIndex(Iterable<V> values, Function<? super V, K> keyFunction)
Iterable,Function
ImmutableMap
com.google.common.collect.super.com.google.common.collect.Sets
newTreeSet
public static TreeSet<E> newTreeSet()
empty
TreeSet
com.google.common.io.super.com.google.common.io.BaseEncoding
withSeparator
public abstract BaseEncoding withSeparator(String separator, int n)
String,int
BaseEncoding
com.google.common.primitives.super.com.google.common.primitives.Floats
join
public static String join(String separator, float... array)
String,float...
String
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedListMultimap
removeAll
public List<V> removeAll(Object key)
Object
List
com.google.common.collect.super.com.google.common.collect.FluentIterable
toSet
public final ImmutableSet<E> toSet()
empty
ImmutableSet
com.google.common.collect.super.com.google.common.collect.ImmutableSortedAsList
delegateCollection
ImmutableSortedSet<E> delegateCollection()
empty
ImmutableSortedSet
com.google.common.collect.super.com.google.common.collect.Maps
subSet
public SortedSet<E> subSet(E fromElement, E toElement)
E,E
SortedSet
com.google.common.collect.super.com.google.common.collect.ImmutableListMultimap
of
public static ImmutableListMultimap<K, V> of()
empty
ImmutableListMultimap
com.google.common.collect.super.com.google.common.collect.Maps$BiMapConverter
doBackward
protected A doBackward(B b)
B
A
com.google.common.collect.super.com.google.common.collect.Lists$StringAsImmutableList
get
public Character get(int index)
int
Character
com.google.common.collect.super.com.google.common.collect.TreeMultiset
aggregateAboveRange
private long aggregateAboveRange(Aggregate aggr, @Nullable AvlNode<E> node)
Aggregate,AvlNode
long
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap
next
public Map.Entry<K, V> next()
empty
Map.Entry
com.google.common.collect.super.com.google.common.collect.FluentIterable
of
public static FluentIterable<E> of()
empty
FluentIterable
com.google.common.collect.super.com.google.common.collect.Multimaps$KeysEntrySet
multiset
Multiset<K> multiset()
empty
Multiset
com.google.common.math.super.com.google.common.math.LongMath
gcd
public static long gcd(long a, long b)
long,long
long
com.google.common.collect.super.com.google.common.collect.ContiguousSet
builder
public static ImmutableSortedSet.Builder<E> builder()
empty
ImmutableSortedSet.Builder
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
toString
public String toString(int radix)
int
String
com.google.common.collect.super.com.google.common.collect.Maps$ValueDifferenceImpl
ValueDifferenceImpl
private ValueDifferenceImpl(@Nullable V left, @Nullable V right)
V,V
constructor
com.google.common.io.super.com.google.common.io.BaseEncoding$SeparatedBaseEncoding
SeparatedBaseEncoding
SeparatedBaseEncoding(BaseEncoding delegate, String separator, int afterEveryChars)
BaseEncoding,String,int
constructor
com.google.common.collect.super.com.google.common.collect.Iterators
checkNonnegative
static void checkNonnegative(int position)
int
void
com.google.common.collect.super.com.google.common.collect.Lists
charactersOf
public static ImmutableList<Character> charactersOf(String string)
String
ImmutableList
com.google.common.collect.super.com.google.common.collect.Lists
addAllImpl
static boolean addAllImpl(List<E> list, int index, Iterable<? extends E> elements)
List,int,Iterable
boolean
com.google.common.collect.super.com.google.common.collect.Sets$PowerSet
iterator
public Iterator<Set<E>> iterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSortedMap
SynchronizedSortedMap
SynchronizedSortedMap(SortedMap<K, V> delegate, @Nullable Object mutex)
SortedMap,Object
constructor
com.google.common.base.super.com.google.common.base.Splitter
split
public Iterable<String> split(final CharSequence sequence)
CharSequence
Iterable
com.google.common.base.super.com.google.common.base.CharMatcher
anyOf
public static CharMatcher anyOf(final CharSequence sequence)
CharSequence
CharMatcher
com.google.common.collect.super.com.google.common.collect.ArrayTable$ColumnMap
getValue
Map<R, V> getValue(int index)
int
Map
com.google.common.math.super.com.google.common.math.LongMath
squareMod
long squareMod(long a, long m)
long,long
long
com.google.common.cache.super.com.google.common.cache.CacheBuilder
recordStats
public CacheBuilder<K, V> recordStats()
empty
CacheBuilder
com.google.common.primitives.super.com.google.common.primitives.Shorts$ShortArrayAsList
ShortArrayAsList
ShortArrayAsList(short[] array)
short[]
constructor
com.google.common.collect.super.com.google.common.collect.Lists$Partition
get
public List<T> get(int index)
int
List
com.google.common.primitives.super.com.google.common.primitives.Floats$FloatConverter
doForward
protected Float doForward(String value)
String
Float
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
valueComparator
Comparator<? super V> valueComparator()
empty
Comparator
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
createAsMap
Map<K, Collection<V>> createAsMap()
empty
Map
com.google.common.collect.super.com.google.common.collect.Multimaps
filterValues
public static Multimap<K, V> filterValues(Multimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)
Multimap,Predicate
Multimap
com.google.common.primitives.super.com.google.common.primitives.Doubles
lastIndexOf
public static int lastIndexOf(double[] array, double target)
double[],double
int
com.google.common.collect.super.com.google.common.collect.Maps$TransformedEntriesSortedMap
headMap
public SortedMap<K, V2> headMap(K toKey)
K
SortedMap
com.google.common.collect.super.com.google.common.collect.Sets$CartesianSet
create
static Set<List<E>> create(List<? extends Set<? extends E>> sets)
List
Set
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
AbstractMapBasedMultimap
protected AbstractMapBasedMultimap(Map<K, Collection<V>> map)
Map
constructor
com.google.common.primitives.super.com.google.common.primitives.Ints
toArray
public static int[] toArray(Collection<? extends Number> collection)
Collection
int[]
com.google.common.collect.super.com.google.common.collect.Lists
asList
public static List<E> asList(@Nullable E first, E[] rest)
E,E[]
List
com.google.common.math.super.com.google.common.math.IntMath
log10Floor
private static int log10Floor(int x)
int
int
com.google.common.collect.super.com.google.common.collect.Maps
valuePredicateOnEntries
static Predicate<Entry<?, V>> valuePredicateOnEntries(Predicate<? super V> valuePredicate)
Predicate
Predicate
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSetMultimap
delegate
SetMultimap<K, V> delegate()
empty
SetMultimap
com.google.common.base.super.com.google.common.base.CharMatcher
javaUpperCase
public static CharMatcher javaUpperCase()
empty
CharMatcher
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
transformAsync
public static ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)
ListenableFuture,AsyncFunction,Executor
ListenableFuture
com.google.common.base.super.com.google.common.base.CharMatcher$And
And
And(CharMatcher a, CharMatcher b)
CharMatcher,CharMatcher
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableListMultimap
copyOf
public static ImmutableListMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)
Multimap
ImmutableListMultimap
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
removeAll
public ImmutableSet<V> removeAll(Object key)
Object
ImmutableSet
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
valueOf
public static UnsignedInteger valueOf(String string, int radix)
String,int
UnsignedInteger
com.google.common.primitives.super.com.google.common.primitives.Doubles
ensureCapacity
public static double[] ensureCapacity(double[] array, int minLength, int padding)
double[],int,int
double[]
com.google.common.collect.super.com.google.common.collect.ImmutableMapKeySet
get
K get(int index)
int
K
com.google.common.collect.super.com.google.common.collect.Iterators
asEnumeration
public static Enumeration<T> asEnumeration(final Iterator<T> iterator)
Iterator
Enumeration
com.google.common.collect.super.com.google.common.collect.ArrayListMultimap
create
public static ArrayListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)
Multimap
ArrayListMultimap
com.google.common.collect.super.com.google.common.collect.Lists$AbstractListWrapper
set
public E set(int index, E element)
int,E
E
com.google.common.base.super.com.google.common.base.CharMatcher
invisible
public static CharMatcher invisible()
empty
CharMatcher
com.google.common.collect.super.com.google.common.collect.FluentIterable
isEmpty
public final boolean isEmpty()
empty
boolean
com.google.common.collect.super.com.google.common.collect.EnumBiMap
create
public static EnumBiMap<K, V> create(Class<K> keyType, Class<V> valueType)
Class,Class
EnumBiMap
com.google.common.collect.super.com.google.common.collect.Iterables
cycle
public static Iterable<T> cycle(T... elements)
T...
Iterable
com.google.common.base.super.com.google.common.base.Splitter
on
public static Splitter on(final CharMatcher separatorMatcher)
CharMatcher
Splitter
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
get
public Collection<V> get(@Nullable K key)
K
Collection
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultiset
next
public Multiset.Entry<E> next()
empty
Multiset.Entry
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueSet
mask
private int mask()
empty
int
com.google.common.base.super.com.google.common.base.CharMatcher$Is
Is
Is(char match)
char
constructor
com.google.common.collect.super.com.google.common.collect.Maps
indexMap
static ImmutableMap<E, Integer> indexMap(Collection<E> list)
Collection
ImmutableMap
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedObject
SynchronizedObject
SynchronizedObject(Object delegate, @Nullable Object mutex)
Object,Object
constructor
com.google.common.collect.super.com.google.common.collect.Iterators
filter
public static UnmodifiableIterator<T> filter(final Iterator<T> unfiltered, final Predicate<? super T> retainIfTrue)
Iterator,Predicate
UnmodifiableIterator
com.google.common.base.super.com.google.common.base.Charsets
Charsets
private Charsets()
empty
constructor
com.google.common.base.super.com.google.common.base.CharMatcher$InRange
InRange
InRange(char startInclusive, char endInclusive)
char,char
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
of
public static ImmutableMultimap<K, V> of(K k1, V v1)
K,V
ImmutableMultimap
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
put
public V put(@Nullable K key, @Nullable V value)
K,V
V
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
delegate
protected Entry<K, V> delegate()
empty
Entry
com.google.common.collect.super.com.google.common.collect.FluentIterable
first
public final Optional<E> first()
empty
Optional
com.google.common.primitives.super.com.google.common.primitives.Ints
max
public static int max(int... array)
int...
int
com.google.common.util.concurrent.super.com.google.common.util.concurrent.MoreExecutors
execute
public void execute(Runnable command)
Runnable
void
com.google.common.collect.super.com.google.common.collect.Maps
uniqueIndex
public static ImmutableMap<K, V> uniqueIndex(Iterator<V> values, Function<? super V, K> keyFunction)
Iterator,Function
ImmutableMap
com.google.common.collect.super.com.google.common.collect.TreeMultimap
createCollection
Collection<V> createCollection(@Nullable K key)
K
Collection
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
intValue
public int intValue()
empty
int
com.google.common.collect.super.com.google.common.collect.Iterables
concat
public static Iterable<T> concat(final Iterable<? extends Iterable<? extends T>> inputs)
Iterable
Iterable
com.google.common.collect.super.com.google.common.collect.Iterators
any
public static boolean any(Iterator<T> iterator, Predicate<? super T> predicate)
Iterator,Predicate
boolean
com.google.common.collect.super.com.google.common.collect.Iterators
singletonIterator
public static UnmodifiableIterator<T> singletonIterator(@Nullable final T value)
T
UnmodifiableIterator
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
checkValue
V checkValue(@Nullable V value)
V
V
com.google.common.cache.super.com.google.common.cache.CacheLoader
from
public static CacheLoader<K, V> from(Function<K, V> function)
Function
CacheLoader
com.google.common.base.super.com.google.common.base.Predicates
compose
public static Predicate<A> compose(Predicate<B> predicate, Function<A, ? extends B> function)
Predicate,Function
Predicate
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$EntrySet
removeAll
public boolean removeAll(Collection<?> c)
Collection
boolean
com.google.common.primitives.super.com.google.common.primitives.Floats
min
public static float min(float... array)
float...
float
com.google.common.collect.super.com.google.common.collect.Multimaps
newListMultimap
public static ListMultimap<K, V> newListMultimap(Map<K, Collection<V>> map, final Supplier<? extends List<V>> factory)
Map,Supplier
ListMultimap
com.google.common.primitives.super.com.google.common.primitives.Shorts
stringConverter
public static Converter<String, Short> stringConverter()
empty
Converter
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$KeySet
removeAll
public boolean removeAll(Collection<?> keysToRemove)
Collection
boolean
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
values
public List<V> values()
empty
List
com.google.common.collect.super.com.google.common.collect.FluentIterable
index
public final ImmutableListMultimap<K, E> index(Function<? super E, K> keyFunction)
Function
ImmutableListMultimap
com.google.common.collect.super.com.google.common.collect.GenericMapMaker
maximumSize
abstract GenericMapMaker<K0, V0> maximumSize(int maximumSize)
int
GenericMapMaker
com.google.common.collect.super.com.google.common.collect.ImmutableMapValues
ImmutableMapValues
ImmutableMapValues(ImmutableMap<K, V> map)
ImmutableMap
constructor
com.google.common.collect.super.com.google.common.collect.Iterators
size
public static int size(Iterator<?> iterator)
Iterator
int
com.google.common.collect.super.com.google.common.collect.RegularImmutableAsList
get
public E get(int index)
int
E
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultimap
replaceValues
public Collection<V> replaceValues(K key, Iterable<? extends V> values)
K,Iterable
Collection
com.google.common.base.super.com.google.common.base.CharMatcher
replaceFrom
public String replaceFrom(CharSequence sequence, char replacement)
CharSequence,char
String
com.google.common.collect.super.com.google.common.collect.ArrayTable
remove
public V remove(Object rowKey, Object columnKey)
Object,Object
V
com.google.common.collect.super.com.google.common.collect.Maps
transformValues
public static SortedMap<K, V2> transformValues(SortedMap<K, V1> fromMap, Function<? super V1, V2> function)
SortedMap,Function
SortedMap
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
rotateRight
private AvlNode<E> rotateRight()
empty
AvlNode
com.google.common.collect.super.com.google.common.collect.Multimaps$TransformedEntriesListMultimap
replaceValues
public List<V2> replaceValues(K key, Iterable<? extends V2> values)
K,Iterable
List
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Callables
returning
public static Callable<T> returning(@Nullable final T value)
T
Callable
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$EntrySet
retainAll
public boolean retainAll(Collection<?> c)
Collection
boolean
com.google.common.collect.super.com.google.common.collect.Maps$FilteredMapValues
remove
public boolean remove(Object o)
Object
boolean
com.google.common.collect.super.com.google.common.collect.Multimaps
filterKeys
public static SetMultimap<K, V> filterKeys(SetMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)
SetMultimap,Predicate
SetMultimap
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
containsValue
public boolean containsValue(@Nullable Object value)
Object
boolean
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
keySet
public Set<K> keySet()
empty
Set
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset$Builder
add
public Builder<E> add(E... elements)
E...
Builder
com.google.common.primitives.super.com.google.common.primitives.Doubles
indexOf
private static int indexOf(double[] array, double target, int start, int end)
double[],double,int,int
int
com.google.common.collect.super.com.google.common.collect.FluentIterable
append
public final FluentIterable<E> append(E... elements)
E...
FluentIterable
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
createValues
List<V> createValues()
empty
List
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$DistinctKeyIterator
next
public K next()
empty
K
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedList
lastIndexOf
public int lastIndexOf(Object o)
Object
int
com.google.common.primitives.super.com.google.common.primitives.Doubles
contains
public static boolean contains(double[] array, double target)
double[],double
boolean
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSet
delegate
Set<E> delegate()
empty
Set
com.google.common.collect.super.com.google.common.collect.EmptyContiguousSet
contains
public boolean contains(Object object)
Object
boolean
com.google.common.primitives.super.com.google.common.primitives.Shorts
asList
public static List<Short> asList(short... backingArray)
short...
List
com.google.common.base.super.com.google.common.base.CharMatcher$FastMatcher
precomputed
public final CharMatcher precomputed()
empty
CharMatcher
com.google.common.collect.super.com.google.common.collect.Maps
valueOrNull
static V valueOrNull(@Nullable Entry<?, V> entry)
Entry
V
com.google.common.collect.super.com.google.common.collect.ArrayTable
set
public V set(int rowIndex, int columnIndex, @Nullable V value)
int,int,V
V
com.google.common.base.super.com.google.common.base.Predicates
or
public static Predicate<T> or(Iterable<? extends Predicate<? super T>> components)
Iterable
Predicate
com.google.common.base.super.com.google.common.base.CharMatcher$None
None
private None()
empty
constructor
com.google.common.io.super.com.google.common.io.BaseEncoding$Base64Encoding
Base64Encoding
Base64Encoding(String name, String alphabetChars, @Nullable Character paddingChar)
String,String,Character
constructor
com.google.common.collect.super.com.google.common.collect.Maps$SortedAsMapView
comparator
public Comparator<? super K> comparator()
empty
Comparator
com.google.common.cache.super.com.google.common.cache.CacheBuilder
initialCapacity
public CacheBuilder<K, V> initialCapacity(int initialCapacity)
int
CacheBuilder
com.google.common.collect.super.com.google.common.collect.Maps$SortedAsMapView
lastKey
public K lastKey()
empty
K
com.google.common.primitives.super.com.google.common.primitives.Shorts
indexOf
public static int indexOf(short[] array, short[] target)
short[],short[]
int
com.google.common.io.super.com.google.common.io.BaseEncoding$DecodingException
DecodingException
DecodingException(Throwable cause)
Throwable
constructor
com.google.common.io.super.com.google.common.io.BaseEncoding$StandardBaseEncoding
StandardBaseEncoding
StandardBaseEncoding(String name, String alphabetChars, @Nullable Character paddingChar)
String,String,Character
constructor
com.google.common.collect.super.com.google.common.collect.Maps$SortedMapDifferenceImpl
entriesDiffering
public SortedMap<K, ValueDifference<V>> entriesDiffering()
empty
SortedMap
com.google.common.collect.super.com.google.common.collect.Lists$TransformingRandomAccessList
iterator
public Iterator<T> iterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.Multimaps$TransformedEntriesMultimap
createValues
Collection<V2> createValues()
empty
Collection
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap
tailMap
public SortedMap<K, Collection<V>> tailMap(K fromKey)
K
SortedMap
com.google.common.collect.super.com.google.common.collect.Iterables
size
public static int size(Iterable<?> iterable)
Iterable
int
com.google.common.base.super.com.google.common.base.CharMatcher
javaLowerCase
public static CharMatcher javaLowerCase()
empty
CharMatcher
com.google.common.collect.super.com.google.common.collect.Multimaps$EntrySet
iterator
public Iterator<Entry<K, Collection<V>>> iterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$ValueSet
iterator
public Iterator<V> iterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.Sets
filter
public static Set<E> filter(Set<E> unfiltered, Predicate<? super E> predicate)
Set,Predicate
Set
com.google.common.collect.super.com.google.common.collect.TreeMultiset
TreeMultiset
TreeMultiset(Comparator<? super E> comparator)
Comparator
constructor
com.google.common.cache.super.com.google.common.cache.CacheBuilder
getKeyEquivalence
Equivalence<Object> getKeyEquivalence()
empty
Equivalence
com.google.common.collect.super.com.google.common.collect.FluentIterable
anyMatch
public final boolean anyMatch(Predicate<? super E> predicate)
Predicate
boolean
com.google.common.collect.super.com.google.common.collect.Lists$ReverseList
ReverseList
ReverseList(List<T> forwardList)
List
constructor
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedQueue
SynchronizedQueue
SynchronizedQueue(Queue<E> delegate, @Nullable Object mutex)
Queue,Object
constructor
com.google.common.base.super.com.google.common.base.Stopwatch
createUnstarted
public static Stopwatch createUnstarted(Ticker ticker)
Ticker
Stopwatch
com.google.common.io.super.com.google.common.io.BaseEncoding$Alphabet
toString
public String toString()
empty
String
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$Inverse
checkKey
K checkKey(K key)
K
K
com.google.common.primitives.super.com.google.common.primitives.Chars$CharArrayAsList
CharArrayAsList
CharArrayAsList(char[] array, int start, int end)
char[],int,int
constructor
com.google.common.base.super.com.google.common.base.CharMatcher
apply
public boolean apply(Character character)
Character
boolean
com.google.common.io.super.com.google.common.io.BaseEncoding
base64Url
public static BaseEncoding base64Url()
empty
BaseEncoding
com.google.common.collect.super.com.google.common.collect.LinkedHashMultiset
create
public static LinkedHashMultiset<E> create()
empty
LinkedHashMultiset
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm
readResolve
Object readResolve()
empty
Object
com.google.common.base.super.com.google.common.base.CharMatcher
isEither
private static CharMatcher.IsEither isEither(char c1, char c2)
char,char
CharMatcher.IsEither
com.google.common.math.super.com.google.common.math.LongMath
mulMod
abstract long mulMod(long a, long b, long m)
long,long,long
long
com.google.common.collect.super.com.google.common.collect.Multimaps$AsMap
removeValuesForKey
void removeValuesForKey(Object key)
Object
void
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
setCount
AvlNode<E> setCount(Comparator<? super E> comparator, @Nullable E e, int expectedCount, int newCount, int[] result)
Comparator,E,int,int,int[]
AvlNode
com.google.common.collect.super.com.google.common.collect.ArrayTable
erase
public V erase(@Nullable Object rowKey, @Nullable Object columnKey)
Object,Object
V
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$ValueSet
toArray
public T[] toArray(T[] array)
T[]
T[]
com.google.common.collect.super.com.google.common.collect.ObjectArrays
swap
static void swap(Object[] array, int i, int j)
Object[],int,int
void
com.google.common.collect.super.com.google.common.collect.Multimaps$CustomSetMultimap
createCollection
protected Set<V> createCollection()
empty
Set
com.google.common.collect.super.com.google.common.collect.Multimaps
unmodifiableListMultimap
public static ListMultimap<K, V> unmodifiableListMultimap(ImmutableListMultimap<K, V> delegate)
ImmutableListMultimap
ListMultimap
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSortedSet
delegate
SortedSet<E> delegate()
empty
SortedSet
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$Node
setValue
public V setValue(@Nullable V newValue)
V
V
com.google.common.io.super.com.google.common.io.BaseEncoding$StandardBaseEncoding
maxDecodedSize
int maxDecodedSize(int chars)
int
int
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultiset
elementSet
public Set<E> elementSet()
empty
Set
com.google.common.collect.super.com.google.common.collect.Iterables
Iterables
private Iterables()
empty
constructor
com.google.common.io.super.com.google.common.io.BaseEncoding$StandardBaseEncoding
padding
CharMatcher padding()
empty
CharMatcher
com.google.common.primitives.super.com.google.common.primitives.Floats
lastIndexOf
public static int lastIndexOf(float[] array, float target)
float[],float
int
com.google.common.cache.super.com.google.common.cache.CacheBuilder
concurrencyLevel
public CacheBuilder<K, V> concurrencyLevel(int concurrencyLevel)
int
CacheBuilder
com.google.common.math.super.com.google.common.math.DoubleMath
DoubleMath
private DoubleMath()
empty
constructor
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
immediateFailedFuture
public static ListenableFuture<V> immediateFailedFuture(Throwable throwable)
Throwable
ListenableFuture
com.google.common.collect.super.com.google.common.collect.Lists
indexOfImpl
static int indexOfImpl(List<?> list, @Nullable Object element)
List,Object
int
com.google.common.cache.super.com.google.common.cache.CacheLoader
CacheLoader
protected CacheLoader()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Maps$SortedAsMapView
tailMap
public SortedMap<K, V> tailMap(K fromKey)
K
SortedMap
com.google.common.collect.super.com.google.common.collect.Maps$SortedKeySet
last
public K last()
empty
K
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
copyOf
public static ImmutableMultiset<E> copyOf(Iterator<? extends E> elements)
Iterator
ImmutableMultiset
com.google.common.collect.super.com.google.common.collect.Maps$FilteredEntryBiMap
inversePredicate
private static Predicate<Entry<V, K>> inversePredicate(final Predicate<? super Entry<K, V>> forwardPredicate)
Predicate
Predicate
com.google.common.base.super.com.google.common.base.Predicates
in
public static Predicate<T> in(Collection<? extends T> target)
Collection
Predicate
com.google.common.collect.super.com.google.common.collect.Iterators
getOnlyElement
public static T getOnlyElement(Iterator<T> iterator)
Iterator
T
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueEntry
setSuccessorInValueSet
public void setSuccessorInValueSet(ValueSetLink<K, V> entry)
ValueSetLink
void
com.google.common.collect.super.com.google.common.collect.Iterables
toIterator
private static Function<Iterable<? extends T>, Iterator<? extends T>> toIterator()
empty
Function
com.google.common.util.concurrent.super.com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState
releaseResourcesAfterFailure
void releaseResourcesAfterFailure()
empty
void
com.google.common.collect.super.com.google.common.collect.RegularImmutableAsList
listIterator
public UnmodifiableListIterator<E> listIterator(int index)
int
UnmodifiableListIterator
com.google.common.collect.super.com.google.common.collect.ImmutableAsList
contains
public boolean contains(Object target)
Object
boolean
com.google.common.cache.super.com.google.common.cache.CacheLoader$SupplierToCacheLoader
SupplierToCacheLoader
public SupplierToCacheLoader(Supplier<V> computingSupplier)
Supplier
constructor
com.google.common.primitives.super.com.google.common.primitives.Ints
indexOf
private static int indexOf(int[] array, int target, int start, int end)
int[],int,int,int
int
com.google.common.collect.super.com.google.common.collect.Iterators
concat
public static Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c, Iterator<? extends T> d)
Iterator,Iterator,Iterator,Iterator
Iterator
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator
MapBasedMultisetIterator
MapBasedMultisetIterator()
empty
constructor
com.google.common.primitives.super.com.google.common.primitives.Chars
checkedCast
public static char checkedCast(long value)
long
char
com.google.common.collect.super.com.google.common.collect.Multimaps
synchronizedSetMultimap
public static SetMultimap<K, V> synchronizedSetMultimap(SetMultimap<K, V> multimap)
SetMultimap
SetMultimap
com.google.common.base.super.com.google.common.base.CharMatcher$Negated
Negated
Negated(CharMatcher original)
CharMatcher
constructor
com.google.common.primitives.super.com.google.common.primitives.Floats
indexOf
public static int indexOf(float[] array, float target)
float[],float
int
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
add
AvlNode<E> add(Comparator<? super E> comparator, @Nullable E e, int count, int[] result)
Comparator,E,int,int[]
AvlNode
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset$SerializedForm
SerializedForm
SerializedForm(Multiset<?> multiset)
Multiset
constructor
com.google.common.collect.super.com.google.common.collect.Maps$UnmodifiableEntries
delegate
protected Collection<Entry<K, V>> delegate()
empty
Collection
com.google.common.collect.super.com.google.common.collect.Lists
computeArrayListCapacity
static int computeArrayListCapacity(int arraySize)
int
int
com.google.common.collect.super.com.google.common.collect.Lists
newArrayList
public static ArrayList<E> newArrayList(Iterable<? extends E> elements)
Iterable
ArrayList
com.google.common.math.super.com.google.common.math.LongMath
mean
public static long mean(long x, long y)
long,long
long
com.google.common.collect.super.com.google.common.collect.Lists
newLinkedList
public static LinkedList<E> newLinkedList(Iterable<? extends E> elements)
Iterable
LinkedList
com.google.common.math.super.com.google.common.math.LongMath
plusMod
private long plusMod(long a, long b, long m)
long,long,long
long
com.google.common.cache.super.com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException
UnsupportedLoadingOperationException
UnsupportedLoadingOperationException()
empty
constructor
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
count
public int count(Comparator<? super E> comparator, E e)
Comparator,E
int
com.google.common.collect.super.com.google.common.collect.Maps$KeySet
KeySet
KeySet()
empty
constructor
com.google.common.io.super.com.google.common.io.BaseEncoding
base64
public static BaseEncoding base64()
empty
BaseEncoding
com.google.common.collect.super.com.google.common.collect.Multimaps
filterFiltered
private static SetMultimap<K, V> filterFiltered(FilteredSetMultimap<K, V> multimap, Predicate<? super Entry<K, V>> entryPredicate)
FilteredSetMultimap,Predicate
SetMultimap
com.google.common.collect.super.com.google.common.collect.ContiguousSet
headSet
public ContiguousSet<C> headSet(C toElement)
C
ContiguousSet
com.google.common.primitives.super.com.google.common.primitives.Chars
indexOf
public static int indexOf(char[] array, char target)
char[],char
int
com.google.common.collect.super.com.google.common.collect.Sets$FilteredSet
FilteredSet
FilteredSet(Set<E> unfiltered, Predicate<? super E> predicate)
Set,Predicate
constructor
com.google.common.base.super.com.google.common.base.CharMatcher$Invisible
Invisible
private Invisible()
empty
constructor
com.google.common.base.super.com.google.common.base.CharMatcher
and
public CharMatcher and(CharMatcher other)
CharMatcher
CharMatcher
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueSet
ValueSet
ValueSet(K key, int expectedValues)
K,int
constructor
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
deleteMe
private AvlNode<E> deleteMe()
empty
AvlNode
com.google.common.base.super.com.google.common.base.CharMatcher$AnyOf
AnyOf
public AnyOf(CharSequence chars)
CharSequence
constructor
com.google.common.collect.super.com.google.common.collect.Iterators
addAll
public static boolean addAll(Collection<T> addTo, Iterator<? extends T> iterator)
Collection,Iterator
boolean
com.google.common.cache.super.com.google.common.cache.CacheBuilder
getMaximumWeight
long getMaximumWeight()
empty
long
com.google.common.base.super.com.google.common.base.Enums$StringConverter
doBackward
protected String doBackward(T enumValue)
T
String
com.google.common.collect.super.com.google.common.collect.Lists
previous
public T previous()
empty
T
com.google.common.collect.super.com.google.common.collect.Multimaps
synchronizedSortedSetMultimap
public static SortedSetMultimap<K, V> synchronizedSortedSetMultimap(SortedSetMultimap<K, V> multimap)
SortedSetMultimap
SortedSetMultimap
com.google.common.collect.super.com.google.common.collect.Lists$CharSequenceAsList
CharSequenceAsList
CharSequenceAsList(CharSequence sequence)
CharSequence
constructor
com.google.common.base.super.com.google.common.base.CharMatcher
replaceFrom
public String replaceFrom(CharSequence sequence, CharSequence replacement)
CharSequence,CharSequence
String
com.google.common.collect.super.com.google.common.collect.Iterables
removeIf
public static boolean removeIf(Iterable<T> removeFrom, Predicate<? super T> predicate)
Iterable,Predicate
boolean
com.google.common.math.super.com.google.common.math.LongMath
times2ToThe32Mod
private long times2ToThe32Mod(long a, long m)
long,long
long
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
createUnmodifiableEmptyCollection
Collection<V> createUnmodifiableEmptyCollection()
empty
Collection
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
emptySet
private static ImmutableSet<V> emptySet(@Nullable Comparator<? super V> valueComparator)
Comparator
ImmutableSet
com.google.common.base.super.com.google.common.base.Predicates
alwaysFalse
public static Predicate<T> alwaysFalse()
empty
Predicate
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$KeySet
remove
public boolean remove(Object key)
Object
boolean
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultiset
entrySet
public Set<Entry<E>> entrySet()
empty
Set
com.google.common.cache.super.com.google.common.cache.CacheBuilder
getValueEquivalence
Equivalence<Object> getValueEquivalence()
empty
Equivalence
com.google.common.collect.super.com.google.common.collect.ArrayTable$ArrayMap
put
public V put(K key, V value)
K,V
V
com.google.common.collect.super.com.google.common.collect.LinkedHashMultiset
LinkedHashMultiset
private LinkedHashMultiset(int distinctElements)
int
constructor
com.google.common.collect.super.com.google.common.collect.Synchronized
Synchronized
private Synchronized()
empty
constructor
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
longValue
public long longValue()
empty
long
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$EntrySet
delegate
protected Set<Entry<K, V>> delegate()
empty
Set
com.google.common.base.super.com.google.common.base.CharMatcher$Or
Or
Or(CharMatcher a, CharMatcher b)
CharMatcher,CharMatcher
constructor
com.google.common.collect.super.com.google.common.collect.Sets$SetView
copyInto
public S copyInto(S set)
S
S
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$KeySet
KeySet
KeySet(final Map<K, Collection<V>> subMap)
Map
constructor
com.google.common.math.super.com.google.common.math.LongMath
multiplyFraction
static long multiplyFraction(long x, long numerator, long denominator)
long,long,long
long
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
create
public static LinkedListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)
Multimap
LinkedListMultimap
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
transform
public static ListenableFuture<O> transform(ListenableFuture<I> input, Function<? super I, ? extends O> function, Executor executor)
ListenableFuture,Function,Executor
ListenableFuture
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
entries
public ImmutableCollection<Entry<K, V>> entries()
empty
ImmutableCollection
com.google.common.collect.super.com.google.common.collect.Multimaps$CustomListMultimap
CustomListMultimap
CustomListMultimap(Map<K, Collection<V>> map, Supplier<? extends List<V>> factory)
Map,Supplier
constructor
com.google.common.base.super.com.google.common.base.Splitter
withKeyValueSeparator
public MapSplitter withKeyValueSeparator(String separator)
String
MapSplitter
com.google.common.collect.super.com.google.common.collect.Maps$SortedKeySet
tailSet
public SortedSet<K> tailSet(K fromElement)
K
SortedSet
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap$Itr
output
abstract T output(K key, V value)
K,V
T
com.google.common.primitives.super.com.google.common.primitives.Doubles
max
public static double max(double... array)
double...
double
com.google.common.primitives.super.com.google.common.primitives.Floats$FloatArrayAsList
set
public Float set(int index, Float element)
int,Float
Float
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
copyFromElements
private static ImmutableMultiset<E> copyFromElements(E... elements)
E...
ImmutableMultiset
com.google.common.base.super.com.google.common.base.CharMatcher
whitespace
public static CharMatcher whitespace()
empty
CharMatcher
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedQueue
remove
public E remove()
empty
E
com.google.common.collect.super.com.google.common.collect.TreeMultiset
successor
private static void successor(AvlNode<T> a, AvlNode<T> b)
AvlNode,AvlNode
void
com.google.common.collect.super.com.google.common.collect.Iterables
frequency
public static int frequency(Iterable<?> iterable, @Nullable Object element)
Iterable,Object
int
com.google.common.base.super.com.google.common.base.Predicates
asList
private static List<Predicate<? super T>> asList(Predicate<? super T> first, Predicate<? super T> second)
Predicate,Predicate
List
com.google.common.math.super.com.google.common.math.IntMath
checkedPow
public static int checkedPow(int b, int k)
int,int
int
com.google.common.collect.super.com.google.common.collect.Sets
newHashSet
public static HashSet<E> newHashSet(E... elements)
E...
HashSet
com.google.common.base.super.com.google.common.base.CharMatcher$IsEither
IsEither
IsEither(char match1, char match2)
char,char
constructor
com.google.common.primitives.super.com.google.common.primitives.Floats
copyOf
private static float[] copyOf(float[] original, int length)
float[],int
float[]
com.google.common.collect.super.com.google.common.collect.Maps
safeGet
static V safeGet(Map<?, V> map, @Nullable Object key)
Map,Object
V
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueSet
add
public boolean add(@Nullable V value)
V
boolean
com.google.common.collect.super.com.google.common.collect.Iterables
toString
public static String toString(Iterable<?> iterable)
Iterable
String
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSortedMap
delegate
SortedMap<K, V> delegate()
empty
SortedMap
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet
WrappedSortedSet
WrappedSortedSet(@Nullable K key, SortedSet<V> delegate, @Nullable WrappedCollection ancestor)
K,SortedSet,WrappedCollection
constructor
com.google.common.collect.super.com.google.common.collect.Multimaps$Keys
createEntrySet
Set<Multiset.Entry<K>> createEntrySet()
empty
Set
com.google.common.collect.super.com.google.common.collect.ObjectArrays
copyAsObjectArray
static Object[] copyAsObjectArray(Object[] elements, int offset, int length)
Object[],int,int
Object[]
com.google.common.primitives.super.com.google.common.primitives.Shorts
lexicographicalComparator
public static Comparator<short[]> lexicographicalComparator()
empty
Comparator
com.google.common.collect.super.com.google.common.collect.Lists$ReverseList
getForwardList
List<T> getForwardList()
empty
List
com.google.common.io.super.com.google.common.io.BaseEncoding$Alphabet
matches
public boolean matches(char c)
char
boolean
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$ValueForKeyIterator
ValueForKeyIterator
public ValueForKeyIterator(@Nullable Object key, int index)
Object,int
constructor
com.google.common.collect.super.com.google.common.collect.Lists
lastIndexOfRandomAccess
private static int lastIndexOfRandomAccess(List<?> list, @Nullable Object element)
List,Object
int
com.google.common.collect.super.com.google.common.collect.TreeMultimap
valueComparator
public Comparator<? super V> valueComparator()
empty
Comparator
com.google.common.util.concurrent.super.com.google.common.util.concurrent.CollectionFuture$ListFutureRunningState
combine
public List<V> combine(List<Optional<V>> values)
List
List
com.google.common.collect.super.com.google.common.collect.FluentIterable
firstMatch
public final Optional<E> firstMatch(Predicate<? super E> predicate)
Predicate
Optional
com.google.common.primitives.super.com.google.common.primitives.Ints$IntArrayAsList
set
public Integer set(int index, Integer element)
int,Integer
Integer
com.google.common.collect.super.com.google.common.collect.Lists
hashCodeImpl
static int hashCodeImpl(List<?> list)
List
int
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
allAsList
public static ListenableFuture<List<V>> allAsList(Iterable<? extends ListenableFuture<? extends V>> futures)
Iterable
ListenableFuture
com.google.common.collect.super.com.google.common.collect.Iterators
concat
public static Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b)
Iterator,Iterator
Iterator
com.google.common.collect.super.com.google.common.collect.Maps$FilteredKeyMap
FilteredKeyMap
FilteredKeyMap(Map<K, V> unfiltered, Predicate<? super K> keyPredicate, Predicate<? super Entry<K, V>> entryPredicate)
Map,Predicate,Predicate
constructor
com.google.common.collect.super.com.google.common.collect.Maps$MapDifferenceImpl
entriesOnlyOnRight
public Map<K, V> entriesOnlyOnRight()
empty
Map
com.google.common.primitives.super.com.google.common.primitives.Ints
copyOf
private static int[] copyOf(int[] original, int length)
int[],int
int[]
com.google.common.collect.super.com.google.common.collect.Iterables
getOnlyElement
public static T getOnlyElement(Iterable<T> iterable)
Iterable
T
com.google.common.collect.super.com.google.common.collect.Lists
transform
public static List<T> transform(List<F> fromList, Function<? super F, ? extends T> function)
List,Function
List
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$AsMap
remove
public Collection<V> remove(Object key)
Object
Collection
com.google.common.collect.super.com.google.common.collect.Iterables
find
public static T find(Iterable<T> iterable, Predicate<? super T> predicate)
Iterable,Predicate
T
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultimap
get
public Collection<V> get(K key)
K
Collection
com.google.common.util.concurrent.super.com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState
collectOneValue
final void collectOneValue(boolean allMustSucceed, int index, @Nullable V returnValue)
boolean,int,V
void
com.google.common.collect.super.com.google.common.collect.Synchronized
sortedSet
private static SortedSet<E> sortedSet(SortedSet<E> set, @Nullable Object mutex)
SortedSet,Object
SortedSet
com.google.common.collect.super.com.google.common.collect.FluentIterable
allMatch
public final boolean allMatch(Predicate<? super E> predicate)
Predicate
boolean
com.google.common.collect.super.com.google.common.collect.Lists
newArrayList
public static ArrayList<E> newArrayList(E... elements)
E...
ArrayList
com.google.common.primitives.super.com.google.common.primitives.Shorts
join
public static String join(String separator, short... array)
String,short...
String
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
valueSet
private static ImmutableSet<V> valueSet(@Nullable Comparator<? super V> valueComparator, Collection<? extends V> values)
Comparator,Collection
ImmutableSet
com.google.common.primitives.super.com.google.common.primitives.Shorts
copyOf
private static short[] copyOf(short[] original, int length)
short[],int
short[]
com.google.common.io.super.com.google.common.io.BaseEncoding
maxEncodedSize
abstract int maxEncodedSize(int bytes)
int
int
com.google.common.collect.super.com.google.common.collect.FluentIterable
transform
public final FluentIterable<T> transform(Function<? super E, T> function)
Function
FluentIterable
com.google.common.collect.super.com.google.common.collect.Maps$SortedAsMapView
SortedAsMapView
SortedAsMapView(SortedSet<K> set, Function<? super K, V> function)
SortedSet,Function
constructor
com.google.common.collect.super.com.google.common.collect.Multimaps$CustomSortedSetMultimap
createCollection
protected SortedSet<V> createCollection()
empty
SortedSet
com.google.common.base.super.com.google.common.base.Stopwatch
start
public Stopwatch start()
empty
Stopwatch
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedQueue
offer
public boolean offer(E e)
E
boolean
com.google.common.collect.super.com.google.common.collect.Maps$TransformedEntriesMap
containsKey
public boolean containsKey(Object key)
Object
boolean
com.google.common.collect.super.com.google.common.collect.ImmutableListMultimap
of
public static ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)
K,V,K,V,K,V
ImmutableListMultimap
com.google.common.base.super.com.google.common.base.CharMatcher
negate
public CharMatcher negate()
empty
CharMatcher
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
keySet
public ImmutableSet<K> keySet()
empty
ImmutableSet
com.google.common.base.super.com.google.common.base.Splitter
splitToList
public List<String> splitToList(CharSequence sequence)
CharSequence
List
com.google.common.collect.super.com.google.common.collect.Lists$AbstractListWrapper
add
public void add(int index, E element)
int,E
void
com.google.common.collect.super.com.google.common.collect.ImmutableMapKeySet
iterator
public UnmodifiableIterator<K> iterator()
empty
UnmodifiableIterator
com.google.common.base.super.com.google.common.base.Stopwatch
createUnstarted
public static Stopwatch createUnstarted()
empty
Stopwatch
com.google.common.base.super.com.google.common.base.CharMatcher
ascii
public static CharMatcher ascii()
empty
CharMatcher
com.google.common.base.super.com.google.common.base.Stopwatch
reset
public Stopwatch reset()
empty
Stopwatch
com.google.common.io.super.com.google.common.io.BaseEncoding
withPadChar
public abstract BaseEncoding withPadChar(char padChar)
char
BaseEncoding
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
put
public boolean put(@Nullable K key, @Nullable V value)
K,V
boolean
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedCollection
addAll
public boolean addAll(Collection<? extends E> c)
Collection
boolean
com.google.common.primitives.super.com.google.common.primitives.Floats
Floats
private Floats()
empty
constructor
com.google.common.io.super.com.google.common.io.BaseEncoding
omitPadding
public abstract BaseEncoding omitPadding()
empty
BaseEncoding
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
dividedBy
public UnsignedInteger dividedBy(UnsignedInteger val)
UnsignedInteger
UnsignedInteger
com.google.common.collect.super.com.google.common.collect.TreeMultimap
TreeMultimap
TreeMultimap(Comparator<? super K> keyComparator, Comparator<? super V> valueComparator)
Comparator,Comparator
constructor
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
transform
public static ListenableFuture<O> transform(ListenableFuture<I> input, Function<? super I, ? extends O> function)
ListenableFuture,Function
ListenableFuture
com.google.common.collect.super.com.google.common.collect.Sets
newLinkedHashSet
public static LinkedHashSet<E> newLinkedHashSet()
empty
LinkedHashSet
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
recompute
private void recompute()
empty
void
com.google.common.collect.super.com.google.common.collect.TreeMultiset
tailMultiset
public SortedMultiset<E> tailMultiset(@Nullable E lowerBound, BoundType boundType)
E,BoundType
SortedMultiset
com.google.common.collect.super.com.google.common.collect.Maps
add
public boolean add(E element)
E
boolean
com.google.common.collect.super.com.google.common.collect.Iterables
addAll
public static boolean addAll(Collection<T> addTo, Iterable<? extends T> elementsToAdd)
Collection,Iterable
boolean
com.google.common.collect.super.com.google.common.collect.Maps$FilteredEntrySortedMap
keySet
public SortedSet<K> keySet()
empty
SortedSet
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
listIterator
public ListIterator<V> listIterator(int index)
int
ListIterator
com.google.common.collect.super.com.google.common.collect.Iterators
next
public T next()
empty
T
com.google.common.collect.super.com.google.common.collect.Iterators
getLast
public static T getLast(Iterator<? extends T> iterator, @Nullable T defaultValue)
Iterator,T
T
com.google.common.collect.super.com.google.common.collect.Maps$TransformedEntriesSortedMap
tailMap
public SortedMap<K, V2> tailMap(K fromKey)
K
SortedMap
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
copyFromEntries
static ImmutableMultiset<E> copyFromEntries(Collection<? extends Entry<? extends E>> entries)
Collection
ImmutableMultiset
com.google.common.math.super.com.google.common.math.LongMath
mulMod
long mulMod(long a, long b, long m)
long,long,long
long
com.google.common.collect.super.com.google.common.collect.Iterators
get
public static T get(Iterator<? extends T> iterator, int position, @Nullable T defaultValue)
Iterator,int,T
T
com.google.common.io.super.com.google.common.io.BaseEncoding
upperCase
public abstract BaseEncoding upperCase()
empty
BaseEncoding
com.google.common.collect.super.com.google.common.collect.Maps
unmodifiableMap
private static Map<K, V> unmodifiableMap(Map<K, V> map)
Map
Map
com.google.common.base.super.com.google.common.base.CharMatcher
matches
public abstract boolean matches(char c)
char
boolean
com.google.common.collect.super.com.google.common.collect.ArrayTable
cellIterator
Iterator<Cell<R, C, V>> cellIterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.Iterators
cast
static ListIterator<T> cast(Iterator<T> iterator)
Iterator
ListIterator
com.google.common.collect.super.com.google.common.collect.Sets
immutableEnumSet
public static ImmutableSet<E> immutableEnumSet(E anElement, E... otherElements)
E,E...
ImmutableSet
com.google.common.cache.super.com.google.common.cache.CacheBuilder
getValueStrength
Strength getValueStrength()
empty
Strength
com.google.common.collect.super.com.google.common.collect.Multimaps
index
public static ImmutableListMultimap<K, V> index(Iterable<V> values, Function<? super V, K> keyFunction)
Iterable,Function
ImmutableListMultimap
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection
getAncestor
WrappedCollection getAncestor()
empty
WrappedCollection
com.google.common.cache.super.com.google.common.cache.CacheBuilder
recordMisses
public void recordMisses(int count)
int
void
com.google.common.io.super.com.google.common.io.BaseEncoding
append
public Appendable append(CharSequence chars) throws IOException
CharSequence
Appendable
com.google.common.base.super.com.google.common.base.Splitter
iterator
public SplittingIterator iterator(Splitter splitter, CharSequence toSplit)
Splitter,CharSequence
SplittingIterator
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
add
public final int add(E element, int occurrences)
E,int
int
com.google.common.collect.super.com.google.common.collect.RegularContiguousSet
RegularContiguousSet
RegularContiguousSet(Range<C> range, DiscreteDomain<C> domain)
Range,DiscreteDomain
constructor
com.google.common.collect.super.com.google.common.collect.Maps
filterEntries
public static Map<K, V> filterEntries(Map<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)
Map,Predicate
Map
com.google.common.base.super.com.google.common.base.CharMatcher
or
public CharMatcher or(CharMatcher other)
CharMatcher
CharMatcher
com.google.common.collect.super.com.google.common.collect.EmptyContiguousSet
iterator
public UnmodifiableIterator<C> iterator()
empty
UnmodifiableIterator
com.google.common.collect.super.com.google.common.collect.Maps
immutableEntry
public static Entry<K, V> immutableEntry(@Nullable K key, @Nullable V value)
K,V
Entry
com.google.common.collect.super.com.google.common.collect.Lists
reverse
public static List<T> reverse(List<T> list)
List
List
com.google.common.primitives.super.com.google.common.primitives.Shorts
contains
public static boolean contains(short[] array, short target)
short[],short
boolean
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
of
public static ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)
K,V,K,V,K,V
ImmutableMultimap
com.google.common.math.super.com.google.common.math.LongMath
log2
public static int log2(long x, RoundingMode mode)
long,RoundingMode
int
com.google.common.base.super.com.google.common.base.CharMatcher
removeFrom
public String removeFrom(CharSequence sequence)
CharSequence
String
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSetMultimap
get
public Set<V> get(K key)
K
Set
com.google.common.io.super.com.google.common.io.BaseEncoding
maxDecodedSize
abstract int maxDecodedSize(int chars)
int
int
com.google.common.collect.super.com.google.common.collect.Maps
filterFiltered
private static Map<K, V> filterFiltered(AbstractFilteredMap<K, V> map, Predicate<? super Entry<K, V>> entryPredicate)
AbstractFilteredMap,Predicate
Map
com.google.common.cache.super.com.google.common.cache.CacheBuilder
setValueStrength
CacheBuilder<K, V> setValueStrength(Strength strength)
Strength
CacheBuilder
com.google.common.util.concurrent.super.com.google.common.util.concurrent.MoreExecutors
directExecutor
public static Executor directExecutor()
empty
Executor
com.google.common.collect.super.com.google.common.collect.Sets
removeAllImpl
static boolean removeAllImpl(Set<?> set, Collection<?> collection)
Set,Collection
boolean
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
floor
private AvlNode<E> floor(Comparator<? super E> comparator, E e)
Comparator,E
AvlNode
com.google.common.collect.super.com.google.common.collect.Lists$StringAsImmutableList
subList
public ImmutableList<Character> subList(int fromIndex, int toIndex)
int,int
ImmutableList
com.google.common.io.super.com.google.common.io.BaseEncoding
base32Hex
public static BaseEncoding base32Hex()
empty
BaseEncoding
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
inverse
public abstract ImmutableMultimap<V, K> inverse()
empty
ImmutableMultimap
com.google.common.math.super.com.google.common.math.DoubleMath
log2
public static double log2(double x)
double
double
com.google.common.collect.super.com.google.common.collect.ImmutableMapKeySet
ImmutableMapKeySet
ImmutableMapKeySet(ImmutableMap<K, V> map)
ImmutableMap
constructor
com.google.common.collect.super.com.google.common.collect.Maps
newConcurrentMap
public static ConcurrentMap<K, V> newConcurrentMap()
empty
ConcurrentMap
com.google.common.collect.super.com.google.common.collect.Multimaps$CustomMultimap
CustomMultimap
CustomMultimap(Map<K, Collection<V>> map, Supplier<? extends Collection<V>> factory)
Map,Supplier
constructor
com.google.common.collect.super.com.google.common.collect.Iterators
transform
T transform(F from)
F
T
com.google.common.primitives.super.com.google.common.primitives.Chars$CharArrayAsList
CharArrayAsList
CharArrayAsList(char[] array)
char[]
constructor
com.google.common.cache.super.com.google.common.cache.CacheBuilder
getExpireAfterWriteNanos
long getExpireAfterWriteNanos()
empty
long
com.google.common.collect.super.com.google.common.collect.SortedMultisets$ElementSet
comparator
public Comparator<? super E> comparator()
empty
Comparator
com.google.common.collect.super.com.google.common.collect.Sets
intersection
public static SetView<E> intersection(final Set<E> set1, final Set<?> set2)
Set,Set
SetView
com.google.common.io.super.com.google.common.io.BaseEncoding$StandardBaseEncoding
maxEncodedSize
int maxEncodedSize(int bytes)
int
int
com.google.common.collect.super.com.google.common.collect.Sets
newHashSet
public static HashSet<E> newHashSet(Iterator<? extends E> elements)
Iterator
HashSet
com.google.common.base.super.com.google.common.base.Splitter
on
public static Splitter on(final String separator)
String
Splitter
com.google.common.collect.super.com.google.common.collect.Iterables
concat
public static Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b)
Iterable,Iterable
Iterable
com.google.common.collect.super.com.google.common.collect.Maps
newLinkedHashMap
public static LinkedHashMap<K, V> newLinkedHashMap(Map<? extends K, ? extends V> map)
Map
LinkedHashMap
com.google.common.base.super.com.google.common.base.Splitter$SplittingIterator
separatorStart
abstract int separatorStart(int start)
int
int
com.google.common.collect.super.com.google.common.collect.Lists
listIteratorImpl
static ListIterator<E> listIteratorImpl(List<E> list, int index)
List,int
ListIterator
com.google.common.collect.super.com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet
RegularEntrySet
RegularEntrySet(ImmutableMap<K, V> map, Entry<K, V>[] entries)
ImmutableMap,Entry[]
constructor
com.google.common.base.super.com.google.common.base.Splitter$MapSplitter
split
public Map<String, String> split(CharSequence sequence)
CharSequence
Map
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
ImmutableMultimap
ImmutableMultimap(ImmutableMap<K, ? extends ImmutableCollection<V>> map, int size)
ImmutableMap,int
constructor
com.google.common.primitives.super.com.google.common.primitives.Ints
saturatedCast
public static int saturatedCast(long value)
long
int
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSortedSet
SynchronizedSortedSet
SynchronizedSortedSet(SortedSet<E> delegate, @Nullable Object mutex)
SortedSet,Object
constructor
com.google.common.math.super.com.google.common.math.LongMath
fitsInInt
static boolean fitsInInt(long x)
long
boolean
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
entries
public ImmutableSet<Entry<K, V>> entries()
empty
ImmutableSet
com.google.common.primitives.super.com.google.common.primitives.Ints
indexOf
public static int indexOf(int[] array, int target)
int[],int
int
com.google.common.base.super.com.google.common.base.Predicates$CompositionPredicate
CompositionPredicate
private CompositionPredicate(Predicate<B> p, Function<A, ? extends B> f)
Predicate,Function
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableAsList
delegateCollection
abstract ImmutableCollection<E> delegateCollection()
empty
ImmutableCollection
com.google.common.collect.super.com.google.common.collect.ArrayTable$ColumnMap
put
public Map<R, V> put(C key, Map<R, V> value)
C,Map
Map
com.google.common.util.concurrent.super.com.google.common.util.concurrent.ImmediateFuture
cancel
public boolean cancel(boolean mayInterruptIfRunning)
boolean
boolean
com.google.common.collect.super.com.google.common.collect.FluentIterable
append
public final FluentIterable<E> append(Iterable<? extends E> other)
Iterable
FluentIterable
com.google.common.collect.super.com.google.common.collect.Multimaps
equalsImpl
static boolean equalsImpl(Multimap<?, ?> multimap, @Nullable Object object)
Multimap,Object
boolean
com.google.common.collect.super.com.google.common.collect.Iterators
previous
public Object previous()
empty
Object
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedList
WrappedList
WrappedList(@Nullable K key, List<V> delegate, @Nullable WrappedCollection ancestor)
K,List,WrappedCollection
constructor
com.google.common.collect.super.com.google.common.collect.SortedMultisets$ElementSet
last
public E last()
empty
E
com.google.common.base.super.com.google.common.base.Stopwatch
createStarted
public static Stopwatch createStarted()
empty
Stopwatch
com.google.common.collect.super.com.google.common.collect.Maps
filterKeys
public static BiMap<K, V> filterKeys(BiMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)
BiMap,Predicate
BiMap
com.google.common.collect.super.com.google.common.collect.Maps
transform
Entry<K, V> transform(final Entry<K, V> entry)
Entry
Entry
com.google.common.collect.super.com.google.common.collect.GenericMapMaker
makeComputingMap
abstract ConcurrentMap<K, V> makeComputingMap(Function<? super K, ? extends V> computingFunction)
Function
ConcurrentMap
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
of
public static ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)
K,V,K,V,K,V,K,V,K,V
ImmutableSetMultimap
com.google.common.collect.super.com.google.common.collect.Maps$AbstractFilteredMap
get
public V get(Object key)
Object
V
com.google.common.cache.super.com.google.common.cache.CacheBuilder
snapshot
public CacheStats snapshot()
empty
CacheStats
com.google.common.collect.super.com.google.common.collect.Lists$ReverseList
add
public void add(int index, @Nullable T element)
int,T
void
com.google.common.cache.super.com.google.common.cache.CacheBuilder
recordEviction
public void recordEviction()
empty
void
com.google.common.collect.super.com.google.common.collect.Sets
cartesianProduct
public static Set<List<B>> cartesianProduct(List<? extends Set<? extends B>> sets)
List
Set
com.google.common.primitives.super.com.google.common.primitives.Shorts$ShortArrayAsList
get
public Short get(int index)
int
Short
com.google.common.primitives.super.com.google.common.primitives.Chars
contains
public static boolean contains(char[] array, char target)
char[],char
boolean
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
valueOf
public static UnsignedInteger valueOf(long value)
long
UnsignedInteger
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultiset
add
public int add(E e, int n)
E,int
int
com.google.common.collect.super.com.google.common.collect.ArrayTable$ArrayMap
containsKey
public boolean containsKey(@Nullable Object key)
Object
boolean
com.google.common.collect.super.com.google.common.collect.ContiguousSet
ContiguousSet
ContiguousSet(DiscreteDomain<C> domain)
DiscreteDomain
constructor
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap
createCollection
Collection<V> createCollection(K key)
K
Collection
com.google.common.base.super.com.google.common.base.CharMatcher
forPredicate
public static CharMatcher forPredicate(final Predicate<? super Character> predicate)
Predicate
CharMatcher
com.google.common.cache.super.com.google.common.cache.CacheBuilder
recordHits
public void recordHits(int count)
int
void
com.google.common.collect.super.com.google.common.collect.SortedMultisets$ElementSet
ElementSet
ElementSet(SortedMultiset<E> multiset)
SortedMultiset
constructor
com.google.common.collect.super.com.google.common.collect.Sets$SubSet
SubSet
SubSet(ImmutableMap<E, Integer> inputSet, int mask)
ImmutableMap,int
constructor
com.google.common.collect.super.com.google.common.collect.Maps$FilteredKeyMap
createKeySet
Set<K> createKeySet()
empty
Set
com.google.common.primitives.super.com.google.common.primitives.Chars$CharArrayAsList
set
public Character set(int index, Character element)
int,Character
Character
com.google.common.primitives.super.com.google.common.primitives.Doubles
indexOf
public static int indexOf(double[] array, double[] target)
double[],double[]
int
com.google.common.collect.super.com.google.common.collect.Maps$AsMapView
createValues
Collection<V> createValues()
empty
Collection
com.google.common.collect.super.com.google.common.collect.Sets$SetView
immutableCopy
public ImmutableSet<E> immutableCopy()
empty
ImmutableSet
com.google.common.primitives.super.com.google.common.primitives.Ints
lexicographicalComparator
public static Comparator<int[]> lexicographicalComparator()
empty
Comparator
com.google.common.collect.super.com.google.common.collect.Synchronized
listMultimap
static ListMultimap<K, V> listMultimap(ListMultimap<K, V> multimap, @Nullable Object mutex)
ListMultimap,Object
ListMultimap
com.google.common.collect.super.com.google.common.collect.ArrayTable
rowKeyList
public ImmutableList<R> rowKeyList()
empty
ImmutableList
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$Inverse
Inverse
private Inverse(Map<K, V> backward, AbstractBiMap<V, K> forward)
Map,AbstractBiMap
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
of
public static ImmutableMultiset<E> of(E element)
E
ImmutableMultiset
com.google.common.base.super.com.google.common.base.Predicates
apply
public boolean apply(@Nullable Object o)
Object
boolean
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
addCallback
public static void addCallback(final ListenableFuture<V> future, final FutureCallback<? super V> callback, Executor executor)
ListenableFuture,FutureCallback,Executor
void
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultimap
keys
public Multiset<K> keys()
empty
Multiset
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap
create
public static LinkedHashMultimap<K, V> create()
empty
LinkedHashMultimap
com.google.common.math.super.com.google.common.math.BigIntegerMath
listProduct
static BigInteger listProduct(List<BigInteger> nums, int start, int end)
List,int,int
BigInteger
com.google.common.base.super.com.google.common.base.Splitter
iterator
public Iterator<String> iterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.Iterators
retainAll
public static boolean retainAll(Iterator<?> removeFrom, Collection<?> elementsToRetain)
Iterator,Collection
boolean
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
getCopy
private List<V> getCopy(@Nullable Object key)
Object
List
com.google.common.collect.super.com.google.common.collect.Multimaps
unmodifiableSetMultimap
public static SetMultimap<K, V> unmodifiableSetMultimap(SetMultimap<K, V> delegate)
SetMultimap
SetMultimap
com.google.common.base.super.com.google.common.base.Enums$StringConverter
StringConverter
StringConverter(Class<T> enumClass)
Class
constructor
com.google.common.collect.super.com.google.common.collect.ArrayTable$RowMap
RowMap
private RowMap()
empty
constructor
com.google.common.base.super.com.google.common.base.Splitter
omitEmptyStrings
public Splitter omitEmptyStrings()
empty
Splitter
com.google.common.base.super.com.google.common.base.CharMatcher$Whitespace
Whitespace
Whitespace()
empty
constructor
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap
checkForComodification
private void checkForComodification()
empty
void
com.google.common.collect.super.com.google.common.collect.Maps
asEntryToValueFunction
static Function<Entry<K, V1>, V2> asEntryToValueFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)
EntryTransformer
Function
com.google.common.collect.super.com.google.common.collect.TreeMultimap
create
public static TreeMultimap<K, V> create(Comparator<? super K> keyComparator, Comparator<? super V> valueComparator)
Comparator,Comparator
TreeMultimap
com.google.common.collect.super.com.google.common.collect.ImmutableListMultimap
ImmutableListMultimap
ImmutableListMultimap(ImmutableMap<K, ImmutableList<V>> map, int size)
ImmutableMap,int
constructor
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
balanceFactor
private int balanceFactor()
empty
int
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMap
delegate
Map<K, V> delegate()
empty
Map
com.google.common.collect.super.com.google.common.collect.ArrayTable
put
public V put(R rowKey, C columnKey, @Nullable V value)
R,C,V
V
com.google.common.primitives.super.com.google.common.primitives.Ints
contains
public static boolean contains(int[] array, int target)
int[],int
boolean
com.google.common.primitives.super.com.google.common.primitives.Shorts
compare
public static int compare(short a, short b)
short,short
int
com.google.common.math.super.com.google.common.math.LongMath
isPowerOfTwo
public static boolean isPowerOfTwo(long x)
long
boolean
com.google.common.collect.super.com.google.common.collect.Maps
filterKeys
public static SortedMap<K, V> filterKeys(SortedMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)
SortedMap,Predicate
SortedMap
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset$Builder
addAll
public Builder<E> addAll(Iterator<? extends E> elements)
Iterator
Builder
com.google.common.collect.super.com.google.common.collect.HashMultiset
HashMultiset
private HashMultiset(int distinctElements)
int
constructor
com.google.common.base.super.com.google.common.base.CharMatcher
countIn
public int countIn(CharSequence sequence)
CharSequence
int
com.google.common.collect.super.com.google.common.collect.ArrayTable$ArrayMap
ArrayMap
private ArrayMap(ImmutableMap<K, Integer> keyIndex)
ImmutableMap
constructor
com.google.common.base.super.com.google.common.base.Splitter
Splitter
private Splitter(Strategy strategy, boolean omitEmptyStrings, CharMatcher trimmer, int limit)
Strategy,boolean,CharMatcher,int
constructor
com.google.common.primitives.super.com.google.common.primitives.Chars
asList
public static List<Character> asList(char... backingArray)
char...
List
com.google.common.collect.super.com.google.common.collect.Maps
containsKeyImpl
static boolean containsKeyImpl(Map<?, ?> map, @Nullable Object key)
Map,Object
boolean
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
createKeys
ImmutableMultiset<K> createKeys()
empty
ImmutableMultiset
com.google.common.math.super.com.google.common.math.DoubleMath
fuzzyCompare
public static int fuzzyCompare(double a, double b, double tolerance)
double,double,double
int
com.google.common.collect.super.com.google.common.collect.Iterators
removeAll
public static boolean removeAll(Iterator<?> removeFrom, Collection<?> elementsToRemove)
Iterator,Collection
boolean
com.google.common.primitives.super.com.google.common.primitives.Floats
indexOf
public static int indexOf(float[] array, float[] target)
float[],float[]
int
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
getEntry
abstract Entry<E> getEntry(int index)
int
Entry
com.google.common.collect.super.com.google.common.collect.EnumMultiset
EnumMultiset
private EnumMultiset(Class<E> type)
Class
constructor
com.google.common.collect.super.com.google.common.collect.Lists
charactersOf
public static List<Character> charactersOf(CharSequence sequence)
CharSequence
List
com.google.common.collect.super.com.google.common.collect.Iterators
mergeSorted
public static UnmodifiableIterator<T> mergeSorted(Iterable<? extends Iterator<? extends T>> iterators, Comparator<? super T> comparator)
Iterable,Comparator
UnmodifiableIterator
com.google.common.collect.super.com.google.common.collect.Maps$MapDifferenceImpl
equals
public boolean equals(Object object)
Object
boolean
com.google.common.collect.super.com.google.common.collect.Multimaps$CustomSetMultimap
CustomSetMultimap
CustomSetMultimap(Map<K, Collection<V>> map, Supplier<? extends Set<V>> factory)
Map,Supplier
constructor
com.google.common.primitives.super.com.google.common.primitives.Floats$FloatArrayAsList
hashCode
public int hashCode()
empty
int
com.google.common.collect.super.com.google.common.collect.ArrayTable
rowKeySet
public ImmutableSet<R> rowKeySet()
empty
ImmutableSet
com.google.common.collect.super.com.google.common.collect.ArrayListMultimap
create
public static ArrayListMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)
int,int
ArrayListMultimap
com.google.common.collect.super.com.google.common.collect.Lists$StringAsImmutableList
indexOf
public int indexOf(@Nullable Object object)
Object
int
com.google.common.base.super.com.google.common.base.Predicates
and
public static Predicate<T> and(Iterable<? extends Predicate<? super T>> components)
Iterable
Predicate
com.google.common.base.super.com.google.common.base.Predicates
and
public static Predicate<T> and(Predicate<? super T>... components)
Predicate...
Predicate
com.google.common.collect.super.com.google.common.collect.FluentIterable
FluentIterable
FluentIterable(Iterable<E> iterable)
Iterable
constructor
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedListMultimap
replaceValues
public List<V> replaceValues(K key, Iterable<? extends V> values)
K,Iterable
List
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$ValueForKeyIterator
ValueForKeyIterator
ValueForKeyIterator(@Nullable Object key)
Object
constructor
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultiset
getAndSet
private static int getAndSet(Count i, int count)
Count,int
int
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
ceiling
private AvlNode<E> ceiling(Comparator<? super E> comparator, E e)
Comparator,E
AvlNode
com.google.common.primitives.super.com.google.common.primitives.Doubles$DoubleArrayAsList
DoubleArrayAsList
DoubleArrayAsList(double[] array)
double[]
constructor
com.google.common.collect.super.com.google.common.collect.Sets
newIdentityHashSet
public static Set<E> newIdentityHashSet()
empty
Set
com.google.common.io.super.com.google.common.io.BaseEncoding
base16
public static BaseEncoding base16()
empty
BaseEncoding
com.google.common.collect.super.com.google.common.collect.Iterators
next
public List<T> next()
empty
List
com.google.common.cache.super.com.google.common.cache.CacheBuilder
getInitialCapacity
int getInitialCapacity()
empty
int
com.google.common.collect.super.com.google.common.collect.Maps
unmodifiableEntry
static Entry<K, V> unmodifiableEntry(final Entry<? extends K, ? extends V> entry)
Entry
Entry
com.google.common.collect.super.com.google.common.collect.Iterators$PeekingImpl
next
public E next()
empty
E
com.google.common.collect.super.com.google.common.collect.Maps$SortedMapDifferenceImpl
SortedMapDifferenceImpl
SortedMapDifferenceImpl(SortedMap<K, V> onlyOnLeft, SortedMap<K, V> onlyOnRight, SortedMap<K, V> onBoth, SortedMap<K, ValueDifference<V>> differences)
SortedMap,SortedMap,SortedMap,SortedMap
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap$Builder
build
public ImmutableMultimap<K, V> build()
empty
ImmutableMultimap
com.google.common.primitives.super.com.google.common.primitives.Floats
ensureCapacity
public static float[] ensureCapacity(float[] array, int minLength, int padding)
float[],int,int
float[]
com.google.common.collect.super.com.google.common.collect.ArrayTable$Column
getValue
V getValue(int index)
int
V
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultiset
SynchronizedMultiset
SynchronizedMultiset(Multiset<E> delegate, @Nullable Object mutex)
Multiset,Object
constructor
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueSetLink
getSuccessorInValueSet
ValueSetLink<K, V> getSuccessorInValueSet()
empty
ValueSetLink
com.google.common.math.super.com.google.common.math.IntMath
checkedMultiply
public static int checkedMultiply(int a, int b)
int,int
int
com.google.common.collect.super.com.google.common.collect.Iterators
partitionImpl
private static UnmodifiableIterator<List<T>> partitionImpl(final Iterator<T> iterator, final int size, final boolean pad)
Iterator,int,boolean
UnmodifiableIterator
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
LinkedListMultimap
LinkedListMultimap()
empty
constructor
com.google.common.collect.super.com.google.common.collect.ArrayTable
columnKeyList
public ImmutableList<C> columnKeyList()
empty
ImmutableList
com.google.common.primitives.super.com.google.common.primitives.Doubles
compare
public int compare(double[] left, double[] right)
double[],double[]
int
com.google.common.collect.super.com.google.common.collect.Maps$MapDifferenceImpl
MapDifferenceImpl
MapDifferenceImpl(Map<K, V> onlyOnLeft, Map<K, V> onlyOnRight, Map<K, V> onBoth, Map<K, ValueDifference<V>> differences)
Map,Map,Map,Map
constructor
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueEntry
setSuccessorInMultimap
public void setSuccessorInMultimap(ValueEntry<K, V> multimapSuccessor)
ValueEntry
void
com.google.common.collect.super.com.google.common.collect.Multimaps$UnmodifiableListMultimap
delegate
public ListMultimap<K, V> delegate()
empty
ListMultimap
com.google.common.util.concurrent.super.com.google.common.util.concurrent.ImmediateFuture
get
public V get(long timeout, TimeUnit unit) throws ExecutionException
long,TimeUnit
V
com.google.common.collect.super.com.google.common.collect.Lists
newArrayListWithExpectedSize
public static ArrayList<E> newArrayListWithExpectedSize(int estimatedSize)
int
ArrayList
com.google.common.base.super.com.google.common.base.Stopwatch
Stopwatch
Stopwatch(Ticker ticker)
Ticker
constructor
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueEntry
matchesValue
boolean matchesValue(@Nullable Object v, int smearedVHash)
Object,int
boolean
com.google.common.collect.super.com.google.common.collect.Iterators
elementsEqual
public static boolean elementsEqual(Iterator<?> iterator1, Iterator<?> iterator2)
Iterator,Iterator
boolean
com.google.common.primitives.super.com.google.common.primitives.Ints$IntConverter
doBackward
protected String doBackward(Integer value)
Integer
String
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedList
listIterator
public ListIterator<V> listIterator()
empty
ListIterator
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
ImmutableMultiset
ImmutableMultiset()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSetMultimap
SynchronizedSetMultimap
SynchronizedSetMultimap(SetMultimap<K, V> delegate, @Nullable Object mutex)
SetMultimap,Object
constructor
com.google.common.collect.super.com.google.common.collect.Maps
transformEntries
public static SortedMap<K, V2> transformEntries(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)
SortedMap,EntryTransformer
SortedMap
com.google.common.collect.super.com.google.common.collect.EnumBiMap
keyType
public Class<K> keyType()
empty
Class
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedAsMapValues
SynchronizedAsMapValues
SynchronizedAsMapValues(Collection<Collection<V>> delegate, @Nullable Object mutex)
Collection,Object
constructor
com.google.common.collect.super.com.google.common.collect.Sets$CartesianSet
CartesianSet
private CartesianSet(ImmutableList<ImmutableSet<E>> axes, CartesianList<E> delegate)
ImmutableList,CartesianList
constructor
com.google.common.collect.super.com.google.common.collect.Iterables
concat
public static Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c, Iterable<? extends T> d)
Iterable,Iterable,Iterable,Iterable
Iterable
com.google.common.collect.super.com.google.common.collect.ArrayTable$Column
setValue
V setValue(int index, V newValue)
int,V
V
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
of
public static ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)
K,V,K,V,K,V,K,V
ImmutableSetMultimap
com.google.common.collect.super.com.google.common.collect.Lists$ReverseList
reverseIndex
private int reverseIndex(int index)
int
int
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$AsMap
createEntrySet
protected Set<Entry<K, Collection<V>>> createEntrySet()
empty
Set
com.google.common.collect.super.com.google.common.collect.Multimaps
newSortedSetMultimap
public static SortedSetMultimap<K, V> newSortedSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends SortedSet<V>> factory)
Map,Supplier
SortedSetMultimap
com.google.common.collect.super.com.google.common.collect.Maps
toStringImpl
static String toStringImpl(Map<?, ?> map)
Map
String
com.google.common.collect.super.com.google.common.collect.Maps$UnmodifiableEntrySet
UnmodifiableEntrySet
UnmodifiableEntrySet(Set<Entry<K, V>> entries)
Set
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableSortedAsList
ImmutableSortedAsList
ImmutableSortedAsList(ImmutableSortedSet<E> backingSet, ImmutableList<E> backingList)
ImmutableSortedSet,ImmutableList
constructor
com.google.common.collect.super.com.google.common.collect.Multimaps
asMap
public static Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)
SetMultimap
Map
com.google.common.collect.super.com.google.common.collect.TreeMultiset
entryIterator
Iterator<Entry<E>> entryIterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.Lists$TransformingSequentialList
TransformingSequentialList
TransformingSequentialList(List<F> fromList, Function<? super F, ? extends T> function)
List,Function
constructor
com.google.common.collect.super.com.google.common.collect.Sets$PowerSet
PowerSet
PowerSet(Set<E> input)
Set
constructor
com.google.common.primitives.super.com.google.common.primitives.Chars
toArray
public static char[] toArray(Collection<Character> collection)
Collection
char[]
com.google.common.primitives.super.com.google.common.primitives.Ints
join
public static String join(String separator, int... array)
String,int...
String
com.google.common.collect.super.com.google.common.collect.Multimaps$TransformedEntriesListMultimap
removeAll
public List<V2> removeAll(Object key)
Object
List
com.google.common.primitives.super.com.google.common.primitives.Shorts$ShortArrayAsList
ShortArrayAsList
ShortArrayAsList(short[] array, int start, int end)
short[],int,int
constructor
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
totalCount
private static long totalCount(@Nullable AvlNode<?> node)
AvlNode
long
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
recomputeHeight
private void recomputeHeight()
empty
void
com.google.common.cache.super.com.google.common.cache.CacheLoader$FunctionToCacheLoader
FunctionToCacheLoader
public FunctionToCacheLoader(Function<K, V> computingFunction)
Function
constructor
com.google.common.io.super.com.google.common.io.BaseEncoding$StandardBaseEncoding
withPadChar
public BaseEncoding withPadChar(char padChar)
char
BaseEncoding
com.google.common.collect.super.com.google.common.collect.Maps
keyPredicateOnEntries
static Predicate<Entry<K, ?>> keyPredicateOnEntries(Predicate<? super K> keyPredicate)
Predicate
Predicate
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap$Values
Values
Values(ImmutableMultimap<K, V> multimap)
ImmutableMultimap
constructor
com.google.common.collect.super.com.google.common.collect.ArrayListMultimap
createCollection
List<V> createCollection()
empty
List
com.google.common.math.super.com.google.common.math.DoubleMath
mean
public static double mean(int... values)
int...
double
com.google.common.base.super.com.google.common.base.CharMatcher$NamedFastMatcher
toString
public final String toString()
empty
String
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$EntrySet
iterator
public Iterator<Entry<K, V>> iterator()
empty
Iterator
com.google.common.primitives.super.com.google.common.primitives.Ints
checkedCast
public static int checkedCast(long value)
long
int
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$NodeIterator
previous
public Node<K, V> previous()
empty
Node
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap
replaceValues
public Set<V> replaceValues(@Nullable K key, Iterable<? extends V> values)
K,Iterable
Set
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap
create
public static LinkedHashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)
Multimap
LinkedHashMultimap
com.google.common.collect.super.com.google.common.collect.RegularContiguousSet
tailSetImpl
ContiguousSet<C> tailSetImpl(C fromElement, boolean inclusive)
C,boolean
ContiguousSet
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
removeAll
public Collection<V> removeAll(@Nullable Object key)
Object
Collection
com.google.common.collect.super.com.google.common.collect.FluentIterable
of
public static FluentIterable<E> of(@Nullable E element, E... elements)
E,E...
FluentIterable
com.google.common.cache.super.com.google.common.cache.CacheBuilder
getWeigher
Weigher<K1, V1> getWeigher()
empty
Weigher
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$Itr
Itr
Itr()
empty
constructor
com.google.common.collect.super.com.google.common.collect.ArrayListMultimap
ArrayListMultimap
private ArrayListMultimap(Multimap<? extends K, ? extends V> multimap)
Multimap
constructor
com.google.common.collect.super.com.google.common.collect.TreeMultiset
treeAggregate
long treeAggregate(@Nullable AvlNode<?> root)
AvlNode
long
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet
getSortedSetDelegate
SortedSet<V> getSortedSetDelegate()
empty
SortedSet
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet
SortedKeySet
SortedKeySet(SortedMap<K, Collection<V>> subMap)
SortedMap
constructor
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
entries
public Collection<Map.Entry<K, V>> entries()
empty
Collection
com.google.common.math.super.com.google.common.math.IntMath
lessThanBranchFree
static int lessThanBranchFree(int x, int y)
int,int
int
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap
succeedsInValueSet
private static void succeedsInValueSet(ValueSetLink<K, V> pred, ValueSetLink<K, V> succ)
ValueSetLink,ValueSetLink
void
com.google.common.primitives.super.com.google.common.primitives.Ints$IntArrayAsList
subList
public List<Integer> subList(int fromIndex, int toIndex)
int,int
List
com.google.common.collect.super.com.google.common.collect.Lists
lastIndexOfImpl
static int lastIndexOfImpl(List<?> list, @Nullable Object element)
List,Object
int
com.google.common.io.super.com.google.common.io.BaseEncoding
append
public Appendable append(char c) throws IOException
char
Appendable
com.google.common.collect.super.com.google.common.collect.Maps
unmodifiableOrNull
private static Entry<K, V> unmodifiableOrNull(@Nullable Entry<K, V> entry)
Entry
Entry
com.google.common.collect.super.com.google.common.collect.Maps
hasNext
public boolean hasNext()
empty
boolean
com.google.common.collect.super.com.google.common.collect.ArrayTable$Row
Row
Row(int rowIndex)
int
constructor
com.google.common.primitives.super.com.google.common.primitives.Ints
asList
public static List<Integer> asList(int... backingArray)
int...
List
com.google.common.collect.super.com.google.common.collect.GenericMapMaker
GenericMapMaker
GenericMapMaker()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultiset
setCount
public int setCount(E element, int count)
E,int
int
com.google.common.collect.super.com.google.common.collect.Sets
newSetFromMap
public static Set<E> newSetFromMap(Map<E, Boolean> map)
Map
Set
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap$Builder
orderValuesBy
public Builder<K, V> orderValuesBy(Comparator<? super V> valueComparator)
Comparator
Builder
com.google.common.util.concurrent.super.com.google.common.util.concurrent.ImmediateFuture$ImmediateSuccessfulFuture
get
public V get()
empty
V
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueEntry
ValueEntry
ValueEntry(@Nullable K key, @Nullable V value, int smearedValueHash, @Nullable ValueEntry<K, V> nextInValueBucket)
K,V,int,ValueEntry
constructor
com.google.common.collect.super.com.google.common.collect.TreeMultiset
TreeMultiset
TreeMultiset(Reference<AvlNode<E>> rootReference, GeneralRange<E> range, AvlNode<E> endLink)
Reference,GeneralRange,AvlNode
constructor
com.google.common.util.concurrent.super.com.google.common.util.concurrent.CollectionFuture$CollectionFutureRunningState
handleAllCompleted
final void handleAllCompleted()
empty
void
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet
sortedMap
SortedMap<K, Collection<V>> sortedMap()
empty
SortedMap
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultiset
delegate
Multiset<E> delegate()
empty
Multiset
com.google.common.collect.super.com.google.common.collect.ObjectArrays
ObjectArrays
private ObjectArrays()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Multimaps$KeysEntrySet
iterator
public Iterator<Multiset.Entry<K>> iterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedIterator
WrappedIterator
WrappedIterator()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Maps
difference
public static SortedMapDifference<K, V> difference(SortedMap<K, ? extends V> left, Map<? extends K, ? extends V> right)
SortedMap,Map
SortedMapDifference
com.google.common.collect.super.com.google.common.collect.Iterators
hasPrevious
public boolean hasPrevious()
empty
boolean
com.google.common.base.super.com.google.common.base.CharMatcher
trimAndCollapseFrom
public String trimAndCollapseFrom(CharSequence sequence, char replacement)
CharSequence,char
String
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$AsMap
AsMap
AsMap(Map<K, Collection<V>> submap)
Map
constructor
com.google.common.cache.super.com.google.common.cache.CacheLoader$InvalidCacheLoadException
InvalidCacheLoadException
public InvalidCacheLoadException(String message)
String
constructor
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
removeAllNodes
private void removeAllNodes(@Nullable Object key)
Object
void
com.google.common.base.super.com.google.common.base.CharMatcher
trimFrom
public String trimFrom(CharSequence sequence)
CharSequence
String
com.google.common.collect.super.com.google.common.collect.Sets
newConcurrentHashSet
public static Set<E> newConcurrentHashSet()
empty
Set
com.google.common.io.super.com.google.common.io.BaseEncoding
base32
public static BaseEncoding base32()
empty
BaseEncoding
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$ValueSet
toArray
public Object[] toArray()
empty
Object[]
com.google.common.primitives.super.com.google.common.primitives.Shorts$ShortArrayAsList
set
public Short set(int index, Short element)
int,Short
Short
com.google.common.collect.super.com.google.common.collect.Multimaps
unmodifiableSortedSetMultimap
public static SortedSetMultimap<K, V> unmodifiableSortedSetMultimap(SortedSetMultimap<K, V> delegate)
SortedSetMultimap
SortedSetMultimap
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
removeAll
public List<V> removeAll(@Nullable Object key)
Object
List
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
UnsignedInteger
private UnsignedInteger(int value)
int
constructor
com.google.common.primitives.super.com.google.common.primitives.Doubles$DoubleArrayAsList
toDoubleArray
double[] toDoubleArray()
empty
double[]
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset$Builder
Builder
Builder(Multiset<E> contents)
Multiset
constructor
com.google.common.io.super.com.google.common.io.BaseEncoding
lowerCase
public abstract BaseEncoding lowerCase()
empty
BaseEncoding
com.google.common.base.super.com.google.common.base.CharMatcher
isNot
public static CharMatcher isNot(final char match)
char
CharMatcher
com.google.common.collect.super.com.google.common.collect.Multimaps
apply
public Collection<V> apply(K key)
K
Collection
com.google.common.collect.super.com.google.common.collect.Synchronized
transform
Map.Entry<K, Collection<V>> transform(final Map.Entry<K, Collection<V>> entry)
Map.Entry
Map.Entry
com.google.common.primitives.super.com.google.common.primitives.Shorts
concat
public static short[] concat(short[]... arrays)
short[]...
short[]
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedList
subList
public List<E> subList(int fromIndex, int toIndex)
int,int
List
com.google.common.primitives.super.com.google.common.primitives.Floats$FloatArrayAsList
indexOf
public int indexOf(Object target)
Object
int
com.google.common.primitives.super.com.google.common.primitives.Floats
lexicographicalComparator
public static Comparator<float[]> lexicographicalComparator()
empty
Comparator
com.google.common.base.super.com.google.common.base.Splitter
withKeyValueSeparator
public MapSplitter withKeyValueSeparator(char separator)
char
MapSplitter
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedList
subList
public List<V> subList(int fromIndex, int toIndex)
int,int
List
com.google.common.collect.super.com.google.common.collect.Iterators
Iterators
private Iterators()
empty
constructor
com.google.common.collect.super.com.google.common.collect.ArrayListMultimap
ArrayListMultimap
private ArrayListMultimap(int expectedKeys, int expectedValuesPerKey)
int,int
constructor
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
removeFromBothMaps
private V removeFromBothMaps(Object key)
Object
V
com.google.common.collect.super.com.google.common.collect.Maps
transformEntry
static Entry<K, V2> transformEntry(final EntryTransformer<? super K, ? super V1, V2> transformer, final Entry<K, V1> entry)
EntryTransformer,Entry
Entry
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedListMultimap
delegate
ListMultimap<K, V> delegate()
empty
ListMultimap
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
fromIntBits
public static UnsignedInteger fromIntBits(int bits)
int
UnsignedInteger
com.google.common.primitives.super.com.google.common.primitives.Shorts$ShortConverter
doBackward
protected String doBackward(Short value)
Short
String
com.google.common.base.super.com.google.common.base.Splitter$Strategy
iterator
Iterator<String> iterator(Splitter splitter, CharSequence toSplit)
Splitter,CharSequence
Iterator
com.google.common.base.super.com.google.common.base.CharMatcher$Digit
Digit
private Digit()
empty
constructor
com.google.common.collect.super.com.google.common.collect.RegularContiguousSet
intersectionInCurrentDomain
private ContiguousSet<C> intersectionInCurrentDomain(Range<C> other)
Range
ContiguousSet
com.google.common.base.super.com.google.common.base.Predicates$InPredicate
InPredicate
private InPredicate(Collection<?> target)
Collection
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
keys
public ImmutableMultiset<K> keys()
empty
ImmutableMultiset
com.google.common.cache.super.com.google.common.cache.CacheLoader$SupplierToCacheLoader
load
public V load(Object key)
Object
V
com.google.common.collect.super.com.google.common.collect.EnumMultiset
create
public static EnumMultiset<E> create(Iterable<E> elements, Class<E> type)
Iterable,Class
EnumMultiset
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedList
listIterator
public ListIterator<E> listIterator()
empty
ListIterator
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
backingMap
Map<K, Collection<V>> backingMap()
empty
Map
com.google.common.collect.super.com.google.common.collect.ArrayTable
getColumnKey
public C getColumnKey()
empty
C
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueEntry
getPredecessorInValueSet
public ValueSetLink<K, V> getPredecessorInValueSet()
empty
ValueSetLink
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueSet
rehashIfNecessary
private void rehashIfNecessary()
empty
void
com.google.common.collect.super.com.google.common.collect.Iterators
consumingIterator
public static Iterator<T> consumingIterator(final Iterator<T> iterator)
Iterator
Iterator
com.google.common.primitives.super.com.google.common.primitives.Ints
ensureCapacity
public static int[] ensureCapacity(int[] array, int minLength, int padding)
int[],int,int
int[]
com.google.common.collect.super.com.google.common.collect.Iterables
iterators
private static Iterator<Iterator<? extends T>> iterators(Iterable<? extends Iterable<? extends T>> iterables)
Iterable
Iterator
com.google.common.collect.super.com.google.common.collect.Lists$TransformingRandomAccessList
remove
public T remove(int index)
int
T
com.google.common.collect.super.com.google.common.collect.Maps
keyFunction
static Function<Entry<K, ?>, K> keyFunction()
empty
Function
com.google.common.collect.super.com.google.common.collect.Maps$SortedAsMapView
firstKey
public K firstKey()
empty
K
com.google.common.collect.super.com.google.common.collect.EnumHashBiMap
create
public static EnumHashBiMap<K, V> create(Map<K, ? extends V> map)
Map
EnumHashBiMap
com.google.common.base.super.com.google.common.base.CharMatcher
javaLetter
public static CharMatcher javaLetter()
empty
CharMatcher
com.google.common.collect.super.com.google.common.collect.TreeMultimap
TreeMultimap
private TreeMultimap(Comparator<? super K> keyComparator, Comparator<? super V> valueComparator, Multimap<? extends K, ? extends V> multimap)
Comparator,Comparator,Multimap
constructor
com.google.common.collect.super.com.google.common.collect.Multimaps
filterFiltered
private static Multimap<K, V> filterFiltered(FilteredMultimap<K, V> multimap, Predicate<? super Entry<K, V>> entryPredicate)
FilteredMultimap,Predicate
Multimap
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
transform
public static ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)
ListenableFuture,AsyncFunction,Executor
ListenableFuture
com.google.common.collect.super.com.google.common.collect.Sets$CartesianSet
delegate
protected Collection<List<E>> delegate()
empty
Collection
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$KeyList
KeyList
KeyList(Node<K, V> firstNode)
Node
constructor
com.google.common.base.super.com.google.common.base.Splitter
iterator
public SplittingIterator iterator(Splitter splitter, final CharSequence toSplit)
Splitter,CharSequence
SplittingIterator
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueSetLink
getPredecessorInValueSet
ValueSetLink<K, V> getPredecessorInValueSet()
empty
ValueSetLink
com.google.common.base.super.com.google.common.base.Stopwatch
abbreviate
private static String abbreviate(TimeUnit unit)
TimeUnit
String
com.google.common.collect.super.com.google.common.collect.TreeMultimap
create
public static TreeMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)
Multimap
TreeMultimap
com.google.common.collect.super.com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap
UnmodifiableSortedSetMultimap
UnmodifiableSortedSetMultimap(SortedSetMultimap<K, V> delegate)
SortedSetMultimap
constructor
com.google.common.collect.super.com.google.common.collect.ArrayTable
at
public V at(int rowIndex, int columnIndex)
int,int
V
com.google.common.collect.super.com.google.common.collect.Iterables
getFirst
public static T getFirst(Iterable<? extends T> iterable, @Nullable T defaultValue)
Iterable,T
T
com.google.common.primitives.super.com.google.common.primitives.Ints
indexOf
public static int indexOf(int[] array, int[] target)
int[],int[]
int
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
delegate
protected Map<K, V> delegate()
empty
Map
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
getOrCreateCollection
private Collection<V> getOrCreateCollection(@Nullable K key)
K
Collection
com.google.common.io.super.com.google.common.io.BaseEncoding
decodeTo
abstract int decodeTo(byte[] target, CharSequence chars) throws DecodingException
byte[],CharSequence
int
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection
getKey
K getKey()
empty
K
com.google.common.cache.super.com.google.common.cache.CacheBuilder
getExpireAfterAccessNanos
long getExpireAfterAccessNanos()
empty
long
com.google.common.io.super.com.google.common.io.BaseEncoding
decodeChecked
final byte[] decodeChecked(CharSequence chars) throws DecodingException
CharSequence
byte[]
com.google.common.collect.super.com.google.common.collect.Maps$MapDifferenceImpl
entriesOnlyOnLeft
public Map<K, V> entriesOnlyOnLeft()
empty
Map
com.google.common.collect.super.com.google.common.collect.Multimaps$TransformedEntriesListMultimap
TransformedEntriesListMultimap
TransformedEntriesListMultimap(ListMultimap<K, V1> fromMultimap, EntryTransformer<? super K, ? super V1, V2> transformer)
ListMultimap,EntryTransformer
constructor
com.google.common.collect.super.com.google.common.collect.Iterators
emptyModifiableIterator
static Iterator<T> emptyModifiableIterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.Iterables
indexOf
public static int indexOf(Iterable<T> iterable, Predicate<? super T> predicate)
Iterable,Predicate
int
com.google.common.primitives.super.com.google.common.primitives.Floats
isFinite
public static boolean isFinite(float value)
float
boolean
com.google.common.collect.super.com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet
createAsList
ImmutableList<Entry<K, V>> createAsList()
empty
ImmutableList
com.google.common.primitives.super.com.google.common.primitives.Ints
tryParse
public static Integer tryParse(String string)
String
Integer
com.google.common.cache.super.com.google.common.cache.CacheBuilder
getTicker
Ticker getTicker(boolean recordsTime)
boolean
Ticker
com.google.common.collect.super.com.google.common.collect.Maps$AsMapView
backingSet
Set<K> backingSet()
empty
Set
com.google.common.collect.super.com.google.common.collect.TreeMultiset
create
public static TreeMultiset<E> create(Iterable<? extends E> elements)
Iterable
TreeMultiset
com.google.common.collect.super.com.google.common.collect.EmptyContiguousSet
range
public Range<C> range()
empty
Range
com.google.common.primitives.super.com.google.common.primitives.Floats$FloatArrayAsList
get
public Float get(int index)
int
Float
com.google.common.collect.super.com.google.common.collect.HashMultiset
create
public static HashMultiset<E> create()
empty
HashMultiset
com.google.common.collect.super.com.google.common.collect.Maps
unmodifiableBiMap
public static BiMap<K, V> unmodifiableBiMap(BiMap<? extends K, ? extends V> bimap)
BiMap
BiMap
com.google.common.io.super.com.google.common.io.BaseEncoding$Alphabet
hasLowerCase
private boolean hasLowerCase()
empty
boolean
com.google.common.collect.super.com.google.common.collect.Maps$EntryTransformer
transformEntry
V2 transformEntry(@Nullable K key, @Nullable V1 value)
K,V1
V2
com.google.common.io.super.com.google.common.io.BaseEncoding$Alphabet
hasUpperCase
private boolean hasUpperCase()
empty
boolean
com.google.common.collect.super.com.google.common.collect.Iterables$UnmodifiableIterable
UnmodifiableIterable
private UnmodifiableIterable(Iterable<T> iterable)
Iterable
constructor
com.google.common.collect.super.com.google.common.collect.Iterables
find
public static T find(Iterable<? extends T> iterable, Predicate<? super T> predicate, @Nullable T defaultValue)
Iterable,Predicate,T
T
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
updateInverseMap
private void updateInverseMap(K key, boolean containedKey, V oldValue, V newValue)
K,boolean,V,V
void
com.google.common.collect.super.com.google.common.collect.Maps
asEntryTransformer
static EntryTransformer<K, V1, V2> asEntryTransformer(final Function<? super V1, V2> function)
Function
EntryTransformer
com.google.common.collect.super.com.google.common.collect.Maps
newLinkedHashMap
public static LinkedHashMap<K, V> newLinkedHashMap()
empty
LinkedHashMap
com.google.common.collect.super.com.google.common.collect.Maps
apply
public boolean apply(Entry<V, K> input)
Entry
boolean
com.google.common.base.super.com.google.common.base.Stopwatch
Stopwatch
Stopwatch()
empty
constructor
com.google.common.base.super.com.google.common.base.Enums
stringConverter
public static Converter<String, T> stringConverter(final Class<T> enumClass)
Class
Converter
com.google.common.collect.super.com.google.common.collect.Iterables
retainAll
public static boolean retainAll(Iterable<?> removeFrom, Collection<?> elementsToRetain)
Iterable,Collection
boolean
com.google.common.collect.super.com.google.common.collect.Maps
filterKeys
public static Map<K, V> filterKeys(Map<K, V> unfiltered, final Predicate<? super K> keyPredicate)
Map,Predicate
Map
com.google.common.primitives.super.com.google.common.primitives.Shorts
compare
public int compare(short[] left, short[] right)
short[],short[]
int
com.google.common.collect.super.com.google.common.collect.FluentIterable
from
public static FluentIterable<E> from(FluentIterable<E> iterable)
FluentIterable
FluentIterable
com.google.common.collect.super.com.google.common.collect.EnumBiMap
valueType
public Class<V> valueType()
empty
Class
com.google.common.collect.super.com.google.common.collect.ArrayTable
create
public static ArrayTable<R, C, V> create(Iterable<? extends R> rowKeys, Iterable<? extends C> columnKeys)
Iterable,Iterable
ArrayTable
com.google.common.primitives.super.com.google.common.primitives.Ints
Ints
private Ints()
empty
constructor
com.google.common.base.super.com.google.common.base.Splitter
trimResults
public Splitter trimResults(CharMatcher trimmer)
CharMatcher
Splitter
com.google.common.collect.super.com.google.common.collect.Multimaps$TransformedEntriesMultimap
createAsMap
Map<K, Collection<V2>> createAsMap()
empty
Map
com.google.common.collect.super.com.google.common.collect.Maps
asEntryToEntryFunction
static Function<Entry<K, V1>, Entry<K, V2>> asEntryToEntryFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)
EntryTransformer
Function
com.google.common.collect.super.com.google.common.collect.Maps
doDifference
private static void doDifference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right, Equivalence<? super V> valueEquivalence, Map<K, V> onlyOnLeft, Map<K, V> onlyOnRight, Map<K, V> onBoth, Map<K, MapDifference.ValueDifference<V>> differences)
Map,Map,Equivalence,Map,Map,Map,Map
void
com.google.common.collect.super.com.google.common.collect.Lists
newArrayList
public static ArrayList<E> newArrayList()
empty
ArrayList
com.google.common.collect.super.com.google.common.collect.Lists$TwoPlusArrayList
TwoPlusArrayList
TwoPlusArrayList(@Nullable E first, @Nullable E second, E[] rest)
E,E,E[]
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
of
public static ImmutableMultiset<E> of(E e1, E e2, E e3)
E,E,E
ImmutableMultiset
com.google.common.collect.super.com.google.common.collect.EnumBiMap
create
public static EnumBiMap<K, V> create(Map<K, V> map)
Map
EnumBiMap
com.google.common.primitives.super.com.google.common.primitives.Shorts
toArray
public static short[] toArray(Collection<? extends Number> collection)
Collection
short[]
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$NodeIterator
add
public void add(Entry<K, V> e)
Entry
void
com.google.common.math.super.com.google.common.math.IntMath
sqrtFloor
private static int sqrtFloor(int x)
int
int
com.google.common.collect.super.com.google.common.collect.Iterators$PeekingImpl
PeekingImpl
public PeekingImpl(Iterator<? extends E> iterator)
Iterator
constructor
com.google.common.collect.super.com.google.common.collect.Multimaps
transformEntries
public static ListMultimap<K, V2> transformEntries(ListMultimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)
ListMultimap,EntryTransformer
ListMultimap
com.google.common.collect.super.com.google.common.collect.EnumBiMap
inferValueType
private static Class<V> inferValueType(Map<?, V> map)
Map
Class
com.google.common.io.super.com.google.common.io.BaseEncoding$StandardBaseEncoding
lowerCase
public BaseEncoding lowerCase()
empty
BaseEncoding
com.google.common.collect.super.com.google.common.collect.EmptyContiguousSet
subSetImpl
ContiguousSet<C> subSetImpl(C fromElement, boolean fromInclusive, C toElement, boolean toInclusive)
C,boolean,C,boolean
ContiguousSet
com.google.common.collect.super.com.google.common.collect.ImmutableMapValues
get
public V get(int index)
int
V
com.google.common.base.super.com.google.common.base.Splitter
withKeyValueSeparator
public MapSplitter withKeyValueSeparator(Splitter keyValueSplitter)
Splitter
MapSplitter
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
remove
public final int remove(Object element, int occurrences)
Object,int
int
com.google.common.primitives.super.com.google.common.primitives.Ints
stringConverter
public static Converter<String, Integer> stringConverter()
empty
Converter
com.google.common.collect.super.com.google.common.collect.EnumHashBiMap
create
public static EnumHashBiMap<K, V> create(Class<K> keyType)
Class
EnumHashBiMap
com.google.common.collect.super.com.google.common.collect.Maps
keyOrNull
static K keyOrNull(@Nullable Entry<K, ?> entry)
Entry
K
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap
headMap
public SortedMap<K, Collection<V>> headMap(K toKey)
K
SortedMap
com.google.common.collect.super.com.google.common.collect.EnumHashBiMap
EnumHashBiMap
private EnumHashBiMap(Class<K> keyType)
Class
constructor
com.google.common.collect.super.com.google.common.collect.LinkedHashMultiset
create
public static LinkedHashMultiset<E> create(int distinctElements)
int
LinkedHashMultiset
com.google.common.collect.super.com.google.common.collect.SortedMultisets$ElementSet
tailSet
public SortedSet<E> tailSet(E fromElement)
E
SortedSet
com.google.common.collect.super.com.google.common.collect.Lists$RandomAccessPartition
RandomAccessPartition
RandomAccessPartition(List<T> list, int size)
List,int
constructor
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
withFallback
public static ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback, Executor executor)
ListenableFuture,FutureFallback,Executor
ListenableFuture
com.google.common.base.super.com.google.common.base.CharMatcher
singleWidth
public static CharMatcher singleWidth()
empty
CharMatcher
com.google.common.collect.super.com.google.common.collect.Maps$FilteredEntryMap
FilteredEntryMap
FilteredEntryMap(Map<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)
Map,Predicate
constructor
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedAsMap
entrySet
public Set<Map.Entry<K, Collection<V>>> entrySet()
empty
Set
com.google.common.base.super.com.google.common.base.CharMatcher$Digit
nines
private static char[] nines()
empty
char[]
com.google.common.cache.super.com.google.common.cache.CacheBuilder
getKeyStrength
Strength getKeyStrength()
empty
Strength
com.google.common.base.super.com.google.common.base.CharMatcher
trimLeadingFrom
public String trimLeadingFrom(CharSequence sequence)
CharSequence
String
com.google.common.collect.super.com.google.common.collect.TreeMultiset
next
public Entry<E> next()
empty
Entry
com.google.common.collect.super.com.google.common.collect.Maps$UnmodifiableBiMap
forcePut
public V forcePut(K key, V value)
K,V
V
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm
EntrySetSerializedForm
EntrySetSerializedForm(ImmutableMultiset<E> multiset)
ImmutableMultiset
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
builder
public static Builder<K, V> builder()
empty
Builder
com.google.common.primitives.super.com.google.common.primitives.Chars
hashCode
public static int hashCode(char value)
char
int
com.google.common.collect.super.com.google.common.collect.HashMultimap
create
public static HashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)
int,int
HashMultimap
com.google.common.collect.super.com.google.common.collect.Maps
getValue
public V getValue()
empty
V
com.google.common.collect.super.com.google.common.collect.Iterables
contains
public static boolean contains(Iterable<?> iterable, @Nullable Object element)
Iterable,Object
boolean
com.google.common.collect.super.com.google.common.collect.Iterables
cycle
public static Iterable<T> cycle(final Iterable<T> iterable)
Iterable
Iterable
com.google.common.collect.super.com.google.common.collect.Iterators
tryFind
public static Optional<T> tryFind(Iterator<T> iterator, Predicate<? super T> predicate)
Iterator,Predicate
Optional
com.google.common.collect.super.com.google.common.collect.Multimaps$TransformedEntriesMultimap
get
public Collection<V2> get(final K key)
K
Collection
com.google.common.primitives.super.com.google.common.primitives.Doubles$DoubleArrayAsList
DoubleArrayAsList
DoubleArrayAsList(double[] array, int start, int end)
double[],int,int
constructor
com.google.common.collect.super.com.google.common.collect.TreeMultimap
keyComparator
public Comparator<? super K> keyComparator()
empty
Comparator
com.google.common.collect.super.com.google.common.collect.Iterators
concat
public static Iterator<T> concat(Iterator<? extends T>... inputs)
Iterator...
Iterator
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedList
remove
public V remove(int index)
int
V
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
entrySet
public ImmutableSet<Entry<E>> entrySet()
empty
ImmutableSet
com.google.common.collect.super.com.google.common.collect.ImmutableMapValues
delegateCollection
ImmutableCollection<V> delegateCollection()
empty
ImmutableCollection
com.google.common.collect.super.com.google.common.collect.Multimaps$CustomListMultimap
createCollection
protected List<V> createCollection()
empty
List
com.google.common.collect.super.com.google.common.collect.ImmutableMapEntrySet
contains
public boolean contains(@Nullable Object object)
Object
boolean
com.google.common.collect.super.com.google.common.collect.Multimaps
newSetMultimap
public static SetMultimap<K, V> newSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends Set<V>> factory)
Map,Supplier
SetMultimap
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedQueue
element
public E element()
empty
E
com.google.common.collect.super.com.google.common.collect.Iterables
unmodifiableIterable
public static Iterable<T> unmodifiableIterable(final Iterable<T> iterable)
Iterable
Iterable
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet
first
public V first()
empty
V
com.google.common.collect.super.com.google.common.collect.Multimaps
filterEntries
public static SetMultimap<K, V> filterEntries(SetMultimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)
SetMultimap,Predicate
SetMultimap
com.google.common.math.super.com.google.common.math.DoubleMath
fuzzyEquals
public static boolean fuzzyEquals(double a, double b, double tolerance)
double,double,double
boolean
com.google.common.collect.super.com.google.common.collect.Iterators
getOnlyElement
public static T getOnlyElement(Iterator<? extends T> iterator, @Nullable T defaultValue)
Iterator,T
T
com.google.common.math.super.com.google.common.math.IntMath
mod
public static int mod(int x, int m)
int,int
int
com.google.common.math.super.com.google.common.math.LongMath
binomial
public static long binomial(int n, int k)
int,int
long
com.google.common.io.super.com.google.common.io.BaseEncoding$Alphabet
Alphabet
Alphabet(String name, char[] chars)
String,char[]
constructor
com.google.common.collect.super.com.google.common.collect.Iterators
all
public static boolean all(Iterator<T> iterator, Predicate<? super T> predicate)
Iterator,Predicate
boolean
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
entries
public List<Entry<K, V>> entries()
empty
List
com.google.common.collect.super.com.google.common.collect.EmptyContiguousSet
headSetImpl
ContiguousSet<C> headSetImpl(C toElement, boolean inclusive)
C,boolean
ContiguousSet
com.google.common.collect.super.com.google.common.collect.FluentIterable
FluentIterable
protected FluentIterable()
empty
constructor
com.google.common.collect.super.com.google.common.collect.TreeMultiset
aggregateForEntries
private long aggregateForEntries(Aggregate aggr)
Aggregate
long
com.google.common.collect.super.com.google.common.collect.Maps$SortedKeySet
subSet
public SortedSet<K> subSet(K fromElement, K toElement)
K,K
SortedSet
com.google.common.collect.super.com.google.common.collect.Synchronized
map
static Map<K, V> map(Map<K, V> map, @Nullable Object mutex)
Map,Object
Map
com.google.common.collect.super.com.google.common.collect.Maps$FilteredMapValues
removeAll
public boolean removeAll(Collection<?> collection)
Collection
boolean
com.google.common.collect.super.com.google.common.collect.TreeMultimap
create
public static TreeMultimap<K, V> create()
empty
TreeMultimap
com.google.common.base.super.com.google.common.base.Predicates$NotPredicate
NotPredicate
NotPredicate(Predicate<T> predicate)
Predicate
constructor
com.google.common.collect.super.com.google.common.collect.Maps
orNaturalOrder
static Comparator<? super E> orNaturalOrder(@Nullable Comparator<? super E> comparator)
Comparator
Comparator
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$ValueForKeyIterator
add
public void add(V value)
V
void
com.google.common.collect.super.com.google.common.collect.ArrayTable
containsRow
public boolean containsRow(@Nullable Object rowKey)
Object
boolean
com.google.common.base.super.com.google.common.base.CharMatcher
lastIndexIn
public int lastIndexIn(CharSequence sequence)
CharSequence
int
com.google.common.math.super.com.google.common.math.LongMath
lessThanBranchFree
static int lessThanBranchFree(long x, long y)
long,long
int
com.google.common.io.super.com.google.common.io.BaseEncoding$StandardBaseEncoding
upperCase
public BaseEncoding upperCase()
empty
BaseEncoding
com.google.common.primitives.super.com.google.common.primitives.Floats$FloatConverter
doBackward
protected String doBackward(Float value)
Float
String
com.google.common.collect.super.com.google.common.collect.LinkedHashMultiset
LinkedHashMultiset
private LinkedHashMultiset()
empty
constructor
com.google.common.primitives.super.com.google.common.primitives.Ints$IntArrayAsList
get
public Integer get(int index)
int
Integer
com.google.common.collect.super.com.google.common.collect.Synchronized
collection
private static Collection<E> collection(Collection<E> collection, @Nullable Object mutex)
Collection,Object
Collection
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
setMap
final void setMap(Map<K, Collection<V>> map)
Map
void
com.google.common.collect.super.com.google.common.collect.Multimaps
synchronizedMultimap
public static Multimap<K, V> synchronizedMultimap(Multimap<K, V> multimap)
Multimap
Multimap
com.google.common.primitives.super.com.google.common.primitives.Doubles
toArray
public static double[] toArray(Collection<? extends Number> collection)
Collection
double[]
com.google.common.collect.super.com.google.common.collect.Iterators
find
public static T find(Iterator<T> iterator, Predicate<? super T> predicate)
Iterator,Predicate
T
com.google.common.primitives.super.com.google.common.primitives.Shorts
max
public static short max(short... array)
short...
short
com.google.common.collect.super.com.google.common.collect.Maps$SortedAsMapView
headMap
public SortedMap<K, V> headMap(K toKey)
K
SortedMap
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
removeAll
public ImmutableCollection<V> removeAll(Object key)
Object
ImmutableCollection
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedList
delegate
List<E> delegate()
empty
List
com.google.common.collect.super.com.google.common.collect.ArrayTable
row
public Map<C, V> row(R rowKey)
R
Map
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
get
public abstract ImmutableCollection<V> get(K key)
K
ImmutableCollection
com.google.common.collect.super.com.google.common.collect.Maps$Values
contains
public boolean contains(@Nullable Object o)
Object
boolean
com.google.common.collect.super.com.google.common.collect.TreeMultiset
nodeAggregate
abstract int nodeAggregate(AvlNode<?> node)
AvlNode
int
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueEntry
setPredecessorInMultimap
public void setPredecessorInMultimap(ValueEntry<K, V> multimapPredecessor)
ValueEntry
void
com.google.common.util.concurrent.super.com.google.common.util.concurrent.CollectionFuture$ListFuture
ListFuture
ListFuture(ImmutableCollection<? extends ListenableFuture<? extends V>> futures, boolean allMustSucceed)
ImmutableCollection,boolean
constructor
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
valueIterator
Iterator<V> valueIterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
AbstractBiMap
AbstractBiMap(Map<K, V> forward, Map<V, K> backward)
Map,Map
constructor
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
setCount
AvlNode<E> setCount(Comparator<? super E> comparator, @Nullable E e, int count, int[] result)
Comparator,E,int,int[]
AvlNode
com.google.common.math.super.com.google.common.math.BigIntegerMath
listProduct
static BigInteger listProduct(List<BigInteger> nums)
List
BigInteger
com.google.common.collect.super.com.google.common.collect.TreeMultiset
setCount
public int setCount(@Nullable E element, int count)
E,int
int
com.google.common.collect.super.com.google.common.collect.Synchronized
sortedMap
static SortedMap<K, V> sortedMap(SortedMap<K, V> sortedMap, @Nullable Object mutex)
SortedMap,Object
SortedMap
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
replaceValues
public List<V> replaceValues(@Nullable K key, Iterable<? extends V> values)
K,Iterable
List
com.google.common.collect.super.com.google.common.collect.Maps
filterFiltered
private static BiMap<K, V> filterFiltered(FilteredEntryBiMap<K, V> map, Predicate<? super Entry<K, V>> entryPredicate)
FilteredEntryBiMap,Predicate
BiMap
com.google.common.collect.super.com.google.common.collect.FluentIterable
contains
public final boolean contains(@Nullable Object target)
Object
boolean
com.google.common.base.super.com.google.common.base.Predicates
equalTo
public static Predicate<T> equalTo(@Nullable T target)
T
Predicate
com.google.common.collect.super.com.google.common.collect.TreeMultiset
add
public int add(@Nullable E element, int occurrences)
E,int
int
com.google.common.io.super.com.google.common.io.BaseEncoding$Alphabet
isValidPaddingStartPosition
boolean isValidPaddingStartPosition(int index)
int
boolean
com.google.common.util.concurrent.super.com.google.common.util.concurrent.ImmediateFuture
get
public abstract V get() throws ExecutionException
empty
V
com.google.common.collect.super.com.google.common.collect.EnumHashBiMap
put
public V put(K key, @Nullable V value)
K,V
V
com.google.common.collect.super.com.google.common.collect.Iterables
get
public static T get(Iterable<? extends T> iterable, int position, @Nullable T defaultValue)
Iterable,int,T
T
com.google.common.cache.super.com.google.common.cache.CacheBuilder
expireAfterAccess
public CacheBuilder<K, V> expireAfterAccess(long duration, TimeUnit unit)
long,TimeUnit
CacheBuilder
com.google.common.collect.super.com.google.common.collect.Iterators
nextIndex
public int nextIndex()
empty
int
com.google.common.collect.super.com.google.common.collect.Maps$BiMapConverter
BiMapConverter
BiMapConverter(BiMap<A, B> bimap)
BiMap
constructor
com.google.common.collect.super.com.google.common.collect.Lists
newArrayList
public static ArrayList<E> newArrayList(Iterator<? extends E> elements)
Iterator
ArrayList
com.google.common.collect.super.com.google.common.collect.FluentIterable
toSortedList
public final ImmutableList<E> toSortedList(Comparator<? super E> comparator)
Comparator
ImmutableList
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$ValueSet
delegate
protected Set<V> delegate()
empty
Set
com.google.common.collect.super.com.google.common.collect.Maps
toMap
public static ImmutableMap<K, V> toMap(Iterator<K> keys, Function<? super K, V> valueFunction)
Iterator,Function
ImmutableMap
com.google.common.collect.super.com.google.common.collect.Multimaps
newMultimap
public static Multimap<K, V> newMultimap(Map<K, Collection<V>> map, final Supplier<? extends Collection<V>> factory)
Map,Supplier
Multimap
com.google.common.collect.super.com.google.common.collect.TreeMultiset
nodeAggregate
int nodeAggregate(AvlNode<?> node)
AvlNode
int
com.google.common.collect.super.com.google.common.collect.Iterators
emptyIterator
public static UnmodifiableIterator<T> emptyIterator()
empty
UnmodifiableIterator
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
entryIterator
Iterator<Map.Entry<K, V>> entryIterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.Maps$TransformedEntriesSortedMap
subMap
public SortedMap<K, V2> subMap(K fromKey, K toKey)
K,K
SortedMap
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedList
set
public V set(int index, V element)
int,V
V
com.google.common.collect.super.com.google.common.collect.Iterators
concat
public static Iterator<T> concat(final Iterator<? extends Iterator<? extends T>> inputs)
Iterator
Iterator
com.google.common.math.super.com.google.common.math.BigIntegerMath
isPowerOfTwo
public static boolean isPowerOfTwo(BigInteger x)
BigInteger
boolean
com.google.common.collect.super.com.google.common.collect.RegularContiguousSet
equalsOrThrow
private static boolean equalsOrThrow(Comparable<?> left, @Nullable Comparable<?> right)
Comparable,Comparable
boolean
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
valueOf
public static UnsignedInteger valueOf(BigInteger value)
BigInteger
UnsignedInteger
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultimap
containsEntry
public boolean containsEntry(Object key, Object value)
Object,Object
boolean
com.google.common.collect.super.com.google.common.collect.Multimaps$TransformedEntriesMultimap
TransformedEntriesMultimap
TransformedEntriesMultimap(Multimap<K, V1> fromMultimap, final EntryTransformer<? super K, ? super V1, V2> transformer)
Multimap,EntryTransformer
constructor
com.google.common.primitives.super.com.google.common.primitives.Doubles
indexOf
public static int indexOf(double[] array, double target)
double[],double
int
com.google.common.collect.super.com.google.common.collect.Iterables
castOrCopyToCollection
private static Collection<E> castOrCopyToCollection(Iterable<E> iterable)
Iterable
Collection
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
unmodifiableCollectionSubclass
Collection<V> unmodifiableCollectionSubclass(Collection<V> collection)
Collection
Collection
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap$EntrySet
EntrySet
EntrySet(ImmutableSetMultimap<K, V> multimap)
ImmutableSetMultimap
constructor
com.google.common.collect.super.com.google.common.collect.Maps$ValueDifferenceImpl
leftValue
public V leftValue()
empty
V
com.google.common.base.super.com.google.common.base.CharMatcher
javaIsoControl
public static CharMatcher javaIsoControl()
empty
CharMatcher
com.google.common.collect.super.com.google.common.collect.ImmutableMultiset
of
public static ImmutableMultiset<E> of(E e1, E e2, E e3, E e4)
E,E,E,E
ImmutableMultiset
com.google.common.util.concurrent.super.com.google.common.util.concurrent.Futures
Futures
private Futures()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Sets
newHashSetWithExpectedSize
public static HashSet<E> newHashSetWithExpectedSize(int expectedSize)
int
HashSet
com.google.common.math.super.com.google.common.math.BigIntegerMath
BigIntegerMath
private BigIntegerMath()
empty
constructor
com.google.common.io.super.com.google.common.io.BaseEncoding
padding
abstract CharMatcher padding()
empty
CharMatcher
com.google.common.collect.super.com.google.common.collect.TreeMultiset
aggregateBelowRange
private long aggregateBelowRange(Aggregate aggr, @Nullable AvlNode<E> node)
Aggregate,AvlNode
long
com.google.common.collect.super.com.google.common.collect.ImmutableListMultimap
of
public static ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)
K,V,K,V,K,V,K,V
ImmutableListMultimap
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedAsMapEntries
equals
public boolean equals(Object o)
Object
boolean
com.google.common.collect.super.com.google.common.collect.Iterators
unmodifiableIterator
public static UnmodifiableIterator<T> unmodifiableIterator(UnmodifiableIterator<T> iterator)
UnmodifiableIterator
UnmodifiableIterator
com.google.common.collect.super.com.google.common.collect.Maps$Values
map
final Map<K, V> map()
empty
Map
com.google.common.collect.super.com.google.common.collect.TreeMultiset
distinctElements
int distinctElements()
empty
int
com.google.common.primitives.super.com.google.common.primitives.Doubles
concat
public static double[] concat(double[]... arrays)
double[]...
double[]
com.google.common.base.super.com.google.common.base.Splitter
on
public static Splitter on(char separator)
char
Splitter
com.google.common.collect.super.com.google.common.collect.Iterators
toString
public static String toString(Iterator<?> iterator)
Iterator
String
com.google.common.collect.super.com.google.common.collect.Maps
asMap
public static SortedMap<K, V> asMap(SortedSet<K> set, Function<? super K, V> function)
SortedSet,Function
SortedMap
com.google.common.collect.super.com.google.common.collect.Maps
filterFiltered
private static SortedMap<K, V> filterFiltered(FilteredEntrySortedMap<K, V> map, Predicate<? super Entry<K, V>> entryPredicate)
FilteredEntrySortedMap,Predicate
SortedMap
com.google.common.collect.super.com.google.common.collect.Lists
asList
public static List<E> asList(@Nullable E first, @Nullable E second, E[] rest)
E,E,E[]
List
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$Node
Node
Node(@Nullable K key, @Nullable V value)
K,V
constructor
com.google.common.primitives.super.com.google.common.primitives.Doubles
compare
public static int compare(double a, double b)
double,double
int
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList
RandomAccessWrappedList
RandomAccessWrappedList(@Nullable K key, List<V> delegate, @Nullable WrappedCollection ancestor)
K,List,WrappedCollection
constructor
com.google.common.collect.super.com.google.common.collect.ObjectArrays
toArrayImpl
static T[] toArrayImpl(Collection<?> c, T[] array)
Collection,T[]
T[]
com.google.common.collect.super.com.google.common.collect.RegularImmutableAsList
RegularImmutableAsList
RegularImmutableAsList(ImmutableCollection<E> delegate, ImmutableList<? extends E> delegateList)
ImmutableCollection,ImmutableList
constructor
com.google.common.base.super.com.google.common.base.CharMatcher$JavaIsoControl
JavaIsoControl
private JavaIsoControl()
empty
constructor
com.google.common.collect.super.com.google.common.collect.Maps
equalsImpl
static boolean equalsImpl(Map<?, ?> map, Object object)
Map,Object
boolean
com.google.common.primitives.super.com.google.common.primitives.Floats$FloatArrayAsList
toFloatArray
float[] toFloatArray()
empty
float[]
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
inverse
public ImmutableSetMultimap<V, K> inverse()
empty
ImmutableSetMultimap
com.google.common.collect.super.com.google.common.collect.Maps$FilteredEntryBiMap
FilteredEntryBiMap
FilteredEntryBiMap(BiMap<K, V> delegate, Predicate<? super Entry<K, V>> predicate)
BiMap,Predicate
constructor
com.google.common.collect.super.com.google.common.collect.HashMultiset
create
public static HashMultiset<E> create(int distinctElements)
int
HashMultiset
com.google.common.collect.super.com.google.common.collect.ObjectArrays
concat
public static T[] concat(@Nullable T element, T[] array)
T,T[]
T[]
com.google.common.collect.super.com.google.common.collect.ImmutableListMultimap
of
public static ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2)
K,V,K,V
ImmutableListMultimap
com.google.common.math.super.com.google.common.math.LongMath
powMod
private long powMod(long a, long p, long m)
long,long,long
long
com.google.common.util.concurrent.super.com.google.common.util.concurrent.CollectionFuture$ListFutureRunningState
ListFutureRunningState
ListFutureRunningState(ImmutableCollection<? extends ListenableFuture<? extends V>> futures, boolean allMustSucceed)
ImmutableCollection,boolean
constructor
com.google.common.collect.super.com.google.common.collect.Maps
toMap
public static ImmutableMap<K, V> toMap(Iterable<K> keys, Function<? super K, V> valueFunction)
Iterable,Function
ImmutableMap
com.google.common.collect.super.com.google.common.collect.ContiguousSet
intersection
public abstract ContiguousSet<C> intersection(ContiguousSet<C> other)
ContiguousSet
ContiguousSet
com.google.common.primitives.super.com.google.common.primitives.Chars
compare
public static int compare(char a, char b)
char,char
int
com.google.common.collect.super.com.google.common.collect.Maps
safeContainsKey
static boolean safeContainsKey(Map<?, ?> map, Object key)
Map,Object
boolean
com.google.common.collect.super.com.google.common.collect.Iterators
peekingIterator
public static PeekingIterator<T> peekingIterator(PeekingIterator<T> iterator)
PeekingIterator
PeekingIterator
com.google.common.collect.super.com.google.common.collect.ArrayTable
eraseAll
public void eraseAll()
empty
void
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap
delegate
SortedSetMultimap<K, V> delegate()
empty
SortedSetMultimap
com.google.common.math.super.com.google.common.math.IntMath
checkedSubtract
public static int checkedSubtract(int a, int b)
int,int
int
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap
replaceValues
public Collection<V> replaceValues(@Nullable K key, Iterable<? extends V> values)
K,Iterable
Collection
com.google.common.collect.super.com.google.common.collect.FluentIterable
skip
public final FluentIterable<E> skip(int numberToSkip)
int
FluentIterable
com.google.common.io.super.com.google.common.io.BaseEncoding
decode
public final byte[] decode(CharSequence chars)
CharSequence
byte[]
com.google.common.collect.super.com.google.common.collect.ArrayTable$ArrayMap
remove
public V remove(Object key)
Object
V
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection
refreshIfEmpty
void refreshIfEmpty()
empty
void
com.google.common.io.super.com.google.common.io.BaseEncoding$Alphabet
lowerCase
Alphabet lowerCase()
empty
Alphabet
com.google.common.collect.super.com.google.common.collect.ArrayListMultimap
create
public static ArrayListMultimap<K, V> create()
empty
ArrayListMultimap
com.google.common.collect.super.com.google.common.collect.Maps$SortedAsMapView
subMap
public SortedMap<K, V> subMap(K fromKey, K toKey)
K,K
SortedMap
com.google.common.primitives.super.com.google.common.primitives.UnsignedInteger
valueOf
public static UnsignedInteger valueOf(String string)
String
UnsignedInteger
com.google.common.collect.super.com.google.common.collect.Lists$AbstractListWrapper
addAll
public boolean addAll(int index, Collection<? extends E> c)
int,Collection
boolean
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
values
public ImmutableCollection<V> values()
empty
ImmutableCollection
com.google.common.collect.super.com.google.common.collect.GenericMapMaker
expireAfterWrite
abstract GenericMapMaker<K0, V0> expireAfterWrite(long duration, TimeUnit unit)
long,TimeUnit
GenericMapMaker
com.google.common.primitives.super.com.google.common.primitives.Doubles$DoubleArrayAsList
set
public Double set(int index, Double element)
int,Double
Double
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap
deleteFromMultimap
private static void deleteFromMultimap(ValueEntry<K, V> entry)
ValueEntry
void
com.google.common.collect.super.com.google.common.collect.ArrayTable$ArrayMap
getKeyRole
abstract String getKeyRole()
empty
String
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
replaceValues
public ImmutableSet<V> replaceValues(K key, Iterable<? extends V> values)
K,Iterable
ImmutableSet
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap
of
public static ImmutableMultimap<K, V> of()
empty
ImmutableMultimap
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$AsMapIterator
next
public Map.Entry<K, Collection<V>> next()
empty
Map.Entry
com.google.common.collect.super.com.google.common.collect.EmptyContiguousSet
intersection
public ContiguousSet<C> intersection(ContiguousSet<C> other)
ContiguousSet
ContiguousSet
com.google.common.base.super.com.google.common.base.CharMatcher
collapseFrom
public String collapseFrom(CharSequence sequence, char replacement)
CharSequence,char
String
com.google.common.collect.super.com.google.common.collect.Maps$UnmodifiableBiMap
UnmodifiableBiMap
UnmodifiableBiMap(BiMap<? extends K, ? extends V> delegate, @Nullable BiMap<V, K> inverse)
BiMap,BiMap
constructor
com.google.common.collect.super.com.google.common.collect.Sets$FilteredSortedSet
FilteredSortedSet
FilteredSortedSet(SortedSet<E> unfiltered, Predicate<? super E> predicate)
SortedSet,Predicate
constructor
com.google.common.collect.super.com.google.common.collect.FluentIterable
of
public static FluentIterable<E> of(E[] elements)
E[]
FluentIterable
com.google.common.collect.super.com.google.common.collect.Maps$SortedMapDifferenceImpl
entriesOnlyOnRight
public SortedMap<K, V> entriesOnlyOnRight()
empty
SortedMap
com.google.common.collect.super.com.google.common.collect.ImmutableMultimap$Keys
elementSet
public Set<K> elementSet()
empty
Set
com.google.common.primitives.super.com.google.common.primitives.Chars
min
public static char min(char... array)
char...
char
com.google.common.collect.super.com.google.common.collect.Multimaps$MapMultimap
MapMultimap
MapMultimap(Map<K, V> map)
Map
constructor
com.google.common.collect.super.com.google.common.collect.Iterables
getOnlyElement
public static T getOnlyElement(Iterable<? extends T> iterable, @Nullable T defaultValue)
Iterable,T
T
com.google.common.collect.super.com.google.common.collect.Iterables
any
public static boolean any(Iterable<T> iterable, Predicate<? super T> predicate)
Iterable,Predicate
boolean
com.google.common.io.super.com.google.common.io.BaseEncoding$Base16Encoding
Base16Encoding
Base16Encoding(String name, String alphabetChars)
String,String
constructor
com.google.common.collect.super.com.google.common.collect.TreeMultiset
descendingEntryIterator
Iterator<Entry<E>> descendingEntryIterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedList
indexOf
public int indexOf(Object o)
Object
int
com.google.common.collect.super.com.google.common.collect.Iterators
advance
public static int advance(Iterator<?> iterator, int numberToAdvance)
Iterator,int
int
com.google.common.collect.super.com.google.common.collect.Maps
headSet
public SortedSet<E> headSet(E toElement)
E
SortedSet
com.google.common.cache.super.com.google.common.cache.CacheBuilder
get
public StatsCounter get()
empty
StatsCounter
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap$NodeIterator
set
public void set(Entry<K, V> e)
Entry
void
com.google.common.collect.super.com.google.common.collect.Synchronized
multimap
static Multimap<K, V> multimap(Multimap<K, V> multimap, @Nullable Object mutex)
Multimap,Object
Multimap
com.google.common.collect.super.com.google.common.collect.Multimaps
filterValues
public static SetMultimap<K, V> filterValues(SetMultimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)
SetMultimap,Predicate
SetMultimap
com.google.common.collect.super.com.google.common.collect.ArrayTable
contains
public boolean contains(@Nullable Object rowKey, @Nullable Object columnKey)
Object,Object
boolean
com.google.common.collect.super.com.google.common.collect.HashMultimap
create
public static HashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)
Multimap
HashMultimap
com.google.common.cache.super.com.google.common.cache.CacheLoader$FunctionToCacheLoader
load
public V load(K key)
K
V
com.google.common.base.super.com.google.common.base.CharMatcher$ForPredicate
ForPredicate
ForPredicate(Predicate<? super Character> predicate)
Predicate
constructor
com.google.common.collect.super.com.google.common.collect.Maps
valueIterator
static Iterator<V> valueIterator(Iterator<Entry<K, V>> entryIterator)
Iterator
Iterator
com.google.common.collect.super.com.google.common.collect.Multimaps$UnmodifiableSetMultimap
UnmodifiableSetMultimap
UnmodifiableSetMultimap(SetMultimap<K, V> delegate)
SetMultimap
constructor
com.google.common.collect.super.com.google.common.collect.Maps
newLinkedHashMapWithExpectedSize
public static LinkedHashMap<K, V> newLinkedHashMapWithExpectedSize(int expectedSize)
int
LinkedHashMap
com.google.common.io.super.com.google.common.io.BaseEncoding
encode
public String encode(byte[] bytes)
byte[]
String
com.google.common.primitives.super.com.google.common.primitives.Chars
concat
public static char[] concat(char[]... arrays)
char[]...
char[]
com.google.common.primitives.super.com.google.common.primitives.Floats
lastIndexOf
private static int lastIndexOf(float[] array, float target, int start, int end)
float[],float,int,int
int
com.google.common.base.super.com.google.common.base.CharMatcher$IsNot
IsNot
IsNot(char match)
char
constructor
com.google.common.collect.super.com.google.common.collect.EnumBiMap
inferKeyType
static Class<K> inferKeyType(Map<K, ?> map)
Map
Class
com.google.common.collect.super.com.google.common.collect.ArrayTable$ArrayMap
entryIterator
Iterator<Entry<K, V>> entryIterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.Lists$OnePlusArrayList
OnePlusArrayList
OnePlusArrayList(@Nullable E first, E[] rest)
E,E[]
constructor
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
copyOf
public static ImmutableSetMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)
Multimap
ImmutableSetMultimap
com.google.common.collect.super.com.google.common.collect.Synchronized
biMap
static BiMap<K, V> biMap(BiMap<K, V> bimap, @Nullable Object mutex)
BiMap,Object
BiMap
com.google.common.collect.super.com.google.common.collect.Maps$TransformedEntriesMap
get
public V2 get(Object key)
Object
V2
com.google.common.primitives.super.com.google.common.primitives.Floats
concat
public static float[] concat(float[]... arrays)
float[]...
float[]
com.google.common.base.super.com.google.common.base.Predicates$IsEqualToPredicate
apply
public boolean apply(T t)
T
boolean
com.google.common.collect.super.com.google.common.collect.ObjectArrays
fillArray
private static Object[] fillArray(Iterable<?> elements, Object[] array)
Iterable,Object[]
Object[]
com.google.common.collect.super.com.google.common.collect.Lists$TransformingRandomAccessList
get
public T get(int index)
int
T
com.google.common.primitives.super.com.google.common.primitives.Shorts
ensureCapacity
public static short[] ensureCapacity(short[] array, int minLength, int padding)
short[],int,int
short[]
com.google.common.collect.super.com.google.common.collect.LinkedHashMultimap$ValueEntry
getSuccessorInValueSet
public ValueSetLink<K, V> getSuccessorInValueSet()
empty
ValueSetLink
com.google.common.primitives.super.com.google.common.primitives.Shorts
indexOf
public static int indexOf(short[] array, short target)
short[],short
int
com.google.common.collect.super.com.google.common.collect.Multimaps
unmodifiableEntries
private static Collection<Entry<K, V>> unmodifiableEntries(Collection<Entry<K, V>> entries)
Collection
Collection
com.google.common.base.super.com.google.common.base.Splitter
limit
public Splitter limit(int limit)
int
Splitter
com.google.common.collect.super.com.google.common.collect.FluentIterable
size
public final int size()
empty
int
com.google.common.collect.super.com.google.common.collect.Multimaps
filterKeys
public static ListMultimap<K, V> filterKeys(ListMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)
ListMultimap,Predicate
ListMultimap
com.google.common.collect.super.com.google.common.collect.HashMultimap
createCollection
Set<V> createCollection()
empty
Set
com.google.common.math.super.com.google.common.math.LongMath
test
static boolean test(long base, long n)
long,long
boolean
com.google.common.collect.super.com.google.common.collect.Maps$TransformedEntriesSortedMap
TransformedEntriesSortedMap
TransformedEntriesSortedMap(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)
SortedMap,EntryTransformer
constructor
com.google.common.collect.super.com.google.common.collect.Maps
filterSortedIgnoreNavigable
static SortedMap<K, V> filterSortedIgnoreNavigable(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)
SortedMap,Predicate
SortedMap
com.google.common.math.super.com.google.common.math.BigIntegerMath
binomial
public static BigInteger binomial(int n, int k)
int,int
BigInteger
com.google.common.cache.super.com.google.common.cache.CacheLoader
from
public static CacheLoader<Object, V> from(Supplier<V> supplier)
Supplier
CacheLoader
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$Inverse
checkValue
V checkValue(V value)
V
V
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
of
public static ImmutableSetMultimap<K, V> of()
empty
ImmutableSetMultimap
com.google.common.collect.super.com.google.common.collect.ImmutableSetMultimap
get
public ImmutableSet<V> get(@Nullable K key)
K
ImmutableSet
com.google.common.collect.super.com.google.common.collect.EmptyContiguousSet
range
public Range<C> range(BoundType lowerBoundType, BoundType upperBoundType)
BoundType,BoundType
Range
com.google.common.collect.super.com.google.common.collect.Maps
filterEntries
public static BiMap<K, V> filterEntries(BiMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)
BiMap,Predicate
BiMap
com.google.common.collect.super.com.google.common.collect.FluentIterable
from
public static FluentIterable<E> from(E[] elements)
E[]
FluentIterable
com.google.common.collect.super.com.google.common.collect.FluentIterable
limit
public final FluentIterable<E> limit(int maxSize)
int
FluentIterable
com.google.common.collect.super.com.google.common.collect.AbstractMapBasedMultimap$WrappedList
addAll
public boolean addAll(int index, Collection<? extends V> c)
int,Collection
boolean
com.google.common.collect.super.com.google.common.collect.ContiguousSet
subSetImpl
abstract ContiguousSet<C> subSetImpl(C fromElement, boolean fromInclusive, C toElement, boolean toInclusive)
C,boolean,C,boolean
ContiguousSet
com.google.common.collect.super.com.google.common.collect.Lists$TransformingSequentialList
listIterator
public ListIterator<T> listIterator(final int index)
int
ListIterator
com.google.common.primitives.super.com.google.common.primitives.Chars
compare
public int compare(char[] left, char[] right)
char[],char[]
int
com.google.common.collect.super.com.google.common.collect.Lists$StringAsImmutableList
StringAsImmutableList
StringAsImmutableList(String string)
String
constructor
com.google.common.collect.super.com.google.common.collect.ArrayTable
containsColumn
public boolean containsColumn(@Nullable Object columnKey)
Object
boolean
com.google.common.collect.super.com.google.common.collect.Maps
apply
public Object apply(Entry<?, ?> entry)
Entry
Object
com.google.common.collect.super.com.google.common.collect.Sets
complementOf
public static EnumSet<E> complementOf(Collection<E> collection)
Collection
EnumSet
com.google.common.primitives.super.com.google.common.primitives.Ints
tryParse
public static Integer tryParse(String string, int radix)
String,int
Integer
com.google.common.collect.super.com.google.common.collect.AbstractBiMap
removeFromInverseMap
private void removeFromInverseMap(V oldValue)
V
void
com.google.common.collect.super.com.google.common.collect.AbstractBiMap$EntrySet
containsAll
public boolean containsAll(Collection<?> c)
Collection
boolean
com.google.common.collect.super.com.google.common.collect.Iterables
toArray
static Object[] toArray(Iterable<?> iterable)
Iterable
Object[]
com.google.common.collect.super.com.google.common.collect.TreeMultimap
createCollection
SortedSet<V> createCollection()
empty
SortedSet
com.google.common.collect.super.com.google.common.collect.TreeMultiset
lastNode
private AvlNode<E> lastNode()
empty
AvlNode
com.google.common.collect.super.com.google.common.collect.Maps$ViewCachingAbstractMap
createEntrySet
abstract Set<Entry<K, V>> createEntrySet()
empty
Set
com.google.common.collect.super.com.google.common.collect.TreeMultiset$AvlNode
removeMin
private AvlNode<E> removeMin(AvlNode<E> node)
AvlNode
AvlNode
com.google.common.collect.super.com.google.common.collect.ImmutableListMultimap
removeAll
public ImmutableList<V> removeAll(Object key)
Object
ImmutableList
com.google.common.collect.super.com.google.common.collect.FluentIterable
copyInto
public final C copyInto(C collection)
C
C
com.google.common.base.super.com.google.common.base.CharMatcher
precomputed
public CharMatcher precomputed()
empty
CharMatcher
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedAsMapValues
iterator
public Iterator<Collection<V>> iterator()
empty
Iterator
com.google.common.collect.super.com.google.common.collect.LinkedListMultimap
removeNode
private void removeNode(Node<K, V> node)
Node
void
com.google.common.collect.super.com.google.common.collect.Maps
filterValues
public static SortedMap<K, V> filterValues(SortedMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)
SortedMap,Predicate
SortedMap
com.google.common.collect.super.com.google.common.collect.Maps$FilteredEntrySortedMap
sortedMap
SortedMap<K, V> sortedMap()
empty
SortedMap
com.google.common.primitives.super.com.google.common.primitives.Shorts$ShortConverter
doForward
protected Short doForward(String value)
String
Short
com.google.common.collect.super.com.google.common.collect.EmptyContiguousSet
first
public C first()
empty
C
com.google.common.collect.super.com.google.common.collect.Multimaps
unmodifiableSetMultimap
public static SetMultimap<K, V> unmodifiableSetMultimap(ImmutableSetMultimap<K, V> delegate)
ImmutableSetMultimap
SetMultimap
com.google.common.collect.super.com.google.common.collect.Maps
valueFunction
static Function<Entry<?, V>, V> valueFunction()
empty
Function
com.google.common.primitives.super.com.google.common.primitives.Doubles
hashCode
public static int hashCode(double value)
double
int
com.google.common.collect.super.com.google.common.collect.EmptyContiguousSet
EmptyContiguousSet
EmptyContiguousSet(DiscreteDomain<C> domain)
DiscreteDomain
constructor
com.google.common.collect.super.com.google.common.collect.Maps$TransformedEntriesMap
TransformedEntriesMap
TransformedEntriesMap(Map<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)
Map,EntryTransformer
constructor
com.google.common.collect.super.com.google.common.collect.Synchronized$SynchronizedMultiset
setCount
public boolean setCount(E element, int oldCount, int newCount)
E,int,int
boolean
com.google.common.cache.super.com.google.common.cache.CacheBuilder
recordLoadException
public void recordLoadException(long loadTime)
long
void
com.google.common.util.concurrent.super.com.google.common.util.concurrent.MoreExecutors
rejectionPropagatingExecutor
static Executor rejectionPropagatingExecutor(final Executor delegate, final AbstractFuture<?> future)
Executor,AbstractFuture
Executor
com.google.common.collect.super.com.google.common.collect.Lists
cast
static List<T> cast(Iterable<T> iterable)
Iterable
List
com.google.common.collect.super.com.google.common.collect.FluentIterable
toMap
public final ImmutableMap<E, V> toMap(Function<? super E, V> valueFunction)
Function
ImmutableMap
