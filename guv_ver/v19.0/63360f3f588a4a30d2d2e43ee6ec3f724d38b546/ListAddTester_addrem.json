{
    "addition": {},
    "removed": {
        "1": "/*\n",
        "2": " * Copyright (C) 2007 The Guava Authors\n",
        "3": " *\n",
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "7": " *\n",
        "8": " * http://www.apache.org/licenses/LICENSE-2.0\n",
        "9": " *\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "15": " */\n",
        "16": "\n",
        "17": "package com.google.common.collect.testing.testers;\n",
        "18": "\n",
        "19": "import static com.google.common.collect.testing.features.CollectionFeature.ALLOWS_NULL_VALUES;\n",
        "20": "import static com.google.common.collect.testing.features.CollectionFeature.SUPPORTS_ADD;\n",
        "21": "import static com.google.common.collect.testing.features.CollectionSize.ZERO;\n",
        "22": "\n",
        "23": "import com.google.common.annotations.GwtCompatible;\n",
        "24": "import com.google.common.collect.testing.Helpers;\n",
        "25": "import com.google.common.collect.testing.features.CollectionFeature;\n",
        "26": "import com.google.common.collect.testing.features.CollectionSize;\n",
        "27": "\n",
        "28": "import java.util.List;\n",
        "29": "\n",
        "30": "/**\n",
        "31": " * A generic JUnit test which tests {@code add(Object)} operations on a list.\n",
        "32": " * Can't be invoked directly; please see\n",
        "33": " * {@link com.google.common.collect.testing.ListTestSuiteBuilder}.\n",
        "34": " *\n",
        "35": " * @author Chris Povirk\n",
        "36": " */\n",
        "37": "@SuppressWarnings(\"unchecked\") // too many \"unchecked generic array creations\"\n",
        "38": "@GwtCompatible(emulated = true)\n",
        "39": "public class ListAddTester<E> extends AbstractListTester<E> {\n",
        "40": "  @CollectionFeature.Require(SUPPORTS_ADD)\n",
        "41": "  @CollectionSize.Require(absent = ZERO)\n",
        "42": "  public void testAdd_supportedPresent() {\n",
        "43": "    assertTrue(\"add(present) should return true\", getList().add(e0()));\n",
        "44": "    expectAdded(e0());\n",
        "45": "  }\n",
        "46": "\n",
        "47": "  @CollectionFeature.Require(absent = SUPPORTS_ADD)\n",
        "48": "  @CollectionSize.Require(absent = ZERO)\n",
        "49": "  /*\n",
        "50": "   * absent = ZERO isn't required, since unmodList.add() must\n",
        "51": "   * throw regardless, but it keeps the method name accurate.\n",
        "52": "   */\n",
        "53": "  public void testAdd_unsupportedPresent() {\n",
        "54": "    try {\n",
        "55": "      getList().add(e0());\n",
        "56": "      fail(\"add(present) should throw\");\n",
        "57": "    } catch (UnsupportedOperationException expected) {\n",
        "58": "    }\n",
        "59": "  }\n",
        "60": "\n",
        "61": "  @CollectionFeature.Require(value = {SUPPORTS_ADD, ALLOWS_NULL_VALUES})\n",
        "62": "  @CollectionSize.Require(absent = ZERO)\n",
        "63": "  public void testAdd_supportedNullPresent() {\n",
        "64": "    E[] array = createArrayWithNullElement();\n",
        "65": "    collection = getSubjectGenerator().create(array);\n",
        "66": "    assertTrue(\"add(nullPresent) should return true\", getList().add(null));\n",
        "67": "\n",
        "68": "    List<E> expected = Helpers.copyToList(array);\n",
        "69": "    expected.add(null);\n",
        "70": "    expectContents(expected);\n",
        "71": "  }\n",
        "72": "}\n",
        "73": "\n"
    }
}