{
    "addition": {},
    "removed": {
        "1": "/*\n",
        "2": " * Copyright (C) 2008 The Guava Authors\n",
        "3": " *\n",
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "7": " *\n",
        "8": " * http://www.apache.org/licenses/LICENSE-2.0\n",
        "9": " *\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "15": " */\n",
        "16": "\n",
        "17": "package com.google.common.collect;\n",
        "18": "\n",
        "19": "import static com.google.common.base.Preconditions.checkArgument;\n",
        "20": "\n",
        "21": "import com.google.common.annotations.GwtCompatible;\n",
        "22": "import com.google.common.collect.MapConstraintsTest.TestKeyException;\n",
        "23": "import com.google.common.collect.MapConstraintsTest.TestValueException;\n",
        "24": "import com.google.common.collect.testing.google.TestStringBiMapGenerator;\n",
        "25": "\n",
        "26": "import junit.framework.TestCase;\n",
        "27": "\n",
        "28": "import java.util.Map.Entry;\n",
        "29": "\n",
        "30": "/**\n",
        "31": " * Tests for {@link MapConstraints#constrainedBiMap}.\n",
        "32": " *\n",
        "33": " * @author Jared Levy\n",
        "34": " * @author Louis Wasserman\n",
        "35": " */\n",
        "36": "@GwtCompatible(emulated = true)\n",
        "37": "public class ConstrainedBiMapTest extends TestCase {\n",
        "38": "\n",
        "39": "  private static final String TEST_KEY = \"42\";\n",
        "40": "  private static final String TEST_VALUE = \"test\";\n",
        "41": "  private static final MapConstraint<String, String> TEST_CONSTRAINT = new TestConstraint();\n",
        "42": "\n",
        "43": "  public void testPutWithForbiddenKeyForbiddenValue() {\n",
        "44": "    BiMap<String, String> map = MapConstraints.constrainedBiMap(\n",
        "45": "        HashBiMap.<String, String> create(),\n",
        "46": "        TEST_CONSTRAINT);\n",
        "47": "    try {\n",
        "48": "      map.put(TEST_KEY, TEST_VALUE);\n",
        "49": "      fail(\"Expected IllegalArgumentException\");\n",
        "50": "    } catch (IllegalArgumentException expected) {\n",
        "51": "      // success\n",
        "52": "    }\n",
        "53": "  }\n",
        "54": "\n",
        "55": "  public void testPutWithForbiddenKeyAllowedValue() {\n",
        "56": "    BiMap<String, String> map = MapConstraints.constrainedBiMap(\n",
        "57": "        HashBiMap.<String, String> create(),\n",
        "58": "        TEST_CONSTRAINT);\n",
        "59": "    try {\n",
        "60": "      map.put(TEST_KEY, \"allowed\");\n",
        "61": "      fail(\"Expected IllegalArgumentException\");\n",
        "62": "    } catch (IllegalArgumentException expected) {\n",
        "63": "      // success\n",
        "64": "    }\n",
        "65": "  }\n",
        "66": "\n",
        "67": "  public void testPutWithAllowedKeyForbiddenValue() {\n",
        "68": "    BiMap<String, String> map = MapConstraints.constrainedBiMap(\n",
        "69": "        HashBiMap.<String, String> create(),\n",
        "70": "        TEST_CONSTRAINT);\n",
        "71": "    try {\n",
        "72": "      map.put(\"allowed\", TEST_VALUE);\n",
        "73": "      fail(\"Expected IllegalArgumentException\");\n",
        "74": "    } catch (IllegalArgumentException expected) {\n",
        "75": "      // success\n",
        "76": "    }\n",
        "77": "  }\n",
        "78": "\n",
        "79": "  public static final class ConstrainedBiMapGenerator extends TestStringBiMapGenerator {\n",
        "80": "    @Override\n",
        "81": "    protected BiMap<String, String> create(Entry<String, String>[] entries) {\n",
        "82": "      BiMap<String, String> bimap = MapConstraints.constrainedBiMap(\n",
        "83": "          HashBiMap.<String, String> create(),\n",
        "84": "          TEST_CONSTRAINT);\n",
        "85": "      for (Entry<String, String> entry : entries) {\n",
        "86": "        checkArgument(!bimap.containsKey(entry.getKey()));\n",
        "87": "        bimap.put(entry.getKey(), entry.getValue());\n",
        "88": "      }\n",
        "89": "      return bimap;\n",
        "90": "    }\n",
        "91": "  }\n",
        "92": "\n",
        "93": "  private static final class TestConstraint implements MapConstraint<String, String> {\n",
        "94": "    @Override\n",
        "95": "    public void checkKeyValue(String key, String value) {\n",
        "96": "      if (TEST_KEY.equals(key)) {\n",
        "97": "        throw new TestKeyException();\n",
        "98": "      }\n",
        "99": "      if (TEST_VALUE.equals(value)) {\n",
        "100": "        throw new TestValueException();\n",
        "101": "      }\n",
        "102": "    }\n",
        "103": "\n",
        "104": "    private static final long serialVersionUID = 0;\n",
        "105": "  }\n",
        "106": "}\n",
        "107": "\n"
    }
}