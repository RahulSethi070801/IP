{
    "addition": {},
    "removed": {
        "1": "/*\n",
        "2": " * Copyright (C) 2008 The Guava Authors\n",
        "3": " *\n",
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "7": " *\n",
        "8": " * http://www.apache.org/licenses/LICENSE-2.0\n",
        "9": " *\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "15": " */\n",
        "16": "\n",
        "17": "package com.google.common.collect;\n",
        "18": "\n",
        "19": "import com.google.common.annotations.GwtCompatible;\n",
        "20": "\n",
        "21": "/**\n",
        "22": " * Test cases for {@link HashBasedTable}.\n",
        "23": " *\n",
        "24": " * @author Jared Levy\n",
        "25": " */\n",
        "26": "@GwtCompatible(emulated = true)\n",
        "27": "public class HashBasedTableTest extends AbstractTableTest {\n",
        "28": "\n",
        "29": "  @Override protected Table<String, Integer, Character> create(\n",
        "30": "      Object... data) {\n",
        "31": "    Table<String, Integer, Character> table = HashBasedTable.create();\n",
        "32": "    table.put(\"foo\", 4, 'a');\n",
        "33": "    table.put(\"cat\", 1, 'b');\n",
        "34": "    table.clear();\n",
        "35": "    populate(table, data);\n",
        "36": "    return table;\n",
        "37": "  }\n",
        "38": "\n",
        "39": "  public void testCreateWithValidSizes() {\n",
        "40": "    Table<String, Integer, Character> table1 = HashBasedTable.create(100, 20);\n",
        "41": "    table1.put(\"foo\", 1, 'a');\n",
        "42": "    assertEquals((Character) 'a', table1.get(\"foo\", 1));\n",
        "43": "\n",
        "44": "    Table<String, Integer, Character> table2 = HashBasedTable.create(100, 0);\n",
        "45": "    table2.put(\"foo\", 1, 'a');\n",
        "46": "    assertEquals((Character) 'a', table2.get(\"foo\", 1));\n",
        "47": "\n",
        "48": "    Table<String, Integer, Character> table3 = HashBasedTable.create(0, 20);\n",
        "49": "    table3.put(\"foo\", 1, 'a');\n",
        "50": "    assertEquals((Character) 'a', table3.get(\"foo\", 1));\n",
        "51": "\n",
        "52": "    Table<String, Integer, Character> table4 = HashBasedTable.create(0, 0);\n",
        "53": "    table4.put(\"foo\", 1, 'a');\n",
        "54": "    assertEquals((Character) 'a', table4.get(\"foo\", 1));\n",
        "55": "  }\n",
        "56": "\n",
        "57": "  public void testCreateWithInvalidSizes() {\n",
        "58": "    try {\n",
        "59": "      HashBasedTable.create(100, -5);\n",
        "60": "      fail();\n",
        "61": "    } catch (IllegalArgumentException expected) {}\n",
        "62": "\n",
        "63": "    try {\n",
        "64": "      HashBasedTable.create(-5, 20);\n",
        "65": "      fail();\n",
        "66": "    } catch (IllegalArgumentException expected) {}\n",
        "67": "  }\n",
        "68": "\n",
        "69": "  public void testCreateCopy() {\n",
        "70": "    Table<String, Integer, Character> original\n",
        "71": "        = create(\"foo\", 1, 'a', \"bar\", 1, 'b', \"foo\", 3, 'c');\n",
        "72": "    Table<String, Integer, Character> copy = HashBasedTable.create(original);\n",
        "73": "    assertEquals(original, copy);\n",
        "74": "    assertEquals((Character) 'a', copy.get(\"foo\", 1));\n",
        "75": "  }\n",
        "76": "}\n",
        "77": "\n"
    }
}