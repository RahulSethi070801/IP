{
    "addition": {},
    "removed": {
        "1": "/*\n",
        "2": " * Copyright (C) 2008 The Guava Authors\n",
        "3": " *\n",
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "7": " *\n",
        "8": " * http://www.apache.org/licenses/LICENSE-2.0\n",
        "9": " *\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "15": " */\n",
        "16": "\n",
        "17": "package com.google.common.collect.testing.testers;\n",
        "18": "\n",
        "19": "import static com.google.common.collect.testing.features.CollectionFeature.ALLOWS_NULL_VALUES;\n",
        "20": "\n",
        "21": "import com.google.common.annotations.GwtCompatible;\n",
        "22": "import com.google.common.collect.testing.features.CollectionFeature;\n",
        "23": "import com.google.common.collect.testing.features.CollectionSize;\n",
        "24": "\n",
        "25": "import java.util.Collection;\n",
        "26": "\n",
        "27": "/**\n",
        "28": " * Tests {@link java.util.Set#hashCode}.\n",
        "29": " *\n",
        "30": " * @author George van den Driessche\n",
        "31": " */\n",
        "32": "@GwtCompatible(emulated = true)\n",
        "33": "public class SetHashCodeTester<E> extends AbstractSetTester<E> {\n",
        "34": "  public void testHashCode() {\n",
        "35": "    int expectedHashCode = 0;\n",
        "36": "    for (E element : getSampleElements()) {\n",
        "37": "      expectedHashCode += ((element == null) ? 0 : element.hashCode());\n",
        "38": "    }\n",
        "39": "    assertEquals(\n",
        "40": "        \"A Set's hashCode() should be the sum of those of its elements.\",\n",
        "41": "        expectedHashCode, getSet().hashCode());\n",
        "42": "  }\n",
        "43": "\n",
        "44": "  @CollectionSize.Require(absent = CollectionSize.ZERO)\n",
        "45": "  @CollectionFeature.Require(ALLOWS_NULL_VALUES)\n",
        "46": "  public void testHashCode_containingNull() {\n",
        "47": "    Collection<E> elements = getSampleElements(getNumElements() - 1);\n",
        "48": "    int expectedHashCode = 0;\n",
        "49": "    for (E element : elements) {\n",
        "50": "      expectedHashCode += ((element == null) ? 0 : element.hashCode());\n",
        "51": "    }\n",
        "52": "\n",
        "53": "    elements.add(null);\n",
        "54": "    collection = getSubjectGenerator().create(elements.toArray());\n",
        "55": "    assertEquals(\n",
        "56": "        \"A Set's hashCode() should be the sum of those of its elements (with \"\n",
        "57": "            + \"a null element counting as having a hash of zero).\",\n",
        "58": "        expectedHashCode, getSet().hashCode());\n",
        "59": "  }\n",
        "60": "}\n",
        "61": "\n"
    }
}