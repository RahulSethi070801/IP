{
    "addition": {},
    "removed": {
        "1": "/*\n",
        "2": " * Copyright (C) 2009 The Guava Authors\n",
        "3": " *\n",
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "7": " *\n",
        "8": " * http://www.apache.org/licenses/LICENSE-2.0\n",
        "9": " *\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "15": " */\n",
        "16": "\n",
        "17": "package com.google.common.collect;\n",
        "18": "\n",
        "19": "import com.google.common.annotations.GwtCompatible;\n",
        "20": "\n",
        "21": "/**\n",
        "22": " * List returned by {@link ImmutableCollection#asList} that delegates {@code contains} checks\n",
        "23": " * to the backing collection.\n",
        "24": " *\n",
        "25": " * @author Jared Levy\n",
        "26": " * @author Louis Wasserman\n",
        "27": " */\n",
        "28": "@GwtCompatible(serializable = true, emulated = true)\n",
        "29": "@SuppressWarnings(\"serial\")\n",
        "30": "abstract class ImmutableAsList<E> extends ImmutableList<E> {\n",
        "31": "  abstract ImmutableCollection<E> delegateCollection();\n",
        "32": "\n",
        "33": "  @Override\n",
        "34": "  public boolean contains(Object target) {\n",
        "35": "    // The collection's contains() is at least as fast as ImmutableList's\n",
        "36": "    // and is often faster.\n",
        "37": "    return delegateCollection().contains(target);\n",
        "38": "  }\n",
        "39": "\n",
        "40": "  @Override\n",
        "41": "  public int size() {\n",
        "42": "    return delegateCollection().size();\n",
        "43": "  }\n",
        "44": "\n",
        "45": "  @Override\n",
        "46": "  public boolean isEmpty() {\n",
        "47": "    return delegateCollection().isEmpty();\n",
        "48": "  }\n",
        "49": "\n",
        "50": "  @Override\n",
        "51": "  boolean isPartialView() {\n",
        "52": "    return delegateCollection().isPartialView();\n",
        "53": "  }\n",
        "54": "}\n",
        "55": "\n"
    }
}