{
    "addition": {},
    "removed": {
        "1": "/*\n",
        "2": " * Copyright (C) 2007 The Guava Authors\n",
        "3": " *\n",
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "7": " *\n",
        "8": " * http://www.apache.org/licenses/LICENSE-2.0\n",
        "9": " *\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "15": " */\n",
        "16": "\n",
        "17": "package com.google.common.collect;\n",
        "18": "\n",
        "19": "import static java.util.Arrays.asList;\n",
        "20": "\n",
        "21": "import com.google.common.annotations.GwtCompatible;\n",
        "22": "import com.google.common.collect.testing.google.TestStringMultisetGenerator;\n",
        "23": "\n",
        "24": "import junit.framework.TestCase;\n",
        "25": "\n",
        "26": "import java.util.Arrays;\n",
        "27": "\n",
        "28": "/**\n",
        "29": " * Unit test for {@link HashMultiset}.\n",
        "30": " *\n",
        "31": " * @author Kevin Bourrillion\n",
        "32": " * @author Jared Levy\n",
        "33": " */\n",
        "34": "@GwtCompatible(emulated = true)\n",
        "35": "public class HashMultisetTest extends TestCase {\n",
        "36": "\n",
        "37": "  private static TestStringMultisetGenerator hashMultisetGenerator() {\n",
        "38": "    return new TestStringMultisetGenerator() {\n",
        "39": "      @Override protected Multiset<String> create(String[] elements) {\n",
        "40": "        return HashMultiset.create(asList(elements));\n",
        "41": "      }\n",
        "42": "    };\n",
        "43": "  }\n",
        "44": "\n",
        "45": "  public void testCreate() {\n",
        "46": "    Multiset<String> multiset = HashMultiset.create();\n",
        "47": "    multiset.add(\"foo\", 2);\n",
        "48": "    multiset.add(\"bar\");\n",
        "49": "    assertEquals(3, multiset.size());\n",
        "50": "    assertEquals(2, multiset.count(\"foo\"));\n",
        "51": "  }\n",
        "52": "\n",
        "53": "  public void testCreateWithSize() {\n",
        "54": "    Multiset<String> multiset = HashMultiset.create(50);\n",
        "55": "    multiset.add(\"foo\", 2);\n",
        "56": "    multiset.add(\"bar\");\n",
        "57": "    assertEquals(3, multiset.size());\n",
        "58": "    assertEquals(2, multiset.count(\"foo\"));\n",
        "59": "  }\n",
        "60": "\n",
        "61": "  public void testCreateFromIterable() {\n",
        "62": "    Multiset<String> multiset\n",
        "63": "        = HashMultiset.create(Arrays.asList(\"foo\", \"bar\", \"foo\"));\n",
        "64": "    assertEquals(3, multiset.size());\n",
        "65": "    assertEquals(2, multiset.count(\"foo\"));\n",
        "66": "  }\n",
        "67": "\n",
        "68": "  /*\n",
        "69": "   * The behavior of toString() and iteration is tested by LinkedHashMultiset,\n",
        "70": "   * which shares a lot of code with HashMultiset and has deterministic\n",
        "71": "   * iteration order.\n",
        "72": "   */\n",
        "73": "}\n",
        "74": "\n"
    }
}