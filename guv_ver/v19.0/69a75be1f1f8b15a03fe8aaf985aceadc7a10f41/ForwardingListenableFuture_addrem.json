{
    "addition": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n",
        "5": " * in compliance with the License. You may obtain a copy of the License at\n",
        "9": " * Unless required by applicable law or agreed to in writing, software distributed under the License\n",
        "10": " * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n",
        "11": " * or implied. See the License for the specific language governing permissions and limitations under\n",
        "12": " * the License.\n",
        "22": " * A {@link ListenableFuture} which forwards all its method calls to another future. Subclasses\n",
        "23": " * should override one or more methods to modify the behavior of the backing future as desired per\n",
        "24": " * the <a href=\"http://en.wikipedia.org/wiki/Decorator_pattern\">decorator pattern</a>.\n",
        "45": "  // TODO(cpovirk): Use standard Javadoc form for SimpleForwarding* class and constructor\n",
        "47": "   * A simplified version of {@link ForwardingListenableFuture} where subclasses can pass in an\n",
        "48": "   * already constructed {@link ListenableFuture} as the delegate.\n"
    },
    "removed": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "24": " * A {@link ListenableFuture} which forwards all its method calls to another\n",
        "25": " * future. Subclasses should override one or more methods to modify the behavior\n",
        "26": " * of the backing future as desired per the <a\n",
        "27": " * href=\"http://en.wikipedia.org/wiki/Decorator_pattern\">decorator pattern</a>.\n",
        "31": " * @param <V> The result type returned by this Future's {@code get} method\n",
        "32": " * \n",
        "50": "  /*\n",
        "51": "   * TODO(cpovirk): Use standard Javadoc form for SimpleForwarding* class and\n",
        "52": "   * constructor\n",
        "53": "   */\n",
        "55": "   * A simplified version of {@link ForwardingListenableFuture} where subclasses\n",
        "56": "   * can pass in an already constructed {@link ListenableFuture} \n",
        "57": "   * as the delegate.\n"
    }
}