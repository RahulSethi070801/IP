{
    "addition": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n",
        "5": " * in compliance with the License. You may obtain a copy of the License at\n",
        "9": " * Unless required by applicable law or agreed to in writing, software distributed under the License\n",
        "10": " * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n",
        "11": " * or implied. See the License for the specific language governing permissions and limitations under\n",
        "12": " * the License.\n",
        "37": "      SEEN_EXCEPTIONS_UDPATER =\n",
        "38": "          newUpdater(AggregateFutureState.class, (Class) Set.class, \"seenExceptions\");\n",
        "40": "  private static final AtomicIntegerFieldUpdater<AggregateFutureState> REMAINING_COUNT_UPDATER =\n",
        "41": "      newUpdater(AggregateFutureState.class, \"remaining\");\n",
        "46": "\n",
        "47": "  @SuppressWarnings(\"unused\")\n",
        "48": "  private volatile int remaining;\n"
    },
    "removed": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "39": "      SEEN_EXCEPTIONS_UDPATER = newUpdater(\n",
        "40": "          AggregateFutureState.class, (Class) Set.class, \"seenExceptions\");\n",
        "42": "  private static final AtomicIntegerFieldUpdater<AggregateFutureState>\n",
        "43": "      REMAINING_COUNT_UPDATER = newUpdater(AggregateFutureState.class, \"remaining\");\n",
        "48": "  @SuppressWarnings(\"unused\") private volatile int remaining;\n"
    }
}