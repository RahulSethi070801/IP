{
    "addition": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n",
        "5": " * in compliance with the License. You may obtain a copy of the License at\n",
        "9": " * Unless required by applicable law or agreed to in writing, software distributed under the License\n",
        "10": " * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n",
        "11": " * or implied. See the License for the specific language governing permissions and limitations under\n",
        "12": " * the License.\n",
        "24": " * A future which forwards all its method calls to another future. Subclasses should override one or\n",
        "25": " * more methods to modify the behavior of the backing future as desired per the <a href=\n",
        "31": " * @param <X> The type of the Exception thrown by the Future's {@code checkedGet} method\n",
        "55": "   * A simplified version of {@link ForwardingCheckedFuture} where subclasses can pass in an already\n",
        "56": "   * constructed {@link CheckedFuture} as the delegate.\n",
        "61": "  public abstract static class SimpleForwardingCheckedFuture<V, X extends Exception>\n",
        "62": "      extends ForwardingCheckedFuture<V, X> {\n"
    },
    "removed": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "26": " * A future which forwards all its method calls to another future. Subclasses\n",
        "27": " * should override one or more methods to modify the behavior of the backing \n",
        "28": " * future as desired per the <a href=\n",
        "34": " * @param <X> The type of the Exception thrown by the Future's \n",
        "35": " *            {@code checkedGet} method\n",
        "59": "   * A simplified version of {@link ForwardingCheckedFuture} where subclasses\n",
        "60": "   * can pass in an already constructed {@link CheckedFuture} as the delegate.\n",
        "65": "  public abstract static class SimpleForwardingCheckedFuture<\n",
        "66": "      V, X extends Exception> extends ForwardingCheckedFuture<V, X> {\n"
    }
}