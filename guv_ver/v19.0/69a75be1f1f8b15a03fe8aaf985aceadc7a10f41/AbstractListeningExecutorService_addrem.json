{
    "addition": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n",
        "5": " * in compliance with the License. You may obtain a copy of the License at\n",
        "9": " * Unless required by applicable law or agreed to in writing, software distributed under the License\n",
        "10": " * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n",
        "11": " * or implied. See the License for the specific language governing permissions and limitations under\n",
        "12": " * the License.\n",
        "37": "public abstract class AbstractListeningExecutorService extends AbstractExecutorService\n",
        "38": "    implements ListeningExecutorService {\n",
        "41": "  @Override\n",
        "42": "  protected final <T> RunnableFuture<T> newTaskFor(Runnable runnable, T value) {\n",
        "47": "  @Override\n",
        "48": "  protected final <T> RunnableFuture<T> newTaskFor(Callable<T> callable) {\n",
        "52": "  @Override\n",
        "53": "  public ListenableFuture<?> submit(Runnable task) {\n",
        "57": "  @Override\n",
        "58": "  public <T> ListenableFuture<T> submit(Runnable task, @Nullable T result) {\n",
        "62": "  @Override\n",
        "63": "  public <T> ListenableFuture<T> submit(Callable<T> task) {\n"
    },
    "removed": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "39": "public abstract class AbstractListeningExecutorService\n",
        "40": "    extends AbstractExecutorService implements ListeningExecutorService {\n",
        "43": "  @Override protected final <T> RunnableFuture<T> newTaskFor(Runnable runnable, T value) {\n",
        "48": "  @Override protected final <T> RunnableFuture<T> newTaskFor(Callable<T> callable) {\n",
        "52": "  @Override public ListenableFuture<?> submit(Runnable task) {\n",
        "56": "  @Override public <T> ListenableFuture<T> submit(Runnable task, @Nullable T result) {\n",
        "60": "  @Override public <T> ListenableFuture<T> submit(Callable<T> task) {\n"
    }
}