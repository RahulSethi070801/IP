{
    "addition": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n",
        "5": " * in compliance with the License. You may obtain a copy of the License at\n",
        "9": " * Unless required by applicable law or agreed to in writing, software distributed under the License\n",
        "10": " * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n",
        "11": " * or implied. See the License for the specific language governing permissions and limitations under\n",
        "12": " * the License.\n",
        "26": " * A {@link Future} which forwards all its method calls to another future. Subclasses should\n",
        "27": " * override one or more methods to modify the behavior of the backing future as desired per the <a\n",
        "35": "public abstract class ForwardingFuture<V> extends ForwardingObject implements Future<V> {\n",
        "39": "  @Override\n",
        "40": "  protected abstract Future<V> delegate();\n",
        "68": "  // TODO(cpovirk): Use standard Javadoc form for SimpleForwarding* class and constructor\n",
        "70": "   * A simplified version of {@link ForwardingFuture} where subclasses can pass in an already\n",
        "71": "   * constructed {@link Future} as the delegate.\n",
        "75": "  public abstract static class SimpleForwardingFuture<V> extends ForwardingFuture<V> {\n"
    },
    "removed": {
        "4": " * Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "5": " * you may not use this file except in compliance with the License.\n",
        "6": " * You may obtain a copy of the License at\n",
        "10": " * Unless required by applicable law or agreed to in writing, software\n",
        "11": " * distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "12": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "13": " * See the License for the specific language governing permissions and\n",
        "14": " * limitations under the License.\n",
        "28": " * A {@link Future} which forwards all its method calls to another future.\n",
        "29": " * Subclasses should override one or more methods to modify the behavior of\n",
        "30": " * the backing future as desired per the <a\n",
        "38": "public abstract class ForwardingFuture<V> extends ForwardingObject\n",
        "39": "    implements Future<V> {\n",
        "40": "\n",
        "44": "  @Override protected abstract Future<V> delegate();\n",
        "72": "  /*\n",
        "73": "   * TODO(cpovirk): Use standard Javadoc form for SimpleForwarding* class and\n",
        "74": "   * constructor\n",
        "75": "   */\n",
        "77": "   * A simplified version of {@link ForwardingFuture} where subclasses\n",
        "78": "   * can pass in an already constructed {@link Future} as the delegate.\n",
        "82": "  public abstract static class SimpleForwardingFuture<V> \n",
        "83": "      extends ForwardingFuture<V> {\n"
    }
}