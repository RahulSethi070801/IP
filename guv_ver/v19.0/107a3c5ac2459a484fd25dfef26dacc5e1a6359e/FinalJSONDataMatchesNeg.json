[{"func":{"oldfunccode":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_oldfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt","newfunccode":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt","newdoc":"","newJdoc":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newfuncnewJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt","olddoc":"","oldJdoc":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_oldfuncoldJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Futures_2","pathinproj":"guava/src/com/google/common/util/concurrent/Futures.java","addlines":[1970],"dellines":[1970],"addcode":["        \"Futures.getChecked exception type (%s) must not be a RuntimeException\",\n"],"delcode":["        \"Futures.get exception type (%s) must not be a RuntimeException\",\n"],"methodSig":"public static V getChecked(Future<V> future, Class<X> exceptionClass) throws X"},"doc":{"oldfunccode":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_olddocfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt","newfunccode":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newdocfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt","newdoc":"","newJdoc":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newdocnewJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt","olddoc":"","oldJdoc":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_olddocJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Uninterruptibles","pathinproj":"guava/src/com/google/common/util/concurrent/Uninterruptibles.java","addlines":[131,132],"dellines":[131,132],"addcode":["   * with other exceptions, see {@link Futures#getChecked(Future, Class)\n","   * Futures.getChecked}.\n"],"delcode":["   * with other exceptions, see {@link Futures#get(Future, Class) Futures.get}\n","   * or {@link Futures#makeChecked}.\n"],"methodSig":"public static V getUninterruptibly(Future<V> future) throws ExecutionException"},"id":1,"flag":1,"commit":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e"},{"func":{"oldfunccode":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_oldfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt","newfunccode":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt","newdoc":"","newJdoc":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newfuncnewJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt","olddoc":"","oldJdoc":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_oldfuncoldJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Futures_2","pathinproj":"guava/src/com/google/common/util/concurrent/Futures.java","addlines":[1970],"dellines":[1970],"addcode":["        \"Futures.getChecked exception type (%s) must not be a RuntimeException\",\n"],"delcode":["        \"Futures.get exception type (%s) must not be a RuntimeException\",\n"],"methodSig":"public static V getChecked(Future<V> future, Class<X> exceptionClass) throws X"},"doc":{"oldfunccode":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_olddocfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt","newfunccode":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newdocfunccode_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt","newdoc":" Future treats negative timeouts just like zero.\n","newJdoc":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_newdocnewJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt","olddoc":" Future treats negative timeouts just like zero.\n","oldJdoc":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Codes_neg/Match_olddocJdoc_107a3c5ac2459a484fd25dfef26dacc5e1a6359e_2.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/107a3c5ac2459a484fd25dfef26dacc5e1a6359e/Uninterruptibles","pathinproj":"guava/src/com/google/common/util/concurrent/Uninterruptibles.java","addlines":[161,162],"dellines":[161,162],"addcode":["   * with other exceptions, see {@link Futures#getChecked(Future, Class)\n","   * Futures.getChecked}.\n"],"delcode":["   * with other exceptions, see {@link Futures#get(Future, Class) Futures.get}\n","   * or {@link Futures#makeChecked}.\n"],"methodSig":"public static V getUninterruptibly(Future<V> future, long timeout, TimeUnit unit) throws ExecutionException, TimeoutException"},"id":1,"flag":1,"commit":"107a3c5ac2459a484fd25dfef26dacc5e1a6359e"}]