[{"func":{"oldfunccode":"64164e46013f0939a0e6539620c33588ced0e6cf/Codes/Match_oldfunccode_64164e46013f0939a0e6539620c33588ced0e6cf_1.txt","newfunccode":"64164e46013f0939a0e6539620c33588ced0e6cf/Codes/Match_newfunccode_64164e46013f0939a0e6539620c33588ced0e6cf_1.txt","newdoc":"","newJdoc":"64164e46013f0939a0e6539620c33588ced0e6cf/Codes/Match_newfuncnewJdoc_64164e46013f0939a0e6539620c33588ced0e6cf_1.txt","olddoc":"","oldJdoc":"64164e46013f0939a0e6539620c33588ced0e6cf/Codes/Match_oldfuncoldJdoc_64164e46013f0939a0e6539620c33588ced0e6cf_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/64164e46013f0939a0e6539620c33588ced0e6cf/Maps_2","pathinproj":"guava/src/com/google/common/collect/Maps.java","addlines":[1206,1207,1031,1208,1032,1209,1033,1210,1034,1211,1035,1036],"dellines":[1180,1005],"addcode":["    try {\n","      return builder.build();\n","    } catch (IllegalArgumentException duplicateKeys) {\n","      throw new IllegalArgumentException(duplicateKeys.getMessage()\n","          + \". To index multiple values under a key, use Multimaps.index.\");\n","    }\n","    try {\n","      return builder.build();\n","    } catch (IllegalArgumentException duplicateKeys) {\n","      throw new IllegalArgumentException(duplicateKeys.getMessage()\n","          + \". To index multiple values under a key, use Multimaps.index.\");\n","    }\n"],"delcode":["    return builder.build();\n","    return builder.build();\n"],"methodSig":"public static ImmutableMap<K, V> uniqueIndex(Iterator<V> values, Function<? super V, K> keyFunction)"},"doc":{"oldfunccode":"64164e46013f0939a0e6539620c33588ced0e6cf/Codes/Match_olddocfunccode_64164e46013f0939a0e6539620c33588ced0e6cf_1.txt","newfunccode":"64164e46013f0939a0e6539620c33588ced0e6cf/Codes/Match_newdocfunccode_64164e46013f0939a0e6539620c33588ced0e6cf_1.txt","newdoc":" TODO(user): consider presizing the builder if values is a Collection\n","newJdoc":"64164e46013f0939a0e6539620c33588ced0e6cf/Codes/Match_newdocnewJdoc_64164e46013f0939a0e6539620c33588ced0e6cf_1.txt","olddoc":" TODO(user): consider presizing the builder if values is a Collection\n","oldJdoc":"64164e46013f0939a0e6539620c33588ced0e6cf/Codes/Match_olddocJdoc_64164e46013f0939a0e6539620c33588ced0e6cf_1.txt","path":"/home/pritish/Documents/IP work/guv_ver/v19.0/64164e46013f0939a0e6539620c33588ced0e6cf/Maps_2","pathinproj":"guava/src/com/google/common/collect/Maps.java","addlines":[1152,1153,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151],"dellines":[1138,1139,963,1140,964,965],"addcode":["   * Returns a map with the given {@code values}, indexed by keys derived from\n","   * those values. In other words, each input value produces an entry in the map\n","   * whose key is the result of applying {@code keyFunction} to that value.\n","   * These entries appear in the same order as the input values. Example usage:\n","   * <pre>   {@code\n","   *\n","   *   Color red = new Color(\"red\", 255, 0, 0);\n","   *   ...\n","   *   ImmutableSet<Color> allColors = ImmutableSet.of(red, green, blue);\n","   *\n","   *   Map<String, Color> colorForName =\n","   *       uniqueIndex(allColors, toStringFunction());\n","   *   assertThat(colorForName).containsEntry(\"red\", red);}</pre>\n","   *\n","   * <p>If your index may associate multiple values with each key, use {@link\n","   * Multimaps#index(Iterable, Function) Multimaps.index}.\n","   * Returns a map with the given {@code values}, indexed by keys derived from\n","   * those values. In other words, each input value produces an entry in the map\n","   * whose key is the result of applying {@code keyFunction} to that value.\n","   * These entries appear in the same order as the input values. Example usage:\n","   * <pre>   {@code\n","   *\n","   *   Color red = new Color(\"red\", 255, 0, 0);\n","   *   ...\n","   *   ImmutableSet<Color> allColors = ImmutableSet.of(red, green, blue);\n","   *\n","   *   Map<String, Color> colorForName =\n","   *       uniqueIndex(allColors, toStringFunction());\n","   *   assertThat(colorForName).containsEntry(\"red\", red);}</pre>\n","   *\n","   * <p>If your index may associate multiple values with each key, use {@link\n","   * Multimaps#index(Iterable, Function) Multimaps.index}.\n"],"delcode":["   * Returns an immutable map for which the {@link Map#values} are the given\n","   * elements in the given order, and each key is the product of invoking a\n","   * supplied function on its corresponding value.\n","   * Returns an immutable map for which the {@link Map#values} are the given\n","   * elements in the given order, and each key is the product of invoking a\n","   * supplied function on its corresponding value.\n"],"methodSig":"public static ImmutableMap<K, V> uniqueIndex(Iterable<V> values, Function<? super V, K> keyFunction)"},"id":5,"flag":1,"commit":"64164e46013f0939a0e6539620c33588ced0e6cf"}]