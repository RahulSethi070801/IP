{"id": "a70f009926809b9a37ebbc16ebbc9cf71030be11", "code": [{"0": "guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSetMultimap.java", "added": {"1": ["  private static <V> ImmutableSet.Builder<V> valuesBuilder(\n", "      @Nullable Comparator<? super V> valueComparator) {\n", "    return (valueComparator == null)\n", "        ? new ImmutableSet.Builder<V>()\n", "        : new ImmutableSortedSet.Builder<V>(valueComparator);\n", "  }\n", "\n"]}, "removed": {}, "added_lines": {"1": [493, 494, 495, 496, 497, 498, 499]}, "removed_lines": {}}, {"1": "guava-gwt/src/com/google/common/collect/LinkedHashMultimap_CustomFieldSerializer.java", "added": {"1": ["    Map<Object, Collection<Object>> map = new LinkedHashMap<Object, Collection<Object>>();\n"]}, "removed": {"1": ["    multimap.valueSetCapacity = stream.readInt();\n", "    Map<Object, Collection<Object>> map =\n", "        new LinkedHashMap<Object, Collection<Object>>(Maps.capacity(distinctKeys));\n"], "2": ["    stream.writeInt(multimap.valueSetCapacity);\n"]}, "added_lines": {"1": [43]}, "removed_lines": {"1": [42, 44, 45], "2": [63]}}, {"2": "guava/src/com/google/common/collect/ArrayListMultimap.java", "added": {"2": ["    expectedValuesPerKey = DEFAULT_VALUES_PER_KEY;\n", "    Map<K, Collection<V>> map = Maps.newHashMap();\n"]}, "removed": {"1": ["    stream.writeInt(expectedValuesPerKey);\n"], "2": ["    expectedValuesPerKey = stream.readInt();\n", "    Map<K, Collection<V>> map = Maps.newHashMapWithExpectedSize(distinctKeys);\n"]}, "added_lines": {"2": [158, 160]}, "removed_lines": {"1": [151], "2": [159, 161]}}, {"3": "guava/src/com/google/common/collect/HashBiMap.java", "added": {"1": ["    init(16);\n"]}, "removed": {"1": ["    init(size);\n"]}, "added_lines": {"1": [650]}, "removed_lines": {"1": [651]}}, {"4": "guava/src/com/google/common/collect/HashMultimap.java", "added": {"2": ["    expectedValuesPerKey = DEFAULT_VALUES_PER_KEY;\n", "    Map<K, Collection<V>> map = Maps.newHashMap();\n"]}, "removed": {"1": ["    stream.writeInt(expectedValuesPerKey);\n"], "2": ["    expectedValuesPerKey = stream.readInt();\n", "    Map<K, Collection<V>> map = Maps.newHashMapWithExpectedSize(distinctKeys);\n"]}, "added_lines": {"2": [132, 134]}, "removed_lines": {"1": [125], "2": [133, 135]}}, {"5": "guava/src/com/google/common/collect/HashMultiset.java", "added": {"1": ["    setBackingMap(Maps.<E, Count>newHashMap());\n"]}, "removed": {"1": ["    setBackingMap(\n", "        Maps.<E, Count>newHashMapWithExpectedSize(distinctElements));\n"]}, "added_lines": {"1": [94]}, "removed_lines": {"1": [94, 95]}}, {"6": "guava/src/com/google/common/collect/ImmutableListMultimap.java", "added": {"1": ["      ImmutableList.Builder<Object> valuesBuilder = ImmutableList.builder();\n", "        valuesBuilder.add(stream.readObject());\n", "      builder.put(key, valuesBuilder.build());\n"]}, "removed": {"1": ["      Object[] array = new Object[valueCount];\n", "        array[j] = stream.readObject();\n", "      builder.put(key, ImmutableList.copyOf(array));\n"]}, "added_lines": {"1": [396, 398, 400]}, "removed_lines": {"1": [396, 398, 400]}}, {"7": "guava/src/com/google/common/collect/ImmutableSetMultimap.java", "added": {"2": ["  private static <V> ImmutableSet.Builder<V> valuesBuilder(\n", "      @Nullable Comparator<? super V> valueComparator) {\n", "    return (valueComparator == null)\n", "        ? new ImmutableSet.Builder<V>()\n", "        : new ImmutableSortedSet.Builder<V>(valueComparator);\n", "  }\n", "\n"], "3": ["      ImmutableSet.Builder<Object> valuesBuilder = valuesBuilder(valueComparator);\n", "        valuesBuilder.add(stream.readObject());\n", "      ImmutableSet<Object> valueSet = valuesBuilder.build();\n", "      if (valueSet.size() != valueCount) {\n"]}, "removed": {"1": ["import static java.util.Arrays.asList;\n"], "3": ["      Object[] array = new Object[valueCount];\n", "        array[j] = stream.readObject();\n", "      ImmutableSet<Object> valueSet = valueSet(valueComparator, asList(array));\n", "      if (valueSet.size() != array.length) {\n"]}, "added_lines": {"2": [498, 499, 500, 501, 502, 503, 504], "3": [545, 547, 549, 550]}, "removed_lines": {"1": [20], "3": [539, 541, 543, 544]}}, {"8": "guava/src/com/google/common/collect/LinkedHashMultimap.java", "added": {"2": ["    valueSetCapacity = DEFAULT_VALUE_SET_CAPACITY;\n", "    Map<K, Collection<V>> map = new LinkedHashMap<K, Collection<V>>();\n"]}, "removed": {"1": ["    stream.writeInt(valueSetCapacity);\n"], "2": ["    valueSetCapacity = stream.readInt();\n", "    Map<K, Collection<V>> map =\n", "        new LinkedHashMap<K, Collection<V>>(Maps.capacity(distinctKeys));\n"]}, "added_lines": {"2": [558, 560]}, "removed_lines": {"1": [541], "2": [559, 561, 562]}}, {"9": "guava/src/com/google/common/collect/LinkedHashMultiset.java", "added": {"1": ["    setBackingMap(new LinkedHashMap<E, Count>());\n"]}, "removed": {"1": ["    setBackingMap(new LinkedHashMap<E, Count>(\n", "        Maps.capacity(distinctElements)));\n"]}, "added_lines": {"1": [106]}, "removed_lines": {"1": [106, 107]}}, {"10": "guava/src/com/google/common/collect/Serialization.java", "added": {}, "removed": {"1": ["   *\n", "   * <p>The returned count may be used to construct an empty collection of the\n", "   * appropriate capacity before calling any of the {@code populate} methods.\n"]}, "added_lines": {}, "removed_lines": {"1": [45, 46, 47]}}]}
